var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/injectables/CircleManager.html",[0,0.73,1,1.516]],["body/injectables/CircleManager.html",[0,0.883,1,1.835,2,1.112,3,0.45,4,0.532,5,0.45,6,4.068,7,1.112,8,0.375,9,1.025,10,1.371,11,3.763,12,0.883,13,3.235,14,2.135,15,1.835,16,2.584,17,3.235,18,3.592,19,3.235,20,3.235,21,2.584,22,2.584,23,3.006,24,3.235,25,2.584,26,0.883,27,1.819,28,2.324,29,2.135,30,2.324,31,1.382,32,2.277,33,1.382,34,0.058,35,1.372,36,1.013,37,1.372,38,2.584,39,3.235,40,2.271,41,2.277,42,3.457,43,1.36,44,0.721,45,0.962,46,1.298,47,2.277,48,1.835,49,1.367,50,1.59,51,3.235,52,2.277,53,2.2,54,3.235,55,1.819,56,3.235,57,2.277,58,3.235,59,2.277,60,2.584,61,2.584,62,1.228,63,3.235,64,1.819,65,3.235,66,2.277,67,3.235,68,2.277,69,2.277,70,1.5,71,3.763,72,2.277,73,3.235,74,2.277,75,3.235,76,2.277,77,0.622,78,0.622,79,0.879,80,2.277,81,0.957,82,0.45,83,1.835,84,0.962,85,1.112,86,1.835,87,0.622,88,1.819,89,1.292,90,0.532,91,0.532,92,2.277,93,2.277,94,1.517,95,1.579,96,3.235,97,1.579,98,3.235,99,0.721,100,2.277,101,0.721,102,2.277,103,0.721,104,2.277,105,0.962,106,2.277,107,0.962,108,2.277,109,1.819,110,2.277,111,0.721,112,2.277,113,0.721,114,2.277,115,1.292,116,2.277,117,0.721,118,2.277,119,0.721,120,2.277,121,0.721,122,2.277,123,1.025,124,2.584,125,2.584,126,3.235,127,2.277,128,2.277,129,2.277,130,2.277,131,2.277,132,2.277,133,3.235,134,2.277,135,3.763,136,2.584,137,1.347,138,2.277,139,4.497,140,2.277,141,2.277,142,2.277,143,3.763,144,3.763,145,3.763,146,2.277,147,2.277,148,2.277,149,2.277,150,2.277,151,1.292,152,3.006,153,1.819,154,1.367,155,2.277,156,1.292,157,1.292,158,1.292,159,1.819,160,0.024,161,0.034,162,0.024]],["title/directives/NgMapsCircle.html",[40,1.129,163,0.624]],["body/directives/NgMapsCircle.html",[1,2.147,3,0.287,4,0.339,5,0.287,8,0.239,9,0.729,10,1.487,12,0.628,15,1.849,16,2.604,26,0.396,31,1.418,33,0.782,34,0.058,35,0.782,36,1.026,37,0.782,40,0.972,42,3.485,43,1.083,44,1.127,45,0.612,46,1.344,49,0.972,53,1.377,62,1.124,70,0.843,77,1.211,78,1.186,79,1.084,81,0.669,82,0.287,87,0.396,90,0.339,91,0.339,94,2.522,95,0.708,97,0.708,99,1.257,101,0.459,103,0.907,105,1.502,107,1.502,109,3.17,111,1.127,113,1.127,115,2.017,117,1.127,119,1.257,121,1.257,123,0.907,136,1.839,137,0.782,154,0.612,160,0.015,161,0.024,162,0.015,163,0.538,164,0.612,165,1.158,166,1.124,167,2.287,168,1.398,169,1.624,170,0.708,171,1.124,172,1.124,173,1.124,174,2.863,175,2.287,176,1.624,177,2.287,178,2.604,179,2.302,180,1.124,181,1.849,182,2.604,183,1.124,184,2.302,185,2.841,186,2.287,187,1.124,188,2.863,189,2.863,190,2.863,191,2.017,192,1.624,193,1.624,194,2.017,195,2.017,196,2.017,197,2.017,198,2.017,199,2.863,200,1.624,201,1.158,202,1.449,203,1.839,204,2.465,205,2.465,206,1.449,207,1.849,208,2.598,209,2.632,210,1.306,211,2.465,212,1.449,213,1.306,214,1.592,215,1.306,216,1.306,217,1.624,218,1.449,219,1.306,220,2.147,221,1.306,222,1.306,223,1.306,224,1.839,225,1.839,226,1.449,227,2.172,228,1.849,229,1.849,230,2.336,231,2.147,232,1.849,233,1.849,234,1.849,235,1.96,236,1.449,237,1.849,238,1.849,239,1.849,240,1.849,241,1.449,242,2.522,243,2.604,244,1.449,245,1.502,246,1.449,247,2.302,248,2.302,249,1.534,250,1.449,251,2.336,252,1.449,253,2.302,254,1.449,255,1.306,256,1.839,257,1.839,258,1.534,259,1.839,260,1.449,261,1.306,262,1.306,263,1.449,264,1.449,265,1.306,266,1.306,267,2.546,268,1.449,269,2.167,270,2.876,271,3.26,272,2.172,273,1.449,274,2.172,275,2.522,276,2.172,277,2.604,278,1.449,279,1.449,280,1.306,281,1.306,282,1.449,283,1.306,284,1.449,285,1.306,286,1.449,287,2.147,288,1.449,289,1.449,290,1.449,291,1.449,292,1.449,293,1.449,294,1.306,295,1.306,296,1.449,297,2.302,298,1.849,299,1.449,300,1.124,301,1.449,302,1.839,303,1.449,304,1.124,305,1.449,306,1.449,307,1.449,308,1.449,309,1.849,310,1.449,311,1.449,312,2.291,313,2.266,314,2.287,315,1.449,316,0.822,317,0.822,318,0.822,319,0.822,320,0.822,321,0.822,322,1.449,323,1.398,324,1.449,325,2.302,326,1.158,327,1.158,328,1.158,329,1.158,330,1.449,331,1.158,332,1.158,333,1.158,334,1.158,335,1.158,336,1.158,337,1.449,338,1.449,339,1.449,340,1.124,341,0.966,342,0.966,343,0.822,344,1.449,345,0.708,346,0.966,347,0.966,348,0.822,349,1.158,350,1.158,351,1.449,352,1.449,353,1.158,354,1.449,355,1.158,356,1.449,357,1.158,358,1.158,359,1.158,360,1.158,361,1.158,362,1.158,363,1.158,364,1.158,365,1.158,366,1.158,367,1.158,368,1.158,369,1.158,370,1.158,371,1.158,372,1.158,373,1.449,374,1.449,375,1.158,376,1.158,377,1.158,378,1.158,379,1.839,380,1.158,381,1.158,382,1.839,383,1.449,384,1.449,385,1.449,386,1.449,387,1.839,388,1.449,389,1.449,390,1.158,391,1.449,392,1.449,393,0.966,394,1.158,395,1.158,396,0.822,397,1.158,398,1.449,399,1.158,400,1.449]],["title/directives/NgMapsPolygon.html",[163,0.624,401,1.129]],["body/directives/NgMapsPolygon.html",[3,0.23,4,0.272,5,0.23,8,0.192,9,0.61,10,1.499,12,0.526,26,0.318,31,1.383,33,0.673,34,0.058,35,1.2,36,0.98,37,0.673,43,0.989,44,0.908,46,1.244,50,0.492,62,1.2,77,1.034,78,1.034,79,0.97,81,0.742,82,0.487,87,0.318,90,0.576,91,0.576,95,2.438,97,2.438,99,1.006,101,1.006,103,1.147,105,1.341,107,1.341,111,1.006,113,1.006,117,1.006,119,1.244,121,1.147,123,0.61,137,0.782,160,0.026,161,0.02,162,0.012,163,0.45,164,0.492,166,0.941,168,1.204,169,1.398,170,0.568,171,0.941,172,1.399,173,1.399,176,1.398,180,0.941,181,1.626,183,0.941,187,0.941,191,1.398,192,0.66,193,0.66,194,1.398,195,1.398,196,1.398,197,1.398,198,1.398,200,0.66,204,2.407,205,2.561,207,1.626,208,2.452,209,2.297,210,1.093,211,2.297,213,1.093,214,1.399,215,1.093,216,1.093,217,1.093,219,1.093,220,2.149,221,1.093,222,1.093,223,1.093,227,1.909,228,1.626,229,1.626,230,2.149,231,1.626,232,1.626,233,1.626,234,1.626,235,1.856,237,1.626,238,1.626,239,1.626,240,1.626,245,2.012,249,1.284,251,1.941,255,1.626,261,1.093,262,1.093,265,1.093,266,1.093,267,2.453,269,2.095,270,2.833,280,1.093,281,1.093,283,1.093,285,1.093,287,2.297,294,1.093,295,1.093,300,1.204,304,0.941,309,1.398,312,2.111,313,2.072,316,0.66,317,0.66,318,0.66,319,0.66,320,0.66,321,0.66,323,1.204,343,0.66,345,0.568,348,0.66,396,0.66,401,1.211,402,0.93,403,0.776,404,1.539,405,3.413,406,1.539,407,1.539,408,1.539,409,1.399,410,1.539,411,1.539,412,1.539,413,1.539,414,1.539,415,1.927,416,1.539,417,4.763,418,3.56,419,3.128,420,4.243,421,1.927,422,1.927,423,1.927,424,1.927,425,1.927,426,3.421,427,2.865,428,1.969,429,1.941,430,1.969,431,2.465,432,2.465,433,1.969,434,2.289,435,2.289,436,2.465,437,2.289,438,2.289,439,2.356,440,1.927,441,2.465,442,2.465,443,2.465,444,2.465,445,2.465,446,2.465,447,2.465,448,2.465,449,2.465,450,2.465,451,2.465,452,1.164,453,1.927,454,1.927,455,1.164,456,1.164,457,2.732,458,1.539,459,1.539,460,1.539,461,1.164,462,1.164,463,1.164,464,2.289,465,1.539,466,1.539,467,1.539,468,2.289,469,1.539,470,1.539,471,1.539,472,1.539,473,1.539,474,1.539,475,1.539,476,1.539,477,1.539,478,1.539,479,1.539,480,1.539,481,1.164,482,1.927,483,1.927,484,2.865,485,1.927,486,2.865,487,1.927,488,1.927,489,1.927,490,1.927,491,2.289,492,3.421,493,2.865,494,3.788,495,1.927,496,2.865,497,1.927,498,1.927,499,2.865,500,1.284,501,1.927,502,2.865,503,2.865,504,1.927,505,1.927,506,2.865,507,1.927,508,1.927,509,1.927,510,1.927,511,1.927,512,1.164,513,1.539,514,1.539,515,1.164,516,1.164,517,1.164,518,1.164,519,1.164,520,1.164,521,1.969,522,1.164,523,1.969,524,1.164,525,1.164,526,1.164,527,1.164,528,1.164,529,1.164,530,1.164,531,1.164,532,1.539,533,1.164,534,1.539,535,1.164,536,1.164,537,1.164,538,2.413,539,1.164,540,1.927,541,1.164,542,1.164,543,1.164,544,1.164,545,1.164,546,1.164,547,1.927,548,1.164,549,1.164,550,0.776,551,1.164,552,2.465,553,1.539,554,1.164,555,1.164,556,1.164,557,0.93,558,0.93,559,3.317,560,3.317,561,3.026,562,1.164,563,1.164,564,1.969,565,1.164,566,1.164,567,1.164,568,1.164,569,1.164,570,1.164,571,1.164,572,1.164,573,1.164,574,0.93,575,0.93,576,1.164,577,0.93,578,0.93,579,0.93,580,1.164,581,1.164,582,1.164,583,1.164,584,1.164,585,1.164,586,0.93,587,1.164,588,0.93,589,0.93,590,0.93,591,0.93]],["title/components/NgMapsPolyline.html",[409,1.305,592,1.305]],["body/components/NgMapsPolyline.html",[3,0.271,4,0.32,5,0.271,8,0.226,9,0.698,10,1.512,12,0.601,26,0.374,31,1.398,33,0.601,34,0.058,35,1.279,36,0.995,37,0.601,40,0.579,42,0.914,43,1.06,44,1.001,46,1.23,50,0.579,62,1.266,70,0.806,77,1.102,78,1.102,79,1.02,81,0.863,82,0.546,87,0.374,90,0.32,91,0.32,99,0.874,101,0.874,103,1.096,111,1.096,113,1.096,117,1.096,119,1.23,121,1.23,123,1.17,137,0.862,160,0.014,161,0.023,162,0.014,163,0.514,164,0.579,166,1.075,168,1.347,169,1.565,170,0.67,171,1.075,172,2.033,173,2.033,176,1.565,180,1.075,181,1.792,183,1.075,187,1.075,191,1.565,192,0.778,193,0.778,194,1.565,195,1.565,196,1.565,197,1.565,198,1.565,200,0.778,204,2.523,205,2.658,207,1.792,208,2.63,209,2.424,210,1.249,211,2.424,213,1.249,214,1.542,215,1.249,216,1.249,217,1.249,219,1.249,220,2.289,221,1.249,222,1.962,223,1.249,228,1.249,229,1.249,230,1.792,231,1.249,232,1.249,233,1.249,234,1.249,235,1.56,237,1.249,238,1.249,239,1.249,240,1.249,245,0.579,249,1.467,251,2.095,255,1.249,261,1.249,262,1.249,265,1.249,266,1.249,267,2.501,269,2.14,270,2.891,280,1.249,281,1.249,283,1.249,285,1.249,287,2.477,294,1.249,295,1.249,300,0.67,304,1.075,309,1.792,312,2.132,313,2.171,316,0.778,317,0.778,318,0.778,319,0.778,320,0.778,321,0.778,323,1.689,340,0.67,341,0.914,342,0.914,343,0.778,345,0.67,346,0.914,347,0.914,348,0.778,396,0.778,401,0.579,403,0.914,404,1.759,405,2.586,406,1.759,407,1.759,408,1.759,409,1.895,410,1.759,411,1.759,412,1.759,413,1.759,414,2.523,419,2.461,428,2.204,430,2.204,433,2.204,434,2.523,435,2.523,437,2.523,438,2.523,439,2.477,457,2.95,458,1.759,459,1.759,460,1.759,464,2.523,465,1.759,466,1.759,467,1.759,468,2.523,469,2.523,470,1.759,471,1.759,472,1.759,473,1.759,474,1.759,475,1.759,476,1.759,477,1.759,478,1.759,479,1.759,480,1.759,513,1.759,514,1.759,521,2.204,523,2.204,532,1.759,534,1.759,538,2.105,550,0.914,553,1.759,557,1.095,558,1.095,559,3.487,560,3.487,561,3.223,564,2.204,574,1.095,575,1.095,577,1.095,578,1.095,579,1.095,586,1.759,588,1.095,589,1.095,590,1.095,591,1.095,592,1.803,593,2.202,594,1.371,595,0.914,596,4.136,597,2.202,598,2.095,599,2.759,600,2.759,601,3.159,602,3.101,603,2.202,604,2.759,605,2.759,606,2.759,607,2.759,608,2.759,609,2.759,610,2.759,611,2.759,612,2.759,613,2.759,614,2.759,615,1.371,616,1.371,617,2.202,618,1.371,619,1.371,620,1.371,621,1.371,622,2.202,623,1.371,624,1.371,625,1.371,626,1.371,627,1.371,628,1.371,629,1.371,630,1.371,631,1.371,632,1.371,633,1.371,634,1.371,635,1.371,636,1.371,637,1.371,638,1.371,639,1.371,640,1.371,641,1.371,642,1.371,643,1.371,644,1.371,645,1.371,646,1.371,647,1.371,648,1.371,649,1.371,650,1.371,651,2.759,652,1.371,653,2.202,654,1.371,655,1.371,656,1.371,657,1.166,658,1.249,659,0.914,660,1.371,661,1.371,662,1.371,663,1.371,664,1.371,665,2.759,666,1.371,667,2.759,668,1.371,669,1.371,670,1.371,671,1.371,672,1.371,673,1.371,674,1.371,675,1.371,676,1.371,677,1.371,678,1.371,679,1.371,680,1.371,681,1.371,682,1.371,683,1.371,684,1.371,685,1.371,686,1.371,687,1.371,688,1.371,689,1.095,690,2.202,691,1.759,692,3.159,693,1.371,694,1.371,695,1.371,696,1.371,697,0.579,698,1.467,699,1.371]],["title/directives/NgMapsPolylinePoint.html",[163,0.624,657,1.129]],["body/directives/NgMapsPolylinePoint.html",[3,0.643,4,0.76,5,0.643,8,0.537,12,1.123,26,1.231,31,1.334,33,0.888,34,0.058,35,0.888,36,0.937,37,0.888,43,0.888,62,1.123,79,0.76,81,0.76,82,0.643,90,0.76,91,0.76,95,1.588,97,1.588,123,1.031,160,0.034,161,0.043,162,0.034,163,0.96,164,1.374,166,2.008,168,2.201,170,1.588,172,2.008,173,2.008,180,2.008,183,2.008,185,3.902,186,3.902,187,2.008,235,2.001,242,3.376,267,2.313,269,1.737,272,2.74,274,2.74,275,2.74,276,2.74,300,1.588,304,2.008,312,2.201,313,2.008,328,3.284,329,3.284,393,2.74,403,2.168,491,3.284,538,3.156,550,2.168,596,3.986,657,2.001,658,2.957,691,3.284,700,3.986,701,2.599,702,4.112,703,4.112,704,4.112,705,4.508,706,3.253,707,3.253,708,3.253,709,3.253,710,3.253,711,4.112,712,3.253,713,3.253,714,3.253,715,3.253,716,3.253]],["title/directives/NgMapsRectangle.html",[163,0.624,697,1.129]],["body/directives/NgMapsRectangle.html",[3,0.291,4,0.343,5,0.291,8,0.242,9,0.737,10,1.491,12,0.635,15,1.863,26,0.401,31,1.418,33,0.788,34,0.058,35,0.788,36,1.027,37,0.788,43,1.039,44,1.134,45,0.621,46,1.349,49,0.983,53,0.983,62,1.129,70,0.852,77,1.191,78,1.163,79,1.073,81,0.675,82,0.291,87,0.401,90,0.343,91,0.343,94,2.756,99,1.134,101,0.465,103,0.915,105,1.512,107,1.512,111,1.134,113,1.134,115,2.031,117,1.134,119,1.264,121,1.264,123,0.915,137,0.635,154,0.621,160,0.015,161,0.024,162,0.015,163,0.543,164,0.621,166,1.136,167,2.307,168,1.41,169,1.639,170,0.717,171,1.136,172,1.136,173,1.136,175,2.307,176,1.639,177,2.307,178,2.624,180,1.136,181,1.863,182,2.624,183,1.136,187,1.136,191,2.031,192,1.639,193,1.639,194,2.031,195,2.031,196,2.031,197,2.031,198,2.031,200,1.639,201,1.174,203,1.858,204,2.475,205,2.475,207,1.863,208,2.607,209,2.64,210,1.32,211,2.475,213,1.32,214,1.604,215,1.32,216,1.32,217,1.639,219,1.32,220,2.16,221,1.32,222,1.32,223,1.32,224,1.858,225,1.858,227,2.189,228,1.863,229,1.863,230,2.347,231,2.16,232,1.863,233,1.863,234,1.863,235,2.008,237,1.863,238,1.863,239,1.863,240,1.863,242,2.907,243,3.305,245,1.22,251,2.347,255,1.32,256,1.858,257,1.858,258,1.55,259,1.858,261,1.32,262,1.32,265,1.32,266,1.32,267,2.535,269,2.158,270,2.861,272,1.55,274,2.189,275,2.537,276,2.189,277,2.624,280,1.32,281,1.32,283,1.32,285,1.32,287,2.16,294,1.32,295,1.32,298,1.863,300,1.136,302,1.858,304,1.136,309,1.863,312,2.321,313,2.244,314,2.307,316,0.833,317,0.833,318,0.833,319,0.833,320,0.833,321,0.833,323,1.41,326,1.174,327,1.174,331,1.174,332,1.174,333,1.174,334,1.174,335,1.174,336,1.174,340,1.136,341,0.979,342,0.979,343,0.833,345,0.717,346,0.979,347,0.979,348,0.833,349,1.174,350,1.174,353,1.174,355,1.174,357,1.174,358,1.174,359,1.174,360,1.174,361,1.174,362,1.174,363,1.174,364,1.174,365,1.174,366,1.174,367,1.174,368,1.174,369,1.174,370,1.174,371,1.174,372,1.174,375,1.174,376,1.174,377,1.174,378,1.174,379,1.174,380,1.174,381,1.174,382,1.174,387,1.174,390,1.174,394,1.174,395,1.174,396,0.833,397,1.174,399,1.174,697,0.983,698,3.508,717,1.174,718,2.16,719,2.888,720,2.326,721,3.042,722,3.042,723,2.326,724,3.042,725,3.042,726,2.888,727,2.888,728,2.888,729,1.469,730,1.469,731,1.469,732,1.469,733,1.469,734,1.469,735,1.469,736,1.469,737,1.469,738,1.469,739,1.469,740,2.326,741,2.326,742,1.469,743,1.469,744,1.469,745,1.469,746,1.469,747,1.469,748,2.326,749,1.469,750,1.469,751,1.469,752,1.469,753,1.469,754,1.469,755,1.469,756,1.469,757,1.469,758,1.469,759,1.469,760,1.469,761,2.326,762,1.469,763,1.469,764,1.469,765,1.469,766,1.469,767,1.469,768,1.469,769,1.469,770,1.469,771,1.469,772,1.469,773,2.326,774,1.469,775,1.469,776,1.469,777,1.469,778,1.469,779,1.469,780,1.469,781,1.469,782,1.469,783,1.469,784,1.469,785,1.469,786,1.469,787,1.469,788,1.469,789,1.469,790,1.469,791,1.469,792,1.469]],["title/modules/NgMapsShapesModule.html",[793,2.135,794,1.781]],["body/modules/NgMapsShapesModule.html",[3,0.764,4,0.903,5,0.764,34,0.058,40,1.93,81,1.215,82,0.764,88,3.087,90,1.067,91,0.903,137,1.055,160,0.041,161,0.048,162,0.041,323,1.887,401,1.93,592,2.231,657,1.93,658,2.193,697,1.93,794,3.044,795,2.575,796,2.575,797,4.569,798,3.087,799,3.65,800,3.087,801,3.087,802,3.241,803,3.087,804,3.087]],["title/injectables/PolygonManager.html",[0,0.73,429,1.516]],["body/injectables/PolygonManager.html",[0,1.019,2,1.369,3,0.554,4,0.655,5,0.554,7,1.369,8,0.462,9,1.183,10,1.476,12,1.019,14,2.381,18,3.352,26,1.019,28,2.539,29,2.381,30,2.539,31,1.335,33,1.335,34,0.058,35,1.308,36,1.005,37,1.308,43,1.272,44,0.888,45,1.184,46,1.418,48,2.118,49,1.577,50,1.773,53,2.025,62,1.222,70,1.536,77,0.765,78,0.765,79,0.98,81,1.045,82,0.554,83,2.118,84,1.184,85,1.369,86,2.118,87,0.765,89,1.59,90,0.655,91,0.655,99,0.888,101,0.888,103,0.888,105,1.184,107,1.184,111,0.888,113,0.888,117,0.888,119,0.888,121,0.888,123,1.33,125,2.239,137,1.272,151,1.59,154,1.577,156,1.59,157,2.381,158,1.59,160,0.029,161,0.039,162,0.029,298,2.118,340,1.369,401,2.222,405,1.867,418,2.982,429,2.118,439,1.59,500,3.193,798,2.239,805,3.969,806,4.197,807,3.733,808,3.733,809,4.197,810,3.733,811,2.239,812,2.803,813,2.982,814,3.733,815,2.803,816,2.239,817,3.733,818,2.803,819,2.803,820,2.803,821,3.733,822,2.803,823,2.803,824,3.733,825,2.803,826,2.803,827,2.803,828,2.803,829,2.803,830,2.803,831,2.803,832,2.803,833,2.803,834,2.803,835,2.803,836,2.803,837,2.803,838,2.803,839,3.733,840,2.803,841,2.803,842,3.733,843,4.197,844,2.239,845,2.982,846,2.803,847,2.239,848,2.239,849,2.239,850,2.803,851,2.239]],["title/injectables/PolylineManager.html",[0,0.73,598,1.516]],["body/injectables/PolylineManager.html",[0,0.982,2,1.296,3,0.525,4,0.62,5,0.525,7,1.296,8,0.438,9,1.14,10,1.555,12,0.982,14,2.316,26,0.982,28,2.483,29,2.316,30,2.483,31,1.34,33,1.34,34,0.058,35,1.317,36,1.004,37,1.317,43,1.288,44,0.841,45,1.121,46,1.387,48,2.041,49,1.52,50,1.725,53,1.993,55,2.12,62,1.195,70,1.495,77,0.724,78,0.724,79,0.954,81,1.069,82,0.525,83,2.041,84,1.121,85,1.296,86,2.041,87,0.724,89,1.505,90,0.62,91,0.62,95,1.296,97,1.296,99,0.841,101,0.841,103,0.841,111,0.841,113,0.841,117,0.841,119,0.841,121,0.841,123,1.449,137,1.358,151,1.505,154,1.52,156,1.505,157,2.316,158,1.505,160,0.028,161,0.038,162,0.028,298,2.041,340,1.296,393,1.768,419,2.397,439,1.505,500,2.72,592,2.577,598,2.041,602,2.12,657,1.52,658,1.505,799,2.874,811,2.12,813,2.874,844,2.12,845,3.496,847,2.874,848,2.874,849,2.12,851,2.12,852,3.974,853,4.082,854,4.082,855,3.598,856,3.598,857,4.082,858,3.598,859,2.12,860,2.654,861,2.12,862,5.03,863,3.598,864,2.654,865,2.654,866,3.598,867,2.654,868,2.654,869,3.598,870,2.654,871,2.12,872,2.654,873,2.654,874,2.654,875,3.598,876,3.598,877,2.654,878,2.654,879,2.654,880,2.654,881,2.654,882,2.654,883,2.654,884,2.654,885,2.654,886,2.654,887,2.654,888,2.654,889,3.598,890,4.377,891,2.654,892,3.598,893,2.654]],["title/injectables/RectangleManager.html",[0,0.73,718,1.516]],["body/injectables/RectangleManager.html",[0,0.939,2,1.213,3,0.491,4,0.58,5,0.491,7,1.213,8,0.41,9,1.09,10,1.416,12,0.939,14,2.238,15,1.951,21,2.747,22,2.747,23,3.151,25,2.747,26,0.939,27,1.985,28,2.415,29,2.238,30,2.415,31,1.37,33,1.37,34,0.058,35,1.356,36,1.001,37,1.356,38,2.747,43,1.339,44,0.787,45,1.05,46,1.25,48,1.951,49,1.453,50,1.667,53,2.167,60,2.747,61,2.747,62,1.262,64,1.985,70,1.444,77,0.678,78,0.678,79,0.921,81,0.994,82,0.491,83,1.951,84,1.05,85,1.213,86,1.951,87,0.678,89,1.41,90,0.58,91,0.58,99,0.787,101,0.787,103,0.787,105,1.05,107,1.05,111,0.787,113,0.787,115,1.41,117,0.787,119,0.787,121,0.787,137,1.391,151,1.41,152,3.151,153,1.985,154,1.453,156,1.41,157,1.41,158,1.41,159,1.985,160,0.026,161,0.036,162,0.026,697,2.259,698,3.436,718,1.951,721,2.747,722,2.747,724,2.747,725,2.747,800,1.985,816,1.985,859,1.985,861,1.985,871,1.985,894,4.042,895,3.945,896,3.439,897,3.439,898,3.439,899,3.439,900,2.485,901,3.439,902,2.485,903,3.439,904,2.485,905,3.439,906,3.439,907,2.485,908,3.439,909,2.485,910,3.945,911,2.485,912,3.439,913,2.485,914,2.485,915,2.485,916,2.485,917,2.485,918,3.439,919,3.439,920,3.439,921,3.439,922,2.485,923,2.485,924,2.485,925,2.485,926,2.485,927,2.485,928,2.485,929,2.485,930,2.485,931,2.485,932,2.485,933,2.485,934,2.485,935,4.832,936,2.485,937,2.485,938,2.485,939,2.485,940,2.485,941,2.485,942,2.485,943,2.485,944,2.485]],["title/coverage.html",[945,2.888]],["body/coverage.html",[0,1.362,1,2.143,5,0.747,6,3.018,7,2.436,34,0.057,36,0.747,40,1.596,79,0.883,160,0.04,161,0.047,162,0.04,163,1.165,165,3.018,245,2.108,258,2.517,401,1.596,402,3.018,409,1.845,429,2.143,592,1.845,595,3.003,598,2.143,657,1.596,659,2.517,697,1.596,700,3.018,701,3.018,717,3.018,718,2.143,796,2.517,801,3.018,802,2.517,805,3.018,852,3.018,894,3.018,945,3.018,946,3.018,947,3.778,948,3.778,949,3.778,950,3.778,951,4.508,952,3.778,953,3.778,954,3.778,955,3.778,956,3.778,957,4.508,958,3.778,959,3.778,960,3.778,961,3.778,962,3.778,963,3.778,964,3.778,965,3.778,966,3.778]],["title/dependencies.html",[967,1.795,968,2.136]],["body/dependencies.html",[34,0.057,82,0.792,87,1.093,160,0.042,161,0.049,162,0.042,968,2.667,969,4.003,970,5.323,971,4.003,972,4.003,973,4.003,974,4.664,975,4.664,976,4.003,977,4.003,978,4.003,979,4.003,980,4.003,981,4.003,982,4.003,983,4.003,984,4.003]],["title/miscellaneous/functions.html",[985,1.275,986,2.56]],["body/miscellaneous/functions.html",[8,0.693,34,0.05,160,0.044,161,0.05,162,0.044,796,2.8,802,3.354,985,2.384,986,3.357,987,4.203]],["title/index.html",[8,0.371,988,1.795,989,1.795]],["body/index.html",[3,0.798,34,0.049,84,2.251,85,1.969,160,0.042,161,0.049,162,0.042,967,3.221,990,4.033,991,4.684,992,4.033,993,4.033,994,4.033,995,4.033,996,4.033,997,4.033,998,4.033,999,4.033,1000,4.033,1001,4.033,1002,4.033,1003,4.033,1004,4.033,1005,4.033,1006,4.033,1007,4.95,1008,4.033,1009,4.033,1010,4.033]],["title/license.html",[988,1.795,989,1.795,1011,1.795]],["body/license.html",[34,0.047,84,1.568,124,2.964,160,0.039,161,0.047,162,0.039,214,1.812,269,1.568,946,2.964,1011,2.964,1012,3.711,1013,4.78,1014,3.711,1015,3.711,1016,4.459,1017,3.711,1018,3.711,1019,3.711,1020,3.711,1021,3.711,1022,3.711,1023,4.459,1024,5.289,1025,3.711,1026,3.711,1027,3.711,1028,4.78,1029,3.711,1030,4.459,1031,3.711,1032,3.711,1033,4.459,1034,3.711,1035,3.711,1036,3.711,1037,3.711,1038,3.711,1039,3.711,1040,3.711,1041,4.459,1042,3.711,1043,3.711,1044,3.711,1045,3.711,1046,3.711,1047,3.711,1048,3.711,1049,4.459,1050,4.459,1051,3.711,1052,3.711,1053,3.711,1054,3.711,1055,3.711,1056,3.711,1057,3.711,1058,3.711,1059,3.711,1060,3.711,1061,3.711,1062,3.711,1063,3.711,1064,3.711,1065,3.711,1066,3.711,1067,3.711,1068,3.711,1069,3.711,1070,3.711,1071,3.711,1072,3.711,1073,3.711,1074,3.711,1075,3.711,1076,3.711,1077,2.964,1078,3.711,1079,3.711]],["title/modules.html",[795,2.409]],["body/modules.html",[34,0.051,160,0.044,161,0.051,162,0.044,794,2.813,795,2.813,1080,4.223,1081,4.223,1082,4.223]],["title/overview.html",[1083,2.888]],["body/overview.html",[2,2.014,34,0.05,160,0.043,161,0.05,162,0.043,164,1.743,171,2.014,345,2.317,409,2.014,416,3.791,689,3.296,793,3.791,803,3.296,804,3.296,968,2.749,1077,3.296,1083,3.296,1084,4.126,1085,4.126,1086,4.746]],["title/miscellaneous/variables.html",[985,1.275,1087,2.56]],["body/miscellaneous/variables.html",[8,0.687,34,0.054,36,0.823,77,1.137,78,1.137,160,0.044,161,0.05,162,0.044,235,1.759,245,1.759,595,2.774,659,3.179,985,2.362,1087,3.326,1088,4.164]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":245,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":239,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["0.9.1",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":345,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"overview.html":{}}}],["1.0",{"_index":240,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["1.0.3",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["1/12",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":417,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["15",{"_index":426,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["20",{"_index":420,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["2019",{"_index":1014,"title":{},"body":{"license.html":{}}}],["22/35",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["24/36",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["28/38",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["28/39",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":413,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["4",{"_index":1086,"title":{},"body":{"overview.html":{}}}],["4/6",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":427,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["6",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["6.5.2",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["62",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":258,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{},"coverage.html":{}}}],["8.1.0",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["_addeventlisteners",{"_index":434,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["_apiwrapper",{"_index":38,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["_circleaddedtomanager",{"_index":174,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["_circles",{"_index":11,"title":{},"body":{"injectables/CircleManager.html":{}}}],["_convertpoints",{"_index":854,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["_convertpoints(line",{"_index":860,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["_eventsubscriptions",{"_index":175,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["_getpoints",{"_index":601,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["_id",{"_index":430,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["_init",{"_index":435,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["_manager",{"_index":203,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["_mapoptions",{"_index":177,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["_mapswrapper",{"_index":813,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["_polygonaddedtomanager",{"_index":431,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["_polygonmanager",{"_index":454,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["_polygonoptionsattributes",{"_index":432,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["_polygons",{"_index":806,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["_polylineaddedtomanager",{"_index":599,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["_polylinemanager",{"_index":617,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["_polylineoptionsattributes",{"_index":600,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["_polylines",{"_index":853,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["_rectangleaddedtomanager",{"_index":719,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["_rectangles",{"_index":895,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["_registereventlisteners",{"_index":178,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["_subscriptions",{"_index":433,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["_updatecircleoptionschanges",{"_index":179,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["_updatecircleoptionschanges(changes",{"_index":297,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["_updatepolygonoptions",{"_index":436,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["_updatepolygonoptions(changes",{"_index":537,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["_updaterectangleoptionschanges",{"_index":720,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["_updaterectangleoptionschanges(changes",{"_index":761,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["_zone",{"_index":29,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["above",{"_index":1048,"title":{},"body":{"license.html":{}}}],["action",{"_index":1072,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":699,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["addcircle",{"_index":13,"title":{},"body":{"injectables/CircleManager.html":{}}}],["addcircle(circle",{"_index":39,"title":{},"body":{"injectables/CircleManager.html":{}}}],["addpolygon",{"_index":807,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["addpolygon(path",{"_index":814,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["addpolyline",{"_index":855,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["addpolyline(line",{"_index":863,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["addrectangle",{"_index":896,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["addrectangle(rectangle",{"_index":899,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["aftercontentinit",{"_index":428,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["agm",{"_index":173,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["agmmap",{"_index":406,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["along",{"_index":622,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["and/or",{"_index":1039,"title":{},"body":{"license.html":{}}}],["angular/animations",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":82,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["appear",{"_index":475,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["arising",{"_index":1076,"title":{},"body":{"license.html":{}}}],["around",{"_index":224,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["array",{"_index":419,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"injectables/PolylineManager.html":{}}}],["arrays",{"_index":494,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["associated",{"_index":1025,"title":{},"body":{"license.html":{}}}],["async",{"_index":18,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{}}}],["authors",{"_index":1066,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":496,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["available",{"_index":1081,"title":{},"body":{"modules.html":{}}}],["await",{"_index":125,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{}}}],["between",{"_index":238,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["boolean",{"_index":204,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["bootstrap",{"_index":1084,"title":{},"body":{"overview.html":{}}}],["bounds",{"_index":917,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["bounds.getnortheast().lat",{"_index":787,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["bounds.getnortheast().lng",{"_index":788,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["bounds.getsouthwest().lat",{"_index":789,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["bounds.getsouthwest().lng",{"_index":790,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["bounds_changed",{"_index":785,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["boundschange",{"_index":726,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["break",{"_index":387,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["browse",{"_index":1082,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["c",{"_index":124,"title":{},"body":{"injectables/CircleManager.html":{},"license.html":{}}}],["c.addlistener(eventname",{"_index":155,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.getbounds",{"_index":140,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.getcenter",{"_index":141,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.getradius",{"_index":142,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.setcenter",{"_index":146,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.setdraggable(circle.draggable",{"_index":148,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.seteditable(circle.editable",{"_index":147,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.setmap(null",{"_index":127,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.setoptions(options",{"_index":138,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.setradius(circle.radius",{"_index":150,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.setvisible(circle.visible",{"_index":149,"title":{},"body":{"injectables/CircleManager.html":{}}}],["case",{"_index":382,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["casting",{"_index":132,"title":{},"body":{"injectables/CircleManager.html":{}}}],["center",{"_index":94,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["center.lat",{"_index":391,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["center.lng",{"_index":392,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["center_changed",{"_index":388,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["centerchange",{"_index":188,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["change",{"_index":476,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["changed",{"_index":272,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["changes",{"_index":300,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["changes.draggable",{"_index":333,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["changes.east",{"_index":775,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["changes.editable",{"_index":331,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["changes.latitude",{"_index":328,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["changes.latitude.currentvalue",{"_index":712,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["changes.longitude",{"_index":329,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["changes.longitude.currentvalue",{"_index":714,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["changes.north",{"_index":774,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["changes.radius",{"_index":337,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["changes.south",{"_index":776,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["changes.visible",{"_index":335,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["changes.west",{"_index":777,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["changes[k].currentvalue",{"_index":348,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["charge",{"_index":1020,"title":{},"body":{"license.html":{}}}],["check",{"_index":130,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle",{"_index":42,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"components/NgMapsPolyline.html":{}}}],["circle's",{"_index":271,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["circle'},{'name",{"_index":694,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["circle.clickable",{"_index":100,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.draggable",{"_index":102,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.editable",{"_index":104,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.fillcolor",{"_index":106,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.fillopacity",{"_index":108,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.latitude",{"_index":96,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.longitude",{"_index":98,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.radius",{"_index":110,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.strokecolor",{"_index":112,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.strokeopacity",{"_index":114,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.strokeposition",{"_index":116,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.strokeweight",{"_index":118,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.visible",{"_index":120,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.zindex",{"_index":122,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circleclick",{"_index":189,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["circledblclick",{"_index":190,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["circledraggable",{"_index":184,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["circlemanager",{"_index":1,"title":{"injectables/CircleManager.html":{}},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"coverage.html":{}}}],["circumference",{"_index":225,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["claim",{"_index":1069,"title":{},"body":{"license.html":{}}}],["class",{"_index":91,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["click",{"_index":521,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["clickable",{"_index":99,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["clicked",{"_index":295,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["clicks",{"_index":277,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["closed",{"_index":486,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["clusterer",{"_index":1003,"title":{},"body":{"index.html":{}}}],["cmp",{"_index":410,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["color",{"_index":228,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["colors",{"_index":230,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["compared",{"_index":265,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["complex",{"_index":507,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["component",{"_index":409,"title":{"components/NgMapsPolyline.html":{}},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"coverage.html":{},"overview.html":{}}}],["component_template",{"_index":693,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["components",{"_index":593,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["conditions",{"_index":1047,"title":{},"body":{"license.html":{}}}],["connection",{"_index":1078,"title":{},"body":{"license.html":{}}}],["consist",{"_index":490,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["console.log(this._apiwrapper",{"_index":914,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["const",{"_index":123,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["constructor(_apiwrapper",{"_index":27,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["constructor(_manager",{"_index":201,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["constructor(_mapswrapper",{"_index":811,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["constructor(_polygonmanager",{"_index":452,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["constructor(_polylinemanager",{"_index":615,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["constructor(private",{"_index":317,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["container",{"_index":597,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["contentchildren",{"_index":655,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["contentchildren(ngmapspolylinepoint",{"_index":653,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["contract",{"_index":1073,"title":{},"body":{"license.html":{}}}],["control",{"_index":221,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["converted",{"_index":508,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["coordinates",{"_index":484,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["copies",{"_index":1041,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1023,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1013,"title":{},"body":{"license.html":{}}}],["core",{"_index":999,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":945,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":422,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["createeventobservable",{"_index":14,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["createeventobservable(eventname",{"_index":45,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["createeventobservable(obj.name",{"_index":577,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["css3",{"_index":229,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["curvature",{"_index":467,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["damages",{"_index":1070,"title":{},"body":{"license.html":{}}}],["dblclick",{"_index":523,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["deal",{"_index":1027,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1079,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":803,"title":{},"body":{"modules/NgMapsShapesModule.html":{},"overview.html":{}}}],["decorators",{"_index":652,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["default",{"_index":77,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":211,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["defined",{"_index":31,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["defines",{"_index":513,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["deletepolygon",{"_index":808,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["deletepolygon(paths",{"_index":817,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["deletepolyline",{"_index":856,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["deletepolyline(line",{"_index":866,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["dependencies",{"_index":968,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["description",{"_index":403,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["designates",{"_index":485,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["dimensions",{"_index":478,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["directive",{"_index":163,"title":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"coverage.html":{}}}],["directives",{"_index":164,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"overview.html":{}}}],["directives/circle",{"_index":88,"title":{},"body":{"injectables/CircleManager.html":{},"modules/NgMapsShapesModule.html":{}}}],["directives/polygon",{"_index":798,"title":{},"body":{"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{}}}],["directives/polyline",{"_index":799,"title":{},"body":{"modules/NgMapsShapesModule.html":{},"injectables/PolylineManager.html":{}}}],["directives/rectangle",{"_index":800,"title":{},"body":{"modules/NgMapsShapesModule.html":{},"injectables/RectangleManager.html":{}}}],["distribute",{"_index":1037,"title":{},"body":{"license.html":{}}}],["docs",{"_index":998,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":946,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":287,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["drag",{"_index":191,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["dragend",{"_index":192,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["draggable",{"_index":101,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["dragged",{"_index":477,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["dragging",{"_index":220,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["drags",{"_index":281,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["dragstart",{"_index":193,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["dynamic",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":156,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["each",{"_index":459,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["earlier",{"_index":259,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["earth",{"_index":468,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["earth's",{"_index":248,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["east",{"_index":721,"title":{},"body":{"directives/NgMapsRectangle.html":{},"injectables/RectangleManager.html":{}}}],["edges",{"_index":464,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["edit",{"_index":219,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["editable",{"_index":103,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["element",{"_index":691,"title":{},"body":{"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["emitted",{"_index":276,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["emitter",{"_index":274,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["ev",{"_index":560,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["even",{"_index":534,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["event",{"_index":269,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"license.html":{}}}],["eventemitter",{"_index":267,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["eventemitter.emit",{"_index":390,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["eventemitter.emit(radius",{"_index":386,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["eventemitter.emit(value",{"_index":394,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["eventname",{"_index":49,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["events",{"_index":217,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["events.foreach((eventemitter",{"_index":377,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('bounds_changed",{"_index":781,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["events.set('center_changed",{"_index":351,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["events.set('click",{"_index":353,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('dblclick",{"_index":355,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('drag",{"_index":357,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('dragend",{"_index":359,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('dragstart",{"_index":361,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('mousedown",{"_index":363,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('mousemove",{"_index":365,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('mouseout",{"_index":367,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('mouseover",{"_index":369,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('mouseup",{"_index":371,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('radius_changed",{"_index":373,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["events.set('rightclick",{"_index":375,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["example",{"_index":407,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["except",{"_index":232,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["explorer",{"_index":257,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["export",{"_index":90,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["exports",{"_index":804,"title":{},"body":{"modules/NgMapsShapesModule.html":{},"overview.html":{}}}],["express",{"_index":1057,"title":{},"body":{"license.html":{}}}],["extended",{"_index":233,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["false",{"_index":205,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["files",{"_index":1026,"title":{},"body":{"license.html":{}}}],["fill",{"_index":227,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsRectangle.html":{}}}],["fillcolor",{"_index":105,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/RectangleManager.html":{}}}],["fillopacity",{"_index":107,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/RectangleManager.html":{}}}],["filter((k",{"_index":581,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["fired",{"_index":270,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["first",{"_index":498,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["fitness",{"_index":1062,"title":{},"body":{"license.html":{}}}],["follow",{"_index":466,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["following",{"_index":1046,"title":{},"body":{"license.html":{}}}],["free",{"_index":1019,"title":{},"body":{"license.html":{}}}],["function",{"_index":801,"title":{},"body":{"modules/NgMapsShapesModule.html":{},"coverage.html":{}}}],["functions",{"_index":986,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1044,"title":{},"body":{"license.html":{}}}],["geodesic",{"_index":439,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["get(circle",{"_index":144,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getbounds",{"_index":15,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{},"injectables/RectangleManager.html":{}}}],["getbounds(circle",{"_index":51,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getbounds(rectangle",{"_index":901,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["getcenter",{"_index":16,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{}}}],["getcenter(circle",{"_index":54,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getradius",{"_index":17,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getradius(circle",{"_index":56,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getradius(this",{"_index":384,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["gets",{"_index":275,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["getting",{"_index":988,"title":{"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":61,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["google.maps.circleoptions",{"_index":71,"title":{},"body":{"injectables/CircleManager.html":{}}}],["google.maps.latlngboundsliteral",{"_index":791,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["google.maps.latlngliteral",{"_index":393,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["google.maps.mapseventlistener",{"_index":153,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["google.maps.polygon",{"_index":843,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["google.maps.polygonoptions",{"_index":540,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["google.maps.polyline",{"_index":890,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["google.maps.polymouseevent",{"_index":561,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["google.maps.rectangleoptions",{"_index":910,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["google.maps.strokeposition",{"_index":136,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{}}}],["google.maps.strokeposition.center",{"_index":253,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["google/markerclusterer",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["googlemapsapiwrapper",{"_index":28,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["granted",{"_index":1018,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1080,"title":{},"body":{"modules.html":{}}}],["handler",{"_index":559,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["handlers",{"_index":558,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["handlers.foreach((obj",{"_index":574,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["handles",{"_index":215,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["height",{"_index":412,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["hereby",{"_index":1017,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1067,"title":{},"body":{"license.html":{}}}],["hole",{"_index":423,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["hosts",{"_index":995,"title":{},"body":{"index.html":{}}}],["html",{"_index":690,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["icon",{"_index":547,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["icons",{"_index":602,"title":{},"body":{"components/NgMapsPolyline.html":{},"injectables/PolylineManager.html":{}}}],["id",{"_index":437,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["identifier",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":930,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["implements",{"_index":166,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["implied",{"_index":1058,"title":{},"body":{"license.html":{}}}],["import",{"_index":81,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["improve",{"_index":131,"title":{},"body":{"injectables/CircleManager.html":{}}}],["included",{"_index":1051,"title":{},"body":{"license.html":{}}}],["including",{"_index":1030,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":213,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"index.html":{}}}],["injectable",{"_index":0,"title":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"overview.html":{}}}],["input",{"_index":312,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["input('circledraggable",{"_index":322,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["input('polydraggable",{"_index":551,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["input('polylinedraggable",{"_index":661,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["input('rectangledraggable",{"_index":771,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["inputs",{"_index":183,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["inserting",{"_index":509,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["inside",{"_index":740,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["internal",{"_index":323,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{}}}],["internet",{"_index":256,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["interpreted",{"_index":465,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["item",{"_index":839,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["item.setpaths(polygon.paths",{"_index":841,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["k",{"_index":343,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["key",{"_index":327,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["kind",{"_index":1056,"title":{},"body":{"license.html":{}}}],["l.addlistener(eventname",{"_index":851,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["l.setmap(null",{"_index":849,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["l.setoptions(options",{"_index":844,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["l.setpath(path",{"_index":891,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["last",{"_index":501,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["lat",{"_index":95,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["latitude",{"_index":185,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["latlng",{"_index":495,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["latlngbounds",{"_index":302,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["latlngs",{"_index":506,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["layer",{"_index":1007,"title":{},"body":{"index.html":{}}}],["legend",{"_index":689,"title":{},"body":{"components/NgMapsPolyline.html":{},"overview.html":{}}}],["liability",{"_index":1071,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1068,"title":{},"body":{"license.html":{}}}],["license",{"_index":1011,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":1031,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1059,"title":{},"body":{"license.html":{}}}],["line",{"_index":862,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line._getpoints().map((point",{"_index":872,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.clickable",{"_index":878,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.draggable",{"_index":879,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.editable",{"_index":880,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.geodesic",{"_index":881,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.icons",{"_index":887,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.strokecolor",{"_index":882,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.strokeopacity",{"_index":883,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.strokeweight",{"_index":884,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.visible",{"_index":885,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.zindex",{"_index":886,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line:no",{"_index":320,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["lineclick",{"_index":604,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["linedblclick",{"_index":605,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["linedrag",{"_index":606,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["linedragend",{"_index":607,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["linedragstart",{"_index":608,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["linemousedown",{"_index":609,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["linemousemove",{"_index":610,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["linemouseout",{"_index":611,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["linemouseover",{"_index":612,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["linemouseup",{"_index":613,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["linerightclick",{"_index":614,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["lines",{"_index":471,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["link",{"_index":550,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["listener",{"_index":152,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["listener.remove",{"_index":159,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["literal",{"_index":298,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["lng",{"_index":97,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["longitude",{"_index":186,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["loop",{"_index":487,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["m",{"_index":845,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["m.then((l",{"_index":848,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["maintained",{"_index":479,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["manager",{"_index":316,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["manager.ts",{"_index":7,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["manager.ts:10",{"_index":80,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:101",{"_index":76,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:105",{"_index":74,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:109",{"_index":47,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:11",{"_index":823,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["manager.ts:12",{"_index":871,"title":{},"body":{"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:13",{"_index":32,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:14",{"_index":812,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["manager.ts:15",{"_index":859,"title":{},"body":{"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:20",{"_index":41,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:21",{"_index":815,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["manager.ts:22",{"_index":861,"title":{},"body":{"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:33",{"_index":864,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:39",{"_index":822,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["manager.ts:44",{"_index":59,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:48",{"_index":820,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["manager.ts:51",{"_index":870,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:52",{"_index":904,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:55",{"_index":72,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:57",{"_index":818,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["manager.ts:59",{"_index":911,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:64",{"_index":868,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:66",{"_index":902,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:69",{"_index":52,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:70",{"_index":816,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:73",{"_index":55,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolylineManager.html":{}}}],["manager.ts:77",{"_index":57,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:81",{"_index":64,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:86",{"_index":865,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:87",{"_index":907,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:89",{"_index":68,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:93",{"_index":913,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:95",{"_index":66,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:99",{"_index":900,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["managers/circle",{"_index":315,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["managers/polygon",{"_index":549,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["managers/polyline",{"_index":656,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["managers/rectangle",{"_index":770,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["map",{"_index":62,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["maps",{"_index":1015,"title":{},"body":{"license.html":{}}}],["maps/core",{"_index":85,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"index.html":{}}}],["maps/data",{"_index":1006,"title":{},"body":{"index.html":{}}}],["maps/drawing",{"_index":1009,"title":{},"body":{"index.html":{}}}],["maps/kml",{"_index":1008,"title":{},"body":{"index.html":{}}}],["maps/marker",{"_index":1002,"title":{},"body":{"index.html":{}}}],["maps/places",{"_index":1005,"title":{},"body":{"index.html":{}}}],["maps/shapes",{"_index":1010,"title":{},"body":{"index.html":{}}}],["maps/snazzy",{"_index":1000,"title":{},"body":{"index.html":{}}}],["markerclusterer",{"_index":1004,"title":{},"body":{"index.html":{}}}],["matching",{"_index":161,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1061,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1035,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":170,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["meters",{"_index":247,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["methods",{"_index":12,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["miscellaneous",{"_index":985,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1012,"title":{},"body":{"license.html":{}}}],["mode",{"_index":514,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["modify",{"_index":1034,"title":{},"body":{"license.html":{}}}],["module",{"_index":793,"title":{"modules/NgMapsShapesModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":795,"title":{"modules.html":{}},"body":{"modules/NgMapsShapesModule.html":{},"modules.html":{}}}],["mono",{"_index":993,"title":{},"body":{"index.html":{}}}],["more",{"_index":492,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["mouse",{"_index":216,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["mousedown",{"_index":194,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["mouseevent",{"_index":564,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["mousemove",{"_index":195,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["mouseout",{"_index":196,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["mouseover",{"_index":197,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["mouseup",{"_index":198,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["multiple",{"_index":996,"title":{},"body":{"index.html":{}}}],["mymapcmp",{"_index":415,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["name",{"_index":35,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["named",{"_index":234,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["nestedpaths",{"_index":425,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["nesting",{"_index":421,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["new",{"_index":79,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["next",{"_index":319,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["ng",{"_index":84,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"index.html":{},"license.html":{}}}],["ngaftercontentinit",{"_index":438,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["ngmaps",{"_index":990,"title":{},"body":{"index.html":{}}}],["ngmapscircle",{"_index":40,"title":{"directives/NgMapsCircle.html":{}},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"components/NgMapsPolyline.html":{},"modules/NgMapsShapesModule.html":{},"coverage.html":{}}}],["ngmapscircle._mapoptions.indexof(k",{"_index":344,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["ngmapspolygon",{"_index":401,"title":{"directives/NgMapsPolygon.html":{}},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"coverage.html":{}}}],["ngmapspolygon._polygonoptionsattributes.indexof(k",{"_index":582,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["ngmapspolyline",{"_index":592,"title":{"components/NgMapsPolyline.html":{}},"body":{"components/NgMapsPolyline.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["ngmapspolyline._polylineoptionsattributes.indexof(k",{"_index":671,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["ngmapspolylinepoint",{"_index":657,"title":{"directives/NgMapsPolylinePoint.html":{}},"body":{"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["ngmapsrectangle",{"_index":697,"title":{"directives/NgMapsRectangle.html":{}},"body":{"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["ngmapsrectangle._mapoptions.indexof(k",{"_index":780,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["ngmapsshapesmodule",{"_index":794,"title":{"modules/NgMapsShapesModule.html":{}},"body":{"modules/NgMapsShapesModule.html":{},"modules.html":{}}}],["ngmapsviewcomponent",{"_index":83,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["ngmodule",{"_index":797,"title":{},"body":{"modules/NgMapsShapesModule.html":{}}}],["ngonchanges",{"_index":180,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["ngonchanges(changes",{"_index":304,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["ngondestroy",{"_index":181,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["ngoninit",{"_index":182,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["ngzone",{"_index":30,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["noninfringement",{"_index":1065,"title":{},"body":{"license.html":{}}}],["north",{"_index":722,"title":{},"body":{"directives/NgMapsRectangle.html":{},"injectables/RectangleManager.html":{}}}],["note",{"_index":474,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["notice",{"_index":1049,"title":{},"body":{"license.html":{}}}],["null",{"_index":154,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["number",{"_index":235,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":585,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["obj[k",{"_index":584,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["object.keys(changes",{"_index":580,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["object.keys(changes).filter",{"_index":342,"title":{},"body":{"directives/NgMapsCircle.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["observable",{"_index":50,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["observable((observer",{"_index":151,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["observer",{"_index":86,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["observer.next(e",{"_index":158,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["obtaining",{"_index":1022,"title":{},"body":{"license.html":{}}}],["onchanges",{"_index":168,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["ondestroy",{"_index":169,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["one",{"_index":491,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["oninit",{"_index":167,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["opacity",{"_index":237,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["optional",{"_index":37,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["optionkeys",{"_index":341,"title":{},"body":{"directives/NgMapsCircle.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["optionkeys.foreach((k",{"_index":346,"title":{},"body":{"directives/NgMapsCircle.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["optionkeys.length",{"_index":349,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["options",{"_index":70,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["options.strokeposition",{"_index":135,"title":{},"body":{"injectables/CircleManager.html":{}}}],["options[k",{"_index":347,"title":{},"body":{"directives/NgMapsCircle.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["ordered",{"_index":482,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["os",{"_index":575,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["otherwise",{"_index":1075,"title":{},"body":{"license.html":{}}}],["out",{"_index":1077,"title":{},"body":{"license.html":{},"overview.html":{}}}],["output",{"_index":313,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["outputs",{"_index":187,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["outside",{"_index":741,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["over",{"_index":210,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["overlap",{"_index":424,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["overview",{"_index":1083,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":967,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["packages",{"_index":991,"title":{},"body":{"index.html":{}}}],["param",{"_index":133,"title":{},"body":{"injectables/CircleManager.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["particular",{"_index":1063,"title":{},"body":{"license.html":{}}}],["path",{"_index":500,"title":{},"body":{"directives/NgMapsPolygon.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["path.clickable",{"_index":826,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.draggable",{"_index":827,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.editable",{"_index":828,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.fillcolor",{"_index":829,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.fillopacity",{"_index":830,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.geodesic",{"_index":831,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.paths",{"_index":832,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.strokecolor",{"_index":833,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.strokeopacity",{"_index":834,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.strokeweight",{"_index":835,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.visible",{"_index":836,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.zindex",{"_index":837,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["paths",{"_index":418,"title":{},"body":{"directives/NgMapsPolygon.html":{},"injectables/PolygonManager.html":{}}}],["permission",{"_index":1016,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1042,"title":{},"body":{"license.html":{}}}],["person",{"_index":1021,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1043,"title":{},"body":{"license.html":{}}}],["pixels",{"_index":262,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["point",{"_index":658,"title":{},"body":{"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolylineManager.html":{}}}],["point'},{'name",{"_index":696,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["point.latitude",{"_index":873,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["point.longitude",{"_index":874,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["point.positionchanged.subscribe",{"_index":664,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["point.ts",{"_index":701,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{},"coverage.html":{}}}],["point.ts:21",{"_index":707,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:26",{"_index":708,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:31",{"_index":709,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:33",{"_index":706,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:37",{"_index":710,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["points",{"_index":222,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["polyclick",{"_index":441,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polydblclick",{"_index":442,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polydrag",{"_index":443,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polydragend",{"_index":444,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polydraggable",{"_index":440,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polydragstart",{"_index":445,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polygon",{"_index":405,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"injectables/PolygonManager.html":{}}}],["polygon'},{'name",{"_index":695,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["polygonmanager",{"_index":429,"title":{"injectables/PolygonManager.html":{}},"body":{"directives/NgMapsPolygon.html":{},"injectables/PolygonManager.html":{},"coverage.html":{}}}],["polygonpromise",{"_index":824,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["polygons",{"_index":503,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polyline",{"_index":596,"title":{},"body":{"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["polylinedraggable",{"_index":603,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["polylineid",{"_index":659,"title":{},"body":{"components/NgMapsPolyline.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["polylineid++).tostring",{"_index":660,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["polylinemanager",{"_index":598,"title":{"injectables/PolylineManager.html":{}},"body":{"components/NgMapsPolyline.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["polylinepromise",{"_index":876,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["polylines",{"_index":489,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polymousedown",{"_index":446,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polymousemove",{"_index":447,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polymouseout",{"_index":448,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polymouseover",{"_index":449,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polymouseup",{"_index":450,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polyrightclick",{"_index":451,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polys",{"_index":266,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["portions",{"_index":1053,"title":{},"body":{"license.html":{}}}],["position",{"_index":242,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["positionchanged",{"_index":705,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["private",{"_index":10,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["project",{"_index":992,"title":{},"body":{"index.html":{}}}],["projects/.../polyline.ts",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../shapes.module.ts",{"_index":987,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/shapes/src/lib/directives/circle.ts",{"_index":165,"title":{},"body":{"directives/NgMapsCircle.html":{},"coverage.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:104",{"_index":264,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:109",{"_index":268,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:116",{"_index":273,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:123",{"_index":278,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:130",{"_index":279,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:135",{"_index":282,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:140",{"_index":284,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:147",{"_index":286,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:154",{"_index":288,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:161",{"_index":289,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:166",{"_index":290,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:173",{"_index":291,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:178",{"_index":292,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:18",{"_index":202,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:183",{"_index":293,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:187",{"_index":308,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:189",{"_index":310,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:192",{"_index":307,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:199",{"_index":305,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:21",{"_index":311,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:221",{"_index":299,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:236",{"_index":296,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:283",{"_index":306,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:294",{"_index":301,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:298",{"_index":303,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:35",{"_index":241,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:40",{"_index":244,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:45",{"_index":212,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:51",{"_index":206,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:57",{"_index":218,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:62",{"_index":226,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:67",{"_index":236,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:72",{"_index":246,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:77",{"_index":250,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:82",{"_index":252,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:88",{"_index":254,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:94",{"_index":260,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:99",{"_index":263,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts",{"_index":402,"title":{},"body":{"directives/NgMapsPolygon.html":{},"coverage.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:104",{"_index":463,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:117",{"_index":481,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:127",{"_index":515,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:132",{"_index":516,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:137",{"_index":517,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:142",{"_index":518,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:147",{"_index":519,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:152",{"_index":520,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:159",{"_index":522,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:166",{"_index":524,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:171",{"_index":525,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:178",{"_index":526,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:185",{"_index":527,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:192",{"_index":528,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:199",{"_index":529,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:206",{"_index":530,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:213",{"_index":531,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:220",{"_index":533,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:224",{"_index":548,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:244",{"_index":545,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:245",{"_index":546,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:246",{"_index":453,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:251",{"_index":542,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:257",{"_index":543,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:269",{"_index":536,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:275",{"_index":535,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:331",{"_index":539,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:343",{"_index":541,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:348",{"_index":544,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:71",{"_index":455,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:78",{"_index":512,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:84",{"_index":456,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:90",{"_index":461,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:95",{"_index":462,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polyline",{"_index":700,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{},"coverage.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts",{"_index":595,"title":{},"body":{"components/NgMapsPolyline.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:101",{"_index":625,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:106",{"_index":626,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:111",{"_index":621,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:116",{"_index":627,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:121",{"_index":628,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:126",{"_index":629,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:133",{"_index":630,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:140",{"_index":631,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:145",{"_index":632,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:152",{"_index":633,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:159",{"_index":634,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:166",{"_index":635,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:173",{"_index":636,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:180",{"_index":637,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:187",{"_index":638,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:194",{"_index":639,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:201",{"_index":654,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:203",{"_index":647,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:204",{"_index":648,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:205",{"_index":650,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:208",{"_index":644,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:227",{"_index":645,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:241",{"_index":642,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:247",{"_index":640,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:304",{"_index":641,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:312",{"_index":643,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:317",{"_index":646,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:51",{"_index":616,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:56",{"_index":649,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:70",{"_index":618,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:77",{"_index":623,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:83",{"_index":619,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:91",{"_index":620,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:96",{"_index":624,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts",{"_index":717,"title":{},"body":{"directives/NgMapsRectangle.html":{},"coverage.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:103",{"_index":744,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:108",{"_index":746,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:114",{"_index":747,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:122",{"_index":757,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:128",{"_index":758,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:133",{"_index":749,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:138",{"_index":750,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:144",{"_index":751,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:150",{"_index":752,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:156",{"_index":753,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:161",{"_index":754,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:167",{"_index":755,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:172",{"_index":756,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:178",{"_index":759,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:18",{"_index":729,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:180",{"_index":769,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:182",{"_index":767,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:185",{"_index":766,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:192",{"_index":764,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:21",{"_index":768,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:211",{"_index":762,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:226",{"_index":760,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:269",{"_index":765,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:280",{"_index":763,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:35",{"_index":735,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:40",{"_index":731,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:45",{"_index":737,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:50",{"_index":745,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:55",{"_index":730,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:61",{"_index":736,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:67",{"_index":732,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:72",{"_index":733,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:77",{"_index":734,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:82",{"_index":738,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:87",{"_index":739,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:93",{"_index":742,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:98",{"_index":743,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/managers/circle",{"_index":6,"title":{},"body":{"injectables/CircleManager.html":{},"coverage.html":{}}}],["projects/shapes/src/lib/managers/polygon",{"_index":805,"title":{},"body":{"injectables/PolygonManager.html":{},"coverage.html":{}}}],["projects/shapes/src/lib/managers/polyline",{"_index":852,"title":{},"body":{"injectables/PolylineManager.html":{},"coverage.html":{}}}],["projects/shapes/src/lib/managers/rectangle",{"_index":894,"title":{},"body":{"injectables/RectangleManager.html":{},"coverage.html":{}}}],["projects/shapes/src/lib/shapes.module.ts",{"_index":796,"title":{},"body":{"modules/NgMapsShapesModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["promise",{"_index":53,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["promise.resolve",{"_index":847,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["properties",{"_index":9,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["property",{"_index":255,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["propname",{"_index":340,"title":{},"body":{"directives/NgMapsCircle.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["provided",{"_index":1054,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":89,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["providers",{"_index":171,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"overview.html":{}}}],["public",{"_index":711,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["publish",{"_index":1036,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1064,"title":{},"body":{"license.html":{}}}],["querylist",{"_index":651,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["r.addlistener(eventname",{"_index":944,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["r.getbounds",{"_index":939,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["r.setbounds",{"_index":940,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["r.setdraggable(rectangle.draggable",{"_index":942,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["r.seteditable(rectangle.editable",{"_index":941,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["r.setmap(null",{"_index":936,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["r.setoptions(options",{"_index":938,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["r.setvisible(rectangle.visible",{"_index":943,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["radius",{"_index":109,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{}}}],["radius_changed",{"_index":383,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["radiuschange",{"_index":199,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["rectangle",{"_index":698,"title":{},"body":{"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/RectangleManager.html":{}}}],["rectangle's",{"_index":748,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["rectangle.clickable",{"_index":922,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.draggable",{"_index":923,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.east",{"_index":919,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.editable",{"_index":924,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.fillcolor",{"_index":925,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.fillopacity",{"_index":926,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.north",{"_index":918,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.south",{"_index":920,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.strokecolor",{"_index":927,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.strokeopacity",{"_index":928,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.strokeposition",{"_index":931,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.strokeweight",{"_index":932,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.visible",{"_index":933,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.west",{"_index":921,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.zindex",{"_index":934,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangleclick",{"_index":727,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["rectangledblclick",{"_index":728,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["rectangledraggable",{"_index":723,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["rectanglemanager",{"_index":718,"title":{"injectables/RectangleManager.html":{}},"body":{"directives/NgMapsRectangle.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["reduce((obj",{"_index":583,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["registered",{"_index":589,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["relative",{"_index":480,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["removecircle",{"_index":19,"title":{},"body":{"injectables/CircleManager.html":{}}}],["removecircle(circle",{"_index":58,"title":{},"body":{"injectables/CircleManager.html":{}}}],["removerectangle",{"_index":897,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["removerectangle(rectangle",{"_index":903,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["removes",{"_index":60,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["removing",{"_index":510,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["rename",{"_index":321,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["rendered",{"_index":469,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["renders",{"_index":404,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["repeat",{"_index":497,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["repeatedly",{"_index":280,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["repo",{"_index":994,"title":{},"body":{"index.html":{}}}],["represents",{"_index":702,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["required",{"_index":243,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["reset",{"_index":1085,"title":{},"body":{"overview.html":{}}}],["restriction",{"_index":1029,"title":{},"body":{"license.html":{}}}],["result",{"_index":160,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":162,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":137,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["returns",{"_index":43,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["right",{"_index":294,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["rightclick",{"_index":200,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["rights",{"_index":1032,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":87,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"dependencies.html":{}}}],["s",{"_index":668,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["s.unsubscribe",{"_index":396,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["screen",{"_index":472,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["segment",{"_index":460,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["selector",{"_index":172,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["sell",{"_index":1040,"title":{},"body":{"license.html":{}}}],["sembgooglemappolyline",{"_index":704,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["sequence",{"_index":483,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["set",{"_index":207,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["setbounds",{"_index":898,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setbounds(rectangle",{"_index":905,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setcenter",{"_index":20,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setcenter(circle",{"_index":63,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setdraggable",{"_index":21,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["setdraggable(circle",{"_index":65,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setdraggable(rectangle",{"_index":906,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["seteditable",{"_index":22,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["seteditable(circle",{"_index":67,"title":{},"body":{"injectables/CircleManager.html":{}}}],["seteditable(rectangle",{"_index":908,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setoptions",{"_index":23,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["setoptions(circle",{"_index":69,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setoptions(rectangle",{"_index":909,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setpolygonoptions",{"_index":809,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["setpolygonoptions(path",{"_index":819,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["setpolylineoptions",{"_index":857,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["setpolylineoptions(line",{"_index":867,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["setradius",{"_index":24,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setradius(circle",{"_index":73,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setvisible",{"_index":25,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["setvisible(circle",{"_index":75,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setvisible(rectangle",{"_index":912,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["shall",{"_index":1050,"title":{},"body":{"license.html":{}}}],["shape",{"_index":457,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["shapesdirectives",{"_index":802,"title":{},"body":{"modules/NgMapsShapesModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["shown",{"_index":223,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["simple",{"_index":502,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["simplechange",{"_index":314,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["simplechanges",{"_index":538,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["single",{"_index":505,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["software",{"_index":1024,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["south",{"_index":724,"title":{},"body":{"directives/NgMapsRectangle.html":{},"injectables/RectangleManager.html":{}}}],["space",{"_index":473,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["specify",{"_index":493,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["started",{"_index":989,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":285,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["statements",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":176,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["stops",{"_index":283,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["straight",{"_index":470,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["string",{"_index":46,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["stroke",{"_index":251,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["strokecolor",{"_index":111,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["strokeopacity",{"_index":113,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["strokeposition",{"_index":115,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{},"injectables/RectangleManager.html":{}}}],["strokeweight",{"_index":117,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["styles",{"_index":411,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["subject",{"_index":1045,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1038,"title":{},"body":{"license.html":{}}}],["subscribe((value",{"_index":380,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["subscribe(obj.handler",{"_index":578,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["subscription",{"_index":309,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["subscriptions",{"_index":590,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["substantial",{"_index":1052,"title":{},"body":{"license.html":{}}}],["supported",{"_index":231,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["surface",{"_index":249,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["switch",{"_index":381,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["t",{"_index":48,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["table",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":414,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["then((c",{"_index":145,"title":{},"body":{"injectables/CircleManager.html":{}}}],["then((radius",{"_index":385,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._addeventlisteners",{"_index":557,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["this._apiwrapper.createcircle",{"_index":93,"title":{},"body":{"injectables/CircleManager.html":{}}}],["this._apiwrapper.createrectangle",{"_index":916,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["this._circleaddedtomanager",{"_index":325,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._circles",{"_index":143,"title":{},"body":{"injectables/CircleManager.html":{}}}],["this._circles.delete(circle",{"_index":128,"title":{},"body":{"injectables/CircleManager.html":{}}}],["this._circles.get(circle",{"_index":126,"title":{},"body":{"injectables/CircleManager.html":{}}}],["this._circles.get(circle).then((c",{"_index":139,"title":{},"body":{"injectables/CircleManager.html":{}}}],["this._circles.set",{"_index":92,"title":{},"body":{"injectables/CircleManager.html":{}}}],["this._convertpoints(line",{"_index":875,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["this._eventsubscriptions",{"_index":397,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._eventsubscriptions.foreach((s",{"_index":395,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._eventsubscriptions.push",{"_index":378,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._id",{"_index":586,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["this._init",{"_index":553,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["this._manager",{"_index":379,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._manager.addcircle(this",{"_index":324,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._manager.addrectangle(this",{"_index":772,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this._manager.getbounds(this",{"_index":399,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._manager.getbounds(this).then((bounds",{"_index":786,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this._manager.getcenter(this",{"_index":400,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._manager.getcenter(this).then((center",{"_index":389,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._manager.removecircle(this",{"_index":398,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._manager.removerectangle(this",{"_index":792,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this._manager.setbounds(this",{"_index":778,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this._manager.setcenter(this",{"_index":330,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._manager.setdraggable(this",{"_index":334,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._manager.seteditable(this",{"_index":332,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._manager.setoptions(this",{"_index":350,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._manager.setradius(this",{"_index":338,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._manager.setvisible(this",{"_index":336,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._mapswrapper.createpolygon",{"_index":825,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["this._mapswrapper.createpolyline",{"_index":877,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["this._polygonaddedtomanager",{"_index":552,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this._polygonmanager",{"_index":576,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this._polygonmanager.addpolygon(this",{"_index":556,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this._polygonmanager.deletepolygon(this",{"_index":587,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this._polygonmanager.setpolygonoptions",{"_index":554,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this._polygons.delete(paths",{"_index":850,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["this._polygons.get(path).then((l",{"_index":842,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["this._polygons.get(paths",{"_index":846,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["this._polygons.get(polygon",{"_index":840,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["this._polygons.set(path",{"_index":838,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["this._polylineaddedtomanager",{"_index":667,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this._polylinemanager",{"_index":685,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this._polylinemanager.addpolyline(this",{"_index":673,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this._polylinemanager.deletepolyline(this",{"_index":688,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this._polylinemanager.setpolylineoptions(this",{"_index":672,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this._polylinemanager.updatepolylinepoints(this",{"_index":665,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this._polylines.delete(line",{"_index":893,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["this._polylines.get(line",{"_index":889,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["this._polylines.get(line).then((l",{"_index":892,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["this._polylines.set(line",{"_index":888,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["this._rectangleaddedtomanager",{"_index":773,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this._rectangles.delete(rectangle",{"_index":937,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["this._rectangles.get(rectangle).then((r",{"_index":935,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["this._rectangles.set",{"_index":915,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["this._registereventlisteners",{"_index":326,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._subscriptions.foreach((s",{"_index":591,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["this._subscriptions.push(os",{"_index":579,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["this._subscriptions.push(s",{"_index":670,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this._subscriptions.push(subscription",{"_index":666,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this._updatecircleoptionschanges(changes",{"_index":339,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._updatepolygonoptions(changes",{"_index":555,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this._updaterectangleoptionschanges(changes",{"_index":779,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this._zone.run",{"_index":157,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["this.boundschange",{"_index":782,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this.centerchange",{"_index":352,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this.circleclick",{"_index":354,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this.circledblclick",{"_index":356,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this.drag",{"_index":358,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this.dragend",{"_index":360,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this.dragstart",{"_index":362,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this.latitude",{"_index":713,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["this.lineclick.emit(ev",{"_index":674,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this.linedblclick.emit(ev",{"_index":675,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this.linedrag.emit(ev",{"_index":676,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this.linedragend.emit(ev",{"_index":677,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this.linedragstart.emit(ev",{"_index":678,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this.linemousedown.emit(ev",{"_index":679,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this.linemousemove.emit(ev",{"_index":680,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this.linemouseout.emit(ev",{"_index":681,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this.linemouseover.emit(ev",{"_index":682,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this.linemouseup.emit(ev",{"_index":683,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this.linerightclick.emit(ev",{"_index":684,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this.longitude",{"_index":715,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["this.mousedown",{"_index":364,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this.mousemove",{"_index":366,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this.mouseout",{"_index":368,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this.mouseover",{"_index":370,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this.mouseup",{"_index":372,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this.points",{"_index":686,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this.points.changes.subscribe",{"_index":669,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this.points.foreach((point",{"_index":663,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this.points.length",{"_index":662,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this.points.toarray",{"_index":687,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["this.polyclick.emit(ev",{"_index":562,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polydblclick.emit(ev",{"_index":563,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polydrag.emit(ev",{"_index":565,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polydragend.emit(ev",{"_index":566,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polydragstart.emit(ev",{"_index":567,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polymousedown.emit(ev",{"_index":568,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polymousemove.emit(ev",{"_index":569,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polymouseout.emit(ev",{"_index":570,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polymouseover.emit(ev",{"_index":571,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polymouseup.emit(ev",{"_index":572,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polyrightclick.emit(ev",{"_index":573,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.positionchanged.emit(position",{"_index":716,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["this.radiuschange",{"_index":374,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this.rectangleclick",{"_index":783,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this.rectangledblclick",{"_index":784,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this.rightclick",{"_index":376,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["todo",{"_index":129,"title":{},"body":{"injectables/CircleManager.html":{}}}],["tort",{"_index":1074,"title":{},"body":{"license.html":{}}}],["tree",{"_index":594,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["true",{"_index":208,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["ts",{"_index":929,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["tslib",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":318,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["type",{"_index":36,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":134,"title":{},"body":{"injectables/CircleManager.html":{}}}],["typescript",{"_index":408,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["unlike",{"_index":488,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["unsubscribe",{"_index":588,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["update",{"_index":511,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["updatepolygon",{"_index":810,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["updatepolygon(polygon",{"_index":821,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["updatepolylinepoints",{"_index":858,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["updatepolylinepoints(line",{"_index":869,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["use",{"_index":1033,"title":{},"body":{"license.html":{}}}],["user",{"_index":209,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["using",{"_index":504,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["value",{"_index":78,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":692,"title":{},"body":{"components/NgMapsPolyline.html":{}}}],["variable",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1087,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":997,"title":{},"body":{"index.html":{}}}],["vertex",{"_index":499,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["vertices",{"_index":458,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["visible",{"_index":119,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["void",{"_index":44,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["warranties",{"_index":1060,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1055,"title":{},"body":{"license.html":{}}}],["west",{"_index":725,"title":{},"body":{"directives/NgMapsRectangle.html":{},"injectables/RectangleManager.html":{}}}],["whe",{"_index":532,"title":{},"body":{"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{}}}],["whether",{"_index":214,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"license.html":{}}}],["width",{"_index":261,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["window",{"_index":1001,"title":{},"body":{"index.html":{}}}],["within",{"_index":703,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["without",{"_index":1028,"title":{},"body":{"license.html":{}}}],["zindex",{"_index":121,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"components/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["zone.js",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":416,"title":{},"body":{"directives/NgMapsPolygon.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/CircleManager.html":{"url":"injectables/CircleManager.html","title":"injectable - CircleManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CircleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/shapes/src/lib/managers/circle-manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _circles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCircle\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                getBounds\n                            \n                            \n                                getCenter\n                            \n                            \n                                getRadius\n                            \n                            \n                                    Async\n                                removeCircle\n                            \n                            \n                                setCenter\n                            \n                            \n                                setDraggable\n                            \n                            \n                                setEditable\n                            \n                            \n                                    Async\n                                setOptions\n                            \n                            \n                                setRadius\n                            \n                            \n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_apiWrapper: GoogleMapsAPIWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/managers/circle-manager.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _apiWrapper\n                                                  \n                                                        \n                                                                    GoogleMapsAPIWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCircle\n                        \n                        \n                    \n                \n            \n            \n                \naddCircle(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:109\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \ngetCenter(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRadius\n                        \n                        \n                    \n                \n            \n            \n                \ngetRadius(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeCircle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCircle(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:44\n                \n            \n\n\n            \n                \n                    Removes the given circle from the map.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCenter\n                        \n                        \n                    \n                \n            \n            \n                \nsetCenter(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDraggable\n                        \n                        \n                    \n                \n            \n            \n                \nsetDraggable(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEditable\n                        \n                        \n                    \n                \n            \n            \n                \nsetEditable(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(circle: NgMapsCircle, options: google.maps.CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRadius\n                        \n                        \n                    \n                \n            \n            \n                \nsetRadius(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVisible\n                        \n                        \n                    \n                \n            \n            \n                \nsetVisible(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _circles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map>\n\n                        \n                    \n                    \n                        \n                            Default value : new Map\n  >()\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { GoogleMapsAPIWrapper, NgMapsViewComponent } from '@ng-maps/core';\nimport { Observable, Observer } from 'rxjs';\nimport { NgMapsCircle } from '../directives/circle';\n\n@Injectable({\n  providedIn: NgMapsViewComponent,\n})\nexport class CircleManager {\n  private _circles: Map> = new Map\n  >();\n\n  constructor(\n    private _apiWrapper: GoogleMapsAPIWrapper,\n    private _zone: NgZone,\n  ) {}\n\n  addCircle(circle: NgMapsCircle) {\n    this._circles.set(\n      circle,\n      this._apiWrapper.createCircle({\n        center: { lat: circle.latitude, lng: circle.longitude },\n        clickable: circle.clickable,\n        draggable: circle.draggable,\n        editable: circle.editable,\n        fillColor: circle.fillColor,\n        fillOpacity: circle.fillOpacity,\n        radius: circle.radius,\n        strokeColor: circle.strokeColor,\n        strokeOpacity: circle.strokeOpacity,\n        strokePosition: circle.strokePosition,\n        strokeWeight: circle.strokeWeight,\n        visible: circle.visible,\n        zIndex: circle.zIndex,\n      }),\n    );\n  }\n\n  /**\n   * Removes the given circle from the map.\n   */\n  async removeCircle(circle: NgMapsCircle): Promise {\n    const c = await this._circles.get(circle);\n    c.setMap(null);\n    this._circles.delete(circle);\n  }\n\n  /**\n   * @todo check how to improve type casting\n   * @param circle\n   * @param options\n   */\n  async setOptions(\n    circle: NgMapsCircle,\n    options: google.maps.CircleOptions,\n  ): Promise {\n    const c = await this._circles.get(circle);\n\n    if (typeof options.strokePosition === 'string') {\n      options.strokePosition = (google.maps.StrokePosition[\n        options.strokePosition\n      ] as any) as google.maps.StrokePosition;\n    }\n    return c.setOptions(options);\n  }\n\n  getBounds(circle: NgMapsCircle): Promise {\n    return this._circles.get(circle).then((c) => c.getBounds());\n  }\n\n  getCenter(circle: NgMapsCircle): Promise {\n    return this._circles.get(circle).then((c) => c.getCenter());\n  }\n\n  getRadius(circle: NgMapsCircle): Promise {\n    return this._circles.get(circle).then((c) => c.getRadius());\n  }\n\n  setCenter(circle: NgMapsCircle): Promise {\n    return this._circles\n      .get(circle)\n      .then((c) =>\n        c.setCenter({ lat: circle.latitude, lng: circle.longitude }),\n      );\n  }\n\n  setEditable(circle: NgMapsCircle): Promise {\n    return this._circles\n      .get(circle)\n      .then((c) => c.setEditable(circle.editable));\n  }\n\n  setDraggable(circle: NgMapsCircle): Promise {\n    return this._circles\n      .get(circle)\n      .then((c) => c.setDraggable(circle.draggable));\n  }\n\n  setVisible(circle: NgMapsCircle): Promise {\n    return this._circles.get(circle).then((c) => c.setVisible(circle.visible));\n  }\n\n  setRadius(circle: NgMapsCircle): Promise {\n    return this._circles.get(circle).then((c) => c.setRadius(circle.radius));\n  }\n\n  createEventObservable(\n    eventName: string,\n    circle: NgMapsCircle,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      let listener: google.maps.MapsEventListener = null;\n      this._circles.get(circle).then((c) => {\n        listener = c.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsCircle.html":{"url":"directives/NgMapsCircle.html","title":"directive - NgMapsCircle","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsCircle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/shapes/src/lib/directives/circle.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnChanges\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                CircleManager\n                            \n                        \n                    \n\n                    \n                        Selector\n                        agm-circle, map-circle\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _circleAddedToManager\n                            \n                            \n                                    Private\n                                _eventSubscriptions\n                            \n                            \n                                    Private\n                                    Static\n                                _mapOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerEventListeners\n                            \n                            \n                                    Private\n                                _updateCircleOptionsChanges\n                            \n                            \n                                getBounds\n                            \n                            \n                                getCenter\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                circleDraggable\n                            \n                            \n                                clickable\n                            \n                            \n                                editable\n                            \n                            \n                                fillColor\n                            \n                            \n                                fillOpacity\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                radius\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokePosition\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                centerChange\n                            \n                            \n                                circleClick\n                            \n                            \n                                circleDblClick\n                            \n                            \n                                drag\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragStart\n                            \n                            \n                                mouseDown\n                            \n                            \n                                mouseMove\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                mouseUp\n                            \n                            \n                                radiusChange\n                            \n                            \n                                rightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_manager: CircleManager)\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/directives/circle.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _manager\n                                                  \n                                                        \n                                                                        CircleManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        circleDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:51\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this circle over the map. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:45\n                            \n                        \n                \n                    \n                        Indicates whether this Circle handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:57\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this circle by dragging the control points shown at\nthe center and around the circumference of the circle. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:62\n                            \n                        \n                \n                    \n                        The fill color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:67\n                            \n                        \n                \n                    \n                        The fill opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:35\n                            \n                        \n                \n                    \n                        The latitude position of the circle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:40\n                            \n                        \n                \n                    \n                        The clickable position of the circle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:72\n                            \n                        \n                \n                    \n                        The radius in meters on the Earth's surface.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:77\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:82\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokePosition\n                    \n                \n                \n                    \n                        Type :     google.maps.StrokePosition\n\n                    \n                \n                \n                    \n                        Default value : google.maps.StrokePosition.CENTER\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:88\n                            \n                        \n                \n                    \n                        The stroke position. Defaults to CENTER.\nThis property is not supported on Internet Explorer 8 and earlier.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:94\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:99\n                            \n                        \n                \n                    \n                        Whether this circle is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:104\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        centerChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:109\n                            \n                        \n                \n                    \n                        This event is fired when the circle's center is changed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        circleClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:116\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        circleDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:123\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        drag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:130\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:135\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:140\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:147\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:154\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:161\n                            \n                        \n                \n                    \n                        This event is fired on circle mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:166\n                            \n                        \n                \n                    \n                        This event is fired on circle mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:173\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mouseup event is fired on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:178\n                            \n                        \n                \n                    \n                        This event is fired when the circle's radius is changed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:183\n                            \n                        \n                \n                    \n                        This event is fired when the circle is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _registerEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _registerEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/circle.ts:236\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _updateCircleOptionsChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateCircleOptionsChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/circle.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/circle.ts:294\n                \n            \n\n\n            \n                \n                    Gets the LatLngBounds of this Circle.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \ngetCenter()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/circle.ts:298\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/circle.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/circle.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/circle.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _circleAddedToManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:187\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _eventSubscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:189\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _mapOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { CircleManager } from '../managers/circle-manager';\n\n@Directive({\n  selector: 'agm-circle, map-circle',\n  providers: [CircleManager],\n})\nexport class NgMapsCircle implements OnInit, OnChanges, OnDestroy {\n  constructor(private _manager: CircleManager) {}\n\n  private static _mapOptions: string[] = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ];\n  /**\n   * The latitude position of the circle (required).\n   */\n  @Input() latitude: number;\n\n  /**\n   * The clickable position of the circle (required).\n   */\n  @Input() longitude: number;\n\n  /**\n   * Indicates whether this Circle handles mouse events. Defaults to true.\n   */\n  @Input() clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this circle over the map. Defaults to false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('circleDraggable') draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this circle by dragging the control points shown at\n   * the center and around the circumference of the circle. Defaults to false.\n   */\n  @Input() editable: boolean = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0.\n   */\n  @Input() fillOpacity: number;\n\n  /**\n   * The radius in meters on the Earth's surface.\n   */\n  @Input() radius: number = 0;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The stroke position. Defaults to CENTER.\n   * This property is not supported on Internet Explorer 8 and earlier.\n   */\n  @Input() strokePosition: google.maps.StrokePosition =\n    google.maps.StrokePosition.CENTER;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() strokeWeight: number = 0;\n\n  /**\n   * Whether this circle is visible on the map. Defaults to true.\n   */\n  @Input() visible: boolean = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * This event is fired when the circle's center is changed.\n   */\n  @Output() centerChange: EventEmitter = new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the circle.\n   */\n  @Output() circleClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the circle.\n   */\n  @Output() circleDblClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the circle.\n   */\n  @Output() drag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the circle.\n   */\n  @Output() dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the circle.\n   */\n  @Output() dragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the circle.\n   */\n  @Output() mouseDown: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the circle.\n   */\n  @Output() mouseMove: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on circle mouseout.\n   */\n  @Output() mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on circle mouseover.\n   */\n  @Output() mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mouseup event is fired on the circle.\n   */\n  @Output() mouseUp: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the circle's radius is changed.\n   */\n  @Output() radiusChange: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the circle is right-clicked on.\n   */\n  @Output() rightClick: EventEmitter = new EventEmitter();\n\n  private _circleAddedToManager: boolean = false;\n\n  private _eventSubscriptions: Subscription[] = [];\n\n  /** @internal */\n  ngOnInit() {\n    this._manager.addCircle(this);\n    this._circleAddedToManager = true;\n    this._registerEventListeners();\n  }\n\n  /** @internal */\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (!this._circleAddedToManager) {\n      return;\n    }\n    if (changes.latitude || changes.longitude) {\n      this._manager.setCenter(this);\n    }\n    if (changes.editable) {\n      this._manager.setEditable(this);\n    }\n    if (changes.draggable) {\n      this._manager.setDraggable(this);\n    }\n    if (changes.visible) {\n      this._manager.setVisible(this);\n    }\n    if (changes.radius) {\n      this._manager.setRadius(this);\n    }\n    this._updateCircleOptionsChanges(changes);\n  }\n\n  private _updateCircleOptionsChanges(changes: {\n    [propName: string]: SimpleChange;\n  }) {\n    const options: { [propName: string]: any } = {};\n    const optionKeys = Object.keys(changes).filter(\n      (k) => NgMapsCircle._mapOptions.indexOf(k) !== -1,\n    );\n    optionKeys.forEach((k) => {\n      options[k] = changes[k].currentValue;\n    });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  private _registerEventListeners() {\n    const events: Map> = new Map\n    >();\n    events.set('center_changed', this.centerChange);\n    events.set('click', this.circleClick);\n    events.set('dblclick', this.circleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragstart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('radius_changed', this.radiusChange);\n    events.set('rightclick', this.rightClick);\n\n    events.forEach((eventEmitter, eventName) => {\n      this._eventSubscriptions.push(\n        this._manager\n          .createEventObservable(eventName, this)\n          .subscribe((value) => {\n            switch (eventName) {\n              case 'radius_changed':\n                this._manager\n                  .getRadius(this)\n                  .then((radius) => eventEmitter.emit(radius));\n                break;\n              case 'center_changed':\n                this._manager.getCenter(this).then((center) =>\n                  eventEmitter.emit({\n                    lat: center.lat(),\n                    lng: center.lng(),\n                  } as google.maps.LatLngLiteral),\n                );\n                break;\n              default:\n                eventEmitter.emit(value);\n            }\n          }),\n      );\n    });\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._eventSubscriptions.forEach((s: Subscription) => {\n      s.unsubscribe();\n    });\n    this._eventSubscriptions = null;\n    this._manager.removeCircle(this);\n  }\n\n  /**\n   * Gets the LatLngBounds of this Circle.\n   */\n  getBounds(): Promise {\n    return this._manager.getBounds(this);\n  }\n\n  getCenter(): Promise {\n    return this._manager.getCenter(this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsPolygon.html":{"url":"directives/NgMapsPolygon.html","title":"directive - NgMapsPolygon","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsPolygon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/shapes/src/lib/directives/polygon.ts\n        \n\n            \n                Description\n            \n            \n                NgMapsPolygon renders a polygon on a AgmMap\nExample\n```typescript\n\nimport { Component } from '@angular/core';\n\n@Component({\nselector: 'my-map-cmp',\nstyles: [agm-map {\n  height: 300px;\n}],\ntemplate: `\n\n    \n\n`\n})\nexport class MyMapCmp {\nlat: number = 0;\nlng: number = 0;\nzoom: number = 10;\npaths: Array = [\n{ lat: 0,  lng: 10 },\n{ lat: 0,  lng: 20 },\n{ lat: 10, lng: 20 },\n{ lat: 10, lng: 10 },\n{ lat: 0,  lng: 10 }\n]\n// Nesting paths will create a hole where they overlap;\nnestedPaths: Array> = [[\n{ lat: 0,  lng: 10 },\n{ lat: 0,  lng: 20 },\n{ lat: 10, lng: 20 },\n{ lat: 10, lng: 10 },\n{ lat: 0,  lng: 10 }\n], [\n{ lat: 0, lng: 15 },\n{ lat: 0, lng: 20 },\n{ lat: 5, lng: 20 },\n{ lat: 5, lng: 15 },\n{ lat: 0, lng: 15 }\n]]\n}\n```\n\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                PolygonManager\n                            \n                        \n                    \n\n                    \n                        Selector\n                        agm-polygon, map-polygon\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _polygonAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _polygonOptionsAttributes\n                            \n                            \n                                    Private\n                                _subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addEventListeners\n                            \n                            \n                                    Private\n                                _init\n                            \n                            \n                                    Private\n                                _updatePolygonOptions\n                            \n                            \n                                id\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                editable\n                            \n                            \n                                fillColor\n                            \n                            \n                                fillOpacity\n                            \n                            \n                                geodesic\n                            \n                            \n                                paths\n                            \n                            \n                                polyDraggable\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                polyClick\n                            \n                            \n                                polyDblClick\n                            \n                            \n                                polyDrag\n                            \n                            \n                                polyDragEnd\n                            \n                            \n                                polyDragStart\n                            \n                            \n                                polyMouseDown\n                            \n                            \n                                polyMouseMove\n                            \n                            \n                                polyMouseOut\n                            \n                            \n                                polyMouseOver\n                            \n                            \n                                polyMouseUp\n                            \n                            \n                                polyRightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_polygonManager: PolygonManager)\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/directives/polygon.ts:246\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _polygonManager\n                                                  \n                                                        \n                                                                        PolygonManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:71\n                            \n                        \n                \n                    \n                        Indicates whether this Polygon handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:84\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this shape by dragging the control\npoints shown at the vertices and on each segment. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:90\n                            \n                        \n                \n                    \n                        The fill color. All CSS3 colors are supported except for extended\nnamed colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:95\n                            \n                        \n                \n                    \n                        The fill opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        geodesic\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:104\n                            \n                        \n                \n                    \n                        When true, edges of the polygon are interpreted as geodesic and will\nfollow the curvature of the Earth. When false, edges of the polygon are\nrendered as straight lines in screen space. Note that the shape of a\ngeodesic polygon may appear to change when dragged, as the dimensions\nare maintained relative to the surface of the earth. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        paths\n                    \n                \n                \n                    \n                        Type :     Array | Array | Array> | Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:117\n                            \n                        \n                \n                    \n                        The ordered sequence of coordinates that designates a closed loop.\nUnlike polylines, a polygon may consist of one or more paths.\n  As a result, the paths property may specify one or more arrays of\nLatLng coordinates. Paths are closed automatically; do not repeat the\nfirst vertex of the path as the last vertex. Simple polygons may be\ndefined using a single array of LatLngs. More complex polygons may\nspecify an array of arrays. Any simple arrays are converted into Arrays.\nInserting or removing LatLngs from the Array will automatically update\nthe polygon on the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:78\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this shape over the map. The geodesic\nproperty defines the mode of dragging. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:127\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended\nnamed colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:132\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:137\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:142\n                            \n                        \n                \n                    \n                        Whether this polygon is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:147\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        polyClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:152\n                            \n                        \n                \n                    \n                        This event is fired when the DOM click event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:159\n                            \n                        \n                \n                    \n                        This event is fired when the DOM dblclick event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDrag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:166\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:171\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:178\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:185\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:192\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:199\n                            \n                        \n                \n                    \n                        This event is fired on Polygon mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:206\n                            \n                        \n                \n                    \n                        This event is fired on Polygon mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:213\n                            \n                        \n                \n                    \n                        This event is fired whe the DOM mouseup event is fired on the Polygon\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyRightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:220\n                            \n                        \n                \n                    \n                        This even is fired when the Polygon is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _addEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polygon.ts:275\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _init()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polygon.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _updatePolygonOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updatePolygonOptions(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polygon.ts:331\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     google.maps.PolygonOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            id\n                        \n                        \n                    \n                \n            \n            \n                \nid()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polygon.ts:343\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polygon.ts:251\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polygon.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polygon.ts:348\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:244\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _polygonAddedToManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:245\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _polygonOptionsAttributes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'clickable',\n    'draggable',\n    'editable',\n    'fillColor',\n    'fillOpacity',\n    'geodesic',\n    'icon',\n    'map',\n    'paths',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'draggable',\n    'editable',\n    'visible',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:224\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:246\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  AfterContentInit,\n  Directive,\n  EventEmitter,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { PolygonManager } from '../managers/polygon-manager';\n\n/**\n * NgMapsPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    \n *      \n *      \n *    \n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: Array = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: Array> = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\n@Directive({\n  selector: 'agm-polygon, map-polygon',\n  providers: [PolygonManager],\n})\nexport class NgMapsPolygon implements OnDestroy, OnChanges, AfterContentInit {\n  /**\n   * Indicates whether this Polygon handles mouse events. Defaults to true.\n   */\n  @Input() clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this shape over the map. The geodesic\n   * property defines the mode of dragging. Defaults to false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('polyDraggable') draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this shape by dragging the control\n   * points shown at the vertices and on each segment. Defaults to false.\n   */\n  @Input() editable: boolean = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended\n   * named colors.\n   */\n  @Input() fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0\n   */\n  @Input() fillOpacity: number;\n\n  /**\n   * When true, edges of the polygon are interpreted as geodesic and will\n   * follow the curvature of the Earth. When false, edges of the polygon are\n   * rendered as straight lines in screen space. Note that the shape of a\n   * geodesic polygon may appear to change when dragged, as the dimensions\n   * are maintained relative to the surface of the earth. Defaults to false.\n   */\n  @Input() geodesic: boolean = false;\n\n  /**\n   * The ordered sequence of coordinates that designates a closed loop.\n   * Unlike polylines, a polygon may consist of one or more paths.\n   *  As a result, the paths property may specify one or more arrays of\n   * LatLng coordinates. Paths are closed automatically; do not repeat the\n   * first vertex of the path as the last vertex. Simple polygons may be\n   * defined using a single array of LatLngs. More complex polygons may\n   * specify an array of arrays. Any simple arrays are converted into Arrays.\n   * Inserting or removing LatLngs from the Array will automatically update\n   * the polygon on the map.\n   */\n  @Input() paths:\n    | Array\n    | Array\n    | Array>\n    | Array> = [];\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended\n   * named colors.\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() strokeWeight: number;\n\n  /**\n   * Whether this polygon is visible on the map. Defaults to true.\n   */\n  @Input() visible: boolean;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * This event is fired when the DOM click event is fired on the Polygon.\n   */\n  @Output() polyClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM dblclick event is fired on the Polygon.\n   */\n  @Output() polyDblClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the polygon.\n   */\n  @Output() polyDrag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the polygon.\n   */\n  @Output() polyDragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the polygon.\n   */\n  @Output() polyDragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the Polygon.\n   */\n  @Output() polyMouseDown: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the Polygon.\n   */\n  @Output() polyMouseMove: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on Polygon mouseout.\n   */\n  @Output() polyMouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on Polygon mouseover.\n   */\n  @Output() polyMouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired whe the DOM mouseup event is fired on the Polygon\n   */\n  @Output() polyMouseUp: EventEmitter = new EventEmitter();\n\n  /**\n   * This even is fired when the Polygon is right-clicked on.\n   */\n  @Output() polyRightClick: EventEmitter = new EventEmitter();\n\n  private static _polygonOptionsAttributes: Array = [\n    'clickable',\n    'draggable',\n    'editable',\n    'fillColor',\n    'fillOpacity',\n    'geodesic',\n    'icon',\n    'map',\n    'paths',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'draggable',\n    'editable',\n    'visible',\n  ];\n\n  private _id: string;\n  private _polygonAddedToManager: boolean = false;\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private _polygonManager: PolygonManager) {}\n\n  /** @internal */\n  ngAfterContentInit() {\n    if (!this._polygonAddedToManager) {\n      this._init();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): any {\n    if (!this._polygonAddedToManager) {\n      this._init();\n      return;\n    }\n\n    this._polygonManager.setPolygonOptions(\n      this,\n      this._updatePolygonOptions(changes),\n    );\n  }\n\n  private _init() {\n    this._polygonManager.addPolygon(this);\n    this._polygonAddedToManager = true;\n    this._addEventListeners();\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      {\n        name: 'click',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyClick.emit(ev),\n      },\n      {\n        name: 'dblclick',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyDblClick.emit(ev),\n      },\n      { name: 'drag', handler: (ev: MouseEvent) => this.polyDrag.emit(ev) },\n      {\n        name: 'dragend',\n        handler: (ev: MouseEvent) => this.polyDragEnd.emit(ev),\n      },\n      {\n        name: 'dragstart',\n        handler: (ev: MouseEvent) => this.polyDragStart.emit(ev),\n      },\n      {\n        name: 'mousedown',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyMouseDown.emit(ev),\n      },\n      {\n        name: 'mousemove',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyMouseMove.emit(ev),\n      },\n      {\n        name: 'mouseout',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyMouseOut.emit(ev),\n      },\n      {\n        name: 'mouseover',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyMouseOver.emit(ev),\n      },\n      {\n        name: 'mouseup',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyMouseUp.emit(ev),\n      },\n      {\n        name: 'rightclick',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyRightClick.emit(ev),\n      },\n    ];\n    handlers.forEach((obj) => {\n      const os = this._polygonManager\n        .createEventObservable(obj.name, this)\n        .subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n  }\n\n  private _updatePolygonOptions(\n    changes: SimpleChanges,\n  ): google.maps.PolygonOptions {\n    return Object.keys(changes)\n      .filter((k) => NgMapsPolygon._polygonOptionsAttributes.indexOf(k) !== -1)\n      .reduce((obj: any, k: string) => {\n        obj[k] = changes[k].currentValue;\n        return obj;\n      }, {});\n  }\n\n  /** @internal */\n  id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._polygonManager.deletePolygon(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgMapsPolyline.html":{"url":"components/NgMapsPolyline.html","title":"component - NgMapsPolyline","body":"\n                   \n\n\n\n\n\n  Components\n  NgMapsPolyline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/shapes/src/lib/directives/polyline.ts\n\n\n    \n        Description\n    \n    \n        NgMapsPolyline renders a polyline on a AgmMap\nExample\n```typescript\n\nimport { Component } from '@angular/core';\n\n@Component({\nselector: 'my-map-cmp',\nstyles: [.agm-map-container {\n  height: 300px;\n}],\ntemplate: `\n  \n      \n      \n      \n      \n  \n\n`\n})\n```\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PolylineManager\n                \n            \n\n\n            \n                selector\n                agm-polyline, map-polyline\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _polylineAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _polylineOptionsAttributes\n                            \n                            \n                                    Private\n                                _subscriptions\n                            \n                            \n                                points\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addEventListeners\n                            \n                            \n                                _getPoints\n                            \n                            \n                                    Private\n                                _init\n                            \n                            \n                                id\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                editable\n                            \n                            \n                                geodesic\n                            \n                            \n                                icons\n                            \n                            \n                                polylineDraggable\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                lineClick\n                            \n                            \n                                lineDblClick\n                            \n                            \n                                lineDrag\n                            \n                            \n                                lineDragEnd\n                            \n                            \n                                lineDragStart\n                            \n                            \n                                lineMouseDown\n                            \n                            \n                                lineMouseMove\n                            \n                            \n                                lineMouseOut\n                            \n                            \n                                lineMouseOver\n                            \n                            \n                                lineMouseUp\n                            \n                            \n                                lineRightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_polylineManager: PolylineManager)\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/directives/polyline.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _polylineManager\n                                                  \n                                                        \n                                                                        PolylineManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:70\n                            \n                        \n                \n                    \n                        Indicates whether this Polyline handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:83\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this shape by dragging the control points shown at the\nvertices and on each segment. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        geodesic\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:91\n                            \n                        \n                \n                    \n                        When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\nthe Earth. When false, edges of the polygon are rendered as straight lines in screen space.\nNote that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\nare maintained relative to the surface of the earth. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        icons\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:111\n                            \n                        \n                \n                    \n                        The icons to be rendered along the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polylineDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:77\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this shape over the map. The geodesic property defines the\nmode of dragging. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:96\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:101\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:106\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:116\n                            \n                        \n                \n                    \n                        Whether this polyline is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:121\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        lineClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:126\n                            \n                        \n                \n                    \n                        This event is fired when the DOM click event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:133\n                            \n                        \n                \n                    \n                        This event is fired when the DOM dblclick event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDrag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:140\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:145\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:152\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:159\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:166\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:173\n                            \n                        \n                \n                    \n                        This event is fired on Polyline mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:180\n                            \n                        \n                \n                    \n                        This event is fired on Polyline mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:187\n                            \n                        \n                \n                    \n                        This event is fired whe the DOM mouseup event is fired on the Polyline\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineRightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:194\n                            \n                        \n                \n                    \n                        This even is fired when the Polyline is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _addEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polyline.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            _getPoints\n                        \n                        \n                    \n                \n            \n            \n                \n_getPoints()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polyline.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _init()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polyline.ts:241\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            id\n                        \n                        \n                    \n                \n            \n            \n                \nid()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polyline.ts:312\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polyline.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polyline.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polyline.ts:317\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:203\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _polylineAddedToManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:204\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _polylineOptionsAttributes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'draggable',\n    'editable',\n    'visible',\n    'geodesic',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'zIndex',\n    'icons',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:205\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            points\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(NgMapsPolylinePoint)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:201\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterContentInit,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  OnChanges,\n  OnDestroy,\n  QueryList,\n  SimpleChanges,\n  Input,\n  Output,\n  Component,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { PolylineManager } from '../managers/polyline-manager';\nimport { NgMapsPolylinePoint } from './polyline-point';\n\nlet polylineId = 0;\n/**\n * NgMapsPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    \n *      \n *          \n *          \n *          \n *          \n *      \n *    \n *  `\n * })\n * ```\n */\n@Component({\n  selector: 'agm-polyline, map-polyline',\n  template: '',\n  providers: [PolylineManager],\n})\nexport class NgMapsPolyline implements OnDestroy, OnChanges, AfterContentInit {\n  constructor(private _polylineManager: PolylineManager) {\n    this._id = (polylineId++).toString();\n  }\n\n  private static _polylineOptionsAttributes: Array = [\n    'draggable',\n    'editable',\n    'visible',\n    'geodesic',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'zIndex',\n    'icons',\n  ];\n  /**\n   * Indicates whether this Polyline handles mouse events. Defaults to true.\n   */\n  @Input() clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this shape over the map. The geodesic property defines the\n   * mode of dragging. Defaults to false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('polylineDraggable') draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this shape by dragging the control points shown at the\n   * vertices and on each segment. Defaults to false.\n   */\n  @Input() editable: boolean = false;\n\n  /**\n   * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n   * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n   * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n   * are maintained relative to the surface of the earth. Defaults to false.\n   */\n  @Input() geodesic: boolean = false;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0.\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() strokeWeight: number;\n\n  /**\n   * The icons to be rendered along the polyline.\n   */\n  @Input() icons: Array;\n\n  /**\n   * Whether this polyline is visible on the map. Defaults to true.\n   */\n  @Input() visible: boolean = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * This event is fired when the DOM click event is fired on the Polyline.\n   */\n  @Output() lineClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM dblclick event is fired on the Polyline.\n   */\n  @Output() lineDblClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the polyline.\n   */\n  @Output() lineDrag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the polyline.\n   */\n  @Output() lineDragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the polyline.\n   */\n  @Output() lineDragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the Polyline.\n   */\n  @Output() lineMouseDown: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the Polyline.\n   */\n  @Output() lineMouseMove: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on Polyline mouseout.\n   */\n  @Output() lineMouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on Polyline mouseover.\n   */\n  @Output() lineMouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired whe the DOM mouseup event is fired on the Polyline\n   */\n  @Output() lineMouseUp: EventEmitter = new EventEmitter();\n\n  /**\n   * This even is fired when the Polyline is right-clicked on.\n   */\n  @Output() lineRightClick: EventEmitter = new EventEmitter();\n\n  /**\n   * @internal\n   */\n  @ContentChildren(NgMapsPolylinePoint) points: QueryList;\n\n  private _id: string;\n  private _polylineAddedToManager: boolean = false;\n  private _subscriptions: Subscription[] = [];\n\n  /** @internal */\n  ngAfterContentInit() {\n    if (this.points.length) {\n      this.points.forEach((point: NgMapsPolylinePoint) => {\n        const subscription = point.positionChanged.subscribe(() => {\n          this._polylineManager.updatePolylinePoints(this);\n        });\n        this._subscriptions.push(subscription);\n      });\n    }\n    if (!this._polylineAddedToManager) {\n      this._init();\n    }\n    const s = this.points.changes.subscribe(() =>\n      this._polylineManager.updatePolylinePoints(this),\n    );\n    this._subscriptions.push(s);\n    this._polylineManager.updatePolylinePoints(this);\n  }\n\n  ngOnChanges(changes: SimpleChanges): any {\n    if (!this._polylineAddedToManager) {\n      this._init();\n      return;\n    }\n\n    const options: { [propName: string]: any } = {};\n    const optionKeys = Object.keys(changes).filter(\n      (k) => NgMapsPolyline._polylineOptionsAttributes.indexOf(k) !== -1,\n    );\n    optionKeys.forEach((k) => (options[k] = changes[k].currentValue));\n    this._polylineManager.setPolylineOptions(this, options);\n  }\n\n  private _init() {\n    this._polylineManager.addPolyline(this);\n    this._polylineAddedToManager = true;\n    this._addEventListeners();\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      {\n        name: 'click',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineClick.emit(ev),\n      },\n      {\n        name: 'dblclick',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineDblClick.emit(ev),\n      },\n      { name: 'drag', handler: (ev: MouseEvent) => this.lineDrag.emit(ev) },\n      {\n        name: 'dragend',\n        handler: (ev: MouseEvent) => this.lineDragEnd.emit(ev),\n      },\n      {\n        name: 'dragstart',\n        handler: (ev: MouseEvent) => this.lineDragStart.emit(ev),\n      },\n      {\n        name: 'mousedown',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineMouseDown.emit(ev),\n      },\n      {\n        name: 'mousemove',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineMouseMove.emit(ev),\n      },\n      {\n        name: 'mouseout',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineMouseOut.emit(ev),\n      },\n      {\n        name: 'mouseover',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineMouseOver.emit(ev),\n      },\n      {\n        name: 'mouseup',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineMouseUp.emit(ev),\n      },\n      {\n        name: 'rightclick',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineRightClick.emit(ev),\n      },\n    ];\n    handlers.forEach((obj) => {\n      const os = this._polylineManager\n        .createEventObservable(obj.name, this)\n        .subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n  }\n\n  /** @internal */\n  _getPoints(): Array {\n    if (this.points) {\n      return this.points.toArray();\n    }\n    return [];\n  }\n\n  /** @internal */\n  id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._polylineManager.deletePolyline(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgMapsPolyline', 'selector': 'agm-polyline, map-polyline'}];\n    var DIRECTIVES = [{'name': 'NgMapsCircle', 'selector': 'agm-circle, map-circle'},{'name': 'NgMapsPolygon', 'selector': 'agm-polygon, map-polygon'},{'name': 'NgMapsPolylinePoint', 'selector': 'agm-polyline-point, map-polyline-point'},{'name': 'NgMapsRectangle', 'selector': 'agm-rectangle, map-rectangle'}];\n    var ACTUAL_COMPONENT = {'name': 'NgMapsPolyline'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsPolylinePoint.html":{"url":"directives/NgMapsPolylinePoint.html","title":"directive - NgMapsPolylinePoint","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsPolylinePoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/shapes/src/lib/directives/polyline-point.ts\n        \n\n            \n                Description\n            \n            \n                NgMapsPolylinePoint represents one element of a polyline within a  SembGoogleMapPolyline\n\n            \n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        agm-polyline-point, map-polyline-point\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                positionChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/directives/polyline-point.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline-point.ts:21\n                            \n                        \n                \n                    \n                        The latitude position of the point.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline-point.ts:26\n                            \n                        \n                \n                    \n                        The longitude position of the point;\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        positionChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline-point.ts:31\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the position of the point changed.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polyline-point.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\n\n/**\n * NgMapsPolylinePoint represents one element of a polyline within a  {@link\n * SembGoogleMapPolyline}\n */\n@Directive({\n  selector: 'agm-polyline-point, map-polyline-point',\n})\nexport class NgMapsPolylinePoint implements OnChanges {\n  /**\n   * The latitude position of the point.\n   */\n  @Input() public latitude: number;\n\n  /**\n   * The longitude position of the point;\n   */\n  @Input() public longitude: number;\n\n  /**\n   * This event emitter gets emitted when the position of the point changed.\n   */\n  @Output() positionChanged: EventEmitter = new EventEmitter();\n\n  constructor() {}\n\n  ngOnChanges(changes: SimpleChanges): any {\n    if (changes.latitude || changes.longitude) {\n      const position: google.maps.LatLngLiteral = {\n        lat: changes.latitude ? changes.latitude.currentValue : this.latitude,\n        lng: changes.longitude\n          ? changes.longitude.currentValue\n          : this.longitude,\n      } as google.maps.LatLngLiteral;\n      this.positionChanged.emit(position);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsRectangle.html":{"url":"directives/NgMapsRectangle.html","title":"directive - NgMapsRectangle","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsRectangle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/shapes/src/lib/directives/rectangle.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnChanges\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                RectangleManager\n                            \n                        \n                    \n\n                    \n                        Selector\n                        agm-rectangle, map-rectangle\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _eventSubscriptions\n                            \n                            \n                                    Private\n                                    Static\n                                _mapOptions\n                            \n                            \n                                    Private\n                                _rectangleAddedToManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerEventListeners\n                            \n                            \n                                    Private\n                                _updateRectangleOptionsChanges\n                            \n                            \n                                getBounds\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                east\n                            \n                            \n                                editable\n                            \n                            \n                                fillColor\n                            \n                            \n                                fillOpacity\n                            \n                            \n                                north\n                            \n                            \n                                rectangleDraggable\n                            \n                            \n                                south\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokePosition\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                west\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                boundsChange\n                            \n                            \n                                drag\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragStart\n                            \n                            \n                                mouseDown\n                            \n                            \n                                mouseMove\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                mouseUp\n                            \n                            \n                                rectangleClick\n                            \n                            \n                                rectangleDblClick\n                            \n                            \n                                rightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_manager: RectangleManager)\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/directives/rectangle.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _manager\n                                                  \n                                                        \n                                                                        RectangleManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:55\n                            \n                        \n                \n                    \n                        Indicates whether this Rectangle handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        east\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:40\n                            \n                        \n                \n                    \n                        The east position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:67\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this rectangle by dragging the control points shown at\nthe center and around the circumference of the rectangle. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:72\n                            \n                        \n                \n                    \n                        The fill color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:77\n                            \n                        \n                \n                    \n                        The fill opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        north\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:35\n                            \n                        \n                \n                    \n                        The north position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:61\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this rectangle over the map. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        south\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:45\n                            \n                        \n                \n                    \n                        The south position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:82\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:87\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokePosition\n                    \n                \n                \n                    \n                        Type :     \"CENTER\" | \"INSIDE\" | \"OUTSIDE\"\n\n                    \n                \n                \n                    \n                        Default value : 'CENTER'\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:93\n                            \n                        \n                \n                    \n                        The stroke position. Defaults to CENTER.\nThis property is not supported on Internet Explorer 8 and earlier.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:98\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:103\n                            \n                        \n                \n                    \n                        Whether this rectangle is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        west\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:50\n                            \n                        \n                \n                    \n                        The west position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:108\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        boundsChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:114\n                            \n                        \n                \n                    \n                        This event is fired when the rectangle's is changed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        drag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:133\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:138\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:144\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:150\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:156\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:161\n                            \n                        \n                \n                    \n                        This event is fired on rectangle mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:167\n                            \n                        \n                \n                    \n                        This event is fired on rectangle mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:172\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mouseup event is fired on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:122\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:128\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:178\n                            \n                        \n                \n                    \n                        This event is fired when the rectangle is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _registerEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _registerEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/rectangle.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _updateRectangleOptionsChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateRectangleOptionsChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/rectangle.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/rectangle.ts:280\n                \n            \n\n\n            \n                \n                    Gets the LatLngBounds of this Rectangle.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/rectangle.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/rectangle.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/rectangle.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _eventSubscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:182\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _mapOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _rectangleAddedToManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:180\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChange,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { RectangleManager } from '../managers/rectangle-manager';\n\n@Directive({\n  selector: 'agm-rectangle, map-rectangle',\n  providers: [RectangleManager],\n})\nexport class NgMapsRectangle implements OnInit, OnChanges, OnDestroy {\n  constructor(private _manager: RectangleManager) {}\n\n  private static _mapOptions: string[] = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ];\n  /**\n   * The north position of the rectangle (required).\n   */\n  @Input() north: number;\n\n  /**\n   * The east position of the rectangle (required).\n   */\n  @Input() east: number;\n\n  /**\n   * The south position of the rectangle (required).\n   */\n  @Input() south: number;\n\n  /**\n   * The west position of the rectangle (required).\n   */\n  @Input() west: number;\n\n  /**\n   * Indicates whether this Rectangle handles mouse events. Defaults to true.\n   */\n  @Input() clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this rectangle over the map. Defaults to false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('rectangleDraggable') draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this rectangle by dragging the control points shown at\n   * the center and around the circumference of the rectangle. Defaults to false.\n   */\n  @Input() editable: boolean = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0.\n   */\n  @Input() fillOpacity: number;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The stroke position. Defaults to CENTER.\n   * This property is not supported on Internet Explorer 8 and earlier.\n   */\n  @Input() strokePosition: 'CENTER' | 'INSIDE' | 'OUTSIDE' = 'CENTER';\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() strokeWeight: number = 0;\n\n  /**\n   * Whether this rectangle is visible on the map. Defaults to true.\n   */\n  @Input() visible: boolean = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * This event is fired when the rectangle's is changed.\n   */\n  @Output()\n  boundsChange: EventEmitter = new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the rectangle.\n   */\n  @Output()\n  rectangleClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the rectangle.\n   */\n  @Output()\n  rectangleDblClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the rectangle.\n   */\n  @Output() drag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the rectangle.\n   */\n  @Output() dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the rectangle.\n   */\n  @Output()\n  dragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the rectangle.\n   */\n  @Output()\n  mouseDown: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the rectangle.\n   */\n  @Output()\n  mouseMove: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on rectangle mouseout.\n   */\n  @Output() mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on rectangle mouseover.\n   */\n  @Output()\n  mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mouseup event is fired on the rectangle.\n   */\n  @Output() mouseUp: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the rectangle is right-clicked on.\n   */\n  @Output()\n  rightClick: EventEmitter = new EventEmitter();\n\n  private _rectangleAddedToManager: boolean = false;\n\n  private _eventSubscriptions: Subscription[] = [];\n\n  /** @internal */\n  ngOnInit() {\n    this._manager.addRectangle(this);\n    this._rectangleAddedToManager = true;\n    this._registerEventListeners();\n  }\n\n  /** @internal */\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (!this._rectangleAddedToManager) {\n      return;\n    }\n    if (changes.north || changes.east || changes.south || changes.west) {\n      this._manager.setBounds(this);\n    }\n    if (changes.editable) {\n      this._manager.setEditable(this);\n    }\n    if (changes.draggable) {\n      this._manager.setDraggable(this);\n    }\n    if (changes.visible) {\n      this._manager.setVisible(this);\n    }\n    this._updateRectangleOptionsChanges(changes);\n  }\n\n  private _updateRectangleOptionsChanges(changes: {\n    [propName: string]: SimpleChange;\n  }) {\n    const options: { [propName: string]: any } = {};\n    const optionKeys = Object.keys(changes).filter(\n      (k) => NgMapsRectangle._mapOptions.indexOf(k) !== -1,\n    );\n    optionKeys.forEach((k) => {\n      options[k] = changes[k].currentValue;\n    });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  private _registerEventListeners() {\n    const events: Map> = new Map\n    >();\n    events.set('bounds_changed', this.boundsChange);\n    events.set('click', this.rectangleClick);\n    events.set('dblclick', this.rectangleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragStart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('rightclick', this.rightClick);\n\n    events.forEach((eventEmitter, eventName) => {\n      this._eventSubscriptions.push(\n        this._manager\n          .createEventObservable(eventName, this)\n          .subscribe((value) => {\n            switch (eventName) {\n              case 'bounds_changed':\n                this._manager.getBounds(this).then((bounds) =>\n                  eventEmitter.emit({\n                    north: bounds.getNorthEast().lat(),\n                    east: bounds.getNorthEast().lng(),\n                    south: bounds.getSouthWest().lat(),\n                    west: bounds.getSouthWest().lng(),\n                  } as google.maps.LatLngBoundsLiteral),\n                );\n                break;\n              default:\n                eventEmitter.emit(value);\n            }\n          }),\n      );\n    });\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._eventSubscriptions.forEach((s: Subscription) => {\n      s.unsubscribe();\n    });\n    this._eventSubscriptions = null;\n    this._manager.removeRectangle(this);\n  }\n\n  /**\n   * Gets the LatLngBounds of this Rectangle.\n   */\n  getBounds(): Promise {\n    return this._manager.getBounds(this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgMapsShapesModule.html":{"url":"modules/NgMapsShapesModule.html","title":"module - NgMapsShapesModule","body":"\n                   \n\n\n\n\n    Modules\n    NgMapsShapesModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/shapes/src/lib/shapes.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgMapsCircle } from './directives/circle';\nimport { NgMapsPolygon } from './directives/polygon';\nimport { NgMapsPolyline } from './directives/polyline';\nimport { NgMapsPolylinePoint } from './directives/polyline-point';\nimport { NgMapsRectangle } from './directives/rectangle';\n\n/**\n * @internal\n */\nexport function shapesDirectives() {\n  return [\n    NgMapsCircle,\n    NgMapsPolygon,\n    NgMapsPolyline,\n    NgMapsPolylinePoint,\n    NgMapsRectangle,\n  ];\n}\n\n@NgModule({\n  declarations: shapesDirectives(),\n  exports: shapesDirectives(),\n})\nexport class NgMapsShapesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PolygonManager.html":{"url":"injectables/PolygonManager.html","title":"injectable - PolygonManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PolygonManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/shapes/src/lib/managers/polygon-manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _polygons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPolygon\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                deletePolygon\n                            \n                            \n                                setPolygonOptions\n                            \n                            \n                                    Async\n                                updatePolygon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: GoogleMapsAPIWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/managers/polygon-manager.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    GoogleMapsAPIWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addPolygon\n                        \n                        \n                    \n                \n            \n            \n                \naddPolygon(path: NgMapsPolygon)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polygon-manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, path: NgMapsPolygon)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polygon-manager.ts:70\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                            NgMapsPolygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePolygon\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePolygon(paths: NgMapsPolygon)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polygon-manager.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            NgMapsPolygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPolygonOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetPolygonOptions(path: NgMapsPolygon, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polygon-manager.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updatePolygon\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolygon(polygon: NgMapsPolygon)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polygon-manager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    polygon\n                                    \n                                            NgMapsPolygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _polygons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map>\n\n                        \n                    \n                    \n                        \n                            Default value : new Map\n  >()\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/managers/polygon-manager.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { NgMapsPolygon } from '../directives/polygon';\nimport { GoogleMapsAPIWrapper, NgMapsViewComponent } from '@ng-maps/core';\n\n@Injectable({\n  providedIn: NgMapsViewComponent,\n})\nexport class PolygonManager {\n  private _polygons: Map> = new Map\n  >();\n\n  constructor(\n    private _mapsWrapper: GoogleMapsAPIWrapper,\n    private _zone: NgZone,\n  ) {}\n\n  addPolygon(path: NgMapsPolygon) {\n    const polygonPromise = this._mapsWrapper.createPolygon({\n      clickable: path.clickable,\n      draggable: path.draggable,\n      editable: path.editable,\n      fillColor: path.fillColor,\n      fillOpacity: path.fillOpacity,\n      geodesic: path.geodesic,\n      paths: path.paths,\n      strokeColor: path.strokeColor,\n      strokeOpacity: path.strokeOpacity,\n      strokeWeight: path.strokeWeight,\n      visible: path.visible,\n      zIndex: path.zIndex,\n    });\n    this._polygons.set(path, polygonPromise);\n  }\n\n  async updatePolygon(polygon: NgMapsPolygon): Promise {\n    const item = await this._polygons.get(polygon);\n    if (item != null) {\n      this._zone.run(() => {\n        item.setPaths(polygon.paths);\n      });\n    }\n  }\n\n  setPolygonOptions(\n    path: NgMapsPolygon,\n    options: { [propName: string]: any },\n  ): Promise {\n    return this._polygons.get(path).then((l: google.maps.Polygon) => {\n      l.setOptions(options);\n    });\n  }\n\n  deletePolygon(paths: NgMapsPolygon): Promise {\n    const m = this._polygons.get(paths);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polygon) => {\n      return this._zone.run(() => {\n        l.setMap(null);\n        this._polygons.delete(paths);\n      });\n    });\n  }\n\n  createEventObservable(\n    eventName: string,\n    path: NgMapsPolygon,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      this._polygons.get(path).then((l: google.maps.Polygon) => {\n        l.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PolylineManager.html":{"url":"injectables/PolylineManager.html","title":"injectable - PolylineManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PolylineManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/shapes/src/lib/managers/polyline-manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _polylines\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _convertPoints\n                            \n                            \n                                addPolyline\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                deletePolyline\n                            \n                            \n                                setPolylineOptions\n                            \n                            \n                                updatePolylinePoints\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: GoogleMapsAPIWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/managers/polyline-manager.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    GoogleMapsAPIWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _convertPoints\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _convertPoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polyline-manager.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addPolyline\n                        \n                        \n                    \n                \n            \n            \n                \naddPolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polyline-manager.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polyline-manager.ts:86\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePolyline\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polyline-manager.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPolylineOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetPolylineOptions(line: NgMapsPolyline, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polyline-manager.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePolylinePoints\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePolylinePoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polyline-manager.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _polylines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map>\n\n                        \n                    \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/managers/polyline-manager.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { GoogleMapsAPIWrapper, NgMapsViewComponent } from '@ng-maps/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { NgMapsPolyline } from '../directives/polyline';\nimport { NgMapsPolylinePoint } from '../directives/polyline-point';\n\n@Injectable({\n  providedIn: NgMapsViewComponent,\n})\nexport class PolylineManager {\n  private _polylines: Map\n  > = new Map>();\n\n  constructor(\n    private _mapsWrapper: GoogleMapsAPIWrapper,\n    private _zone: NgZone,\n  ) {}\n\n  private _convertPoints(\n    line: NgMapsPolyline,\n  ): Array {\n    return line._getPoints().map((point: NgMapsPolylinePoint) => {\n      return {\n        lat: point.latitude,\n        lng: point.longitude,\n      } as google.maps.LatLngLiteral;\n    });\n  }\n\n  addPolyline(line: NgMapsPolyline) {\n    const path = this._convertPoints(line);\n    const polylinePromise = this._mapsWrapper.createPolyline({\n      clickable: line.clickable,\n      draggable: line.draggable,\n      editable: line.editable,\n      geodesic: line.geodesic,\n      strokeColor: line.strokeColor,\n      strokeOpacity: line.strokeOpacity,\n      strokeWeight: line.strokeWeight,\n      visible: line.visible,\n      zIndex: line.zIndex,\n      icons: line.icons,\n      path,\n    });\n    this._polylines.set(line, polylinePromise);\n  }\n\n  updatePolylinePoints(line: NgMapsPolyline): Promise {\n    const path = this._convertPoints(line);\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polyline) =>\n      this._zone.run(() => {\n        l.setPath(path);\n      }),\n    );\n  }\n\n  setPolylineOptions(\n    line: NgMapsPolyline,\n    options: { [propName: string]: any },\n  ): Promise {\n    return this._polylines.get(line).then((l: google.maps.Polyline) => {\n      l.setOptions(options);\n    });\n  }\n\n  deletePolyline(line: NgMapsPolyline): Promise {\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polyline) => {\n      return this._zone.run(() => {\n        l.setMap(null);\n        this._polylines.delete(line);\n      });\n    });\n  }\n\n  createEventObservable(\n    eventName: string,\n    line: NgMapsPolyline,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      this._polylines.get(line).then((l: google.maps.Polyline) => {\n        l.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RectangleManager.html":{"url":"injectables/RectangleManager.html","title":"injectable - RectangleManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RectangleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/shapes/src/lib/managers/rectangle-manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _rectangles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRectangle\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                getBounds\n                            \n                            \n                                removeRectangle\n                            \n                            \n                                setBounds\n                            \n                            \n                                setDraggable\n                            \n                            \n                                setEditable\n                            \n                            \n                                setOptions\n                            \n                            \n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_apiWrapper: GoogleMapsAPIWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _apiWrapper\n                                                  \n                                                        \n                                                                    GoogleMapsAPIWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addRectangle\n                        \n                        \n                    \n                \n            \n            \n                \naddRectangle(rectangle: NgMapsRectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, rectangle: NgMapsRectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:99\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds(rectangle: NgMapsRectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeRectangle\n                        \n                        \n                    \n                \n            \n            \n                \nremoveRectangle(rectangle: NgMapsRectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:52\n                \n            \n\n\n            \n                \n                    Removes the given rectangle from the map.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBounds\n                        \n                        \n                    \n                \n            \n            \n                \nsetBounds(rectangle: NgMapsRectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDraggable\n                        \n                        \n                    \n                \n            \n            \n                \nsetDraggable(rectangle: NgMapsRectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEditable\n                        \n                        \n                    \n                \n            \n            \n                \nsetEditable(rectangle: NgMapsRectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(rectangle: NgMapsRectangle, options: google.maps.RectangleOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.RectangleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVisible\n                        \n                        \n                    \n                \n            \n            \n                \nsetVisible(rectangle: NgMapsRectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _rectangles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map>\n\n                        \n                    \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { GoogleMapsAPIWrapper, NgMapsViewComponent } from '@ng-maps/core';\n\nimport { Observable, Observer } from 'rxjs';\n\nimport { NgMapsRectangle } from '../directives/rectangle';\n\n@Injectable({\n  providedIn: NgMapsViewComponent,\n})\nexport class RectangleManager {\n  private _rectangles: Map\n  > = new Map>();\n\n  constructor(\n    private _apiWrapper: GoogleMapsAPIWrapper,\n    private _zone: NgZone,\n  ) {}\n\n  addRectangle(rectangle: NgMapsRectangle) {\n    console.log(this._apiWrapper);\n    this._rectangles.set(\n      rectangle,\n      this._apiWrapper.createRectangle({\n        bounds: {\n          north: rectangle.north,\n          east: rectangle.east,\n          south: rectangle.south,\n          west: rectangle.west,\n        },\n        clickable: rectangle.clickable,\n        draggable: rectangle.draggable,\n        editable: rectangle.editable,\n        fillColor: rectangle.fillColor,\n        fillOpacity: rectangle.fillOpacity,\n        strokeColor: rectangle.strokeColor,\n        strokeOpacity: rectangle.strokeOpacity,\n        // @ts-ignore\n        strokePosition: rectangle.strokePosition,\n        strokeWeight: rectangle.strokeWeight,\n        visible: rectangle.visible,\n        zIndex: rectangle.zIndex,\n      }),\n    );\n  }\n\n  /**\n   * Removes the given rectangle from the map.\n   */\n  removeRectangle(rectangle: NgMapsRectangle): Promise {\n    return this._rectangles.get(rectangle).then((r) => {\n      r.setMap(null);\n      this._rectangles.delete(rectangle);\n    });\n  }\n\n  setOptions(\n    rectangle: NgMapsRectangle,\n    options: google.maps.RectangleOptions,\n  ): Promise {\n    return this._rectangles.get(rectangle).then((r) => r.setOptions(options));\n  }\n\n  getBounds(rectangle: NgMapsRectangle): Promise {\n    return this._rectangles.get(rectangle).then((r) => r.getBounds());\n  }\n\n  setBounds(rectangle: NgMapsRectangle): Promise {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setBounds({\n        north: rectangle.north,\n        east: rectangle.east,\n        south: rectangle.south,\n        west: rectangle.west,\n      });\n    });\n  }\n\n  setEditable(rectangle: NgMapsRectangle): Promise {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setEditable(rectangle.editable);\n    });\n  }\n\n  setDraggable(rectangle: NgMapsRectangle): Promise {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setDraggable(rectangle.draggable);\n    });\n  }\n\n  setVisible(rectangle: NgMapsRectangle): Promise {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setVisible(rectangle.visible);\n    });\n  }\n\n  createEventObservable(\n    eventName: string,\n    rectangle: NgMapsRectangle,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      let listener: google.maps.MapsEventListener = null;\n      this._rectangles.get(rectangle).then((r) => {\n        listener = r.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/shapes/src/lib/directives/circle.ts\n            \n            directive\n            NgMapsCircle\n            \n                71 %\n                (28/39)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/directives/polygon.ts\n            \n            directive\n            NgMapsPolygon\n            \n                66 %\n                (24/36)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/directives/polyline-point.ts\n            \n            directive\n            NgMapsPolylinePoint\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/directives/polyline.ts\n            \n            component\n            NgMapsPolyline\n            \n                62 %\n                (22/35)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/directives/polyline.ts\n            \n            variable\n            polylineId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/directives/rectangle.ts\n            \n            directive\n            NgMapsRectangle\n            \n                73 %\n                (28/38)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/managers/circle-manager.ts\n            \n            injectable\n            CircleManager\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/managers/polygon-manager.ts\n            \n            injectable\n            PolygonManager\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/managers/polyline-manager.ts\n            \n            injectable\n            PolylineManager\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/managers/rectangle-manager.ts\n            \n            injectable\n            RectangleManager\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/shapes.module.ts\n            \n            function\n            shapesDirectives\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.1.0\n        \n            @angular/common : ~8.1.0\n        \n            @angular/compiler : ~8.1.0\n        \n            @angular/core : ~8.1.0\n        \n            @angular/forms : ~8.1.0\n        \n            @angular/platform-browser : ~8.1.0\n        \n            @angular/platform-browser-dynamic : ~8.1.0\n        \n            @angular/router : ~8.1.0\n        \n            @google/markerclusterer : ^1.0.3\n        \n            rxjs : ~6.5.2\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            shapesDirectives   (projects/.../shapes.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/shapes/src/lib/shapes.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            shapesDirectives\n                        \n                        \n                    \n                \n            \n            \n                \nshapesDirectives()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgMaps\n\n\n\nPackages\nThis project is a mono repo and hosts multiple packages:\n\n\n\nPackage\nVersion\nDocs\n\n\n\n\n@ng-maps/core\n\nCore\n\n\n@ng-maps/snazzy-info-window\n\n\n\n\n@ng-maps/marker-clusterer\n\nMarkerClusterer\n\n\n@ng-maps/places\n\n\n\n\n@ng-maps/data-layer\n\n\n\n\n@ng-maps/kml-layer\n\n\n\n\n@ng-maps/drawing-layer\n\n\n\n\n@ng-maps/shapes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 ng-maps\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgMapsShapesModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            polylineId   (projects/.../polyline.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/shapes/src/lib/directives/polyline.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            polylineId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
