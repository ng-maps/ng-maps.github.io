var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/injectables/CircleManager.html",[0,0.73,1,1.516]],["body/injectables/CircleManager.html",[0,0.871,1,1.809,2,1.089,3,0.441,4,0.521,5,0.441,6,4.055,7,1.089,8,0.368,9,1.01,10,1.361,11,3.721,12,0.871,13,3.189,14,2.111,15,1.809,16,2.547,17,3.189,18,3.568,19,3.189,20,3.189,21,2.547,22,2.547,23,2.972,24,3.189,25,2.547,26,0.871,27,1.782,28,2.303,29,2.111,30,2.303,31,1.377,32,2.231,33,1.377,34,0.058,35,1.367,36,1.01,37,1.367,38,2.547,39,3.189,40,2.621,41,2.231,42,4.135,43,1.355,44,0.707,45,0.943,46,1.286,47,2.231,48,1.809,49,1.347,50,1.572,51,3.189,52,2.231,53,2.195,54,3.189,55,1.782,56,3.189,57,2.231,58,3.189,59,2.231,60,2.547,61,2.547,62,1.219,63,3.189,64,1.782,65,3.189,66,2.231,67,3.189,68,2.231,69,2.231,70,1.486,71,3.721,72,2.231,73,3.189,74,2.231,75,3.189,76,2.231,77,0.609,78,0.609,79,0.869,80,2.231,81,0.948,82,0.441,83,1.809,84,0.943,85,1.089,86,1.809,87,0.609,88,1.782,89,1.266,90,0.521,91,0.521,92,2.231,93,2.231,94,1.487,95,1.557,96,3.189,97,1.557,98,3.189,99,0.707,100,2.231,101,0.707,102,2.231,103,0.707,104,2.231,105,0.943,106,2.231,107,0.943,108,2.231,109,1.782,110,2.231,111,0.707,112,2.231,113,0.707,114,2.231,115,1.266,116,2.231,117,0.707,118,2.231,119,0.707,120,2.231,121,0.707,122,2.231,123,1.01,124,2.547,125,2.547,126,3.189,127,2.231,128,2.231,129,2.231,130,2.231,131,2.231,132,2.231,133,3.189,134,2.231,135,3.721,136,2.547,137,1.342,138,2.231,139,4.467,140,2.231,141,2.231,142,2.231,143,3.721,144,3.721,145,3.721,146,2.231,147,2.231,148,2.231,149,2.231,150,2.231,151,1.266,152,2.972,153,1.782,154,1.347,155,2.231,156,1.266,157,1.266,158,1.266,159,1.782,160,0.023,161,0.033,162,0.023]],["title/directives/NgMapsCircle.html",[40,1.305,163,0.528]],["body/directives/NgMapsCircle.html",[1,2.123,3,0.279,4,0.33,5,0.279,8,0.233,9,0.714,10,1.478,12,0.615,15,1.822,16,2.566,26,0.386,31,1.415,33,0.768,34,0.058,35,0.768,36,1.023,37,0.768,40,1.101,42,4.155,43,1.072,44,1.112,45,0.597,46,1.332,49,0.952,53,1.357,62,1.114,70,0.825,77,1.202,78,1.177,79,1.077,81,0.657,82,0.279,87,0.386,90,0.33,91,0.33,94,2.493,95,0.689,97,0.689,99,1.244,101,0.447,103,0.891,105,1.483,107,1.483,109,3.137,111,1.112,113,1.112,115,1.992,117,1.112,119,1.244,121,1.244,123,0.891,136,1.801,137,0.768,154,0.597,160,0.015,161,0.024,162,0.015,163,0.446,164,0.597,165,1.128,166,1.101,167,2.248,168,1.374,169,1.596,170,0.689,171,1.101,172,1.101,173,2.814,174,2.248,175,1.596,176,2.248,177,2.566,178,2.254,179,1.101,180,1.822,181,2.566,182,1.101,183,2.254,184,2.804,185,2.248,186,1.101,187,2.814,188,2.814,189,2.814,190,1.992,191,1.596,192,1.596,193,1.992,194,1.992,195,1.992,196,1.992,197,1.992,198,2.814,199,1.596,200,1.128,201,1.412,202,1.801,203,2.446,204,2.446,205,1.412,206,1.822,207,2.582,208,2.616,209,1.279,210,2.446,211,1.412,212,1.279,213,1.568,214,1.279,215,1.279,216,1.596,217,1.412,218,1.279,219,2.123,220,1.279,221,1.279,222,1.279,223,1.801,224,1.801,225,1.412,226,2.14,227,1.822,228,1.822,229,2.314,230,2.123,231,1.822,232,1.822,233,1.822,234,1.948,235,1.412,236,1.822,237,1.822,238,1.822,239,1.822,240,1.412,241,2.493,242,2.566,243,1.412,244,1.483,245,1.412,246,2.254,247,2.254,248,1.502,249,1.412,250,2.314,251,1.412,252,2.254,253,1.412,254,1.279,255,1.801,256,1.801,257,1.502,258,1.801,259,1.412,260,1.279,261,1.279,262,1.412,263,1.412,264,1.279,265,1.279,266,2.54,267,1.412,268,2.16,269,2.866,270,3.212,271,2.14,272,1.412,273,2.14,274,2.493,275,2.14,276,2.566,277,1.412,278,1.412,279,1.279,280,1.279,281,1.412,282,1.279,283,1.412,284,1.279,285,1.412,286,2.123,287,1.412,288,1.412,289,1.412,290,1.412,291,1.412,292,1.412,293,1.279,294,1.279,295,1.412,296,2.254,297,1.822,298,1.412,299,1.101,300,1.412,301,1.801,302,1.412,303,1.101,304,1.412,305,1.412,306,1.412,307,1.412,308,1.822,309,1.412,310,1.412,311,2.278,312,2.252,313,2.248,314,1.412,315,0.801,316,0.801,317,0.801,318,0.801,319,0.801,320,0.801,321,1.412,322,1.374,323,1.412,324,2.254,325,1.128,326,1.128,327,1.128,328,1.128,329,1.412,330,1.128,331,1.128,332,1.128,333,1.128,334,1.128,335,1.128,336,1.412,337,1.412,338,1.412,339,1.101,340,0.941,341,0.941,342,0.801,343,1.412,344,0.689,345,0.941,346,0.941,347,0.801,348,1.128,349,1.128,350,1.412,351,1.412,352,1.128,353,1.412,354,1.128,355,1.412,356,1.128,357,1.128,358,1.128,359,1.128,360,1.128,361,1.128,362,1.128,363,1.128,364,1.128,365,1.128,366,1.128,367,1.128,368,1.128,369,1.128,370,1.128,371,1.128,372,1.412,373,1.412,374,1.128,375,1.128,376,1.128,377,1.128,378,1.801,379,1.128,380,1.128,381,1.801,382,1.412,383,1.412,384,1.412,385,1.412,386,1.801,387,1.412,388,1.412,389,1.128,390,1.412,391,1.412,392,0.941,393,1.128,394,1.128,395,0.801,396,1.128,397,1.412,398,1.128,399,1.412]],["title/directives/NgMapsPolygon.html",[163,0.528,400,1.305]],["body/directives/NgMapsPolygon.html",[3,0.245,4,0.289,5,0.245,8,0.204,9,0.642,10,1.516,12,0.553,26,0.338,31,1.393,33,0.702,34,0.058,35,1.219,36,0.989,37,0.702,43,1.015,44,0.942,46,1.273,50,0.523,62,1.18,77,1.06,78,1.06,79,0.989,81,0.695,82,0.401,87,0.338,90,0.473,91,0.473,95,2.236,97,2.236,99,1.039,101,1.039,103,1.178,105,1.386,107,1.386,111,1.039,113,1.039,117,1.039,119,1.273,121,1.178,123,0.642,137,0.812,160,0.027,161,0.021,162,0.013,163,0.401,164,0.523,166,0.989,168,1.256,169,1.459,170,0.604,171,0.989,172,1.256,175,1.459,179,0.989,180,1.687,182,0.989,186,0.989,190,1.459,191,0.702,192,0.702,193,1.459,194,1.459,195,1.459,196,1.459,197,1.459,199,0.702,203,2.451,204,2.598,206,1.687,207,2.495,208,2.345,209,1.149,210,2.345,212,1.149,213,1.452,214,1.149,215,1.149,216,1.149,218,1.149,219,2.202,220,1.149,221,1.149,222,1.149,226,1.981,227,1.687,228,1.687,229,2.202,230,1.687,231,1.687,232,1.687,233,1.687,234,1.788,236,1.687,237,1.687,238,1.687,239,1.687,244,1.788,248,1.35,250,1.998,254,1.687,260,1.149,261,1.149,264,1.149,265,1.149,266,2.472,268,2.112,269,2.855,279,1.149,280,1.149,282,1.149,284,1.149,286,2.345,293,1.149,294,1.149,299,1.256,303,0.989,308,1.459,311,2.147,312,2.11,315,0.702,316,0.702,317,0.702,318,0.702,319,0.702,320,0.702,322,1.256,342,0.702,344,0.604,347,0.702,395,0.702,400,1.452,401,0.824,402,0.988,403,0.824,404,1.618,405,3.421,406,0.988,407,2.055,408,1.998,409,2.055,410,2.572,411,2.572,412,2.055,413,2.375,414,2.375,415,2.572,416,2.375,417,2.375,418,2.402,419,3.512,420,2.026,421,2.572,422,2.572,423,2.572,424,2.572,425,2.572,426,2.572,427,2.572,428,2.572,429,2.572,430,2.572,431,2.572,432,1.237,433,2.026,434,2.026,435,1.237,436,1.237,437,2.814,438,1.618,439,1.618,440,1.618,441,1.237,442,1.237,443,1.237,444,2.375,445,1.618,446,1.618,447,1.618,448,2.375,449,1.618,450,1.618,451,1.618,452,1.618,453,1.618,454,1.618,455,1.618,456,1.618,457,1.618,458,1.618,459,1.618,460,1.618,461,3.114,462,1.237,463,2.026,464,2.026,465,2.974,466,2.026,467,2.974,468,2.026,469,2.026,470,2.026,471,2.026,472,2.375,473,3.523,474,2.974,475,3.881,476,2.026,477,2.974,478,2.026,479,2.026,480,2.974,481,1.35,482,2.026,483,2.974,484,2.974,485,2.026,486,2.026,487,2.974,488,2.026,489,2.026,490,2.026,491,2.026,492,2.026,493,1.237,494,1.618,495,1.618,496,1.237,497,1.237,498,1.237,499,1.237,500,1.237,501,1.237,502,2.055,503,1.237,504,2.055,505,1.237,506,1.237,507,1.237,508,1.237,509,1.237,510,1.237,511,1.237,512,1.237,513,1.618,514,1.237,515,1.618,516,1.237,517,1.237,518,1.237,519,2.478,520,1.237,521,2.026,522,1.237,523,1.237,524,1.237,525,1.237,526,1.237,527,1.237,528,2.026,529,1.237,530,2.055,531,0.988,532,1.237,533,0.988,534,0.988,535,0.988,536,0.988,537,0.988,538,0.988,539,4.233,540,3.523,541,1.237,542,1.237,543,1.237,544,1.237,545,1.237,546,2.572,547,1.618,548,0.988,549,1.237,550,0.824,551,0.988,552,0.988,553,1.237,554,2.572,555,1.618,556,1.237,557,1.237,558,1.237,559,0.988,560,0.988,561,3.382,562,3.382,563,3.1,564,1.237,565,1.237,566,2.055,567,1.237,568,1.237,569,1.237,570,1.237,571,1.237,572,1.237,573,1.237,574,1.237,575,1.237,576,0.988,577,0.988,578,1.237,579,0.988,580,0.988,581,0.988,582,1.237,583,1.237,584,1.237,585,1.237,586,1.237,587,1.237,588,0.988,589,1.237,590,0.988,591,0.988,592,0.988,593,0.988]],["title/directives/NgMapsPolyline.html",[163,0.528,594,1.129]],["body/directives/NgMapsPolyline.html",[3,0.279,4,0.33,5,0.279,8,0.233,9,0.714,10,1.52,12,0.616,26,0.386,31,1.403,33,0.616,34,0.058,35,1.243,36,0.999,37,0.616,43,1.072,44,1.018,46,1.245,50,0.597,62,1.114,70,0.826,77,1.114,78,1.114,79,1.029,81,0.82,82,0.446,87,0.386,90,0.527,91,0.527,99,0.892,101,0.892,103,1.112,111,1.112,113,1.112,117,1.112,119,1.245,121,1.245,123,1.186,137,0.877,160,0.015,161,0.024,162,0.015,163,0.446,164,0.597,166,1.101,168,1.374,169,1.597,170,0.69,171,1.101,172,1.374,175,1.597,179,1.101,180,1.823,182,1.101,186,1.101,190,1.597,191,0.802,192,0.802,193,1.597,194,1.597,195,1.597,196,1.597,197,1.597,199,0.802,203,2.543,204,2.675,206,1.823,207,2.648,208,2.446,209,1.279,210,2.446,212,1.279,213,1.569,214,1.279,215,1.279,216,1.279,218,1.279,219,2.314,220,1.279,221,1.992,222,1.279,227,1.279,228,1.279,229,1.823,230,1.279,231,1.279,232,1.279,233,1.279,234,1.581,236,1.279,237,1.279,238,1.279,239,1.279,244,0.597,248,1.503,250,2.124,254,1.279,260,1.279,261,1.279,264,1.279,265,1.279,266,2.509,268,2.148,269,2.901,279,1.279,280,1.279,282,1.279,284,1.279,286,2.446,293,1.279,294,1.279,299,0.69,303,1.101,308,1.823,311,2.15,312,2.189,315,0.802,316,0.802,317,0.802,318,0.802,319,0.802,320,0.802,322,1.715,339,0.69,340,0.941,341,0.941,342,0.802,344,0.69,345,0.941,346,0.941,347,0.802,395,0.802,401,0.941,403,0.941,404,1.802,405,2.494,406,1.129,407,2.248,409,2.248,412,2.248,413,2.567,414,2.567,416,2.567,417,2.567,418,2.498,437,2.99,438,1.802,439,1.802,440,1.802,444,2.567,445,1.802,446,1.802,447,1.802,448,2.567,449,2.567,450,1.802,451,1.802,452,1.802,453,1.802,454,1.802,455,1.802,456,1.802,457,1.802,458,1.802,459,1.802,460,1.802,461,2.494,494,1.802,495,1.802,502,2.248,504,2.248,513,1.802,515,1.802,519,2.141,530,2.248,531,1.129,533,1.129,534,1.129,535,1.129,536,1.129,537,1.129,548,1.129,550,0.941,551,1.129,552,1.129,555,1.802,559,1.129,560,1.129,561,3.517,562,3.517,563,3.259,566,2.248,576,1.129,577,1.129,579,1.129,580,1.129,581,1.129,588,1.802,590,1.129,591,1.129,592,1.129,593,1.129,594,1.357,595,0.941,596,4.105,597,2.124,598,2.815,599,2.815,600,3.213,601,3.138,602,2.255,603,2.815,604,2.815,605,2.815,606,2.815,607,2.815,608,2.815,609,2.815,610,2.815,611,2.815,612,2.815,613,2.815,614,1.413,615,1.413,616,2.255,617,1.413,618,1.413,619,1.413,620,1.413,621,2.255,622,1.413,623,1.413,624,1.413,625,1.413,626,1.413,627,1.413,628,1.413,629,1.413,630,1.413,631,1.413,632,1.413,633,1.413,634,1.413,635,1.413,636,1.413,637,1.413,638,1.413,639,1.413,640,1.413,641,1.413,642,1.413,643,1.413,644,1.413,645,1.413,646,1.413,647,1.413,648,1.413,649,1.413,650,2.815,651,1.413,652,2.255,653,1.413,654,1.413,655,1.413,656,1.413,657,1.413,658,1.413,659,0.953,660,0.802,661,0.941,662,1.413,663,1.413,664,1.413,665,1.413,666,1.413,667,2.815,668,1.413,669,2.815,670,1.413,671,1.413,672,1.413,673,1.413,674,1.413,675,1.413,676,1.413,677,1.413,678,1.413,679,1.413,680,1.413,681,1.413,682,1.413,683,1.413,684,1.413,685,1.413,686,1.413,687,1.413,688,1.413,689,1.413,690,1.413]],["title/directives/NgMapsPolylinePoint.html",[163,0.528,659,1.129]],["body/directives/NgMapsPolylinePoint.html",[3,0.641,4,0.758,5,0.641,8,0.535,12,1.12,26,1.229,31,1.332,33,0.886,34,0.058,35,0.886,36,0.936,37,0.886,43,0.886,62,1.12,79,0.758,81,0.758,82,0.641,90,0.758,91,0.758,95,1.584,97,1.584,123,1.028,160,0.034,161,0.043,162,0.034,163,0.812,164,1.37,166,2.004,168,2.198,170,1.584,172,2.004,179,2.004,182,2.004,184,3.899,185,3.899,186,2.004,234,1.999,241,3.374,266,2.31,268,1.734,271,2.734,273,2.734,274,2.734,275,2.734,299,1.584,303,2.004,311,2.198,312,2.004,327,3.278,328,3.278,392,2.734,403,2.161,472,3.278,519,3.153,550,2.161,594,1.734,596,3.78,659,1.999,660,2.906,691,3.983,692,2.591,693,4.104,694,4.104,695,4.104,696,4.502,697,3.244,698,3.244,699,3.244,700,3.244,701,3.244,702,4.104,703,3.244,704,3.244,705,3.244,706,3.244,707,3.244]],["title/directives/NgMapsRectangle.html",[163,0.528,708,1.305]],["body/directives/NgMapsRectangle.html",[3,0.283,4,0.334,5,0.283,8,0.236,9,0.722,10,1.483,12,0.622,15,1.837,26,0.391,31,1.414,33,0.775,34,0.058,35,0.775,36,1.024,37,0.775,43,1.028,44,1.12,45,0.605,46,1.338,49,0.963,53,0.963,62,1.119,70,0.834,77,1.182,78,1.153,79,1.067,81,0.663,82,0.283,87,0.391,90,0.334,91,0.334,94,2.731,99,1.12,101,0.454,103,0.9,105,1.493,107,1.493,111,1.12,113,1.12,115,2.005,117,1.12,119,1.251,121,1.251,123,0.9,137,0.622,154,0.605,160,0.015,161,0.024,162,0.015,163,0.451,164,0.605,166,1.113,167,2.268,168,1.386,169,1.611,170,0.699,171,1.113,172,1.113,174,2.268,175,1.611,176,2.268,177,2.586,179,1.113,180,1.837,181,2.586,182,1.113,186,1.113,190,2.005,191,1.611,192,1.611,193,2.005,194,2.005,195,2.005,196,2.005,197,2.005,199,1.611,200,1.144,202,1.821,203,2.456,204,2.456,206,1.837,207,2.591,208,2.625,209,1.293,210,2.456,212,1.293,213,1.581,214,1.293,215,1.293,216,1.611,218,1.293,219,2.136,220,1.293,221,1.293,222,1.293,223,1.821,224,1.821,226,2.157,227,1.837,228,1.837,229,2.325,230,2.136,231,1.837,232,1.837,233,1.837,234,1.998,236,1.837,237,1.837,238,1.837,239,1.837,241,2.885,242,3.274,244,1.2,250,2.325,254,1.293,255,1.821,256,1.821,257,1.519,258,1.821,260,1.293,261,1.293,264,1.293,265,1.293,266,2.529,268,2.152,269,2.851,271,1.519,273,2.157,274,2.509,275,2.157,276,2.586,279,1.293,280,1.293,282,1.293,284,1.293,286,2.136,293,1.293,294,1.293,297,1.837,299,1.113,301,1.821,303,1.113,308,1.837,311,2.309,312,2.23,313,2.268,315,0.812,316,0.812,317,0.812,318,0.812,319,0.812,320,0.812,322,1.386,325,1.144,326,1.144,330,1.144,331,1.144,332,1.144,333,1.144,334,1.144,335,1.144,339,1.113,340,0.954,341,0.954,342,0.812,344,0.699,345,0.954,346,0.954,347,0.812,348,1.144,349,1.144,352,1.144,354,1.144,356,1.144,357,1.144,358,1.144,359,1.144,360,1.144,361,1.144,362,1.144,363,1.144,364,1.144,365,1.144,366,1.144,367,1.144,368,1.144,369,1.144,370,1.144,371,1.144,374,1.144,375,1.144,376,1.144,377,1.144,378,1.144,379,1.144,380,1.144,381,1.144,386,1.144,389,1.144,393,1.144,394,1.144,395,0.812,396,1.144,398,1.144,708,1.113,709,1.144,710,2.136,711,4.186,712,2.839,713,2.279,714,3.008,715,3.008,716,2.279,717,3.008,718,3.008,719,2.839,720,2.839,721,2.839,722,1.432,723,1.432,724,1.432,725,1.432,726,1.432,727,1.432,728,1.432,729,1.432,730,1.432,731,1.432,732,1.432,733,2.279,734,2.279,735,1.432,736,1.432,737,1.432,738,1.432,739,1.432,740,1.432,741,2.279,742,1.432,743,1.432,744,1.432,745,1.432,746,1.432,747,1.432,748,1.432,749,1.432,750,1.432,751,1.432,752,1.432,753,1.432,754,2.279,755,1.432,756,1.432,757,1.432,758,1.432,759,1.432,760,1.432,761,1.432,762,1.432,763,1.432,764,1.432,765,1.432,766,2.279,767,1.432,768,1.432,769,1.432,770,1.432,771,1.432,772,1.432,773,1.432,774,1.432,775,1.432,776,1.432,777,1.432,778,1.432,779,1.432,780,1.432,781,1.432,782,1.432,783,1.432,784,1.432,785,1.432]],["title/modules/NgMapsShapesModule.html",[786,2.135,787,1.781]],["body/modules/NgMapsShapesModule.html",[3,0.761,4,0.899,5,0.761,34,0.058,40,2.225,81,1.213,82,0.761,88,3.074,90,1.064,91,0.899,137,1.051,160,0.04,161,0.048,162,0.04,322,1.879,400,2.225,594,1.925,659,1.925,660,2.183,708,2.225,787,3.036,788,2.564,789,2.564,790,4.557,791,3.074,792,3.64,793,3.074,794,3.074,795,3.235,796,3.074,797,3.074]],["title/injectables/PolygonManager.html",[0,0.73,408,1.516]],["body/injectables/PolygonManager.html",[0,1.009,2,1.348,3,0.546,4,0.645,5,0.546,7,1.348,8,0.455,9,1.171,10,1.469,12,1.009,14,2.363,18,3.327,26,1.009,28,2.523,29,2.363,30,2.523,31,1.331,33,1.331,34,0.058,35,1.303,36,1.002,37,1.303,43,1.266,44,0.875,45,1.167,46,1.409,48,2.097,49,1.561,50,1.76,53,2.016,62,1.214,70,1.525,77,0.754,78,0.754,79,0.973,81,1.039,82,0.546,83,2.097,84,1.167,85,1.348,86,2.097,87,0.754,89,1.566,90,0.645,91,0.645,99,0.875,101,0.875,103,0.875,105,1.167,107,1.167,111,0.875,113,0.875,117,0.875,119,0.875,121,0.875,123,1.32,125,2.206,137,1.266,151,1.566,154,1.561,156,1.566,157,2.363,158,1.566,160,0.029,161,0.039,162,0.029,297,2.097,339,1.348,400,2.563,405,1.84,408,2.097,418,1.566,419,2.952,481,3.18,791,2.206,798,3.956,799,4.165,800,3.696,801,3.696,802,4.165,803,3.696,804,2.206,805,2.761,806,2.952,807,3.696,808,2.761,809,2.206,810,3.696,811,2.761,812,2.761,813,2.761,814,3.696,815,2.761,816,2.761,817,3.696,818,2.761,819,2.761,820,2.761,821,2.761,822,2.761,823,2.761,824,2.761,825,2.761,826,2.761,827,2.761,828,2.761,829,2.761,830,2.761,831,2.761,832,3.696,833,2.761,834,2.761,835,3.696,836,4.165,837,2.206,838,2.952,839,2.761,840,2.206,841,2.206,842,2.206,843,2.761,844,2.206]],["title/injectables/PolylineManager.html",[0,0.73,597,1.516]],["body/injectables/PolylineManager.html",[0,0.971,2,1.275,3,0.516,4,0.61,5,0.516,7,1.275,8,0.43,9,1.127,10,1.549,12,0.971,14,2.296,26,0.971,28,2.466,29,2.296,30,2.466,31,1.335,33,1.335,34,0.058,35,1.311,36,1.001,37,1.311,43,1.281,44,0.827,45,1.103,46,1.377,48,2.018,49,1.503,50,1.71,53,1.983,55,2.085,62,1.187,70,1.482,77,0.713,78,0.713,79,0.946,81,1.063,82,0.516,83,2.018,84,1.103,85,1.275,86,2.018,87,0.713,89,1.481,90,0.61,91,0.61,95,1.275,97,1.275,99,0.827,101,0.827,103,0.827,111,0.827,113,0.827,117,0.827,119,0.827,121,0.827,123,1.441,137,1.354,151,1.481,154,1.503,156,1.481,157,2.296,158,1.481,160,0.027,161,0.037,162,0.027,297,2.018,339,1.275,392,1.739,418,1.481,461,2.371,481,2.697,594,2.226,597,2.018,601,2.085,659,1.503,660,1.481,792,2.842,804,2.085,806,2.842,837,2.085,838,3.472,840,2.842,841,2.842,842,2.085,844,2.085,845,3.96,846,4.048,847,4.048,848,3.558,849,3.558,850,4.048,851,3.558,852,2.085,853,2.61,854,2.085,855,5.014,856,3.558,857,2.61,858,2.61,859,3.558,860,2.61,861,2.61,862,3.558,863,2.61,864,2.085,865,2.61,866,2.61,867,2.61,868,3.558,869,3.558,870,2.61,871,2.61,872,2.61,873,2.61,874,2.61,875,2.61,876,2.61,877,2.61,878,2.61,879,2.61,880,2.61,881,2.61,882,3.558,883,4.347,884,2.61,885,3.558,886,2.61]],["title/injectables/RectangleManager.html",[0,0.73,710,1.516]],["body/injectables/RectangleManager.html",[0,0.927,2,1.191,3,0.483,4,0.57,5,0.483,7,1.191,8,0.402,9,1.076,10,1.407,12,0.927,14,2.216,15,1.927,21,2.713,22,2.713,23,3.121,25,2.713,26,0.927,27,1.949,28,2.396,29,2.216,30,2.396,31,1.365,33,1.365,34,0.058,35,1.351,36,0.997,37,1.351,38,2.713,43,1.334,44,0.773,45,1.031,46,1.238,48,1.927,49,1.435,50,1.651,53,2.161,60,2.713,61,2.713,62,1.255,64,1.949,70,1.43,77,0.666,78,0.666,79,0.913,81,0.987,82,0.483,83,1.927,84,1.031,85,1.191,86,1.927,87,0.666,89,1.384,90,0.57,91,0.57,99,0.773,101,0.773,103,0.773,105,1.031,107,1.031,111,0.773,113,0.773,115,1.384,117,0.773,119,0.773,121,0.773,137,1.387,151,1.384,152,3.121,153,1.949,154,1.435,156,1.384,157,1.384,158,1.384,159,1.949,160,0.026,161,0.036,162,0.026,708,2.607,710,1.927,711,4.109,714,2.713,715,2.713,717,2.713,718,2.713,793,1.949,809,1.949,852,1.949,854,1.949,864,1.949,887,4.029,888,3.907,889,3.397,890,3.397,891,3.397,892,3.397,893,2.44,894,3.397,895,2.44,896,3.397,897,2.44,898,3.397,899,3.397,900,2.44,901,3.397,902,2.44,903,3.907,904,2.44,905,3.397,906,2.44,907,2.44,908,2.44,909,2.44,910,2.44,911,3.397,912,3.397,913,3.397,914,3.397,915,2.44,916,2.44,917,2.44,918,2.44,919,2.44,920,2.44,921,2.44,922,2.44,923,2.44,924,2.44,925,2.44,926,2.44,927,2.44,928,4.811,929,2.44,930,2.44,931,2.44,932,2.44,933,2.44,934,2.44,935,2.44,936,2.44,937,2.44]],["title/coverage.html",[938,2.888]],["body/coverage.html",[0,1.36,1,2.132,5,0.743,6,3.002,7,2.432,34,0.057,36,0.743,40,1.835,79,0.878,160,0.039,161,0.047,162,0.039,163,1.007,165,3.002,244,2.104,257,2.504,400,1.835,402,3.002,408,2.132,594,1.588,595,2.994,597,2.132,659,1.588,661,2.504,691,3.002,692,3.002,708,1.835,709,3.002,710,2.132,789,2.504,794,3.002,795,2.504,798,3.002,845,3.002,887,3.002,938,3.002,939,3.002,940,3.759,941,3.759,942,3.759,943,3.759,944,4.494,945,3.759,946,3.759,947,3.759,948,3.759,949,3.759,950,4.494,951,3.759,952,3.759,953,3.759,954,3.759,955,3.759,956,3.759,957,3.759,958,3.759,959,3.759]],["title/dependencies.html",[960,1.795,961,2.136]],["body/dependencies.html",[34,0.057,82,0.789,87,1.09,160,0.042,161,0.049,162,0.042,961,2.659,962,3.991,963,5.32,964,3.991,965,3.991,966,3.991,967,4.656,968,4.656,969,3.991,970,3.991,971,3.991,972,3.991,973,3.991,974,3.991,975,3.991,976,3.991,977,3.991]],["title/miscellaneous/functions.html",[978,1.275,979,2.56]],["body/miscellaneous/functions.html",[8,0.692,34,0.05,160,0.044,161,0.05,162,0.044,789,2.798,795,3.353,978,2.382,979,3.354,980,4.199]],["title/index.html",[8,0.371,981,1.795,982,1.795]],["body/index.html",[3,0.79,34,0.049,84,2.248,85,1.952,160,0.042,161,0.049,162,0.042,401,3.105,960,3.193,983,3.997,984,4.66,985,3.997,986,3.997,987,3.997,988,3.997,989,3.997,990,3.997,991,5.174,992,3.997,993,3.997,994,3.997,995,3.997,996,3.997,997,3.997,998,4.932,999,3.997,1000,3.997,1001,3.997]],["title/license.html",[981,1.795,982,1.795,1002,1.795]],["body/license.html",[34,0.047,84,1.558,124,2.947,160,0.039,161,0.047,162,0.039,213,1.801,268,1.558,939,2.947,1002,2.947,1003,3.689,1004,4.768,1005,3.689,1006,3.689,1007,4.443,1008,3.689,1009,3.689,1010,3.689,1011,3.689,1012,3.689,1013,3.689,1014,4.443,1015,5.284,1016,3.689,1017,3.689,1018,3.689,1019,4.768,1020,3.689,1021,4.443,1022,3.689,1023,3.689,1024,4.443,1025,3.689,1026,3.689,1027,3.689,1028,3.689,1029,3.689,1030,3.689,1031,3.689,1032,4.443,1033,3.689,1034,3.689,1035,3.689,1036,3.689,1037,3.689,1038,3.689,1039,3.689,1040,4.443,1041,4.443,1042,3.689,1043,3.689,1044,3.689,1045,3.689,1046,3.689,1047,3.689,1048,3.689,1049,3.689,1050,3.689,1051,3.689,1052,3.689,1053,3.689,1054,3.689,1055,3.689,1056,3.689,1057,3.689,1058,3.689,1059,3.689,1060,3.689,1061,3.689,1062,3.689,1063,3.689,1064,3.689,1065,3.689,1066,3.689,1067,3.689,1068,2.947,1069,3.689,1070,3.689]],["title/modules.html",[788,2.409]],["body/modules.html",[34,0.05,160,0.044,161,0.05,162,0.044,787,2.811,788,2.811,1071,4.219,1072,4.219,1073,4.219]],["title/overview.html",[1074,2.888]],["body/overview.html",[2,2.017,34,0.05,160,0.043,161,0.05,162,0.043,164,1.745,171,2.017,344,2.017,538,3.794,547,3.3,786,3.794,796,3.3,797,3.3,961,2.753,1068,3.3,1074,3.3,1075,4.132,1076,4.132,1077,4.132,1078,4.132]],["title/miscellaneous/variables.html",[978,1.275,1079,2.56]],["body/miscellaneous/variables.html",[8,0.686,34,0.054,36,0.822,77,1.135,78,1.135,160,0.044,161,0.05,162,0.044,234,1.757,244,1.757,595,2.771,661,3.176,978,2.359,1079,3.322,1080,4.158]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":244,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":238,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["0.9.1",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":344,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"overview.html":{}}}],["1.0",{"_index":239,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["1.0.3",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["1/12",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":539,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["15",{"_index":546,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["20",{"_index":540,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["2019",{"_index":1005,"title":{},"body":{"license.html":{}}}],["22/35",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["24/36",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["28/38",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["28/39",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":534,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["4",{"_index":1078,"title":{},"body":{"overview.html":{}}}],["4/6",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":547,"title":{},"body":{"directives/NgMapsPolygon.html":{},"overview.html":{}}}],["6",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["6.5.2",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["62",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":257,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{},"coverage.html":{}}}],["8.1.0",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["_addeventlisteners",{"_index":413,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["_apiwrapper",{"_index":38,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["_circleaddedtomanager",{"_index":173,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["_circles",{"_index":11,"title":{},"body":{"injectables/CircleManager.html":{}}}],["_convertpoints",{"_index":847,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["_convertpoints(line",{"_index":853,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["_eventsubscriptions",{"_index":174,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["_getpoints",{"_index":600,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["_id",{"_index":409,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["_init",{"_index":414,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["_manager",{"_index":202,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["_mapoptions",{"_index":176,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["_mapswrapper",{"_index":806,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["_polygonaddedtomanager",{"_index":410,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["_polygonmanager",{"_index":434,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["_polygonoptionsattributes",{"_index":411,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["_polygons",{"_index":799,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["_polylineaddedtomanager",{"_index":598,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["_polylinemanager",{"_index":616,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["_polylineoptionsattributes",{"_index":599,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["_polylines",{"_index":846,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["_rectangleaddedtomanager",{"_index":712,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["_rectangles",{"_index":888,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["_registereventlisteners",{"_index":177,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["_subscriptions",{"_index":412,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["_updatecircleoptionschanges",{"_index":178,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["_updatecircleoptionschanges(changes",{"_index":296,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["_updatepolygonoptions",{"_index":415,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["_updatepolygonoptions(changes",{"_index":518,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["_updaterectangleoptionschanges",{"_index":713,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["_updaterectangleoptionschanges(changes",{"_index":754,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["_zone",{"_index":29,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["above",{"_index":1039,"title":{},"body":{"license.html":{}}}],["action",{"_index":1063,"title":{},"body":{"license.html":{}}}],["addcircle",{"_index":13,"title":{},"body":{"injectables/CircleManager.html":{}}}],["addcircle(circle",{"_index":39,"title":{},"body":{"injectables/CircleManager.html":{}}}],["addpolygon",{"_index":800,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["addpolygon(path",{"_index":807,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["addpolyline",{"_index":848,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["addpolyline(line",{"_index":856,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["addrectangle",{"_index":889,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["addrectangle(rectangle",{"_index":892,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["aftercontentinit",{"_index":407,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["agm",{"_index":655,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["along",{"_index":621,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["and/or",{"_index":1030,"title":{},"body":{"license.html":{}}}],["angular/animations",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":82,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["appear",{"_index":455,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["arising",{"_index":1067,"title":{},"body":{"license.html":{}}}],["around",{"_index":223,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["array",{"_index":461,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"injectables/PolylineManager.html":{}}}],["arrays",{"_index":475,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["associated",{"_index":1016,"title":{},"body":{"license.html":{}}}],["async",{"_index":18,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{}}}],["authors",{"_index":1057,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":477,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["available",{"_index":1072,"title":{},"body":{"modules.html":{}}}],["await",{"_index":125,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{}}}],["between",{"_index":237,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["boolean",{"_index":203,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["bootstrap",{"_index":1076,"title":{},"body":{"overview.html":{}}}],["bounds",{"_index":910,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["bounds.getnortheast().lat",{"_index":780,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["bounds.getnortheast().lng",{"_index":781,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["bounds.getsouthwest().lat",{"_index":782,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["bounds.getsouthwest().lng",{"_index":783,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["bounds_changed",{"_index":778,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["boundschange",{"_index":719,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["break",{"_index":386,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["browse",{"_index":1073,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["c",{"_index":124,"title":{},"body":{"injectables/CircleManager.html":{},"license.html":{}}}],["c.addlistener(eventname",{"_index":155,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.getbounds",{"_index":140,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.getcenter",{"_index":141,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.getradius",{"_index":142,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.setcenter",{"_index":146,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.setdraggable(circle.draggable",{"_index":148,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.seteditable(circle.editable",{"_index":147,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.setmap(null",{"_index":127,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.setoptions(options",{"_index":138,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.setradius(circle.radius",{"_index":150,"title":{},"body":{"injectables/CircleManager.html":{}}}],["c.setvisible(circle.visible",{"_index":149,"title":{},"body":{"injectables/CircleManager.html":{}}}],["case",{"_index":381,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["casting",{"_index":132,"title":{},"body":{"injectables/CircleManager.html":{}}}],["center",{"_index":94,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["center.lat",{"_index":390,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["center.lng",{"_index":391,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["center_changed",{"_index":387,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["centerchange",{"_index":187,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["change",{"_index":456,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["changed",{"_index":271,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["changes",{"_index":299,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["changes.draggable",{"_index":332,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["changes.east",{"_index":768,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["changes.editable",{"_index":330,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["changes.latitude",{"_index":327,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["changes.latitude.currentvalue",{"_index":703,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["changes.longitude",{"_index":328,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["changes.longitude.currentvalue",{"_index":705,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["changes.north",{"_index":767,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["changes.radius",{"_index":336,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["changes.south",{"_index":769,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["changes.visible",{"_index":334,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["changes.west",{"_index":770,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["changes[k].currentvalue",{"_index":347,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["charge",{"_index":1011,"title":{},"body":{"license.html":{}}}],["check",{"_index":130,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle",{"_index":42,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{}}}],["circle's",{"_index":270,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["circle.clickable",{"_index":100,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.draggable",{"_index":102,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.editable",{"_index":104,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.fillcolor",{"_index":106,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.fillopacity",{"_index":108,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.latitude",{"_index":96,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.longitude",{"_index":98,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.radius",{"_index":110,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.strokecolor",{"_index":112,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.strokeopacity",{"_index":114,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.strokeposition",{"_index":116,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.strokeweight",{"_index":118,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.visible",{"_index":120,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circle.zindex",{"_index":122,"title":{},"body":{"injectables/CircleManager.html":{}}}],["circleclick",{"_index":188,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["circledblclick",{"_index":189,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["circledraggable",{"_index":183,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["circlemanager",{"_index":1,"title":{"injectables/CircleManager.html":{}},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"coverage.html":{}}}],["circumference",{"_index":224,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["claim",{"_index":1060,"title":{},"body":{"license.html":{}}}],["class",{"_index":91,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["click",{"_index":502,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["clickable",{"_index":99,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["clicked",{"_index":294,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["clicks",{"_index":276,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["closed",{"_index":467,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["clusterer",{"_index":995,"title":{},"body":{"index.html":{}}}],["color",{"_index":227,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["colors",{"_index":229,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["compared",{"_index":264,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["complex",{"_index":488,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["component",{"_index":530,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["conditions",{"_index":1038,"title":{},"body":{"license.html":{}}}],["connection",{"_index":1069,"title":{},"body":{"license.html":{}}}],["consist",{"_index":471,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["console.log(this._apiwrapper",{"_index":907,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["const",{"_index":123,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["constructor(_apiwrapper",{"_index":27,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["constructor(_manager",{"_index":200,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["constructor(_mapswrapper",{"_index":804,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["constructor(_polygonmanager",{"_index":432,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["constructor(_polylinemanager",{"_index":614,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["constructor(private",{"_index":316,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["container",{"_index":656,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["contentchildren",{"_index":657,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["contentchildren(ngmapspolylinepoint",{"_index":652,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["contract",{"_index":1064,"title":{},"body":{"license.html":{}}}],["control",{"_index":220,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["converted",{"_index":489,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["coordinates",{"_index":465,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["copies",{"_index":1032,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1014,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1004,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":938,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":542,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["createeventobservable",{"_index":14,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["createeventobservable(eventname",{"_index":45,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["createeventobservable(obj.name",{"_index":579,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["css3",{"_index":228,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["curvature",{"_index":447,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["damages",{"_index":1061,"title":{},"body":{"license.html":{}}}],["dblclick",{"_index":504,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["deal",{"_index":1018,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1070,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":796,"title":{},"body":{"modules/NgMapsShapesModule.html":{},"overview.html":{}}}],["decorators",{"_index":651,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["default",{"_index":77,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":210,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["defined",{"_index":31,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["defines",{"_index":494,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["deletepolygon",{"_index":801,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["deletepolygon(paths",{"_index":810,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["deletepolyline",{"_index":849,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["deletepolyline(line",{"_index":859,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["dependencies",{"_index":961,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["description",{"_index":403,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["designates",{"_index":466,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["dimensions",{"_index":458,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["directive",{"_index":163,"title":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"coverage.html":{}}}],["directives",{"_index":164,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"overview.html":{}}}],["directives/circle",{"_index":88,"title":{},"body":{"injectables/CircleManager.html":{},"modules/NgMapsShapesModule.html":{}}}],["directives/polygon",{"_index":791,"title":{},"body":{"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{}}}],["directives/polyline",{"_index":792,"title":{},"body":{"modules/NgMapsShapesModule.html":{},"injectables/PolylineManager.html":{}}}],["directives/rectangle",{"_index":793,"title":{},"body":{"modules/NgMapsShapesModule.html":{},"injectables/RectangleManager.html":{}}}],["distribute",{"_index":1028,"title":{},"body":{"license.html":{}}}],["docs",{"_index":991,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":939,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":286,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["drag",{"_index":190,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["dragend",{"_index":191,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["draggable",{"_index":101,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["dragged",{"_index":457,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["dragging",{"_index":219,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["drags",{"_index":280,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["dragstart",{"_index":192,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["dynamic",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":156,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["each",{"_index":439,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["earlier",{"_index":258,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["earth",{"_index":448,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["earth's",{"_index":247,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["east",{"_index":714,"title":{},"body":{"directives/NgMapsRectangle.html":{},"injectables/RectangleManager.html":{}}}],["edges",{"_index":444,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["edit",{"_index":218,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["editable",{"_index":103,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["element",{"_index":694,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["emitted",{"_index":275,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["emitter",{"_index":273,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["ev",{"_index":562,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["even",{"_index":515,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["event",{"_index":268,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"license.html":{}}}],["eventemitter",{"_index":266,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["eventemitter.emit",{"_index":389,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["eventemitter.emit(radius",{"_index":385,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["eventemitter.emit(value",{"_index":393,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["eventname",{"_index":49,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["events",{"_index":216,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["events.foreach((eventemitter",{"_index":376,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('bounds_changed",{"_index":774,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["events.set('center_changed",{"_index":350,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["events.set('click",{"_index":352,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('dblclick",{"_index":354,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('drag",{"_index":356,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('dragend",{"_index":358,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('dragstart",{"_index":360,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('mousedown",{"_index":362,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('mousemove",{"_index":364,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('mouseout",{"_index":366,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('mouseover",{"_index":368,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('mouseup",{"_index":370,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["events.set('radius_changed",{"_index":372,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["events.set('rightclick",{"_index":374,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["example",{"_index":654,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["except",{"_index":231,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["explorer",{"_index":256,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["export",{"_index":90,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["exports",{"_index":797,"title":{},"body":{"modules/NgMapsShapesModule.html":{},"overview.html":{}}}],["express",{"_index":1048,"title":{},"body":{"license.html":{}}}],["extended",{"_index":232,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["false",{"_index":204,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["files",{"_index":1017,"title":{},"body":{"license.html":{}}}],["fill",{"_index":226,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsRectangle.html":{}}}],["fillcolor",{"_index":105,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/RectangleManager.html":{}}}],["fillopacity",{"_index":107,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/RectangleManager.html":{}}}],["filter((k",{"_index":583,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["fired",{"_index":269,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["first",{"_index":479,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["fitness",{"_index":1053,"title":{},"body":{"license.html":{}}}],["follow",{"_index":446,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["following",{"_index":1037,"title":{},"body":{"license.html":{}}}],["free",{"_index":1010,"title":{},"body":{"license.html":{}}}],["function",{"_index":794,"title":{},"body":{"modules/NgMapsShapesModule.html":{},"coverage.html":{}}}],["functions",{"_index":979,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1035,"title":{},"body":{"license.html":{}}}],["geodesic",{"_index":418,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["get(circle",{"_index":144,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getbounds",{"_index":15,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{},"injectables/RectangleManager.html":{}}}],["getbounds(circle",{"_index":51,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getbounds(rectangle",{"_index":894,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["getcenter",{"_index":16,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{}}}],["getcenter(circle",{"_index":54,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getradius",{"_index":17,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getradius(circle",{"_index":56,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getradius(this",{"_index":383,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["gets",{"_index":274,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["getting",{"_index":981,"title":{"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":61,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["google.maps.circleoptions",{"_index":71,"title":{},"body":{"injectables/CircleManager.html":{}}}],["google.maps.latlngboundsliteral",{"_index":784,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["google.maps.latlngliteral",{"_index":392,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["google.maps.mapseventlistener",{"_index":153,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["google.maps.polygon",{"_index":836,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["google.maps.polygonoptions",{"_index":521,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["google.maps.polyline",{"_index":883,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["google.maps.polymouseevent",{"_index":563,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["google.maps.rectangleoptions",{"_index":903,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["google.maps.strokeposition",{"_index":136,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{}}}],["google.maps.strokeposition.center",{"_index":252,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["google/markerclusterer",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["googlemapsapiwrapper",{"_index":28,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["granted",{"_index":1009,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1071,"title":{},"body":{"modules.html":{}}}],["handler",{"_index":561,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["handlers",{"_index":560,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["handlers.foreach((obj",{"_index":576,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["handles",{"_index":214,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["height",{"_index":533,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["hereby",{"_index":1008,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1058,"title":{},"body":{"license.html":{}}}],["hole",{"_index":543,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["hosts",{"_index":988,"title":{},"body":{"index.html":{}}}],["https://ng",{"_index":551,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["icon",{"_index":528,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["icons",{"_index":601,"title":{},"body":{"directives/NgMapsPolyline.html":{},"injectables/PolylineManager.html":{}}}],["id",{"_index":416,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["identifier",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":923,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["implements",{"_index":166,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["implied",{"_index":1049,"title":{},"body":{"license.html":{}}}],["import",{"_index":81,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["improve",{"_index":131,"title":{},"body":{"injectables/CircleManager.html":{}}}],["included",{"_index":1042,"title":{},"body":{"license.html":{}}}],["including",{"_index":1021,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":212,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"index.html":{}}}],["injectable",{"_index":0,"title":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"overview.html":{}}}],["input",{"_index":311,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["input('circledraggable",{"_index":321,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["input('polydraggable",{"_index":553,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["input('polylinedraggable",{"_index":663,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["input('rectangledraggable",{"_index":764,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["inputs",{"_index":182,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["inserting",{"_index":490,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["inside",{"_index":733,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["internal",{"_index":322,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{}}}],["internet",{"_index":255,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["interpreted",{"_index":445,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["item",{"_index":832,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["item.setpaths(polygon.paths",{"_index":834,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["k",{"_index":342,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["key",{"_index":326,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["kind",{"_index":1047,"title":{},"body":{"license.html":{}}}],["l.addlistener(eventname",{"_index":844,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["l.setmap(null",{"_index":842,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["l.setoptions(options",{"_index":837,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["l.setpath(path",{"_index":884,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["last",{"_index":482,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["lat",{"_index":95,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["latitude",{"_index":184,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["latlng",{"_index":476,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["latlngbounds",{"_index":301,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["latlngs",{"_index":487,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["layer",{"_index":998,"title":{},"body":{"index.html":{}}}],["legend",{"_index":1075,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":1062,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1059,"title":{},"body":{"license.html":{}}}],["license",{"_index":1002,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":1022,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1050,"title":{},"body":{"license.html":{}}}],["line",{"_index":855,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line._getpoints().map((point",{"_index":865,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.clickable",{"_index":871,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.draggable",{"_index":872,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.editable",{"_index":873,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.geodesic",{"_index":874,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.icons",{"_index":880,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.strokecolor",{"_index":875,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.strokeopacity",{"_index":876,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.strokeweight",{"_index":877,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.visible",{"_index":878,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line.zindex",{"_index":879,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["line:no",{"_index":319,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["lineclick",{"_index":603,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linedblclick",{"_index":604,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linedrag",{"_index":605,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linedragend",{"_index":606,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linedragstart",{"_index":607,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemousedown",{"_index":608,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemousemove",{"_index":609,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemouseout",{"_index":610,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemouseover",{"_index":611,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemouseup",{"_index":612,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linerightclick",{"_index":613,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["lines",{"_index":451,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["link",{"_index":550,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["listener",{"_index":152,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["listener.remove",{"_index":159,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["literal",{"_index":297,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["lng",{"_index":97,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["longitude",{"_index":185,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["loop",{"_index":468,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["m",{"_index":838,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["m.then((l",{"_index":841,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["maintained",{"_index":459,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["manager",{"_index":315,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["manager.ts",{"_index":7,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["manager.ts:10",{"_index":80,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:101",{"_index":76,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:105",{"_index":74,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:109",{"_index":47,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:11",{"_index":816,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["manager.ts:12",{"_index":864,"title":{},"body":{"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:13",{"_index":32,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:14",{"_index":805,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["manager.ts:15",{"_index":852,"title":{},"body":{"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:20",{"_index":41,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:21",{"_index":808,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["manager.ts:22",{"_index":854,"title":{},"body":{"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:33",{"_index":857,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:39",{"_index":815,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["manager.ts:44",{"_index":59,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:48",{"_index":813,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["manager.ts:51",{"_index":863,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:52",{"_index":897,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:55",{"_index":72,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:57",{"_index":811,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["manager.ts:59",{"_index":904,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:64",{"_index":861,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:66",{"_index":895,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:69",{"_index":52,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:70",{"_index":809,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:73",{"_index":55,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolylineManager.html":{}}}],["manager.ts:77",{"_index":57,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:81",{"_index":64,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:86",{"_index":858,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:87",{"_index":900,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:89",{"_index":68,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:93",{"_index":906,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:95",{"_index":66,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:99",{"_index":893,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["managers/circle",{"_index":314,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["managers/polygon",{"_index":549,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["managers/polyline",{"_index":658,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["managers/rectangle",{"_index":763,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["map",{"_index":62,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["map.component.html",{"_index":536,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["maps",{"_index":1006,"title":{},"body":{"license.html":{}}}],["maps.github.io/core/components/ngmapsviewcomponent.html|ngmapsview",{"_index":552,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["maps/core",{"_index":85,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"index.html":{}}}],["maps/data",{"_index":997,"title":{},"body":{"index.html":{}}}],["maps/drawing",{"_index":1000,"title":{},"body":{"index.html":{}}}],["maps/kml",{"_index":999,"title":{},"body":{"index.html":{}}}],["maps/marker",{"_index":994,"title":{},"body":{"index.html":{}}}],["maps/places",{"_index":996,"title":{},"body":{"index.html":{}}}],["maps/shapes",{"_index":1001,"title":{},"body":{"index.html":{}}}],["maps/snazzy",{"_index":992,"title":{},"body":{"index.html":{}}}],["matching",{"_index":161,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1052,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1026,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":170,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["meters",{"_index":246,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["methods",{"_index":12,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["miscellaneous",{"_index":978,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1003,"title":{},"body":{"license.html":{}}}],["mode",{"_index":495,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["modify",{"_index":1025,"title":{},"body":{"license.html":{}}}],["module",{"_index":786,"title":{"modules/NgMapsShapesModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":788,"title":{"modules.html":{}},"body":{"modules/NgMapsShapesModule.html":{},"modules.html":{}}}],["mono",{"_index":986,"title":{},"body":{"index.html":{}}}],["more",{"_index":473,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["mouse",{"_index":215,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["mousedown",{"_index":193,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["mouseevent",{"_index":566,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["mousemove",{"_index":194,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["mouseout",{"_index":195,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["mouseover",{"_index":196,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["mouseup",{"_index":197,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["multiple",{"_index":989,"title":{},"body":{"index.html":{}}}],["mymapcomponent",{"_index":537,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["name",{"_index":35,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["named",{"_index":233,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["nestedpaths",{"_index":545,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["nesting",{"_index":541,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["new",{"_index":79,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["next",{"_index":318,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["ng",{"_index":84,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"index.html":{},"license.html":{}}}],["ngaftercontentinit",{"_index":417,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["ngmaps",{"_index":983,"title":{},"body":{"index.html":{}}}],["ngmapscircle",{"_index":40,"title":{"directives/NgMapsCircle.html":{}},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"modules/NgMapsShapesModule.html":{},"coverage.html":{}}}],["ngmapscircle._mapoptions.indexof(k",{"_index":343,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["ngmapspolygon",{"_index":400,"title":{"directives/NgMapsPolygon.html":{}},"body":{"directives/NgMapsPolygon.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"coverage.html":{}}}],["ngmapspolygon._polygonoptionsattributes.indexof(k",{"_index":584,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["ngmapspolyline",{"_index":594,"title":{"directives/NgMapsPolyline.html":{}},"body":{"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["ngmapspolyline._polylineoptionsattributes.indexof(k",{"_index":673,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["ngmapspolylinepoint",{"_index":659,"title":{"directives/NgMapsPolylinePoint.html":{}},"body":{"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["ngmapsrectangle",{"_index":708,"title":{"directives/NgMapsRectangle.html":{}},"body":{"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["ngmapsrectangle._mapoptions.indexof(k",{"_index":773,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["ngmapsshapesmodule",{"_index":787,"title":{"modules/NgMapsShapesModule.html":{}},"body":{"modules/NgMapsShapesModule.html":{},"modules.html":{}}}],["ngmapsview",{"_index":406,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["ngmapsviewcomponent",{"_index":83,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["ngmodule",{"_index":790,"title":{},"body":{"modules/NgMapsShapesModule.html":{}}}],["ngonchanges",{"_index":179,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["ngonchanges(changes",{"_index":303,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["ngondestroy",{"_index":180,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["ngoninit",{"_index":181,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["ngzone",{"_index":30,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["noninfringement",{"_index":1056,"title":{},"body":{"license.html":{}}}],["north",{"_index":715,"title":{},"body":{"directives/NgMapsRectangle.html":{},"injectables/RectangleManager.html":{}}}],["note",{"_index":454,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["notice",{"_index":1040,"title":{},"body":{"license.html":{}}}],["null",{"_index":154,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["number",{"_index":234,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":587,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["obj[k",{"_index":586,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["object.keys(changes",{"_index":582,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["object.keys(changes).filter",{"_index":341,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["observable",{"_index":50,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["observable((observer",{"_index":151,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["observer",{"_index":86,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["observer.next(e",{"_index":158,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["obtaining",{"_index":1013,"title":{},"body":{"license.html":{}}}],["onchanges",{"_index":168,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["ondestroy",{"_index":169,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["one",{"_index":472,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["oninit",{"_index":167,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["opacity",{"_index":236,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["optional",{"_index":37,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["optionkeys",{"_index":340,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["optionkeys.foreach((k",{"_index":345,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["optionkeys.length",{"_index":348,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["options",{"_index":70,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["options.strokeposition",{"_index":135,"title":{},"body":{"injectables/CircleManager.html":{}}}],["options[k",{"_index":346,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["ordered",{"_index":463,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["os",{"_index":577,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["otherwise",{"_index":1066,"title":{},"body":{"license.html":{}}}],["out",{"_index":1068,"title":{},"body":{"license.html":{},"overview.html":{}}}],["output",{"_index":312,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["outputs",{"_index":186,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["outside",{"_index":734,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["over",{"_index":209,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["overlap",{"_index":544,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["overview",{"_index":1074,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":960,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["packages",{"_index":984,"title":{},"body":{"index.html":{}}}],["param",{"_index":133,"title":{},"body":{"injectables/CircleManager.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["particular",{"_index":1054,"title":{},"body":{"license.html":{}}}],["path",{"_index":481,"title":{},"body":{"directives/NgMapsPolygon.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["path.clickable",{"_index":819,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.draggable",{"_index":820,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.editable",{"_index":821,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.fillcolor",{"_index":822,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.fillopacity",{"_index":823,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.geodesic",{"_index":824,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.paths",{"_index":825,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.strokecolor",{"_index":826,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.strokeopacity",{"_index":827,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.strokeweight",{"_index":828,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.visible",{"_index":829,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["path.zindex",{"_index":830,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["paths",{"_index":419,"title":{},"body":{"directives/NgMapsPolygon.html":{},"injectables/PolygonManager.html":{}}}],["permission",{"_index":1007,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1033,"title":{},"body":{"license.html":{}}}],["person",{"_index":1012,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1034,"title":{},"body":{"license.html":{}}}],["pixels",{"_index":261,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["point",{"_index":660,"title":{},"body":{"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolylineManager.html":{}}}],["point.latitude",{"_index":866,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["point.longitude",{"_index":867,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["point.positionchanged.subscribe",{"_index":666,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["point.ts",{"_index":692,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{},"coverage.html":{}}}],["point.ts:21",{"_index":698,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:26",{"_index":699,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:31",{"_index":700,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:33",{"_index":697,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:37",{"_index":701,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["points",{"_index":221,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["polyclick",{"_index":421,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polydblclick",{"_index":422,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polydrag",{"_index":423,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polydragend",{"_index":424,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polydraggable",{"_index":420,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polydragstart",{"_index":425,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polygon",{"_index":405,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"injectables/PolygonManager.html":{}}}],["polygonmanager",{"_index":408,"title":{"injectables/PolygonManager.html":{}},"body":{"directives/NgMapsPolygon.html":{},"injectables/PolygonManager.html":{},"coverage.html":{}}}],["polygonpromise",{"_index":817,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["polygons",{"_index":484,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polyline",{"_index":596,"title":{},"body":{"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["polylinedraggable",{"_index":602,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["polylineid",{"_index":661,"title":{},"body":{"directives/NgMapsPolyline.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["polylineid++).tostring",{"_index":662,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["polylinemanager",{"_index":597,"title":{"injectables/PolylineManager.html":{}},"body":{"directives/NgMapsPolyline.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["polylinepromise",{"_index":869,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["polylines",{"_index":470,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polymousedown",{"_index":426,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polymousemove",{"_index":427,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polymouseout",{"_index":428,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polymouseover",{"_index":429,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polymouseup",{"_index":430,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polyrightclick",{"_index":431,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["polys",{"_index":265,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["portions",{"_index":1044,"title":{},"body":{"license.html":{}}}],["position",{"_index":241,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["positionchanged",{"_index":696,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["private",{"_index":10,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["project",{"_index":985,"title":{},"body":{"index.html":{}}}],["projects/.../polyline.ts",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../shapes.module.ts",{"_index":980,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/shapes/src/lib/directives/circle.ts",{"_index":165,"title":{},"body":{"directives/NgMapsCircle.html":{},"coverage.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:104",{"_index":263,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:109",{"_index":267,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:116",{"_index":272,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:123",{"_index":277,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:130",{"_index":278,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:135",{"_index":281,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:140",{"_index":283,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:147",{"_index":285,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:154",{"_index":287,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:161",{"_index":288,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:166",{"_index":289,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:173",{"_index":290,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:178",{"_index":291,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:18",{"_index":201,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:183",{"_index":292,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:187",{"_index":307,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:189",{"_index":309,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:192",{"_index":306,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:199",{"_index":304,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:21",{"_index":310,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:221",{"_index":298,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:236",{"_index":295,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:283",{"_index":305,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:294",{"_index":300,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:298",{"_index":302,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:35",{"_index":240,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:40",{"_index":243,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:45",{"_index":211,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:51",{"_index":205,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:57",{"_index":217,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:62",{"_index":225,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:67",{"_index":235,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:72",{"_index":245,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:77",{"_index":249,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:82",{"_index":251,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:88",{"_index":253,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:94",{"_index":259,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/circle.ts:99",{"_index":262,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts",{"_index":402,"title":{},"body":{"directives/NgMapsPolygon.html":{},"coverage.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:101",{"_index":500,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:106",{"_index":501,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:113",{"_index":503,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:120",{"_index":505,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:125",{"_index":506,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:132",{"_index":507,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:139",{"_index":508,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:146",{"_index":509,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:153",{"_index":510,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:160",{"_index":511,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:167",{"_index":512,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:174",{"_index":514,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:178",{"_index":529,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:198",{"_index":526,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:199",{"_index":527,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:200",{"_index":433,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:205",{"_index":523,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:211",{"_index":524,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:223",{"_index":517,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:229",{"_index":516,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:25",{"_index":435,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:285",{"_index":520,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:297",{"_index":522,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:302",{"_index":525,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:32",{"_index":493,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:38",{"_index":436,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:44",{"_index":441,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:49",{"_index":442,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:58",{"_index":443,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:71",{"_index":462,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:81",{"_index":496,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:86",{"_index":497,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:91",{"_index":498,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polygon.ts:96",{"_index":499,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["projects/shapes/src/lib/directives/polyline",{"_index":691,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{},"coverage.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts",{"_index":595,"title":{},"body":{"directives/NgMapsPolyline.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:101",{"_index":628,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:106",{"_index":629,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:111",{"_index":630,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:116",{"_index":631,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:121",{"_index":632,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:126",{"_index":633,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:131",{"_index":634,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:136",{"_index":635,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:141",{"_index":636,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:146",{"_index":637,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:151",{"_index":638,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:156",{"_index":653,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:158",{"_index":646,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:159",{"_index":647,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:160",{"_index":649,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:163",{"_index":643,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:182",{"_index":644,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:196",{"_index":641,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:202",{"_index":639,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:259",{"_index":640,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:26",{"_index":615,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:267",{"_index":642,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:272",{"_index":645,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:31",{"_index":648,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:45",{"_index":617,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:52",{"_index":622,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:58",{"_index":618,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:66",{"_index":619,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:71",{"_index":623,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:76",{"_index":624,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:81",{"_index":625,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:86",{"_index":620,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:91",{"_index":626,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/polyline.ts:96",{"_index":627,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts",{"_index":709,"title":{},"body":{"directives/NgMapsRectangle.html":{},"coverage.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:103",{"_index":737,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:108",{"_index":739,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:114",{"_index":740,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:122",{"_index":750,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:128",{"_index":751,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:133",{"_index":742,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:138",{"_index":743,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:144",{"_index":744,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:150",{"_index":745,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:156",{"_index":746,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:161",{"_index":747,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:167",{"_index":748,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:172",{"_index":749,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:178",{"_index":752,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:18",{"_index":722,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:180",{"_index":762,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:182",{"_index":760,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:185",{"_index":759,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:192",{"_index":757,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:21",{"_index":761,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:211",{"_index":755,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:226",{"_index":753,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:269",{"_index":758,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:280",{"_index":756,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:35",{"_index":728,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:40",{"_index":724,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:45",{"_index":730,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:50",{"_index":738,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:55",{"_index":723,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:61",{"_index":729,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:67",{"_index":725,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:72",{"_index":726,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:77",{"_index":727,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:82",{"_index":731,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:87",{"_index":732,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:93",{"_index":735,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/directives/rectangle.ts:98",{"_index":736,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["projects/shapes/src/lib/managers/circle",{"_index":6,"title":{},"body":{"injectables/CircleManager.html":{},"coverage.html":{}}}],["projects/shapes/src/lib/managers/polygon",{"_index":798,"title":{},"body":{"injectables/PolygonManager.html":{},"coverage.html":{}}}],["projects/shapes/src/lib/managers/polyline",{"_index":845,"title":{},"body":{"injectables/PolylineManager.html":{},"coverage.html":{}}}],["projects/shapes/src/lib/managers/rectangle",{"_index":887,"title":{},"body":{"injectables/RectangleManager.html":{},"coverage.html":{}}}],["projects/shapes/src/lib/shapes.module.ts",{"_index":789,"title":{},"body":{"modules/NgMapsShapesModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["promise",{"_index":53,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["promise.resolve",{"_index":840,"title":{},"body":{"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["properties",{"_index":9,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["property",{"_index":254,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["propname",{"_index":339,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["provided",{"_index":1045,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":89,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["providers",{"_index":171,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"overview.html":{}}}],["public",{"_index":702,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["publish",{"_index":1027,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1055,"title":{},"body":{"license.html":{}}}],["querylist",{"_index":650,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["r.addlistener(eventname",{"_index":937,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["r.getbounds",{"_index":932,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["r.setbounds",{"_index":933,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["r.setdraggable(rectangle.draggable",{"_index":935,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["r.seteditable(rectangle.editable",{"_index":934,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["r.setmap(null",{"_index":929,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["r.setoptions(options",{"_index":931,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["r.setvisible(rectangle.visible",{"_index":936,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["radius",{"_index":109,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{}}}],["radius_changed",{"_index":382,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["radiuschange",{"_index":198,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["readme",{"_index":401,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"index.html":{}}}],["rectangle",{"_index":711,"title":{},"body":{"directives/NgMapsRectangle.html":{},"injectables/RectangleManager.html":{}}}],["rectangle's",{"_index":741,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["rectangle.clickable",{"_index":915,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.draggable",{"_index":916,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.east",{"_index":912,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.editable",{"_index":917,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.fillcolor",{"_index":918,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.fillopacity",{"_index":919,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.north",{"_index":911,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.south",{"_index":913,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.strokecolor",{"_index":920,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.strokeopacity",{"_index":921,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.strokeposition",{"_index":924,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.strokeweight",{"_index":925,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.visible",{"_index":926,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.west",{"_index":914,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangle.zindex",{"_index":927,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["rectangleclick",{"_index":720,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["rectangledblclick",{"_index":721,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["rectangledraggable",{"_index":716,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["rectanglemanager",{"_index":710,"title":{"injectables/RectangleManager.html":{}},"body":{"directives/NgMapsRectangle.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["reduce((obj",{"_index":585,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["registered",{"_index":591,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["relative",{"_index":460,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["removecircle",{"_index":19,"title":{},"body":{"injectables/CircleManager.html":{}}}],["removecircle(circle",{"_index":58,"title":{},"body":{"injectables/CircleManager.html":{}}}],["removerectangle",{"_index":890,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["removerectangle(rectangle",{"_index":896,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["removes",{"_index":60,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["removing",{"_index":491,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["rename",{"_index":320,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["rendered",{"_index":449,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["renders",{"_index":404,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["repeat",{"_index":478,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["repeatedly",{"_index":279,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["repo",{"_index":987,"title":{},"body":{"index.html":{}}}],["represents",{"_index":693,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["required",{"_index":242,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["reset",{"_index":1077,"title":{},"body":{"overview.html":{}}}],["restriction",{"_index":1020,"title":{},"body":{"license.html":{}}}],["result",{"_index":160,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":162,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":137,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["returns",{"_index":43,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["right",{"_index":293,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["rightclick",{"_index":199,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["rights",{"_index":1023,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":87,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"dependencies.html":{}}}],["s",{"_index":670,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["s.unsubscribe",{"_index":395,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["screen",{"_index":452,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["segment",{"_index":440,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["selector",{"_index":172,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{}}}],["sell",{"_index":1031,"title":{},"body":{"license.html":{}}}],["sequence",{"_index":464,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["set",{"_index":206,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["setbounds",{"_index":891,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setbounds(rectangle",{"_index":898,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setcenter",{"_index":20,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setcenter(circle",{"_index":63,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setdraggable",{"_index":21,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["setdraggable(circle",{"_index":65,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setdraggable(rectangle",{"_index":899,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["seteditable",{"_index":22,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["seteditable(circle",{"_index":67,"title":{},"body":{"injectables/CircleManager.html":{}}}],["seteditable(rectangle",{"_index":901,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setoptions",{"_index":23,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["setoptions(circle",{"_index":69,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setoptions(rectangle",{"_index":902,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setpolygonoptions",{"_index":802,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["setpolygonoptions(path",{"_index":812,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["setpolylineoptions",{"_index":850,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["setpolylineoptions(line",{"_index":860,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["setradius",{"_index":24,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setradius(circle",{"_index":73,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setvisible",{"_index":25,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["setvisible(circle",{"_index":75,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setvisible(rectangle",{"_index":905,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["shall",{"_index":1041,"title":{},"body":{"license.html":{}}}],["shape",{"_index":437,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["shapesdirectives",{"_index":795,"title":{},"body":{"modules/NgMapsShapesModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["shown",{"_index":222,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["simple",{"_index":483,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["simplechange",{"_index":313,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["simplechanges",{"_index":519,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["single",{"_index":486,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["software",{"_index":1015,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"modules/NgMapsShapesModule.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["south",{"_index":717,"title":{},"body":{"directives/NgMapsRectangle.html":{},"injectables/RectangleManager.html":{}}}],["space",{"_index":453,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["specify",{"_index":474,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["started",{"_index":982,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":284,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["statements",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":175,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["stops",{"_index":282,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["straight",{"_index":450,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["string",{"_index":46,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["stroke",{"_index":250,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["strokecolor",{"_index":111,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["strokeopacity",{"_index":113,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["strokeposition",{"_index":115,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{},"injectables/RectangleManager.html":{}}}],["strokeweight",{"_index":117,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["styles",{"_index":531,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["subject",{"_index":1036,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1029,"title":{},"body":{"license.html":{}}}],["subscribe((value",{"_index":379,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["subscribe(obj.handler",{"_index":580,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["subscription",{"_index":308,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["subscriptions",{"_index":592,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["substantial",{"_index":1043,"title":{},"body":{"license.html":{}}}],["supported",{"_index":230,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["surface",{"_index":248,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["switch",{"_index":380,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["t",{"_index":48,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["table",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":548,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["templateurl",{"_index":535,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["then((c",{"_index":145,"title":{},"body":{"injectables/CircleManager.html":{}}}],["then((radius",{"_index":384,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._addeventlisteners",{"_index":559,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["this._apiwrapper.createcircle",{"_index":93,"title":{},"body":{"injectables/CircleManager.html":{}}}],["this._apiwrapper.createrectangle",{"_index":909,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["this._circleaddedtomanager",{"_index":324,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._circles",{"_index":143,"title":{},"body":{"injectables/CircleManager.html":{}}}],["this._circles.delete(circle",{"_index":128,"title":{},"body":{"injectables/CircleManager.html":{}}}],["this._circles.get(circle",{"_index":126,"title":{},"body":{"injectables/CircleManager.html":{}}}],["this._circles.get(circle).then((c",{"_index":139,"title":{},"body":{"injectables/CircleManager.html":{}}}],["this._circles.set",{"_index":92,"title":{},"body":{"injectables/CircleManager.html":{}}}],["this._convertpoints(line",{"_index":868,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["this._eventsubscriptions",{"_index":396,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._eventsubscriptions.foreach((s",{"_index":394,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._eventsubscriptions.push",{"_index":377,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._id",{"_index":588,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["this._init",{"_index":555,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["this._manager",{"_index":378,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._manager.addcircle(this",{"_index":323,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._manager.addrectangle(this",{"_index":765,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this._manager.getbounds(this",{"_index":398,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._manager.getbounds(this).then((bounds",{"_index":779,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this._manager.getcenter(this",{"_index":399,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._manager.getcenter(this).then((center",{"_index":388,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._manager.removecircle(this",{"_index":397,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._manager.removerectangle(this",{"_index":785,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this._manager.setbounds(this",{"_index":771,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this._manager.setcenter(this",{"_index":329,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._manager.setdraggable(this",{"_index":333,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._manager.seteditable(this",{"_index":331,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._manager.setoptions(this",{"_index":349,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._manager.setradius(this",{"_index":337,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._manager.setvisible(this",{"_index":335,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._mapswrapper.createpolygon",{"_index":818,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["this._mapswrapper.createpolyline",{"_index":870,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["this._polygonaddedtomanager",{"_index":554,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this._polygonmanager",{"_index":578,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this._polygonmanager.addpolygon(this",{"_index":558,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this._polygonmanager.deletepolygon(this",{"_index":589,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this._polygonmanager.setpolygonoptions",{"_index":556,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this._polygons.delete(paths",{"_index":843,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["this._polygons.get(path).then((l",{"_index":835,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["this._polygons.get(paths",{"_index":839,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["this._polygons.get(polygon",{"_index":833,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["this._polygons.set(path",{"_index":831,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["this._polylineaddedtomanager",{"_index":669,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager",{"_index":687,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager.addpolyline(this",{"_index":675,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager.deletepolyline(this",{"_index":690,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager.setpolylineoptions(this",{"_index":674,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager.updatepolylinepoints(this",{"_index":667,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylines.delete(line",{"_index":886,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["this._polylines.get(line",{"_index":882,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["this._polylines.get(line).then((l",{"_index":885,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["this._polylines.set(line",{"_index":881,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["this._rectangleaddedtomanager",{"_index":766,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this._rectangles.delete(rectangle",{"_index":930,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["this._rectangles.get(rectangle).then((r",{"_index":928,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["this._rectangles.set",{"_index":908,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["this._registereventlisteners",{"_index":325,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this._subscriptions.foreach((s",{"_index":593,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["this._subscriptions.push(os",{"_index":581,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["this._subscriptions.push(s",{"_index":672,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._subscriptions.push(subscription",{"_index":668,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._updatecircleoptionschanges(changes",{"_index":338,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this._updatepolygonoptions(changes",{"_index":557,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this._updaterectangleoptionschanges(changes",{"_index":772,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this._zone.run",{"_index":157,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["this.boundschange",{"_index":775,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this.centerchange",{"_index":351,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this.circleclick",{"_index":353,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this.circledblclick",{"_index":355,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this.drag",{"_index":357,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this.dragend",{"_index":359,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this.dragstart",{"_index":361,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this.latitude",{"_index":704,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["this.lineclick.emit(ev",{"_index":676,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linedblclick.emit(ev",{"_index":677,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linedrag.emit(ev",{"_index":678,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linedragend.emit(ev",{"_index":679,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linedragstart.emit(ev",{"_index":680,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemousedown.emit(ev",{"_index":681,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemousemove.emit(ev",{"_index":682,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemouseout.emit(ev",{"_index":683,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemouseover.emit(ev",{"_index":684,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemouseup.emit(ev",{"_index":685,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linerightclick.emit(ev",{"_index":686,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.longitude",{"_index":706,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["this.mousedown",{"_index":363,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this.mousemove",{"_index":365,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this.mouseout",{"_index":367,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this.mouseover",{"_index":369,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this.mouseup",{"_index":371,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["this.points",{"_index":688,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.points.changes.subscribe",{"_index":671,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.points.foreach((point",{"_index":665,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.points.length",{"_index":664,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.points.toarray",{"_index":689,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.polyclick.emit(ev",{"_index":564,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polydblclick.emit(ev",{"_index":565,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polydrag.emit(ev",{"_index":567,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polydragend.emit(ev",{"_index":568,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polydragstart.emit(ev",{"_index":569,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polymousedown.emit(ev",{"_index":570,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polymousemove.emit(ev",{"_index":571,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polymouseout.emit(ev",{"_index":572,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polymouseover.emit(ev",{"_index":573,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polymouseup.emit(ev",{"_index":574,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.polyrightclick.emit(ev",{"_index":575,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["this.positionchanged.emit(position",{"_index":707,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["this.radiuschange",{"_index":373,"title":{},"body":{"directives/NgMapsCircle.html":{}}}],["this.rectangleclick",{"_index":776,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this.rectangledblclick",{"_index":777,"title":{},"body":{"directives/NgMapsRectangle.html":{}}}],["this.rightclick",{"_index":375,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsRectangle.html":{}}}],["todo",{"_index":129,"title":{},"body":{"injectables/CircleManager.html":{}}}],["tort",{"_index":1065,"title":{},"body":{"license.html":{}}}],["true",{"_index":207,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["ts",{"_index":922,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["tslib",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":317,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["type",{"_index":36,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":134,"title":{},"body":{"injectables/CircleManager.html":{}}}],["unlike",{"_index":469,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["unsubscribe",{"_index":590,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["update",{"_index":492,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["updatepolygon",{"_index":803,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["updatepolygon(polygon",{"_index":814,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["updatepolylinepoints",{"_index":851,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["updatepolylinepoints(line",{"_index":862,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["use",{"_index":1024,"title":{},"body":{"license.html":{}}}],["user",{"_index":208,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["using",{"_index":485,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["value",{"_index":78,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1079,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":990,"title":{},"body":{"index.html":{}}}],["vertex",{"_index":480,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["vertices",{"_index":438,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["view",{"_index":532,"title":{},"body":{"directives/NgMapsPolygon.html":{}}}],["visible",{"_index":119,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["void",{"_index":44,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["warranties",{"_index":1051,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1046,"title":{},"body":{"license.html":{}}}],["west",{"_index":718,"title":{},"body":{"directives/NgMapsRectangle.html":{},"injectables/RectangleManager.html":{}}}],["whe",{"_index":513,"title":{},"body":{"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{}}}],["whether",{"_index":213,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"license.html":{}}}],["width",{"_index":260,"title":{},"body":{"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{}}}],["window",{"_index":993,"title":{},"body":{"index.html":{}}}],["within",{"_index":695,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["without",{"_index":1019,"title":{},"body":{"license.html":{}}}],["zindex",{"_index":121,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircle.html":{},"directives/NgMapsPolygon.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangle.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["zone.js",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":538,"title":{},"body":{"directives/NgMapsPolygon.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/CircleManager.html":{"url":"injectables/CircleManager.html","title":"injectable - CircleManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CircleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/shapes/src/lib/managers/circle-manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _circles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCircle\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                getBounds\n                            \n                            \n                                getCenter\n                            \n                            \n                                getRadius\n                            \n                            \n                                    Async\n                                removeCircle\n                            \n                            \n                                setCenter\n                            \n                            \n                                setDraggable\n                            \n                            \n                                setEditable\n                            \n                            \n                                    Async\n                                setOptions\n                            \n                            \n                                setRadius\n                            \n                            \n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_apiWrapper: GoogleMapsAPIWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/managers/circle-manager.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _apiWrapper\n                                                  \n                                                        \n                                                                    GoogleMapsAPIWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCircle\n                        \n                        \n                    \n                \n            \n            \n                \naddCircle(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:109\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \ngetCenter(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRadius\n                        \n                        \n                    \n                \n            \n            \n                \ngetRadius(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeCircle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCircle(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:44\n                \n            \n\n\n            \n                \n                    Removes the given circle from the map.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCenter\n                        \n                        \n                    \n                \n            \n            \n                \nsetCenter(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDraggable\n                        \n                        \n                    \n                \n            \n            \n                \nsetDraggable(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEditable\n                        \n                        \n                    \n                \n            \n            \n                \nsetEditable(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(circle: NgMapsCircle, options: google.maps.CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRadius\n                        \n                        \n                    \n                \n            \n            \n                \nsetRadius(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVisible\n                        \n                        \n                    \n                \n            \n            \n                \nsetVisible(circle: NgMapsCircle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _circles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map>\n\n                        \n                    \n                    \n                        \n                            Default value : new Map\n  >()\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/managers/circle-manager.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { GoogleMapsAPIWrapper, NgMapsViewComponent } from '@ng-maps/core';\nimport { Observable, Observer } from 'rxjs';\nimport { NgMapsCircle } from '../directives/circle';\n\n@Injectable({\n  providedIn: NgMapsViewComponent,\n})\nexport class CircleManager {\n  private _circles: Map> = new Map\n  >();\n\n  constructor(\n    private _apiWrapper: GoogleMapsAPIWrapper,\n    private _zone: NgZone,\n  ) {}\n\n  addCircle(circle: NgMapsCircle) {\n    this._circles.set(\n      circle,\n      this._apiWrapper.createCircle({\n        center: { lat: circle.latitude, lng: circle.longitude },\n        clickable: circle.clickable,\n        draggable: circle.draggable,\n        editable: circle.editable,\n        fillColor: circle.fillColor,\n        fillOpacity: circle.fillOpacity,\n        radius: circle.radius,\n        strokeColor: circle.strokeColor,\n        strokeOpacity: circle.strokeOpacity,\n        strokePosition: circle.strokePosition,\n        strokeWeight: circle.strokeWeight,\n        visible: circle.visible,\n        zIndex: circle.zIndex,\n      }),\n    );\n  }\n\n  /**\n   * Removes the given circle from the map.\n   */\n  async removeCircle(circle: NgMapsCircle): Promise {\n    const c = await this._circles.get(circle);\n    c.setMap(null);\n    this._circles.delete(circle);\n  }\n\n  /**\n   * @todo check how to improve type casting\n   * @param circle\n   * @param options\n   */\n  async setOptions(\n    circle: NgMapsCircle,\n    options: google.maps.CircleOptions,\n  ): Promise {\n    const c = await this._circles.get(circle);\n\n    if (typeof options.strokePosition === 'string') {\n      options.strokePosition = (google.maps.StrokePosition[\n        options.strokePosition\n      ] as any) as google.maps.StrokePosition;\n    }\n    return c.setOptions(options);\n  }\n\n  getBounds(circle: NgMapsCircle): Promise {\n    return this._circles.get(circle).then((c) => c.getBounds());\n  }\n\n  getCenter(circle: NgMapsCircle): Promise {\n    return this._circles.get(circle).then((c) => c.getCenter());\n  }\n\n  getRadius(circle: NgMapsCircle): Promise {\n    return this._circles.get(circle).then((c) => c.getRadius());\n  }\n\n  setCenter(circle: NgMapsCircle): Promise {\n    return this._circles\n      .get(circle)\n      .then((c) =>\n        c.setCenter({ lat: circle.latitude, lng: circle.longitude }),\n      );\n  }\n\n  setEditable(circle: NgMapsCircle): Promise {\n    return this._circles\n      .get(circle)\n      .then((c) => c.setEditable(circle.editable));\n  }\n\n  setDraggable(circle: NgMapsCircle): Promise {\n    return this._circles\n      .get(circle)\n      .then((c) => c.setDraggable(circle.draggable));\n  }\n\n  setVisible(circle: NgMapsCircle): Promise {\n    return this._circles.get(circle).then((c) => c.setVisible(circle.visible));\n  }\n\n  setRadius(circle: NgMapsCircle): Promise {\n    return this._circles.get(circle).then((c) => c.setRadius(circle.radius));\n  }\n\n  createEventObservable(\n    eventName: string,\n    circle: NgMapsCircle,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      let listener: google.maps.MapsEventListener = null;\n      this._circles.get(circle).then((c) => {\n        listener = c.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsCircle.html":{"url":"directives/NgMapsCircle.html","title":"directive - NgMapsCircle","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsCircle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/shapes/src/lib/directives/circle.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnChanges\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                CircleManager\n                            \n                        \n                    \n\n                    \n                        Selector\n                        map-circle\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _circleAddedToManager\n                            \n                            \n                                    Private\n                                _eventSubscriptions\n                            \n                            \n                                    Private\n                                    Static\n                                _mapOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerEventListeners\n                            \n                            \n                                    Private\n                                _updateCircleOptionsChanges\n                            \n                            \n                                getBounds\n                            \n                            \n                                getCenter\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                circleDraggable\n                            \n                            \n                                clickable\n                            \n                            \n                                editable\n                            \n                            \n                                fillColor\n                            \n                            \n                                fillOpacity\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                radius\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokePosition\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                centerChange\n                            \n                            \n                                circleClick\n                            \n                            \n                                circleDblClick\n                            \n                            \n                                drag\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragStart\n                            \n                            \n                                mouseDown\n                            \n                            \n                                mouseMove\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                mouseUp\n                            \n                            \n                                radiusChange\n                            \n                            \n                                rightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_manager: CircleManager)\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/directives/circle.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _manager\n                                                  \n                                                        \n                                                                        CircleManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        circleDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:51\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this circle over the map. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:45\n                            \n                        \n                \n                    \n                        Indicates whether this Circle handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:57\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this circle by dragging the control points shown at\nthe center and around the circumference of the circle. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:62\n                            \n                        \n                \n                    \n                        The fill color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:67\n                            \n                        \n                \n                    \n                        The fill opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:35\n                            \n                        \n                \n                    \n                        The latitude position of the circle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:40\n                            \n                        \n                \n                    \n                        The clickable position of the circle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:72\n                            \n                        \n                \n                    \n                        The radius in meters on the Earth's surface.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:77\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:82\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokePosition\n                    \n                \n                \n                    \n                        Type :     google.maps.StrokePosition\n\n                    \n                \n                \n                    \n                        Default value : google.maps.StrokePosition.CENTER\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:88\n                            \n                        \n                \n                    \n                        The stroke position. Defaults to CENTER.\nThis property is not supported on Internet Explorer 8 and earlier.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:94\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:99\n                            \n                        \n                \n                    \n                        Whether this circle is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:104\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        centerChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:109\n                            \n                        \n                \n                    \n                        This event is fired when the circle's center is changed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        circleClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:116\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        circleDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:123\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        drag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:130\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:135\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:140\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:147\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:154\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:161\n                            \n                        \n                \n                    \n                        This event is fired on circle mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:166\n                            \n                        \n                \n                    \n                        This event is fired on circle mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:173\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mouseup event is fired on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:178\n                            \n                        \n                \n                    \n                        This event is fired when the circle's radius is changed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:183\n                            \n                        \n                \n                    \n                        This event is fired when the circle is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _registerEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _registerEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/circle.ts:236\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _updateCircleOptionsChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateCircleOptionsChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/circle.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/circle.ts:294\n                \n            \n\n\n            \n                \n                    Gets the LatLngBounds of this Circle.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \ngetCenter()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/circle.ts:298\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/circle.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/circle.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/circle.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _circleAddedToManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:187\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _eventSubscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:189\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _mapOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/circle.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { CircleManager } from '../managers/circle-manager';\n\n@Directive({\n  selector: 'map-circle',\n  providers: [CircleManager],\n})\nexport class NgMapsCircle implements OnInit, OnChanges, OnDestroy {\n  constructor(private _manager: CircleManager) {}\n\n  private static _mapOptions: string[] = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ];\n  /**\n   * The latitude position of the circle (required).\n   */\n  @Input() latitude: number;\n\n  /**\n   * The clickable position of the circle (required).\n   */\n  @Input() longitude: number;\n\n  /**\n   * Indicates whether this Circle handles mouse events. Defaults to true.\n   */\n  @Input() clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this circle over the map. Defaults to false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('circleDraggable') draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this circle by dragging the control points shown at\n   * the center and around the circumference of the circle. Defaults to false.\n   */\n  @Input() editable: boolean = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0.\n   */\n  @Input() fillOpacity: number;\n\n  /**\n   * The radius in meters on the Earth's surface.\n   */\n  @Input() radius: number = 0;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The stroke position. Defaults to CENTER.\n   * This property is not supported on Internet Explorer 8 and earlier.\n   */\n  @Input() strokePosition: google.maps.StrokePosition =\n    google.maps.StrokePosition.CENTER;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() strokeWeight: number = 0;\n\n  /**\n   * Whether this circle is visible on the map. Defaults to true.\n   */\n  @Input() visible: boolean = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * This event is fired when the circle's center is changed.\n   */\n  @Output() centerChange: EventEmitter = new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the circle.\n   */\n  @Output() circleClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the circle.\n   */\n  @Output() circleDblClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the circle.\n   */\n  @Output() drag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the circle.\n   */\n  @Output() dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the circle.\n   */\n  @Output() dragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the circle.\n   */\n  @Output() mouseDown: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the circle.\n   */\n  @Output() mouseMove: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on circle mouseout.\n   */\n  @Output() mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on circle mouseover.\n   */\n  @Output() mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mouseup event is fired on the circle.\n   */\n  @Output() mouseUp: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the circle's radius is changed.\n   */\n  @Output() radiusChange: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the circle is right-clicked on.\n   */\n  @Output() rightClick: EventEmitter = new EventEmitter();\n\n  private _circleAddedToManager: boolean = false;\n\n  private _eventSubscriptions: Subscription[] = [];\n\n  /** @internal */\n  ngOnInit() {\n    this._manager.addCircle(this);\n    this._circleAddedToManager = true;\n    this._registerEventListeners();\n  }\n\n  /** @internal */\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (!this._circleAddedToManager) {\n      return;\n    }\n    if (changes.latitude || changes.longitude) {\n      this._manager.setCenter(this);\n    }\n    if (changes.editable) {\n      this._manager.setEditable(this);\n    }\n    if (changes.draggable) {\n      this._manager.setDraggable(this);\n    }\n    if (changes.visible) {\n      this._manager.setVisible(this);\n    }\n    if (changes.radius) {\n      this._manager.setRadius(this);\n    }\n    this._updateCircleOptionsChanges(changes);\n  }\n\n  private _updateCircleOptionsChanges(changes: {\n    [propName: string]: SimpleChange;\n  }) {\n    const options: { [propName: string]: any } = {};\n    const optionKeys = Object.keys(changes).filter(\n      (k) => NgMapsCircle._mapOptions.indexOf(k) !== -1,\n    );\n    optionKeys.forEach((k) => {\n      options[k] = changes[k].currentValue;\n    });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  private _registerEventListeners() {\n    const events: Map> = new Map\n    >();\n    events.set('center_changed', this.centerChange);\n    events.set('click', this.circleClick);\n    events.set('dblclick', this.circleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragstart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('radius_changed', this.radiusChange);\n    events.set('rightclick', this.rightClick);\n\n    events.forEach((eventEmitter, eventName) => {\n      this._eventSubscriptions.push(\n        this._manager\n          .createEventObservable(eventName, this)\n          .subscribe((value) => {\n            switch (eventName) {\n              case 'radius_changed':\n                this._manager\n                  .getRadius(this)\n                  .then((radius) => eventEmitter.emit(radius));\n                break;\n              case 'center_changed':\n                this._manager.getCenter(this).then((center) =>\n                  eventEmitter.emit({\n                    lat: center.lat(),\n                    lng: center.lng(),\n                  } as google.maps.LatLngLiteral),\n                );\n                break;\n              default:\n                eventEmitter.emit(value);\n            }\n          }),\n      );\n    });\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._eventSubscriptions.forEach((s: Subscription) => {\n      s.unsubscribe();\n    });\n    this._eventSubscriptions = null;\n    this._manager.removeCircle(this);\n  }\n\n  /**\n   * Gets the LatLngBounds of this Circle.\n   */\n  getBounds(): Promise {\n    return this._manager.getBounds(this);\n  }\n\n  getCenter(): Promise {\n    return this._manager.getCenter(this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsPolygon.html":{"url":"directives/NgMapsPolygon.html","title":"directive - NgMapsPolygon","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsPolygon\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/shapes/src/lib/directives/polygon.ts\n        \n\n            \n                Description\n            \n            \n                NgMapsPolygon renders a polygon on a NgMapsView\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                PolygonManager\n                            \n                        \n                    \n\n                    \n                        Selector\n                        map-polygon\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _polygonAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _polygonOptionsAttributes\n                            \n                            \n                                    Private\n                                _subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addEventListeners\n                            \n                            \n                                    Private\n                                _init\n                            \n                            \n                                    Private\n                                _updatePolygonOptions\n                            \n                            \n                                id\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                editable\n                            \n                            \n                                fillColor\n                            \n                            \n                                fillOpacity\n                            \n                            \n                                geodesic\n                            \n                            \n                                paths\n                            \n                            \n                                polyDraggable\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                polyClick\n                            \n                            \n                                polyDblClick\n                            \n                            \n                                polyDrag\n                            \n                            \n                                polyDragEnd\n                            \n                            \n                                polyDragStart\n                            \n                            \n                                polyMouseDown\n                            \n                            \n                                polyMouseMove\n                            \n                            \n                                polyMouseOut\n                            \n                            \n                                polyMouseOver\n                            \n                            \n                                polyMouseUp\n                            \n                            \n                                polyRightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_polygonManager: PolygonManager)\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/directives/polygon.ts:200\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _polygonManager\n                                                  \n                                                        \n                                                                        PolygonManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:25\n                            \n                        \n                \n                    \n                        Indicates whether this Polygon handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:38\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this shape by dragging the control\npoints shown at the vertices and on each segment. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:44\n                            \n                        \n                \n                    \n                        The fill color. All CSS3 colors are supported except for extended\nnamed colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:49\n                            \n                        \n                \n                    \n                        The fill opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        geodesic\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:58\n                            \n                        \n                \n                    \n                        When true, edges of the polygon are interpreted as geodesic and will\nfollow the curvature of the Earth. When false, edges of the polygon are\nrendered as straight lines in screen space. Note that the shape of a\ngeodesic polygon may appear to change when dragged, as the dimensions\nare maintained relative to the surface of the earth. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        paths\n                    \n                \n                \n                    \n                        Type :     Array | Array | Array> | Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:71\n                            \n                        \n                \n                    \n                        The ordered sequence of coordinates that designates a closed loop.\nUnlike polylines, a polygon may consist of one or more paths.\n  As a result, the paths property may specify one or more arrays of\nLatLng coordinates. Paths are closed automatically; do not repeat the\nfirst vertex of the path as the last vertex. Simple polygons may be\ndefined using a single array of LatLngs. More complex polygons may\nspecify an array of arrays. Any simple arrays are converted into Arrays.\nInserting or removing LatLngs from the Array will automatically update\nthe polygon on the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:32\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this shape over the map. The geodesic\nproperty defines the mode of dragging. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:81\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended\nnamed colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:86\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:91\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:96\n                            \n                        \n                \n                    \n                        Whether this polygon is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:101\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        polyClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:106\n                            \n                        \n                \n                    \n                        This event is fired when the DOM click event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:113\n                            \n                        \n                \n                    \n                        This event is fired when the DOM dblclick event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDrag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:120\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:125\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:132\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:139\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:146\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:153\n                            \n                        \n                \n                    \n                        This event is fired on Polygon mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:160\n                            \n                        \n                \n                    \n                        This event is fired on Polygon mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:167\n                            \n                        \n                \n                    \n                        This event is fired whe the DOM mouseup event is fired on the Polygon\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyRightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:174\n                            \n                        \n                \n                    \n                        This even is fired when the Polygon is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _addEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polygon.ts:229\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _init()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polygon.ts:223\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _updatePolygonOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updatePolygonOptions(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polygon.ts:285\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     google.maps.PolygonOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            id\n                        \n                        \n                    \n                \n            \n            \n                \nid()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polygon.ts:297\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polygon.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polygon.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polygon.ts:302\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:198\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _polygonAddedToManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:199\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _polygonOptionsAttributes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'clickable',\n    'draggable',\n    'editable',\n    'fillColor',\n    'fillOpacity',\n    'geodesic',\n    'icon',\n    'map',\n    'paths',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'draggable',\n    'editable',\n    'visible',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:178\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polygon.ts:200\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        Component\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-map',\n  styles: [`\n    map-view {\n      height: 300px;\n    }\n `],\n  templateUrl: './my-map.component.html'\n })\nexport class MyMapComponent {\n  lat: number = 0;\n  lng: number = 0;\n  zoom: number = 10;\n  paths: Array = [\n    { lat: 0,  lng: 10 },\n    { lat: 0,  lng: 20 },\n    { lat: 10, lng: 20 },\n    { lat: 10, lng: 10 },\n    { lat: 0,  lng: 10 }\n  ]\n  // Nesting paths will create a hole where they overlap;\n  nestedPaths: Array> = [[\n    { lat: 0,  lng: 10 },\n    { lat: 0,  lng: 20 },\n    { lat: 10, lng: 20 },\n    { lat: 10, lng: 10 },\n    { lat: 0,  lng: 10 }\n  ], [\n    { lat: 0, lng: 15 },\n    { lat: 0, lng: 20 },\n    { lat: 5, lng: 20 },\n    { lat: 5, lng: 15 },\n    { lat: 0, lng: 15 }\n  ]]\n}Template\n\n  \n\n    \n\n    \n        import {\n  AfterContentInit,\n  Directive,\n  EventEmitter,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { PolygonManager } from '../managers/polygon-manager';\n\n/**\n * NgMapsPolygon renders a polygon on a {@link https://ng-maps.github.io/core/components/NgMapsViewComponent.html|NgMapsView}\n */\n@Directive({\n  selector: 'map-polygon',\n  providers: [PolygonManager],\n})\nexport class NgMapsPolygon implements OnDestroy, OnChanges, AfterContentInit {\n  /**\n   * Indicates whether this Polygon handles mouse events. Defaults to true.\n   */\n  @Input() clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this shape over the map. The geodesic\n   * property defines the mode of dragging. Defaults to false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('polyDraggable') draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this shape by dragging the control\n   * points shown at the vertices and on each segment. Defaults to false.\n   */\n  @Input() editable: boolean = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended\n   * named colors.\n   */\n  @Input() fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0\n   */\n  @Input() fillOpacity: number;\n\n  /**\n   * When true, edges of the polygon are interpreted as geodesic and will\n   * follow the curvature of the Earth. When false, edges of the polygon are\n   * rendered as straight lines in screen space. Note that the shape of a\n   * geodesic polygon may appear to change when dragged, as the dimensions\n   * are maintained relative to the surface of the earth. Defaults to false.\n   */\n  @Input() geodesic: boolean = false;\n\n  /**\n   * The ordered sequence of coordinates that designates a closed loop.\n   * Unlike polylines, a polygon may consist of one or more paths.\n   *  As a result, the paths property may specify one or more arrays of\n   * LatLng coordinates. Paths are closed automatically; do not repeat the\n   * first vertex of the path as the last vertex. Simple polygons may be\n   * defined using a single array of LatLngs. More complex polygons may\n   * specify an array of arrays. Any simple arrays are converted into Arrays.\n   * Inserting or removing LatLngs from the Array will automatically update\n   * the polygon on the map.\n   */\n  @Input() paths:\n    | Array\n    | Array\n    | Array>\n    | Array> = [];\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended\n   * named colors.\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() strokeWeight: number;\n\n  /**\n   * Whether this polygon is visible on the map. Defaults to true.\n   */\n  @Input() visible: boolean;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * This event is fired when the DOM click event is fired on the Polygon.\n   */\n  @Output() polyClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM dblclick event is fired on the Polygon.\n   */\n  @Output() polyDblClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the polygon.\n   */\n  @Output() polyDrag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the polygon.\n   */\n  @Output() polyDragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the polygon.\n   */\n  @Output() polyDragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the Polygon.\n   */\n  @Output() polyMouseDown: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the Polygon.\n   */\n  @Output() polyMouseMove: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on Polygon mouseout.\n   */\n  @Output() polyMouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on Polygon mouseover.\n   */\n  @Output() polyMouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired whe the DOM mouseup event is fired on the Polygon\n   */\n  @Output() polyMouseUp: EventEmitter = new EventEmitter();\n\n  /**\n   * This even is fired when the Polygon is right-clicked on.\n   */\n  @Output() polyRightClick: EventEmitter = new EventEmitter();\n\n  private static _polygonOptionsAttributes: Array = [\n    'clickable',\n    'draggable',\n    'editable',\n    'fillColor',\n    'fillOpacity',\n    'geodesic',\n    'icon',\n    'map',\n    'paths',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'draggable',\n    'editable',\n    'visible',\n  ];\n\n  private _id: string;\n  private _polygonAddedToManager: boolean = false;\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private _polygonManager: PolygonManager) {}\n\n  /** @internal */\n  ngAfterContentInit() {\n    if (!this._polygonAddedToManager) {\n      this._init();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): any {\n    if (!this._polygonAddedToManager) {\n      this._init();\n      return;\n    }\n\n    this._polygonManager.setPolygonOptions(\n      this,\n      this._updatePolygonOptions(changes),\n    );\n  }\n\n  private _init() {\n    this._polygonManager.addPolygon(this);\n    this._polygonAddedToManager = true;\n    this._addEventListeners();\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      {\n        name: 'click',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyClick.emit(ev),\n      },\n      {\n        name: 'dblclick',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyDblClick.emit(ev),\n      },\n      { name: 'drag', handler: (ev: MouseEvent) => this.polyDrag.emit(ev) },\n      {\n        name: 'dragend',\n        handler: (ev: MouseEvent) => this.polyDragEnd.emit(ev),\n      },\n      {\n        name: 'dragstart',\n        handler: (ev: MouseEvent) => this.polyDragStart.emit(ev),\n      },\n      {\n        name: 'mousedown',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyMouseDown.emit(ev),\n      },\n      {\n        name: 'mousemove',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyMouseMove.emit(ev),\n      },\n      {\n        name: 'mouseout',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyMouseOut.emit(ev),\n      },\n      {\n        name: 'mouseover',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyMouseOver.emit(ev),\n      },\n      {\n        name: 'mouseup',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyMouseUp.emit(ev),\n      },\n      {\n        name: 'rightclick',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyRightClick.emit(ev),\n      },\n    ];\n    handlers.forEach((obj) => {\n      const os = this._polygonManager\n        .createEventObservable(obj.name, this)\n        .subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n  }\n\n  private _updatePolygonOptions(\n    changes: SimpleChanges,\n  ): google.maps.PolygonOptions {\n    return Object.keys(changes)\n      .filter((k) => NgMapsPolygon._polygonOptionsAttributes.indexOf(k) !== -1)\n      .reduce((obj: any, k: string) => {\n        obj[k] = changes[k].currentValue;\n        return obj;\n      }, {});\n  }\n\n  /** @internal */\n  id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._polygonManager.deletePolygon(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsPolyline.html":{"url":"directives/NgMapsPolyline.html","title":"directive - NgMapsPolyline","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsPolyline\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/shapes/src/lib/directives/polyline.ts\n        \n\n            \n                Description\n            \n            \n                NgMapsPolyline renders a polyline on a NgMapsView\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                PolylineManager\n                            \n                        \n                    \n\n                    \n                        Selector\n                        map-polyline\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _polylineAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _polylineOptionsAttributes\n                            \n                            \n                                    Private\n                                _subscriptions\n                            \n                            \n                                points\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addEventListeners\n                            \n                            \n                                _getPoints\n                            \n                            \n                                    Private\n                                _init\n                            \n                            \n                                id\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                editable\n                            \n                            \n                                geodesic\n                            \n                            \n                                icons\n                            \n                            \n                                polylineDraggable\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                lineClick\n                            \n                            \n                                lineDblClick\n                            \n                            \n                                lineDrag\n                            \n                            \n                                lineDragEnd\n                            \n                            \n                                lineDragStart\n                            \n                            \n                                lineMouseDown\n                            \n                            \n                                lineMouseMove\n                            \n                            \n                                lineMouseOut\n                            \n                            \n                                lineMouseOver\n                            \n                            \n                                lineMouseUp\n                            \n                            \n                                lineRightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_polylineManager: PolylineManager)\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/directives/polyline.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _polylineManager\n                                                  \n                                                        \n                                                                        PolylineManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:45\n                            \n                        \n                \n                    \n                        Indicates whether this Polyline handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:58\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this shape by dragging the control points shown at the\nvertices and on each segment. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        geodesic\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:66\n                            \n                        \n                \n                    \n                        When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\nthe Earth. When false, edges of the polygon are rendered as straight lines in screen space.\nNote that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\nare maintained relative to the surface of the earth. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        icons\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:86\n                            \n                        \n                \n                    \n                        The icons to be rendered along the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polylineDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:52\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this shape over the map. The geodesic property defines the\nmode of dragging. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:71\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:76\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:81\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:91\n                            \n                        \n                \n                    \n                        Whether this polyline is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:96\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        lineClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:101\n                            \n                        \n                \n                    \n                        This event is fired when the DOM click event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:106\n                            \n                        \n                \n                    \n                        This event is fired when the DOM dblclick event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDrag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:111\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:116\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:121\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:126\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:131\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:136\n                            \n                        \n                \n                    \n                        This event is fired on Polyline mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:141\n                            \n                        \n                \n                    \n                        This event is fired on Polyline mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:146\n                            \n                        \n                \n                    \n                        This event is fired whe the DOM mouseup event is fired on the Polyline\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineRightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:151\n                            \n                        \n                \n                    \n                        This even is fired when the Polyline is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _addEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polyline.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            _getPoints\n                        \n                        \n                    \n                \n            \n            \n                \n_getPoints()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polyline.ts:259\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _init()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polyline.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            id\n                        \n                        \n                    \n                \n            \n            \n                \nid()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polyline.ts:267\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polyline.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polyline.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polyline.ts:272\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:158\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _polylineAddedToManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:159\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _polylineOptionsAttributes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'draggable',\n    'editable',\n    'visible',\n    'geodesic',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'zIndex',\n    'icons',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:160\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            points\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(NgMapsPolylinePoint)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline.ts:156\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        Polyline\nExample\nComponent\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-map',\n  styles: [`\n    .agm-map-container {\n      height: 300px;\n    }\n `],\n  templateUrl: './my-map.component.html'\n})\nexport class MyMapComponent {}Template\n\n  \n    \n    \n    \n    \n  \n\n    \n\n    \n        import {\n  AfterContentInit,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  QueryList,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { PolylineManager } from '../managers/polyline-manager';\nimport { NgMapsPolylinePoint } from './polyline-point';\n\nlet polylineId = 0;\n\n/**\n * NgMapsPolyline renders a polyline on a {@link https://ng-maps.github.io/core/components/NgMapsViewComponent.html|NgMapsView}\n */\n@Directive({\n  selector: 'map-polyline',\n  providers: [PolylineManager],\n})\nexport class NgMapsPolyline implements OnDestroy, OnChanges, AfterContentInit {\n  constructor(private _polylineManager: PolylineManager) {\n    this._id = (polylineId++).toString();\n  }\n\n  private static _polylineOptionsAttributes: Array = [\n    'draggable',\n    'editable',\n    'visible',\n    'geodesic',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'zIndex',\n    'icons',\n  ];\n  /**\n   * Indicates whether this Polyline handles mouse events. Defaults to true.\n   */\n  @Input() clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this shape over the map. The geodesic property defines the\n   * mode of dragging. Defaults to false.\n   */\n    // tslint:disable-next-line:no-input-rename\n  @Input('polylineDraggable') draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this shape by dragging the control points shown at the\n   * vertices and on each segment. Defaults to false.\n   */\n  @Input() editable: boolean = false;\n\n  /**\n   * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n   * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n   * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n   * are maintained relative to the surface of the earth. Defaults to false.\n   */\n  @Input() geodesic: boolean = false;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0.\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() strokeWeight: number;\n\n  /**\n   * The icons to be rendered along the polyline.\n   */\n  @Input() icons: Array;\n\n  /**\n   * Whether this polyline is visible on the map. Defaults to true.\n   */\n  @Input() visible: boolean = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * This event is fired when the DOM click event is fired on the Polyline.\n   */\n  @Output() lineClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM dblclick event is fired on the Polyline.\n   */\n  @Output() lineDblClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the polyline.\n   */\n  @Output() lineDrag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the polyline.\n   */\n  @Output() lineDragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the polyline.\n   */\n  @Output() lineDragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the Polyline.\n   */\n  @Output() lineMouseDown: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the Polyline.\n   */\n  @Output() lineMouseMove: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on Polyline mouseout.\n   */\n  @Output() lineMouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on Polyline mouseover.\n   */\n  @Output() lineMouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired whe the DOM mouseup event is fired on the Polyline\n   */\n  @Output() lineMouseUp: EventEmitter = new EventEmitter();\n\n  /**\n   * This even is fired when the Polyline is right-clicked on.\n   */\n  @Output() lineRightClick: EventEmitter = new EventEmitter();\n\n  /**\n   * @internal\n   */\n  @ContentChildren(NgMapsPolylinePoint) points: QueryList;\n\n  private _id: string;\n  private _polylineAddedToManager: boolean = false;\n  private _subscriptions: Subscription[] = [];\n\n  /** @internal */\n  ngAfterContentInit() {\n    if (this.points.length) {\n      this.points.forEach((point: NgMapsPolylinePoint) => {\n        const subscription = point.positionChanged.subscribe(() => {\n          this._polylineManager.updatePolylinePoints(this);\n        });\n        this._subscriptions.push(subscription);\n      });\n    }\n    if (!this._polylineAddedToManager) {\n      this._init();\n    }\n    const s = this.points.changes.subscribe(() =>\n      this._polylineManager.updatePolylinePoints(this),\n    );\n    this._subscriptions.push(s);\n    this._polylineManager.updatePolylinePoints(this);\n  }\n\n  ngOnChanges(changes: SimpleChanges): any {\n    if (!this._polylineAddedToManager) {\n      this._init();\n      return;\n    }\n\n    const options: { [propName: string]: any } = {};\n    const optionKeys = Object.keys(changes).filter(\n      (k) => NgMapsPolyline._polylineOptionsAttributes.indexOf(k) !== -1,\n    );\n    optionKeys.forEach((k) => (options[k] = changes[k].currentValue));\n    this._polylineManager.setPolylineOptions(this, options);\n  }\n\n  private _init() {\n    this._polylineManager.addPolyline(this);\n    this._polylineAddedToManager = true;\n    this._addEventListeners();\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      {\n        name: 'click',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineClick.emit(ev),\n      },\n      {\n        name: 'dblclick',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineDblClick.emit(ev),\n      },\n      { name: 'drag', handler: (ev: MouseEvent) => this.lineDrag.emit(ev) },\n      {\n        name: 'dragend',\n        handler: (ev: MouseEvent) => this.lineDragEnd.emit(ev),\n      },\n      {\n        name: 'dragstart',\n        handler: (ev: MouseEvent) => this.lineDragStart.emit(ev),\n      },\n      {\n        name: 'mousedown',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineMouseDown.emit(ev),\n      },\n      {\n        name: 'mousemove',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineMouseMove.emit(ev),\n      },\n      {\n        name: 'mouseout',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineMouseOut.emit(ev),\n      },\n      {\n        name: 'mouseover',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineMouseOver.emit(ev),\n      },\n      {\n        name: 'mouseup',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineMouseUp.emit(ev),\n      },\n      {\n        name: 'rightclick',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineRightClick.emit(ev),\n      },\n    ];\n    handlers.forEach((obj) => {\n      const os = this._polylineManager\n        .createEventObservable(obj.name, this)\n        .subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n  }\n\n  /** @internal */\n  _getPoints(): Array {\n    if (this.points) {\n      return this.points.toArray();\n    }\n    return [];\n  }\n\n  /** @internal */\n  id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._polylineManager.deletePolyline(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsPolylinePoint.html":{"url":"directives/NgMapsPolylinePoint.html","title":"directive - NgMapsPolylinePoint","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsPolylinePoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/shapes/src/lib/directives/polyline-point.ts\n        \n\n            \n                Description\n            \n            \n                NgMapsPolylinePoint represents one element of a polyline within a  NgMapsPolyline\n\n            \n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map-polyline-point\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                positionChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/directives/polyline-point.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline-point.ts:21\n                            \n                        \n                \n                    \n                        The latitude position of the point.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline-point.ts:26\n                            \n                        \n                \n                    \n                        The longitude position of the point;\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        positionChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/polyline-point.ts:31\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the position of the point changed.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/polyline-point.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\n\n/**\n * NgMapsPolylinePoint represents one element of a polyline within a  {@link\n * NgMapsPolyline}\n */\n@Directive({\n  selector: 'map-polyline-point',\n})\nexport class NgMapsPolylinePoint implements OnChanges {\n  /**\n   * The latitude position of the point.\n   */\n  @Input() public latitude: number;\n\n  /**\n   * The longitude position of the point;\n   */\n  @Input() public longitude: number;\n\n  /**\n   * This event emitter gets emitted when the position of the point changed.\n   */\n  @Output() positionChanged: EventEmitter = new EventEmitter();\n\n  constructor() {}\n\n  ngOnChanges(changes: SimpleChanges): any {\n    if (changes.latitude || changes.longitude) {\n      const position: google.maps.LatLngLiteral = {\n        lat: changes.latitude ? changes.latitude.currentValue : this.latitude,\n        lng: changes.longitude\n          ? changes.longitude.currentValue\n          : this.longitude,\n      } as google.maps.LatLngLiteral;\n      this.positionChanged.emit(position);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsRectangle.html":{"url":"directives/NgMapsRectangle.html","title":"directive - NgMapsRectangle","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsRectangle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/shapes/src/lib/directives/rectangle.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnChanges\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                RectangleManager\n                            \n                        \n                    \n\n                    \n                        Selector\n                        map-rectangle\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _eventSubscriptions\n                            \n                            \n                                    Private\n                                    Static\n                                _mapOptions\n                            \n                            \n                                    Private\n                                _rectangleAddedToManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerEventListeners\n                            \n                            \n                                    Private\n                                _updateRectangleOptionsChanges\n                            \n                            \n                                getBounds\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                east\n                            \n                            \n                                editable\n                            \n                            \n                                fillColor\n                            \n                            \n                                fillOpacity\n                            \n                            \n                                north\n                            \n                            \n                                rectangleDraggable\n                            \n                            \n                                south\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokePosition\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                west\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                boundsChange\n                            \n                            \n                                drag\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragStart\n                            \n                            \n                                mouseDown\n                            \n                            \n                                mouseMove\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                mouseUp\n                            \n                            \n                                rectangleClick\n                            \n                            \n                                rectangleDblClick\n                            \n                            \n                                rightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_manager: RectangleManager)\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/directives/rectangle.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _manager\n                                                  \n                                                        \n                                                                        RectangleManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:55\n                            \n                        \n                \n                    \n                        Indicates whether this Rectangle handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        east\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:40\n                            \n                        \n                \n                    \n                        The east position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:67\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this rectangle by dragging the control points shown at\nthe center and around the circumference of the rectangle. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:72\n                            \n                        \n                \n                    \n                        The fill color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:77\n                            \n                        \n                \n                    \n                        The fill opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        north\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:35\n                            \n                        \n                \n                    \n                        The north position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:61\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this rectangle over the map. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        south\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:45\n                            \n                        \n                \n                    \n                        The south position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:82\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:87\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokePosition\n                    \n                \n                \n                    \n                        Type :     \"CENTER\" | \"INSIDE\" | \"OUTSIDE\"\n\n                    \n                \n                \n                    \n                        Default value : 'CENTER'\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:93\n                            \n                        \n                \n                    \n                        The stroke position. Defaults to CENTER.\nThis property is not supported on Internet Explorer 8 and earlier.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:98\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:103\n                            \n                        \n                \n                    \n                        Whether this rectangle is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        west\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:50\n                            \n                        \n                \n                    \n                        The west position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:108\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        boundsChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:114\n                            \n                        \n                \n                    \n                        This event is fired when the rectangle's is changed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        drag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:133\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:138\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:144\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:150\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:156\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:161\n                            \n                        \n                \n                    \n                        This event is fired on rectangle mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:167\n                            \n                        \n                \n                    \n                        This event is fired on rectangle mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:172\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mouseup event is fired on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:122\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:128\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:178\n                            \n                        \n                \n                    \n                        This event is fired when the rectangle is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _registerEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _registerEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/rectangle.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _updateRectangleOptionsChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateRectangleOptionsChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/rectangle.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/rectangle.ts:280\n                \n            \n\n\n            \n                \n                    Gets the LatLngBounds of this Rectangle.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/rectangle.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/rectangle.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/directives/rectangle.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _eventSubscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:182\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _mapOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _rectangleAddedToManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/directives/rectangle.ts:180\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChange,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { RectangleManager } from '../managers/rectangle-manager';\n\n@Directive({\n  selector: 'map-rectangle',\n  providers: [RectangleManager],\n})\nexport class NgMapsRectangle implements OnInit, OnChanges, OnDestroy {\n  constructor(private _manager: RectangleManager) {}\n\n  private static _mapOptions: string[] = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ];\n  /**\n   * The north position of the rectangle (required).\n   */\n  @Input() north: number;\n\n  /**\n   * The east position of the rectangle (required).\n   */\n  @Input() east: number;\n\n  /**\n   * The south position of the rectangle (required).\n   */\n  @Input() south: number;\n\n  /**\n   * The west position of the rectangle (required).\n   */\n  @Input() west: number;\n\n  /**\n   * Indicates whether this Rectangle handles mouse events. Defaults to true.\n   */\n  @Input() clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this rectangle over the map. Defaults to false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('rectangleDraggable') draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this rectangle by dragging the control points shown at\n   * the center and around the circumference of the rectangle. Defaults to false.\n   */\n  @Input() editable: boolean = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0.\n   */\n  @Input() fillOpacity: number;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The stroke position. Defaults to CENTER.\n   * This property is not supported on Internet Explorer 8 and earlier.\n   */\n  @Input() strokePosition: 'CENTER' | 'INSIDE' | 'OUTSIDE' = 'CENTER';\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() strokeWeight: number = 0;\n\n  /**\n   * Whether this rectangle is visible on the map. Defaults to true.\n   */\n  @Input() visible: boolean = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * This event is fired when the rectangle's is changed.\n   */\n  @Output()\n  boundsChange: EventEmitter = new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the rectangle.\n   */\n  @Output()\n  rectangleClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the rectangle.\n   */\n  @Output()\n  rectangleDblClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the rectangle.\n   */\n  @Output() drag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the rectangle.\n   */\n  @Output() dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the rectangle.\n   */\n  @Output()\n  dragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the rectangle.\n   */\n  @Output()\n  mouseDown: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the rectangle.\n   */\n  @Output()\n  mouseMove: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on rectangle mouseout.\n   */\n  @Output() mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on rectangle mouseover.\n   */\n  @Output()\n  mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mouseup event is fired on the rectangle.\n   */\n  @Output() mouseUp: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the rectangle is right-clicked on.\n   */\n  @Output()\n  rightClick: EventEmitter = new EventEmitter();\n\n  private _rectangleAddedToManager: boolean = false;\n\n  private _eventSubscriptions: Subscription[] = [];\n\n  /** @internal */\n  ngOnInit() {\n    this._manager.addRectangle(this);\n    this._rectangleAddedToManager = true;\n    this._registerEventListeners();\n  }\n\n  /** @internal */\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (!this._rectangleAddedToManager) {\n      return;\n    }\n    if (changes.north || changes.east || changes.south || changes.west) {\n      this._manager.setBounds(this);\n    }\n    if (changes.editable) {\n      this._manager.setEditable(this);\n    }\n    if (changes.draggable) {\n      this._manager.setDraggable(this);\n    }\n    if (changes.visible) {\n      this._manager.setVisible(this);\n    }\n    this._updateRectangleOptionsChanges(changes);\n  }\n\n  private _updateRectangleOptionsChanges(changes: {\n    [propName: string]: SimpleChange;\n  }) {\n    const options: { [propName: string]: any } = {};\n    const optionKeys = Object.keys(changes).filter(\n      (k) => NgMapsRectangle._mapOptions.indexOf(k) !== -1,\n    );\n    optionKeys.forEach((k) => {\n      options[k] = changes[k].currentValue;\n    });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  private _registerEventListeners() {\n    const events: Map> = new Map\n    >();\n    events.set('bounds_changed', this.boundsChange);\n    events.set('click', this.rectangleClick);\n    events.set('dblclick', this.rectangleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragStart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('rightclick', this.rightClick);\n\n    events.forEach((eventEmitter, eventName) => {\n      this._eventSubscriptions.push(\n        this._manager\n          .createEventObservable(eventName, this)\n          .subscribe((value) => {\n            switch (eventName) {\n              case 'bounds_changed':\n                this._manager.getBounds(this).then((bounds) =>\n                  eventEmitter.emit({\n                    north: bounds.getNorthEast().lat(),\n                    east: bounds.getNorthEast().lng(),\n                    south: bounds.getSouthWest().lat(),\n                    west: bounds.getSouthWest().lng(),\n                  } as google.maps.LatLngBoundsLiteral),\n                );\n                break;\n              default:\n                eventEmitter.emit(value);\n            }\n          }),\n      );\n    });\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._eventSubscriptions.forEach((s: Subscription) => {\n      s.unsubscribe();\n    });\n    this._eventSubscriptions = null;\n    this._manager.removeRectangle(this);\n  }\n\n  /**\n   * Gets the LatLngBounds of this Rectangle.\n   */\n  getBounds(): Promise {\n    return this._manager.getBounds(this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgMapsShapesModule.html":{"url":"modules/NgMapsShapesModule.html","title":"module - NgMapsShapesModule","body":"\n                   \n\n\n\n\n    Modules\n    NgMapsShapesModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/shapes/src/lib/shapes.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgMapsCircle } from './directives/circle';\nimport { NgMapsPolygon } from './directives/polygon';\nimport { NgMapsPolyline } from './directives/polyline';\nimport { NgMapsPolylinePoint } from './directives/polyline-point';\nimport { NgMapsRectangle } from './directives/rectangle';\n\n/**\n * @internal\n */\nexport function shapesDirectives() {\n  return [\n    NgMapsCircle,\n    NgMapsPolygon,\n    NgMapsPolyline,\n    NgMapsPolylinePoint,\n    NgMapsRectangle,\n  ];\n}\n\n@NgModule({\n  declarations: shapesDirectives(),\n  exports: shapesDirectives(),\n})\nexport class NgMapsShapesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PolygonManager.html":{"url":"injectables/PolygonManager.html","title":"injectable - PolygonManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PolygonManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/shapes/src/lib/managers/polygon-manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _polygons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPolygon\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                deletePolygon\n                            \n                            \n                                setPolygonOptions\n                            \n                            \n                                    Async\n                                updatePolygon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: GoogleMapsAPIWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/managers/polygon-manager.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    GoogleMapsAPIWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addPolygon\n                        \n                        \n                    \n                \n            \n            \n                \naddPolygon(path: NgMapsPolygon)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polygon-manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, path: NgMapsPolygon)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polygon-manager.ts:70\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                            NgMapsPolygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePolygon\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePolygon(paths: NgMapsPolygon)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polygon-manager.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            NgMapsPolygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPolygonOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetPolygonOptions(path: NgMapsPolygon, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polygon-manager.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updatePolygon\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolygon(polygon: NgMapsPolygon)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polygon-manager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    polygon\n                                    \n                                            NgMapsPolygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _polygons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map>\n\n                        \n                    \n                    \n                        \n                            Default value : new Map\n  >()\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/managers/polygon-manager.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { NgMapsPolygon } from '../directives/polygon';\nimport { GoogleMapsAPIWrapper, NgMapsViewComponent } from '@ng-maps/core';\n\n@Injectable({\n  providedIn: NgMapsViewComponent,\n})\nexport class PolygonManager {\n  private _polygons: Map> = new Map\n  >();\n\n  constructor(\n    private _mapsWrapper: GoogleMapsAPIWrapper,\n    private _zone: NgZone,\n  ) {}\n\n  addPolygon(path: NgMapsPolygon) {\n    const polygonPromise = this._mapsWrapper.createPolygon({\n      clickable: path.clickable,\n      draggable: path.draggable,\n      editable: path.editable,\n      fillColor: path.fillColor,\n      fillOpacity: path.fillOpacity,\n      geodesic: path.geodesic,\n      paths: path.paths,\n      strokeColor: path.strokeColor,\n      strokeOpacity: path.strokeOpacity,\n      strokeWeight: path.strokeWeight,\n      visible: path.visible,\n      zIndex: path.zIndex,\n    });\n    this._polygons.set(path, polygonPromise);\n  }\n\n  async updatePolygon(polygon: NgMapsPolygon): Promise {\n    const item = await this._polygons.get(polygon);\n    if (item != null) {\n      this._zone.run(() => {\n        item.setPaths(polygon.paths);\n      });\n    }\n  }\n\n  setPolygonOptions(\n    path: NgMapsPolygon,\n    options: { [propName: string]: any },\n  ): Promise {\n    return this._polygons.get(path).then((l: google.maps.Polygon) => {\n      l.setOptions(options);\n    });\n  }\n\n  deletePolygon(paths: NgMapsPolygon): Promise {\n    const m = this._polygons.get(paths);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polygon) => {\n      return this._zone.run(() => {\n        l.setMap(null);\n        this._polygons.delete(paths);\n      });\n    });\n  }\n\n  createEventObservable(\n    eventName: string,\n    path: NgMapsPolygon,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      this._polygons.get(path).then((l: google.maps.Polygon) => {\n        l.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PolylineManager.html":{"url":"injectables/PolylineManager.html","title":"injectable - PolylineManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PolylineManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/shapes/src/lib/managers/polyline-manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _polylines\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _convertPoints\n                            \n                            \n                                addPolyline\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                deletePolyline\n                            \n                            \n                                setPolylineOptions\n                            \n                            \n                                updatePolylinePoints\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: GoogleMapsAPIWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/managers/polyline-manager.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    GoogleMapsAPIWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _convertPoints\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _convertPoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polyline-manager.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addPolyline\n                        \n                        \n                    \n                \n            \n            \n                \naddPolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polyline-manager.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polyline-manager.ts:86\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePolyline\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polyline-manager.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPolylineOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetPolylineOptions(line: NgMapsPolyline, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polyline-manager.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePolylinePoints\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePolylinePoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/polyline-manager.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _polylines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map>\n\n                        \n                    \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/managers/polyline-manager.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { GoogleMapsAPIWrapper, NgMapsViewComponent } from '@ng-maps/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { NgMapsPolyline } from '../directives/polyline';\nimport { NgMapsPolylinePoint } from '../directives/polyline-point';\n\n@Injectable({\n  providedIn: NgMapsViewComponent,\n})\nexport class PolylineManager {\n  private _polylines: Map\n  > = new Map>();\n\n  constructor(\n    private _mapsWrapper: GoogleMapsAPIWrapper,\n    private _zone: NgZone,\n  ) {}\n\n  private _convertPoints(\n    line: NgMapsPolyline,\n  ): Array {\n    return line._getPoints().map((point: NgMapsPolylinePoint) => {\n      return {\n        lat: point.latitude,\n        lng: point.longitude,\n      } as google.maps.LatLngLiteral;\n    });\n  }\n\n  addPolyline(line: NgMapsPolyline) {\n    const path = this._convertPoints(line);\n    const polylinePromise = this._mapsWrapper.createPolyline({\n      clickable: line.clickable,\n      draggable: line.draggable,\n      editable: line.editable,\n      geodesic: line.geodesic,\n      strokeColor: line.strokeColor,\n      strokeOpacity: line.strokeOpacity,\n      strokeWeight: line.strokeWeight,\n      visible: line.visible,\n      zIndex: line.zIndex,\n      icons: line.icons,\n      path,\n    });\n    this._polylines.set(line, polylinePromise);\n  }\n\n  updatePolylinePoints(line: NgMapsPolyline): Promise {\n    const path = this._convertPoints(line);\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polyline) =>\n      this._zone.run(() => {\n        l.setPath(path);\n      }),\n    );\n  }\n\n  setPolylineOptions(\n    line: NgMapsPolyline,\n    options: { [propName: string]: any },\n  ): Promise {\n    return this._polylines.get(line).then((l: google.maps.Polyline) => {\n      l.setOptions(options);\n    });\n  }\n\n  deletePolyline(line: NgMapsPolyline): Promise {\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polyline) => {\n      return this._zone.run(() => {\n        l.setMap(null);\n        this._polylines.delete(line);\n      });\n    });\n  }\n\n  createEventObservable(\n    eventName: string,\n    line: NgMapsPolyline,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      this._polylines.get(line).then((l: google.maps.Polyline) => {\n        l.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RectangleManager.html":{"url":"injectables/RectangleManager.html","title":"injectable - RectangleManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RectangleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/shapes/src/lib/managers/rectangle-manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _rectangles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRectangle\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                getBounds\n                            \n                            \n                                removeRectangle\n                            \n                            \n                                setBounds\n                            \n                            \n                                setDraggable\n                            \n                            \n                                setEditable\n                            \n                            \n                                setOptions\n                            \n                            \n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_apiWrapper: GoogleMapsAPIWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _apiWrapper\n                                                  \n                                                        \n                                                                    GoogleMapsAPIWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addRectangle\n                        \n                        \n                    \n                \n            \n            \n                \naddRectangle(rectangle: NgMapsRectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, rectangle: NgMapsRectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:99\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds(rectangle: NgMapsRectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeRectangle\n                        \n                        \n                    \n                \n            \n            \n                \nremoveRectangle(rectangle: NgMapsRectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:52\n                \n            \n\n\n            \n                \n                    Removes the given rectangle from the map.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBounds\n                        \n                        \n                    \n                \n            \n            \n                \nsetBounds(rectangle: NgMapsRectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDraggable\n                        \n                        \n                    \n                \n            \n            \n                \nsetDraggable(rectangle: NgMapsRectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEditable\n                        \n                        \n                    \n                \n            \n            \n                \nsetEditable(rectangle: NgMapsRectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(rectangle: NgMapsRectangle, options: google.maps.RectangleOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.RectangleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVisible\n                        \n                        \n                    \n                \n            \n            \n                \nsetVisible(rectangle: NgMapsRectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _rectangles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map>\n\n                        \n                    \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/shapes/src/lib/managers/rectangle-manager.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { GoogleMapsAPIWrapper, NgMapsViewComponent } from '@ng-maps/core';\n\nimport { Observable, Observer } from 'rxjs';\n\nimport { NgMapsRectangle } from '../directives/rectangle';\n\n@Injectable({\n  providedIn: NgMapsViewComponent,\n})\nexport class RectangleManager {\n  private _rectangles: Map\n  > = new Map>();\n\n  constructor(\n    private _apiWrapper: GoogleMapsAPIWrapper,\n    private _zone: NgZone,\n  ) {}\n\n  addRectangle(rectangle: NgMapsRectangle) {\n    console.log(this._apiWrapper);\n    this._rectangles.set(\n      rectangle,\n      this._apiWrapper.createRectangle({\n        bounds: {\n          north: rectangle.north,\n          east: rectangle.east,\n          south: rectangle.south,\n          west: rectangle.west,\n        },\n        clickable: rectangle.clickable,\n        draggable: rectangle.draggable,\n        editable: rectangle.editable,\n        fillColor: rectangle.fillColor,\n        fillOpacity: rectangle.fillOpacity,\n        strokeColor: rectangle.strokeColor,\n        strokeOpacity: rectangle.strokeOpacity,\n        // @ts-ignore\n        strokePosition: rectangle.strokePosition,\n        strokeWeight: rectangle.strokeWeight,\n        visible: rectangle.visible,\n        zIndex: rectangle.zIndex,\n      }),\n    );\n  }\n\n  /**\n   * Removes the given rectangle from the map.\n   */\n  removeRectangle(rectangle: NgMapsRectangle): Promise {\n    return this._rectangles.get(rectangle).then((r) => {\n      r.setMap(null);\n      this._rectangles.delete(rectangle);\n    });\n  }\n\n  setOptions(\n    rectangle: NgMapsRectangle,\n    options: google.maps.RectangleOptions,\n  ): Promise {\n    return this._rectangles.get(rectangle).then((r) => r.setOptions(options));\n  }\n\n  getBounds(rectangle: NgMapsRectangle): Promise {\n    return this._rectangles.get(rectangle).then((r) => r.getBounds());\n  }\n\n  setBounds(rectangle: NgMapsRectangle): Promise {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setBounds({\n        north: rectangle.north,\n        east: rectangle.east,\n        south: rectangle.south,\n        west: rectangle.west,\n      });\n    });\n  }\n\n  setEditable(rectangle: NgMapsRectangle): Promise {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setEditable(rectangle.editable);\n    });\n  }\n\n  setDraggable(rectangle: NgMapsRectangle): Promise {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setDraggable(rectangle.draggable);\n    });\n  }\n\n  setVisible(rectangle: NgMapsRectangle): Promise {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setVisible(rectangle.visible);\n    });\n  }\n\n  createEventObservable(\n    eventName: string,\n    rectangle: NgMapsRectangle,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      let listener: google.maps.MapsEventListener = null;\n      this._rectangles.get(rectangle).then((r) => {\n        listener = r.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/shapes/src/lib/directives/circle.ts\n            \n            directive\n            NgMapsCircle\n            \n                71 %\n                (28/39)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/directives/polygon.ts\n            \n            directive\n            NgMapsPolygon\n            \n                66 %\n                (24/36)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/directives/polyline-point.ts\n            \n            directive\n            NgMapsPolylinePoint\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/directives/polyline.ts\n            \n            directive\n            NgMapsPolyline\n            \n                62 %\n                (22/35)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/directives/polyline.ts\n            \n            variable\n            polylineId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/directives/rectangle.ts\n            \n            directive\n            NgMapsRectangle\n            \n                73 %\n                (28/38)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/managers/circle-manager.ts\n            \n            injectable\n            CircleManager\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/managers/polygon-manager.ts\n            \n            injectable\n            PolygonManager\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/managers/polyline-manager.ts\n            \n            injectable\n            PolylineManager\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/managers/rectangle-manager.ts\n            \n            injectable\n            RectangleManager\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/shapes/src/lib/shapes.module.ts\n            \n            function\n            shapesDirectives\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.1.0\n        \n            @angular/common : ~8.1.0\n        \n            @angular/compiler : ~8.1.0\n        \n            @angular/core : ~8.1.0\n        \n            @angular/forms : ~8.1.0\n        \n            @angular/platform-browser : ~8.1.0\n        \n            @angular/platform-browser-dynamic : ~8.1.0\n        \n            @angular/router : ~8.1.0\n        \n            @google/markerclusterer : ^1.0.3\n        \n            rxjs : ~6.5.2\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            shapesDirectives   (projects/.../shapes.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/shapes/src/lib/shapes.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            shapesDirectives\n                        \n                        \n                    \n                \n            \n            \n                \nshapesDirectives()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgMaps\n\n\n\nPackages\nThis project is a mono repo and hosts multiple packages:\n\n\n\nPackage\nVersion\nDocs\n\n\n\n\n@ng-maps/core\n\nDocs README\n\n\n@ng-maps/snazzy-info-window\n\n\n\n\n@ng-maps/marker-clusterer\n\nDocs README\n\n\n@ng-maps/places\n\nDocs\n\n\n@ng-maps/data-layer\n\n\n\n\n@ng-maps/kml-layer\n\n\n\n\n@ng-maps/drawing-layer\n\n\n\n\n@ng-maps/shapes\n\nDocs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 ng-maps\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgMapsShapesModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            polylineId   (projects/.../polyline.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/shapes/src/lib/directives/polyline.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            polylineId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
