var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ClusterIconInfo.html",[0,1.098,1,1.883]],["body/interfaces/ClusterIconInfo.html",[0,1.062,1,2.491,2,1.052,3,0.325,4,0.325,5,0.537,6,0.941,7,1.184,8,1.184,9,1.447,10,3.197,11,2.137,12,0.864,13,2.36,14,4.159,15,2.53,16,3.222,17,3.309,18,2.137,19,1.573,20,0.04,21,4.32,22,4.159,23,4.32,24,2.419,25,2.947,26,0.491,27,1.17,28,3.571,29,3.98,30,0.526,31,1.374,32,0.501,33,3.924,34,1.573,35,0.367,36,1.573,37,2.841,38,0.458,39,1.052,40,1.573,41,2.077,42,2.53,43,1.35,44,2.419,45,1.35,46,1.573,47,1.35,48,1.971,49,1.35,50,1.821,51,2.419,52,0.764,53,1.573,54,1.35,55,1.573,56,2.841,57,0.624,58,3.03,59,1.573,60,2.419,61,2.419,62,1.573,63,1.35,64,1.573,65,1.052,66,1.573,67,1.573,68,1.35,69,2.841,70,1.573,71,2.419,72,1.35,73,1.573,74,1.573,75,1.35,76,1.573,77,1.35,78,1.573,79,1.35,80,1.573,81,1.35,82,2.53,83,2.419,84,1.35,85,1.573,86,1.35,87,1.35,88,2.947,89,1.573,90,1.573,91,2.077,92,1.573,93,1.573,94,1.98,95,1.573,96,1.573,97,2.947,98,1.573,99,1.573,100,1.573,101,1.573,102,1.573,103,3.309,104,2.077,105,1.573,106,1.573,107,1.573,108,1.573,109,3.771,110,1.573,111,1.35,112,1.573,113,2.077,114,1.573,115,1.573,116,1.573,117,1.573,118,1.35,119,0.411,120,2.53,121,1.573,122,2.947,123,3.197,124,1.35,125,1.573,126,1.573,127,1.573,128,2.947,129,1.573,130,1.573,131,1.573,132,1.573,133,2.53,134,1.573,135,2.419,136,2.419,137,1.573,138,1.573,139,0.564,140,1.573,141,0.705,142,1.573,143,0.864,144,2.077,145,0.632,146,2.419,147,1.573,148,1.573,149,1.573,150,1.573,151,1.573,152,1.573,153,2.419,154,2.419,155,1.052,156,1.573,157,1.573,158,1.573,159,1.573,160,1.821,161,2.077,162,2.419,163,1.573,164,1.573,165,2.841,166,1.573,167,1.573,168,1.573,169,1.573,170,1.573,171,1.573,172,1.573,173,1.573,174,2.419,175,1.573,176,1.573,177,1.573,178,1.573,179,1.573,180,1.573,181,1.573,182,1.573,183,1.573,184,2.947,185,2.419,186,2.947,187,1.573,188,2.077,189,2.947,190,2.947,191,2.419,192,1.573,193,1.573,194,1.573,195,1.573,196,1.573,197,1.573,198,1.573,199,1.573,200,1.573,201,1.573,202,1.573,203,1.573,204,2.419,205,1.573,206,1.573,207,1.573,208,1.573,209,1.573,210,1.573,211,1.573,212,1.35,213,1.573,214,1.573,215,1.573,216,1.573,217,1.573,218,1.35,219,2.419,220,3.309,221,2.53,222,1.573,223,1.573,224,2.419,225,1.573,226,1.573,227,1.573,228,1.573,229,1.573,230,1.573,231,1.573,232,1.573,233,1.573,234,1.35,235,1.573,236,1.573,237,1.573,238,0.019,239,0.019]],["title/injectables/HereCircleManager.html",[240,0.342,241,1.497]],["body/injectables/HereCircleManager.html",[3,0.342,4,0.342,5,0.301,8,1.245,12,1.159,20,0.04,26,0.191,27,0.656,30,0.727,31,1.099,32,0.342,35,1.047,37,1.419,38,0.482,52,1.22,57,0.997,119,1.184,139,1.477,141,1.307,143,1.172,145,0.432,155,1.68,238,0.02,239,0.02,240,0.344,241,1.504,242,0.656,243,4.533,244,1.105,245,1.103,246,2.289,247,0.901,248,3.052,249,1.819,250,2.332,251,2.513,252,3.052,253,3.052,254,3.052,255,3.052,256,2.513,257,2.513,258,2.61,259,3.052,260,2.513,261,1.353,262,1.491,263,1.828,264,1.828,265,1.653,266,0.89,267,3.052,268,6.007,269,2.008,270,5.789,271,0.726,272,0.989,273,2.008,274,2.513,275,1.504,276,1.819,277,3.052,278,2.008,279,2.294,280,3.052,281,2.008,282,3.052,283,1.653,284,3.052,285,1.419,286,2.513,287,3.052,288,2.008,289,3.052,290,2.008,291,3.052,292,2.008,293,2.008,294,1.868,295,3.692,296,1.653,297,3.052,298,3.052,299,3.052,300,2.008,301,3.052,302,2.008,303,0.887,304,0.386,305,1.245,306,1.419,307,0.386,308,0.482,309,1.68,310,1.504,311,0.803,312,1.105,313,1.419,314,0.89,315,1.653,316,1.653,317,2.008,318,3.04,319,2.008,320,2.008,321,1.892,322,3.052,323,1.892,324,3.052,325,1.245,326,2.008,327,1.245,328,2.008,329,1.245,330,2.008,331,1.419,332,2.008,333,1.419,334,2.008,335,2.008,336,2.008,337,1.245,338,2.008,339,1.245,340,2.008,341,1.653,342,2.008,343,1.245,344,2.008,345,1.245,346,2.008,347,1.245,348,2.008,349,1.245,350,4.672,351,2.07,352,4.672,353,2.008,354,2.008,355,1.245,356,2.008,357,2.008,358,2.008,359,1.419,360,3.692,361,3.052,362,2.008,363,2.008,364,2.008,365,3.692,366,2.008,367,2.008,368,2.008,369,2.008,370,0.432,371,1.105,372,2.61,373,2.008,374,2.008,375,1.105,376,0.989,377,1.419,378,2.008]],["title/components/HereComponent.html",[379,1.883,380,1.672]],["body/components/HereComponent.html",[3,0.342,4,0.342,5,0.301,9,1.504,12,1.124,16,1.105,20,0.041,26,0.191,30,0.399,32,0.342,35,0.386,38,0.732,57,1.708,58,1.105,65,1.68,104,2.61,119,0.432,123,2.289,133,2.157,141,1.274,143,0.887,145,0.432,238,0.02,239,0.02,241,1.819,245,1.103,246,2.289,247,0.901,250,1.476,261,0.89,262,1.688,263,1.828,264,1.828,266,1.353,271,1.808,279,1.22,303,1.159,304,0.386,307,0.386,308,0.482,311,0.803,314,0.89,349,0.984,370,0.432,379,2.289,380,2.27,381,3.052,382,2.008,383,2.008,384,1.653,385,3.692,386,1.653,387,2.157,388,3.472,389,3.959,390,2.032,391,2.896,392,1.819,393,1.819,394,1.819,395,2.289,396,1.819,397,2.289,398,1.819,399,2.289,400,1.819,401,2.032,402,1.819,403,3.396,404,3.692,405,3.692,406,3.692,407,3.692,408,4.672,409,3.692,410,3.04,411,3.692,412,3.052,413,3.573,414,4.124,415,4.124,416,4.124,417,4.124,418,4.124,419,4.124,420,4.124,421,4.124,422,2.513,423,3.136,424,3.052,425,3.692,426,4.124,427,3.052,428,3.396,429,3.052,430,3.052,431,2.008,432,2.008,433,2.008,434,2.008,435,2.008,436,2.008,437,2.008,438,2.008,439,3.052,440,2.008,441,2.513,442,1.653,443,3.692,444,4.124,445,2.008,446,2.032,447,1.09,448,1.419,449,2.008,450,2.008,451,1.653,452,2.008,453,2.915,454,2.008,455,2.008,456,2.008,457,2.008,458,2.008,459,2.008,460,2.008,461,1.653,462,1.653,463,3.396,464,2.008,465,3.04,466,3.692,467,3.692,468,2.008,469,2.008,470,2.008,471,2.008,472,2.008,473,2.008,474,2.008,475,2.008,476,2.008,477,3.692,478,2.008,479,2.008,480,3.052,481,2.008,482,2.008,483,2.008,484,2.008,485,2.008,486,2.008,487,2.008,488,2.008,489,2.008,490,2.008,491,2.008,492,2.008,493,2.008,494,2.008,495,2.008,496,2.008,497,2.008,498,3.052,499,1.105,500,4.124,501,2.008,502,1.653,503,0.989,504,2.008]],["title/injectables/HereMapsFitBoundsService.html",[240,0.342,392,1.497]],["body/injectables/HereMapsFitBoundsService.html",[3,0.662,4,0.662,5,0.583,12,0.836,20,0.04,26,0.37,30,0.631,32,0.662,35,0.926,38,0.932,57,1.714,119,1.038,139,1.147,141,1.157,143,1.038,145,0.836,238,0.031,239,0.031,240,0.543,242,1.27,245,1.743,247,1.424,303,1.128,304,0.746,305,3.252,306,2.746,307,0.746,308,0.932,312,2.139,313,2.746,349,1.285,391,3.252,392,2.376,413,3.252,447,1.549,448,3.708,505,2.584,506,3.199,507,5.246,508,4.824,509,3.401,510,3.885,511,3.885,512,3.885,513,3.885,514,4.824,515,3.885,516,3.885,517,3.885,518,3.199,519,3.885,520,3.885]],["title/injectables/HereMapsInfoWindowManager.html",[240,0.342,402,1.497]],["body/injectables/HereMapsInfoWindowManager.html",[3,0.591,4,0.406,5,0.358,12,1.132,20,0.04,26,0.227,30,0.713,31,1.089,32,0.406,35,1.03,38,0.831,52,1.634,65,1.908,119,1.172,139,1.207,141,1.286,143,1.154,145,0.513,155,1.908,238,0.022,239,0.022,240,0.39,242,0.779,245,1.253,247,1.024,249,2.013,250,2.145,258,2.888,261,1.056,262,1.622,263,1.989,264,1.989,266,1.536,271,1.856,272,1.174,275,1.708,276,2.349,279,1.794,294,1.634,303,0.965,304,0.458,307,0.458,308,0.571,310,1.708,311,0.953,314,1.056,316,1.962,318,1.962,321,2.533,323,2.533,349,1.402,351,1.989,355,1.477,370,0.513,371,1.312,372,2.451,375,1.908,376,1.174,377,1.684,390,1.312,393,2.211,401,2.249,402,1.708,410,1.962,446,1.312,447,1.207,451,1.962,463,1.962,521,4.486,522,1.962,523,3.467,524,3.467,525,3.467,526,3.467,527,3.467,528,3.467,529,4.487,530,2.383,531,3.467,532,5.961,533,2.383,534,5.682,535,3.467,536,2.383,537,2.383,538,3.467,539,3.467,540,3.467,541,2.383,542,3.467,543,4.086,544,2.383,545,2.383,546,4.086,547,2.383,548,3.467,549,2.383,550,3.467,551,2.383,552,4.086,553,4.975,554,2.383,555,2.383,556,2.383,557,2.383,558,2.383,559,2.383,560,2.383,561,2.383,562,3.467,563,3.467,564,3.467,565,2.383,566,2.383,567,2.383,568,2.383,569,2.383,570,4.086,571,2.383,572,2.383,573,2.383,574,2.383,575,2.383,576,3.467,577,2.383,578,2.383,579,2.383]],["title/injectables/HereMapsLoaderService.html",[240,0.342,580,1.883]],["body/injectables/HereMapsLoaderService.html",[3,0.384,4,0.384,5,0.338,9,1.111,11,1.111,12,1.049,13,1.754,18,1.95,19,1.856,20,0.04,26,0.215,27,1.088,30,0.66,31,1.433,32,0.384,35,0.969,38,0.798,57,1.088,75,1.593,94,1.64,119,1.003,139,1.376,141,1.29,143,1.003,144,2.797,145,0.485,218,1.593,221,1.593,238,0.022,239,0.022,240,0.375,242,0.737,245,1.203,247,0.983,250,1.951,271,1.579,279,2.182,294,0.901,303,0.851,304,0.433,307,0.433,308,0.541,349,1.345,351,2.162,359,2.353,370,0.94,413,3.024,447,1.611,462,3.258,505,2.688,509,2.453,580,2.063,581,1.856,582,3.957,583,4.036,584,3.957,585,4.429,586,3.328,587,3.957,588,3.328,589,4.661,590,3.957,591,4.37,592,2.254,593,3.258,594,4.37,595,3.328,596,3.328,597,2.566,598,2.254,599,2.254,600,3.802,601,3.903,602,3.957,603,2.254,604,2.797,605,3.328,606,5.775,607,3.328,608,4.661,609,2.254,610,3.957,611,2.254,612,2.254,613,2.254,614,3.957,615,2.254,616,2.254,617,2.254,618,3.328,619,3.328,620,3.328,621,3.328,622,3.328,623,3.328,624,3.328,625,3.328,626,2.254,627,1.593,628,1.241,629,2.254,630,1.856,631,2.254,632,1.856,633,1.856,634,2.254,635,3.328,636,3.328,637,2.254,638,2.254,639,2.254,640,2.254,641,2.254,642,3.328,643,1.856,644,1.856,645,2.254,646,1.856,647,2.254,648,2.254,649,1.593,650,1.593,651,2.254,652,2.254,653,2.254,654,2.254,655,2.254,656,2.254,657,2.254,658,2.254,659,3.328,660,2.254,661,1.856,662,1.856,663,2.254,664,2.254,665,2.254,666,3.328,667,2.254,668,2.254,669,2.254,670,2.254,671,2.254,672,2.254,673,2.254,674,2.254,675,2.254,676,2.254]],["title/injectables/HereMapsMarkerManager.html",[240,0.342,394,1.497]],["body/injectables/HereMapsMarkerManager.html",[3,0.394,4,0.394,5,0.347,12,1.206,13,1.781,20,0.04,26,0.221,30,0.745,31,1.179,32,0.394,35,1.085,38,0.555,58,3.156,65,1.274,119,1.225,139,1.002,141,1.356,143,1.216,145,0.498,238,0.022,239,0.022,240,0.382,242,0.756,245,1.226,247,1.002,249,1.98,261,1.504,262,1.599,263,1.961,264,1.961,266,1.026,271,2.142,272,1.14,275,2.321,276,1.98,303,0.864,304,0.444,307,0.444,308,0.555,309,1.274,310,1.672,311,0.925,314,1.026,321,1.435,323,1.435,349,1.255,355,1.435,359,1.636,370,0.73,371,1.274,375,2.212,376,1.14,393,1.98,394,1.672,447,1.682,505,2.806,662,1.905,677,1.905,678,3.393,679,3.393,680,3.393,681,3.393,682,3.393,683,3.393,684,3.393,685,3.393,686,3.393,687,3.393,688,3.393,689,3.393,690,2.314,691,6.093,692,2.314,693,3.393,694,2.314,695,3.393,696,2.314,697,3.393,698,2.314,699,3.393,700,2.314,701,3.393,702,2.314,703,3.393,704,2.314,705,3.393,706,2.314,707,3.393,708,2.314,709,3.393,710,2.314,711,3.393,712,2.314,713,3.393,714,2.314,715,3.393,716,2.314,717,2.314,718,2.314,719,3.643,720,4.425,721,2.314,722,2.314,723,2.314,724,1.905,725,2.314,726,4.018,727,3.393,728,3.393,729,2.314,730,2.314,731,2.314]],["title/injectables/HereMapsPlatformProvider.html",[240,0.342,732,1.672]],["body/injectables/HereMapsPlatformProvider.html",[3,0.626,4,0.626,5,0.551,9,2.294,12,0.79,20,0.04,26,0.35,27,1.521,30,0.609,32,0.626,35,0.705,38,1.116,52,1.468,57,1.2,94,1.809,119,0.79,124,2.595,139,1.084,141,1.226,143,0.79,145,0.79,234,2.595,238,0.03,239,0.03,240,0.524,242,1.2,247,1.375,250,2.044,294,2.044,303,1.1,304,0.705,307,0.705,308,0.881,351,2.063,370,0.79,447,1.587,461,4.208,505,2.648,509,3.332,583,3.921,593,4.208,597,2.959,627,2.595,628,2.021,633,3.023,732,2.563,733,3.023,734,5.112,735,5.375,736,3.672,737,4.655,738,3.672,739,3.672,740,5.112,741,3.672,742,5.112,743,3.672,744,3.672,745,3.672,746,3.672,747,3.672,748,3.672]],["title/interfaces/HereModuleOptions.html",[0,1.098,597,1.672]],["body/interfaces/HereModuleOptions.html",[0,1.424,2,2.168,3,0.671,4,0.671,5,0.591,13,2.339,20,0.04,26,0.375,27,1.59,30,0.69,31,1.406,32,0.899,35,1.058,50,3.016,238,0.031,239,0.031,279,1.945,303,0.847,304,0.756,349,1.05,370,0.847,423,3.439,597,2.678,600,2.784,601,3.896,628,2.168,630,3.243,632,3.243,646,4.538,649,3.439,650,3.439,749,2.442,750,5.512,751,5.278,752,3.439,753,3.243,754,3.243,755,3.939,756,4.005,757,4.005,758,4.005,759,4.005]],["title/injectables/HerePolygonManager.html",[240,0.342,396,1.497]],["body/injectables/HerePolygonManager.html",[3,0.472,4,0.472,5,0.416,12,1.087,20,0.04,26,0.264,30,0.727,31,1.28,32,0.472,35,1.004,38,0.665,52,1.109,119,1.154,139,1.312,141,1.254,143,1.125,145,0.596,238,0.025,239,0.025,240,0.435,242,0.906,244,1.526,245,1.395,247,1.14,249,2.189,250,2.223,261,1.711,262,1.736,263,2.129,264,2.129,266,1.229,271,1.002,272,1.366,274,3.179,275,1.902,276,2.189,279,2.092,285,1.96,294,1.777,296,2.282,303,0.956,304,0.532,307,0.532,308,0.665,309,2.125,310,1.902,311,1.109,314,1.229,325,1.719,327,1.719,329,1.719,331,1.96,333,1.96,337,1.719,339,1.719,343,1.719,345,1.719,347,1.719,349,1.346,351,1.711,370,0.956,371,1.526,375,1.526,376,1.902,377,1.96,395,2.754,396,1.902,644,2.282,760,4.418,761,3.861,762,3.861,763,4.443,764,3.861,765,2.772,766,3.861,767,5.883,768,2.772,769,4.306,770,3.861,771,3.861,772,2.772,773,3.179,774,2.772,775,3.861,776,2.772,777,3.861,778,2.772,779,2.772,780,2.772,781,2.772,782,2.772,783,2.772,784,2.282,785,2.772,786,2.772,787,2.772,788,2.772,789,2.772,790,2.772,791,2.772,792,2.772,793,2.772,794,2.772,795,3.861,796,2.282,797,2.282,798,2.772,799,2.772,800,2.772,801,2.772,802,2.772,803,2.282,804,3.861,805,2.772,806,2.772,807,2.772,808,2.772,809,2.772]],["title/injectables/HerePolylineManager.html",[240,0.342,398,1.497]],["body/injectables/HerePolylineManager.html",[3,0.448,4,0.448,5,0.394,12,1.106,13,1.648,20,0.04,26,0.25,30,0.718,31,1.25,32,0.448,35,1.015,38,0.63,52,1.487,119,1.137,139,1.274,141,1.268,143,1.137,145,0.565,165,1.857,238,0.024,239,0.024,240,0.419,242,0.858,244,1.446,245,1.344,247,1.098,249,2.126,250,2.196,261,1.648,262,1.696,263,2.079,264,2.079,266,1.164,271,0.949,272,1.294,275,1.832,276,2.126,279,2.056,294,1.726,303,0.928,304,0.504,306,1.857,307,0.504,308,0.63,309,2.047,310,1.832,311,1.05,314,1.164,321,1.628,323,1.628,325,1.628,327,1.628,329,1.628,337,1.628,339,1.628,343,1.628,345,1.628,347,1.628,349,1.408,351,1.912,370,0.8,371,1.446,376,1.294,397,2.675,398,1.832,413,2.675,719,3.863,769,3.553,773,3.061,784,2.163,796,2.163,797,2.163,803,2.163,810,4.445,811,3.718,812,3.718,813,3.718,814,4.315,815,3.718,816,2.627,817,3.718,818,5.916,819,2.627,820,4.521,821,3.718,822,2.627,823,2.627,824,3.718,825,2.163,826,2.627,827,2.627,828,3.718,829,2.627,830,3.718,831,2.627,832,2.627,833,2.627,834,3.718,835,3.718,836,2.627,837,2.627,838,2.627,839,2.627,840,2.627,841,2.627,842,2.627,843,2.627,844,2.627,845,2.627,846,2.627,847,2.627,848,2.627,849,2.627,850,4.315,851,2.627,852,2.627,853,2.627,854,2.627,855,2.627,856,2.627,857,2.627,858,2.627,859,2.627]],["title/injectables/HereRectangleManager.html",[240,0.342,400,1.497]],["body/injectables/HereRectangleManager.html",[3,0.399,4,0.399,5,0.351,12,1.149,20,0.04,26,0.223,30,0.719,31,1.078,32,0.399,35,1.042,38,0.561,57,1.118,119,1.183,139,1.398,141,1.302,143,1.167,145,0.504,155,1.884,238,0.022,239,0.022,240,0.385,242,0.765,244,1.289,245,1.237,247,1.011,249,1.993,250,2.351,251,2.817,256,2.817,257,2.817,258,2.859,260,2.817,261,1.517,262,1.608,263,1.972,264,1.972,265,1.927,266,1.038,271,0.846,272,1.153,275,1.686,276,1.993,279,2.265,283,1.927,285,1.655,286,2.817,294,0.936,303,0.957,304,0.45,305,1.451,307,0.45,308,0.561,309,1.884,310,1.153,311,0.936,312,1.289,313,1.655,314,1.038,325,1.451,327,1.451,329,1.451,331,1.655,333,1.655,337,1.451,339,1.451,341,1.927,343,1.451,345,1.451,347,1.451,349,1.317,351,2.098,370,0.504,372,2.419,375,2.227,376,1.153,399,2.508,400,1.686,825,1.927,860,4.529,861,3.422,862,3.422,863,3.422,864,3.422,865,5.992,866,2.341,867,5.706,868,2.341,869,3.422,870,3.422,871,3.422,872,2.341,873,3.422,874,2.341,875,3.422,876,2.341,877,2.341,878,2.341,879,3.422,880,2.419,881,2.341,882,2.341,883,3.422,884,3.422,885,3.422,886,3.422,887,3.422,888,3.422,889,3.422,890,3.422,891,2.341,892,2.341,893,2.341,894,2.341,895,2.341,896,2.341,897,2.341,898,2.341,899,2.341,900,2.341,901,2.341,902,4.734,903,4.734,904,2.341,905,2.341,906,2.341,907,3.422,908,2.341,909,2.341,910,2.341,911,2.341,912,2.341,913,2.341,914,2.341]],["title/directives/MarkerClusterComponent.html",[499,1.672,503,1.497]],["body/directives/MarkerClusterComponent.html",[3,0.348,4,0.348,5,0.306,8,1.265,9,1.522,10,3.027,11,1.522,12,0.894,13,1.843,15,2.94,16,3.18,18,1.005,20,0.04,26,0.194,27,1.359,28,2.184,29,3.555,30,0.723,31,1.108,32,0.348,33,3.555,35,0.799,38,0.741,39,2.053,41,2.184,42,2.184,43,2.184,45,2.94,47,2.184,48,2.289,49,2.184,52,1.491,54,2.94,56,2.94,57,1.359,58,2.588,63,1.442,68,2.94,69,2.94,72,2.184,77,2.94,79,2.184,81,2.184,82,2.184,84,2.94,86,1.442,87,2.184,91,2.184,94,1.837,111,1.442,113,2.184,118,3.71,119,0.665,123,2.578,141,1.347,143,0.802,145,0.439,160,2.578,161,2.94,238,0.02,239,0.02,247,0.912,271,1.503,294,0.816,303,1.011,304,0.392,307,0.392,308,0.489,311,0.816,315,1.68,349,0.823,355,1.915,370,0.439,386,1.68,387,2.184,388,1.915,393,1.837,401,1.123,403,2.544,422,2.544,428,3.424,441,2.544,442,3.424,453,1.442,499,1.701,502,1.68,503,2.049,583,3.555,585,1.68,627,1.442,724,1.68,915,4.655,916,1.68,917,3.09,918,3.09,919,3.09,920,3.729,921,3.729,922,3.729,923,4.14,924,3.09,925,3.729,926,4.159,927,3.09,928,4.159,929,4.159,930,3.09,931,4.159,932,2.041,933,2.578,934,3.729,935,3.09,936,3.09,937,2.041,938,3.09,939,2.041,940,3.09,941,3.09,942,2.041,943,2.041,944,2.041,945,2.041,946,3.09,947,2.041,948,3.09,949,2.041,950,2.041,951,3.09,952,3.09,953,2.041,954,2.041,955,3.09,956,2.041,957,2.041,958,2.041,959,2.041,960,2.041,961,1.265,962,2.041,963,3.729,964,2.041,965,2.041,966,2.041,967,2.041,968,2.041,969,2.041,970,2.041,971,2.041,972,2.041,973,2.041,974,2.041,975,2.041,976,2.041,977,2.041,978,2.041,979,2.041,980,2.041,981,2.041,982,2.041,983,2.041,984,2.041,985,2.041,986,2.041,987,2.041,988,2.041,989,2.041,990,2.041,991,2.041,992,2.041,993,2.041,994,2.041,995,2.041,996,2.041,997,2.041,998,2.041,999,2.041,1000,2.041,1001,3.09,1002,2.041,1003,2.041,1004,2.041,1005,2.041,1006,2.041,1007,2.041]],["title/interfaces/MarkerClusterConfig.html",[0,1.098,933,1.883]],["body/interfaces/MarkerClusterConfig.html",[0,1.6,2,2.437,3,0.754,4,0.754,5,0.664,6,2.181,20,0.039,26,0.422,27,1.706,30,0.579,31,1.479,32,0.889,160,3.554,238,0.034,239,0.034,303,0.952,304,0.85,349,1.179,370,0.952,752,3.689,933,3.236,961,3.236,1008,3.129]],["title/interfaces/MarkerClustererOptions.html",[0,1.098,39,1.672]],["body/interfaces/MarkerClustererOptions.html",[0,0.769,1,1.976,2,0.703,3,0.218,4,0.218,5,0.531,6,0.629,7,0.792,8,0.792,9,1.048,10,3.288,11,2.092,12,0.822,13,2.402,14,4.192,15,2.253,16,3.252,17,3.147,18,1.884,20,0.04,21,4.008,22,4.192,23,4.366,24,1.751,25,2.624,26,0.455,27,1.042,28,3.301,29,4.036,30,0.674,31,1.319,32,0.362,33,3.983,34,1.051,35,1.093,36,1.751,37,2.253,38,0.51,39,1.171,40,1.751,41,2.253,42,2.702,43,1.503,44,2.624,45,2.253,46,1.751,47,1.503,48,2.104,49,1.503,50,1.976,51,2.624,52,0.85,53,1.751,54,2.253,55,1.751,56,3.002,57,0.695,58,3.09,59,1.751,60,2.624,61,2.624,62,1.751,63,1.503,64,1.751,65,1.171,66,1.751,67,1.751,68,2.253,69,3.375,70,1.751,71,2.624,72,1.503,73,1.751,74,1.751,75,1.503,76,1.751,77,2.253,78,1.751,79,1.503,80,1.751,81,1.503,82,2.702,83,2.624,84,2.253,85,1.751,86,1.503,87,1.503,88,3.147,89,1.751,90,1.751,91,2.253,92,1.751,93,1.751,94,2.092,95,1.751,96,1.751,97,3.147,98,1.751,99,1.751,100,1.751,101,1.751,102,2.624,103,3.496,104,2.253,105,1.751,106,1.751,107,1.751,108,1.751,109,3.931,110,1.751,111,1.503,112,1.751,113,2.253,114,1.751,115,1.751,116,1.751,117,1.751,118,1.503,119,0.457,120,2.702,121,1.751,122,3.147,123,3.338,124,1.503,125,1.751,126,1.751,127,1.751,128,3.147,129,1.751,130,1.751,131,1.751,132,1.751,133,2.702,134,1.751,135,2.624,136,2.624,137,1.751,138,1.751,139,0.628,140,1.751,141,0.764,142,1.751,143,0.913,144,2.253,145,0.686,146,2.624,147,1.751,148,1.751,149,1.751,150,1.751,151,1.751,152,2.624,153,2.624,154,2.624,155,1.171,156,1.751,157,1.751,158,1.751,159,1.751,160,2.37,161,2.702,162,3.147,163,1.751,164,1.751,165,3.002,166,1.751,167,1.751,168,1.751,169,1.751,170,1.751,171,1.751,172,1.751,173,1.751,174,2.624,175,1.751,176,1.751,177,1.751,178,1.751,179,1.751,180,1.751,181,1.751,182,2.624,183,1.751,184,3.147,185,2.624,186,3.147,187,1.751,188,2.253,189,3.147,190,3.147,191,3.147,192,1.751,193,2.624,194,1.751,195,1.751,196,1.751,197,1.751,198,1.751,199,1.751,200,1.751,201,1.751,202,1.751,203,1.751,204,2.624,205,1.751,206,1.751,207,1.751,208,1.751,209,1.751,210,1.751,211,1.751,212,1.503,213,1.751,214,1.751,215,1.751,216,1.751,217,1.751,218,1.503,219,2.624,220,3.496,221,2.702,222,1.751,223,1.751,224,2.624,225,1.751,226,1.751,227,1.751,228,1.751,229,1.751,230,1.751,231,1.751,232,1.751,233,1.751,234,1.503,235,1.751,236,1.751,237,1.751,238,0.014,239,0.014]],["title/modules/NgMapsHereModule.html",[604,2.147,1009,1.883]],["body/modules/NgMapsHereModule.html",[3,0.484,4,0.484,5,0.426,16,1.563,20,0.041,32,0.484,48,2.161,145,0.611,238,0.025,239,0.025,241,2.217,246,2.789,262,1.626,303,1.133,304,0.545,307,0.545,308,0.681,380,3.352,387,2.775,388,3.762,389,4.282,390,2.477,391,2.789,392,2.217,393,2.217,394,2.217,395,2.789,396,2.217,397,2.789,398,2.217,399,2.789,400,2.217,401,2.477,402,2.217,446,2.161,447,1.159,503,2.84,509,2.433,580,2.433,732,2.901,1009,3.573,1010,2.007,1011,2.433,1012,2.337,1013,2.337,1014,2.337,1015,2.337,1016,2.337,1017,2.337,1018,2.337,1019,2.839,1020,3.925,1021,3.925,1022,3.925,1023,3.925,1024,2.839,1025,2.839,1026,2.839,1027,2.839,1028,2.839,1029,2.337]],["title/coverage.html",[1030,3.385]],["body/coverage.html",[0,1.898,1,2.139,5,0.518,6,2.681,7,2.773,11,2.204,20,0.04,30,0.451,39,1.899,212,2.439,238,0.029,239,0.029,240,0.665,241,1.7,243,2.841,244,2.995,312,1.899,370,0.742,379,2.139,380,1.899,384,2.841,390,1.899,392,1.7,394,1.7,396,1.7,398,1.7,400,1.7,402,1.7,447,1.646,448,2.439,499,1.899,503,1.7,505,2.747,506,2.841,521,2.841,522,2.841,580,2.139,581,2.841,597,1.899,628,1.899,661,4.956,677,2.841,732,1.899,733,2.841,749,2.773,760,2.841,810,2.841,860,2.841,880,2.439,915,2.841,916,2.841,923,2.841,933,2.139,961,2.139,1008,3.162,1030,2.841,1031,3.45,1032,3.45,1033,3.45,1034,3.45,1035,4.964,1036,5.441,1037,3.45,1038,3.45,1039,3.45,1040,3.45,1041,3.45,1042,3.45,1043,3.683,1044,3.45,1045,3.45,1046,3.45,1047,2.841,1048,2.841,1049,4.473,1050,3.45,1051,3.45,1052,2.841,1053,3.45,1054,3.45,1055,3.45,1056,3.45,1057,3.45,1058,3.45,1059,3.45,1060,3.45,1061,3.45,1062,3.45,1063,3.45]],["title/dependencies.html",[1011,2.259,1064,1.805]],["body/dependencies.html",[20,0.04,238,0.034,239,0.034,304,0.867,307,0.867,308,1.083,1011,3.274,1065,4.516,1066,4.348,1067,4.516,1068,4.516,1069,5.282,1070,5.282,1071,5.282,1072,4.516,1073,4.516,1074,4.516]],["title/miscellaneous/enumerations.html",[1075,1.021,1076,3]],["body/miscellaneous/enumerations.html",[18,2.969,20,0.039,26,0.42,50,3.227,238,0.034,239,0.034,423,3.68,600,3.68,649,3.68,650,3.68,749,2.732,756,4.286,757,4.286,758,4.286,759,4.286,1075,1.762,1076,3.628,1077,3.628]],["title/miscellaneous/functions.html",[1075,1.021,1078,3]],["body/miscellaneous/functions.html",[12,0.971,20,0.038,26,0.43,30,0.591,35,1.014,119,1.136,143,1.136,238,0.034,239,0.034,305,3.47,312,2.907,518,3.718,880,3.733,1043,3.718,1075,1.806,1078,3.718,1079,5.282,1080,4.516,1081,4.516,1082,4.516]],["title/index.html",[26,0.243,1083,2.554,1084,2.554]],["body/index.html",[20,0.034,238,0.034,239,0.034,307,1.078,446,2.503,447,1.343,453,3.214,465,3.743,820,3.743,1064,3.214,1085,5.613,1086,4.547,1087,4.547,1088,4.547,1089,4.547,1090,4.547,1091,4.547,1092,5.613,1093,5.302,1094,4.547,1095,4.547]],["title/modules.html",[1010,2.906]],["body/modules.html",[20,0.035,188,3.359,238,0.035,239,0.035,1009,2.946,1010,3.359,1096,4.752,1097,4.752,1098,4.752]],["title/overview.html",[1099,3.385]],["body/overview.html",[2,1.73,20,0.04,48,2.315,120,3.351,238,0.027,239,0.027,241,2.336,242,1.027,246,2.939,262,1.713,379,1.948,380,3.351,388,3.781,389,4.311,390,2.61,391,2.939,392,2.336,393,2.336,394,2.336,395,2.939,396,2.336,397,2.939,398,2.336,399,2.939,400,2.336,401,2.61,402,2.336,499,1.73,503,2.733,604,2.221,732,2.61,1009,3.576,1011,2.607,1012,2.587,1013,2.587,1014,2.587,1015,2.587,1016,2.587,1017,2.587,1018,2.587,1099,2.587,1100,3.142,1101,3.142]],["title/properties.html",[27,1.191,1064,1.805]],["body/properties.html",[20,0.039,27,1.437,57,1.437,238,0.034,239,0.034,307,0.844,446,3.047,447,1.635,601,3.108,1029,3.62,1052,3.62,1066,3.62,1102,4.397,1103,4.397,1104,5.199,1105,4.397,1106,4.397,1107,4.397,1108,4.397,1109,4.397,1110,4.397,1111,4.397,1112,4.397,1113,5.199,1114,5.199,1115,4.397,1116,4.397,1117,4.397,1118,4.397,1119,4.397]],["title/miscellaneous/typealiases.html",[1075,1.021,1120,3.644]],["body/miscellaneous/typealiases.html",[6,2.314,7,3.349,10,3.349,11,2.314,20,0.035,26,0.448,30,0.614,238,0.035,239,0.035,1075,1.878,1121,4.696,1122,3.866]],["title/miscellaneous/variables.html",[1075,1.021,1123,3]],["body/miscellaneous/variables.html",[6,2.157,18,2.722,20,0.039,26,0.417,94,2.722,238,0.034,239,0.034,370,1.115,447,1.531,505,2.157,628,2.855,643,3.604,749,2.714,752,3.666,753,3.604,754,3.604,961,3.425,1008,3.666,1047,4.269,1048,4.269,1075,1.751,1077,3.604,1122,3.604,1123,3.604,1124,4.378]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":661,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"coverage.html":{}}}],["0/1",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":120,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{},"overview.html":{}}}],["1/10",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":212,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{},"coverage.html":{}}}],["10^i",{"_index":129,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["11",{"_index":1100,"title":{},"body":{"overview.html":{}}}],["125",{"_index":136,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["15,000",{"_index":213,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["17/17",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":122,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["2.0.0",{"_index":1066,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["25",{"_index":1038,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":137,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["3.1",{"_index":605,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["3.1.1",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1101,"title":{},"body":{"overview.html":{}}}],["47",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1052,"title":{},"body":{"coverage.html":{},"properties.html":{}}}],["8.0.0",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["8/17",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["_addeventlisteners",{"_index":926,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["_apiloader",{"_index":511,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["_clustermanager",{"_index":934,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["_config",{"_index":936,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["_configresolver",{"_index":582,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["_convertpoints",{"_index":811,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["_convertpoints(line",{"_index":817,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["_fitboundsservice",{"_index":426,"title":{},"body":{"components/HereComponent.html":{}}}],["_handleboundschange",{"_index":414,"title":{},"body":{"components/HereComponent.html":{}}}],["_handleidleevent",{"_index":415,"title":{},"body":{"components/HereComponent.html":{}}}],["_handlemapcenterchange",{"_index":416,"title":{},"body":{"components/HereComponent.html":{}}}],["_handlemapmouseevents",{"_index":417,"title":{},"body":{"components/HereComponent.html":{}}}],["_handlemaptypeidchange",{"_index":418,"title":{},"body":{"components/HereComponent.html":{}}}],["_handlemapzoomchange",{"_index":419,"title":{},"body":{"components/HereComponent.html":{}}}],["_handletilesloadedevent",{"_index":420,"title":{},"body":{"components/HereComponent.html":{}}}],["_mapswrapper",{"_index":266,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["_markermanager",{"_index":529,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["_modules",{"_index":584,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["_observablesubscriptions",{"_index":925,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["_platform",{"_index":734,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["_zone",{"_index":263,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["acc",{"_index":610,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["acc.find((value",{"_index":670,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["actual",{"_index":170,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["actual_component",{"_index":504,"title":{},"body":{"components/HereComponent.html":{}}}],["add",{"_index":1092,"title":{},"body":{"index.html":{}}}],["addcircle",{"_index":248,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["addcircle(circle",{"_index":267,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["added",{"_index":76,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["addinfowindow",{"_index":523,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["addinfowindow(infowindow",{"_index":531,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["addpolygon",{"_index":761,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["addpolygon(path",{"_index":766,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["addpolyline",{"_index":812,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["addpolyline(line",{"_index":821,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["addrectangle",{"_index":861,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["addrectangle(rectangle",{"_index":864,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["agm",{"_index":1108,"title":{},"body":{"properties.html":{}}}],["aliases",{"_index":1121,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":164,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["alpha.13",{"_index":1102,"title":{},"body":{"properties.html":{}}}],["alpha.7",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["already",{"_index":555,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["alternatively",{"_index":108,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["angular",{"_index":1104,"title":{},"body":{"properties.html":{}}}],["angular/common",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":304,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"modules/NgMapsHereModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":1107,"title":{},"body":{"properties.html":{}}}],["angular8",{"_index":1105,"title":{},"body":{"properties.html":{}}}],["any).protocol",{"_index":674,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["appears",{"_index":83,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["apple's",{"_index":177,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["application",{"_index":746,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["appmodule",{"_index":1093,"title":{},"body":{"index.html":{}}}],["array",{"_index":13,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolylineManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["array.from(includeinbounds.values",{"_index":517,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["array.isarray(libraries",{"_index":656,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["assumed",{"_index":237,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["async",{"_index":250,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["attempt",{"_index":201,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["available",{"_index":429,"title":{},"body":{"components/HereComponent.html":{}}}],["average",{"_index":72,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["averagecenter",{"_index":77,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["averagecenter=false",{"_index":70,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["avoid",{"_index":202,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["await",{"_index":351,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["b1",{"_index":485,"title":{},"body":{"components/HereComponent.html":{}}}],["b1.east",{"_index":487,"title":{},"body":{"components/HereComponent.html":{}}}],["b1.north",{"_index":489,"title":{},"body":{"components/HereComponent.html":{}}}],["b1.south",{"_index":493,"title":{},"body":{"components/HereComponent.html":{}}}],["b1.west",{"_index":491,"title":{},"body":{"components/HereComponent.html":{}}}],["b2",{"_index":486,"title":{},"body":{"components/HereComponent.html":{}}}],["b2.east",{"_index":488,"title":{},"body":{"components/HereComponent.html":{}}}],["b2.north",{"_index":490,"title":{},"body":{"components/HereComponent.html":{}}}],["b2.south",{"_index":494,"title":{},"body":{"components/HereComponent.html":{}}}],["b2.west",{"_index":492,"title":{},"body":{"components/HereComponent.html":{}}}],["based",{"_index":941,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["batch",{"_index":186,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["batches",{"_index":196,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["batchsize",{"_index":193,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["batchsize=markerclusterer.batch_size",{"_index":183,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["batchsizeie",{"_index":191,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["batchsizeie=markerclusterer.batch_size_ie",{"_index":194,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["before",{"_index":81,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["behaviour",{"_index":951,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["being",{"_index":97,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["better",{"_index":172,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["between",{"_index":200,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["boolean",{"_index":69,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["bounds",{"_index":518,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{},"miscellaneous/functions.html":{}}}],["bounds.service",{"_index":449,"title":{},"body":{"components/HereComponent.html":{}}}],["bounds.service.ts",{"_index":506,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{},"coverage.html":{}}}],["bounds.service.ts:11",{"_index":510,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["bounds.service.ts:16",{"_index":513,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["boundsfromrect",{"_index":312,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereRectangleManager.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["boundsfromrect(bounds",{"_index":520,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["boundsfromrect(c.getboundingbox",{"_index":363,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["boundsfromrect(r.getboundingbox",{"_index":909,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["boundsfromrect(rect",{"_index":1080,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boundsliteral",{"_index":305,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereRectangleManager.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":1098,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":188,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{},"modules.html":{}}}],["bubble",{"_index":576,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["bugs",{"_index":1112,"title":{},"body":{"properties.html":{}}}],["c",{"_index":350,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["c.addeventlistener(eventname",{"_index":374,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["c.dispose",{"_index":353,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["c.getcenter",{"_index":364,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["c.getradius",{"_index":366,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["c.setcenter",{"_index":367,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["c.setoptions(options",{"_index":362,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["c.setradius(circle.radius",{"_index":369,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["c.setvisibility(circle.visible",{"_index":368,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["calculates",{"_index":940,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["calculator",{"_index":10,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/typealiases.html":{}}}],["calculator=markerclusterer.calculator",{"_index":114,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["call",{"_index":100,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["casting",{"_index":358,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["causing",{"_index":208,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["center",{"_index":938,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["change",{"_index":95,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["changes",{"_index":957,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["changes.averagecenter",{"_index":967,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["changes.gridsize",{"_index":969,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["changes.imageextension",{"_index":971,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["changes.imagepath",{"_index":973,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["changes.maxzoom",{"_index":975,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["changes.minimumclustersize",{"_index":977,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["changes.styles",{"_index":979,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["changes.zoomonclick",{"_index":981,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["check",{"_index":356,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle",{"_index":270,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.clickable",{"_index":326,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.draggable",{"_index":328,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.editable",{"_index":330,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.fillcolor",{"_index":332,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.fillopacity",{"_index":334,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.latitude",{"_index":322,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.longitude",{"_index":324,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.radius",{"_index":336,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.strokecolor",{"_index":338,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.strokeopacity",{"_index":340,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.strokeposition",{"_index":342,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.strokeweight",{"_index":344,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.visible",{"_index":346,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.zindex",{"_index":348,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circlemanager",{"_index":246,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["class",{"_index":145,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{}}}],["click",{"_index":64,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["clickable",{"_index":325,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["clicked",{"_index":59,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["clicking",{"_index":952,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["close",{"_index":524,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["close(infowindow",{"_index":535,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["cluster",{"_index":16,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{}}}],["cluster.ts",{"_index":916,"title":{},"body":{"directives/MarkerClusterComponent.html":{},"coverage.html":{}}}],["cluster.ts:118",{"_index":954,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:139",{"_index":959,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:35",{"_index":937,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:40",{"_index":939,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:45",{"_index":942,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:47",{"_index":943,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:48",{"_index":944,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:53",{"_index":945,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:58",{"_index":947,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:64",{"_index":949,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:69",{"_index":950,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:72",{"_index":953,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:75",{"_index":935,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:85",{"_index":958,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:91",{"_index":956,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster/marker",{"_index":1024,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["cluster_ngmapsheremodule",{"_index":1012,"title":{},"body":{"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["cluster_ngmapsheremodule_declarations",{"_index":1013,"title":{},"body":{"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["cluster_ngmapsheremodule_exports",{"_index":1014,"title":{},"body":{"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["cluster_ngmapsheremodule_herecomponent_providers",{"_index":1015,"title":{},"body":{"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["cluster_ngmapsheremodule_providers",{"_index":1016,"title":{},"body":{"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["clusterclass",{"_index":152,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["clusterclass=\"cluster",{"_index":142,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["clusterclick",{"_index":931,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["clustered",{"_index":98,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["clustericoninfo",{"_index":1,"title":{"interfaces/ClusterIconInfo.html":{}},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{},"coverage.html":{}}}],["clustericonstyle",{"_index":153,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["clustericonstylescount",{"_index":34,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["clustering",{"_index":50,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/HereModuleOptions.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/enumerations.html":{}}}],["clustermanager",{"_index":923,"title":{},"body":{"directives/MarkerClusterComponent.html":{},"coverage.html":{}}}],["clusters",{"_index":87,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["code",{"_index":150,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["commented",{"_index":317,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["complete",{"_index":222,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["component",{"_index":379,"title":{"components/HereComponent.html":{}},"body":{"components/HereComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_template",{"_index":501,"title":{},"body":{"components/HereComponent.html":{}}}],["components",{"_index":381,"title":{},"body":{"components/HereComponent.html":{}}}],["config",{"_index":585,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"directives/MarkerClusterComponent.html":{}}}],["config.libraries",{"_index":647,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["config.then((c",{"_index":640,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["config.ts",{"_index":1008,"title":{},"body":{"interfaces/MarkerClusterConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.version",{"_index":648,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["configure",{"_index":586,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["configure(config",{"_index":596,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["const",{"_index":349,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{}}}],["constructor",{"_index":38,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["constructor(_apiloader",{"_index":508,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["constructor(_config",{"_index":932,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["constructor(_mapswrapper",{"_index":261,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["constructor(config",{"_index":592,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["constructor(options",{"_index":736,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["container",{"_index":405,"title":{},"body":{"components/HereComponent.html":{}}}],["containing",{"_index":234,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["contains",{"_index":140,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["content",{"_index":410,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{}}}],["convert",{"_index":313,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereRectangleManager.html":{}}}],["core",{"_index":649,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"interfaces/HereModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["count",{"_index":91,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["coverage",{"_index":1030,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":743,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["createclustereventobservable(obj.name",{"_index":990,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["createeventobservable",{"_index":249,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["createeventobservable(eventname",{"_index":272,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["createmoduleurl",{"_index":587,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["createmoduleurl(module",{"_index":599,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["creates",{"_index":538,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["css",{"_index":144,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["cssurl",{"_index":665,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["custom",{"_index":110,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["data",{"_index":757,"title":{},"body":{"interfaces/HereModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["deals",{"_index":66,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["declarations",{"_index":1020,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["decorators",{"_index":438,"title":{},"body":{"components/HereComponent.html":{}}}],["default",{"_index":94,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":148,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["defined",{"_index":141,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["defining",{"_index":146,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["delay",{"_index":198,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["deleted",{"_index":556,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["deleteinfowindow",{"_index":525,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["deleteinfowindow(infowindow",{"_index":540,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["deletemarker",{"_index":678,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["deletemarker(marker",{"_index":693,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["deletepolygon",{"_index":762,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["deletepolygon(polygon",{"_index":770,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["deletepolyline",{"_index":813,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["deletepolyline(line",{"_index":824,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["dependencies",{"_index":1011,"title":{"dependencies.html":{}},"body":{"modules/NgMapsHereModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derived",{"_index":158,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["determine",{"_index":115,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["determined",{"_index":156,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["different",{"_index":112,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["directive",{"_index":499,"title":{"directives/MarkerClusterComponent.html":{}},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":502,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{}}}],["display",{"_index":104,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"components/HereComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["displayed",{"_index":116,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["displays",{"_index":179,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["distinct",{"_index":588,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["distinct(acc",{"_index":607,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["distinctuntilchanged",{"_index":443,"title":{},"body":{"components/HereComponent.html":{}}}],["distinctuntilchanged((z1",{"_index":479,"title":{},"body":{"components/HereComponent.html":{}}}],["document.location",{"_index":673,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["documentation",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":630,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"interfaces/HereModuleOptions.html":{}}}],["dom",{"_index":382,"title":{},"body":{"components/HereComponent.html":{}}}],["double",{"_index":169,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["draggable",{"_index":327,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["e",{"_index":375,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HereRectangleManager.html":{}}}],["e.g",{"_index":229,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["each",{"_index":113,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["east",{"_index":885,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["editable",{"_index":329,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["element",{"_index":133,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"components/HereComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["elements",{"_index":154,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["empty",{"_index":309,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["enabled",{"_index":51,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["enableretinaicons",{"_index":182,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["enableretinaicons=false",{"_index":163,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["ensure",{"_index":89,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["enum",{"_index":755,"title":{},"body":{"interfaces/HereModuleOptions.html":{}}}],["enumerations",{"_index":1076,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":209,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["error('method",{"_index":717,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["error(`unknown",{"_index":663,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["errors",{"_index":205,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["etc",{"_index":226,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["ev",{"_index":984,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["event",{"_index":65,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["eventemitter",{"_index":428,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{}}}],["eventname",{"_index":275,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["eventname.foreach((event",{"_index":721,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["evt",{"_index":543,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["example",{"_index":135,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["exceeds",{"_index":130,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["explorer",{"_index":190,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["export",{"_index":32,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{}}}],["exports",{"_index":1021,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["ext",{"_index":602,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["extends",{"_index":245,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["extension",{"_index":228,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["false",{"_index":61,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["favorite",{"_index":1089,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{}}}],["files",{"_index":221,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["fillcolor",{"_index":331,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HereRectangleManager.html":{}}}],["fillopacity",{"_index":333,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HereRectangleManager.html":{}}}],["first",{"_index":75,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["fit",{"_index":448,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"coverage.html":{}}}],["fitboundsservice",{"_index":391,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["fix",{"_index":723,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["fixme",{"_index":315,"title":{},"body":{"injectables/HereCircleManager.html":{},"directives/MarkerClusterComponent.html":{}}}],["following",{"_index":1094,"title":{},"body":{"index.html":{}}}],["form",{"_index":223,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["from(this._mapswrapper.getbounds",{"_index":484,"title":{},"body":{"components/HereComponent.html":{}}}],["from(this._mapswrapper.getcenter",{"_index":468,"title":{},"body":{"components/HereComponent.html":{}}}],["from(this._mapswrapper.getzoom",{"_index":478,"title":{},"body":{"components/HereComponent.html":{}}}],["full",{"_index":216,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["function",{"_index":11,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1078,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":147,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["generatebounds",{"_index":507,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["generatebounds(includeinbounds",{"_index":512,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["geodesic",{"_index":784,"title":{},"body":{"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{}}}],["geopoint",{"_index":306,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HerePolylineManager.html":{}}}],["getbounds",{"_index":251,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereRectangleManager.html":{}}}],["getbounds(circle",{"_index":277,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["getbounds(rectangle",{"_index":869,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["getcenter",{"_index":252,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["getcenter(circle",{"_index":280,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["getplatform",{"_index":735,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["getradius",{"_index":253,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["getradius(circle",{"_index":282,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["getting",{"_index":1083,"title":{"index.html":{}},"body":{}}],["given",{"_index":155,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereRectangleManager.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["google",{"_index":539,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["google.maps.circleoptions",{"_index":295,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["google.maps.infowindowoptions",{"_index":546,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["google.maps.mapmouseevent",{"_index":985,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["google.maps.mapseventlistener",{"_index":373,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["google.maps.polygon",{"_index":808,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["google.maps.strokeposition",{"_index":361,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["grid",{"_index":41,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["gridsize",{"_index":45,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["gridsize=60",{"_index":40,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["group",{"_index":219,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["h",{"_index":643,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"miscellaneous/variables.html":{}}}],["h.geo.ipoint",{"_index":571,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["h.geo.linestring",{"_index":797,"title":{},"body":{"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{}}}],["h.geo.polygon(linestring",{"_index":801,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["h.geo.rect.coverpoints(points",{"_index":519,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["h.map.marker",{"_index":726,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["h.map.polyline",{"_index":857,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["h.service.platform",{"_index":740,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["h.service.platform.options",{"_index":751,"title":{},"body":{"interfaces/HereModuleOptions.html":{}}}],["handler",{"_index":63,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["handlers",{"_index":983,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["handlers.foreach((obj",{"_index":987,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["height",{"_index":409,"title":{},"body":{"components/HereComponent.html":{}}}],["here",{"_index":446,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"modules/NgMapsHereModule.html":{},"index.html":{},"properties.html":{}}}],["here.component",{"_index":1027,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["here_maps_module_options",{"_index":628,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["herecirclemanager",{"_index":241,"title":{"injectables/HereCircleManager.html":{}},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"overview.html":{}}}],["herecomponent",{"_index":380,"title":{"components/HereComponent.html":{}},"body":{"components/HereComponent.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"overview.html":{}}}],["heremaps",{"_index":1029,"title":{},"body":{"modules/NgMapsHereModule.html":{},"properties.html":{}}}],["heremapsfitboundsservice",{"_index":392,"title":{"injectables/HereMapsFitBoundsService.html":{}},"body":{"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"overview.html":{}}}],["heremapsinfowindowmanager",{"_index":402,"title":{"injectables/HereMapsInfoWindowManager.html":{}},"body":{"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"overview.html":{}}}],["heremapslibraries",{"_index":600,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"interfaces/HereModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["heremapslibraries.clustering",{"_index":622,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["heremapslibraries.core",{"_index":618,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["heremapslibraries.data",{"_index":623,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["heremapslibraries.mapevents",{"_index":620,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["heremapslibraries.pano",{"_index":625,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["heremapslibraries.places",{"_index":624,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["heremapslibraries.service",{"_index":619,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["heremapslibraries.ui",{"_index":621,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["heremapsloaderservice",{"_index":580,"title":{"injectables/HereMapsLoaderService.html":{}},"body":{"injectables/HereMapsLoaderService.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{}}}],["heremapsmarkermanager",{"_index":394,"title":{"injectables/HereMapsMarkerManager.html":{}},"body":{"components/HereComponent.html":{},"injectables/HereMapsMarkerManager.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"overview.html":{}}}],["heremapsplatformprovider",{"_index":732,"title":{"injectables/HereMapsPlatformProvider.html":{}},"body":{"injectables/HereMapsPlatformProvider.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"overview.html":{}}}],["heremapswrapperservice",{"_index":390,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"overview.html":{}}}],["heremapswrapperservice).ui$.subscribe(this.ui",{"_index":464,"title":{},"body":{"components/HereComponent.html":{}}}],["heremapswrapperservice).ui).removebubble",{"_index":559,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["heremoduleoptions",{"_index":597,"title":{"interfaces/HereModuleOptions.html":{}},"body":{"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"coverage.html":{}}}],["herepolygonmanager",{"_index":396,"title":{"injectables/HerePolygonManager.html":{}},"body":{"components/HereComponent.html":{},"injectables/HerePolygonManager.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"overview.html":{}}}],["herepolylinemanager",{"_index":398,"title":{"injectables/HerePolylineManager.html":{}},"body":{"components/HereComponent.html":{},"injectables/HerePolylineManager.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"overview.html":{}}}],["hererectanglemanager",{"_index":400,"title":{"injectables/HereRectangleManager.html":{}},"body":{"components/HereComponent.html":{},"injectables/HereRectangleManager.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"overview.html":{}}}],["hidden",{"_index":82,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["high",{"_index":174,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["higher",{"_index":125,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["homepage",{"_index":1109,"title":{},"body":{"properties.html":{}}}],["hostlistener",{"_index":440,"title":{},"body":{"components/HereComponent.html":{}}}],["hostlistener('window:resize",{"_index":439,"title":{},"body":{"components/HereComponent.html":{}}}],["hostlisteners",{"_index":424,"title":{},"body":{"components/HereComponent.html":{}}}],["html",{"_index":498,"title":{},"body":{"components/HereComponent.html":{}}}],["https",{"_index":672,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["https://github.com/ng",{"_index":1113,"title":{},"body":{"properties.html":{}}}],["https://ng",{"_index":1110,"title":{},"body":{"properties.html":{}}}],["i.addeventlistener(eventname",{"_index":579,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["i.setoptions(options",{"_index":569,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["i.setposition",{"_index":561,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["icon",{"_index":17,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["icons",{"_index":165,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HerePolylineManager.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["identifier",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":86,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["ignorehidden",{"_index":102,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["ignorehidden=false",{"_index":85,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["image",{"_index":220,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["imageextension",{"_index":161,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["imageextension=markerclusterer.image_extension",{"_index":227,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["imagepath",{"_index":160,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["imagepath=markerclusterer.image_path",{"_index":215,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["imagepathn.imageextension",{"_index":224,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["images",{"_index":236,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["imagesizes",{"_index":162,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["imagesizes=markerclusterer.image_sizes",{"_index":232,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["implement",{"_index":316,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{}}}],["implemented",{"_index":718,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["implements",{"_index":919,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["import",{"_index":303,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"modules/NgMapsHereModule.html":{}}}],["improve",{"_index":357,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["included",{"_index":90,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["includeinbounds",{"_index":514,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":117,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{}}}],["infowindow",{"_index":534,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["infowindow.elementref.nativeelement.clonenode(true",{"_index":565,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["infowindow.hostmarker",{"_index":573,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["infowindow.hostmarker.latitude",{"_index":574,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["infowindow.hostmarker.longitude",{"_index":575,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["infowindow.latitude",{"_index":562,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["infowindow.longitude",{"_index":563,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["infowindowmanager",{"_index":401,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"directives/MarkerClusterComponent.html":{},"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["inherit",{"_index":408,"title":{},"body":{"components/HereComponent.html":{}}}],["inject",{"_index":627,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"directives/MarkerClusterComponent.html":{}}}],["inject(here_maps_module_options",{"_index":633,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{}}}],["inject(marker_cluster_config",{"_index":962,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["injectable",{"_index":240,"title":{"injectables/HereCircleManager.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"coverage.html":{}}}],["injectables",{"_index":242,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"overview.html":{}}}],["injectiontoken",{"_index":752,"title":{},"body":{"interfaces/HereModuleOptions.html":{},"interfaces/MarkerClusterConfig.html":{},"miscellaneous/variables.html":{}}}],["inner",{"_index":406,"title":{},"body":{"components/HereComponent.html":{}}}],["input",{"_index":118,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["inputs",{"_index":930,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["inserted",{"_index":199,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["install",{"_index":1088,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1087,"title":{},"body":{"index.html":{}}}],["installed",{"_index":62,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["instance",{"_index":297,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["instanceof",{"_index":639,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["instead",{"_index":192,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["integer",{"_index":127,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ClusterIconInfo.html":{},"interfaces/HereModuleOptions.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{}},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/HereModuleOptions.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/HereModuleOptions.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"overview.html":{}}}],["internal",{"_index":963,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["internet",{"_index":189,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["item",{"_index":794,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["item.setgeometry(newpolygon",{"_index":802,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["iwindow",{"_index":552,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["iwindow.close",{"_index":558,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["javascript",{"_index":203,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["jpg",{"_index":231,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["js",{"_index":606,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["jsurl",{"_index":668,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["keywords",{"_index":1103,"title":{},"body":{"properties.html":{}}}],["l.addeventlistener(eventname",{"_index":858,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["l.addlistener(eventname",{"_index":809,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["lat",{"_index":321,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolylineManager.html":{}}}],["latitude",{"_index":727,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["layers",{"_index":748,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["legend",{"_index":497,"title":{},"body":{"components/HereComponent.html":{}}}],["less",{"_index":132,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["level",{"_index":49,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["levels",{"_index":53,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["libraries",{"_index":646,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"interfaces/HereModuleOptions.html":{}}}],["libraries.map((modulename",{"_index":657,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["license",{"_index":1116,"title":{},"body":{"properties.html":{}}}],["line",{"_index":820,"title":{},"body":{"injectables/HerePolylineManager.html":{},"index.html":{}}}],["line._getpoints().map((point",{"_index":831,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.clickable",{"_index":837,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.draggable",{"_index":838,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.editable",{"_index":839,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.geodesic",{"_index":840,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.icons",{"_index":846,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.strokecolor",{"_index":841,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.strokeopacity",{"_index":842,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.strokeweight",{"_index":843,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.visible",{"_index":844,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.zindex",{"_index":845,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["linestring",{"_index":796,"title":{},"body":{"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{}}}],["linestring.pushpoint(item",{"_index":849,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["linestring.pushpoint(path",{"_index":799,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["link",{"_index":37,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["listener",{"_index":372,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereRectangleManager.html":{}}}],["listener.remove",{"_index":378,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["literal",{"_index":773,"title":{},"body":{"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{}}}],["lng",{"_index":323,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolylineManager.html":{}}}],["load",{"_index":589,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader",{"_index":593,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{}}}],["loader.service",{"_index":1025,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["loader.service.ts",{"_index":581,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:13",{"_index":626,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader.service.ts:23",{"_index":617,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader.service.ts:24",{"_index":595,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader.service.ts:46",{"_index":598,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader.service.ts:50",{"_index":611,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader.service.ts:58",{"_index":616,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader.service.ts:72",{"_index":613,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader.service.ts:88",{"_index":609,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader.service.ts:95",{"_index":603,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loadmodule",{"_index":590,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loadmodule(modulename",{"_index":612,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loadmodules",{"_index":591,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["location",{"_index":74,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["longitude",{"_index":728,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["look",{"_index":171,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["low",{"_index":211,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["lowest",{"_index":126,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["m",{"_index":719,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolylineManager.html":{}}}],["m.addeventlistener(event",{"_index":722,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["m.dispose",{"_index":854,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["m.setgeometry",{"_index":729,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["m.setgeometry(linestring",{"_index":851,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["m.setvisibility(marker.visible",{"_index":730,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["m.setzindex(marker.zindex",{"_index":731,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["managed",{"_index":214,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["manager",{"_index":453,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{},"index.html":{}}}],["manager.ts",{"_index":244,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"coverage.html":{}}}],["manager.ts:10",{"_index":765,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["manager.ts:101",{"_index":300,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["manager.ts:105",{"_index":273,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["manager.ts:12",{"_index":816,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["manager.ts:13",{"_index":265,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereRectangleManager.html":{}}}],["manager.ts:15",{"_index":768,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["manager.ts:17",{"_index":819,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["manager.ts:18",{"_index":866,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["manager.ts:22",{"_index":269,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["manager.ts:24",{"_index":822,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["manager.ts:33",{"_index":776,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["manager.ts:42",{"_index":829,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["manager.ts:43",{"_index":774,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["manager.ts:48",{"_index":285,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HereRectangleManager.html":{}}}],["manager.ts:53",{"_index":878,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["manager.ts:54",{"_index":827,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["manager.ts:59",{"_index":296,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{}}}],["manager.ts:62",{"_index":825,"title":{},"body":{"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["manager.ts:67",{"_index":872,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["manager.ts:70",{"_index":823,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["manager.ts:73",{"_index":278,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["manager.ts:78",{"_index":281,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["manager.ts:79",{"_index":876,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["manager.ts:81",{"_index":874,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["manager.ts:83",{"_index":283,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereRectangleManager.html":{}}}],["manager.ts:87",{"_index":288,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["manager.ts:88",{"_index":868,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["manager.ts:92",{"_index":292,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["manager.ts:94",{"_index":290,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["manager.ts:96",{"_index":302,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["managers/circle",{"_index":452,"title":{},"body":{"components/HereComponent.html":{}}}],["managers/info",{"_index":454,"title":{},"body":{"components/HereComponent.html":{}}}],["managers/polygon",{"_index":456,"title":{},"body":{"components/HereComponent.html":{}}}],["managers/polyline",{"_index":457,"title":{},"body":{"components/HereComponent.html":{}}}],["managers/rectangle",{"_index":458,"title":{},"body":{"components/HereComponent.html":{}}}],["map",{"_index":57,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"properties.html":{}}}],["map.getviewport().resize",{"_index":460,"title":{},"body":{"components/HereComponent.html":{}}}],["map_provider",{"_index":1023,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["mapevents",{"_index":756,"title":{},"body":{"interfaces/HereModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["maps",{"_index":447,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maps.git",{"_index":1119,"title":{},"body":{"properties.html":{}}}],["maps.github.io/core",{"_index":1111,"title":{},"body":{"properties.html":{}}}],["maps/core",{"_index":308,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"modules/NgMapsHereModule.html":{},"dependencies.html":{}}}],["maps/here",{"_index":1085,"title":{},"body":{"index.html":{}}}],["maps/issues",{"_index":1115,"title":{},"body":{"properties.html":{}}}],["maps/ng",{"_index":1114,"title":{},"body":{"properties.html":{}}}],["mapsapiloader",{"_index":509,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"modules/NgMapsHereModule.html":{}}}],["mapsapiwrapper",{"_index":262,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["marker",{"_index":58,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"components/HereComponent.html":{},"injectables/HereMapsMarkerManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["marker.manager",{"_index":450,"title":{},"body":{"components/HereComponent.html":{}}}],["marker.manager.ts",{"_index":677,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{},"coverage.html":{}}}],["marker.manager.ts:11",{"_index":704,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:13",{"_index":690,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:18",{"_index":692,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:36",{"_index":694,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:38",{"_index":696,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:40",{"_index":698,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:42",{"_index":700,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:44",{"_index":702,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:46",{"_index":706,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:48",{"_index":708,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:54",{"_index":710,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:56",{"_index":712,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:58",{"_index":714,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:63",{"_index":716,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.ts",{"_index":1047,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["marker_cluster_config",{"_index":961,"title":{},"body":{"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["markerclustercomponent",{"_index":503,"title":{"directives/MarkerClusterComponent.html":{}},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"overview.html":{}}}],["markerclusterconfig",{"_index":933,"title":{"interfaces/MarkerClusterConfig.html":{}},"body":{"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"coverage.html":{}}}],["markerclusterer",{"_index":25,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["markerclusterer.repaint",{"_index":101,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["markerclustereroptions",{"_index":39,"title":{"interfaces/MarkerClustererOptions.html":{}},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"coverage.html":{}}}],["markermanager",{"_index":393,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"directives/MarkerClusterComponent.html":{},"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["markers",{"_index":33,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["matching",{"_index":239,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":47,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["maxzoom",{"_index":54,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["maxzoom=null",{"_index":46,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["mergemap",{"_index":444,"title":{},"body":{"components/HereComponent.html":{}}}],["metadata",{"_index":386,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{}}}],["methods",{"_index":247,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{}}}],["minimum",{"_index":79,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["minimumclustersize",{"_index":84,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["minimumclustersize=2",{"_index":78,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["minus",{"_index":134,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["miscellaneous",{"_index":1075,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1117,"title":{},"body":{"properties.html":{}}}],["mod",{"_index":659,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["mod.includes('css",{"_index":664,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["module",{"_index":604,"title":{"modules/NgMapsHereModule.html":{}},"body":{"injectables/HereMapsLoaderService.html":{},"overview.html":{}}}],["modulename",{"_index":614,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["moduleoptions",{"_index":754,"title":{},"body":{"interfaces/HereModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":1010,"title":{"modules.html":{}},"body":{"modules/NgMapsHereModule.html":{},"modules.html":{}}}],["module}.${ext",{"_index":676,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["monitors",{"_index":176,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["mouse",{"_index":105,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["moves",{"_index":106,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["multiple",{"_index":167,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["n",{"_index":225,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["name",{"_index":143,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/functions.html":{}}}],["near",{"_index":917,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["need",{"_index":210,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["needed",{"_index":80,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["new",{"_index":370,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpolygon",{"_index":800,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["next",{"_index":608,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["ng",{"_index":307,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"modules/NgMapsHereModule.html":{},"dependencies.html":{},"index.html":{},"properties.html":{}}}],["ng2",{"_index":1106,"title":{},"body":{"properties.html":{}}}],["ngc",{"_index":632,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"interfaces/HereModuleOptions.html":{}}}],["ngheremaps",{"_index":753,"title":{},"body":{"interfaces/HereModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["ngmapscircle",{"_index":298,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["ngmapscircledirective",{"_index":268,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["ngmapsheremodule",{"_index":1009,"title":{"modules/NgMapsHereModule.html":{}},"body":{"modules/NgMapsHereModule.html":{},"modules.html":{},"overview.html":{}}}],["ngmapsheremodule.forroot",{"_index":1095,"title":{},"body":{"index.html":{}}}],["ngmapsinfowindowcomponent",{"_index":532,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["ngmapsmarkercomponent",{"_index":691,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["ngmapspolygondirective",{"_index":767,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["ngmapspolyline",{"_index":818,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["ngmapspolylinepoint",{"_index":830,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["ngmapsrectangledirective",{"_index":865,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["ngmapsviewcomponent",{"_index":385,"title":{},"body":{"components/HereComponent.html":{}}}],["ngmodule",{"_index":1022,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["ngonchanges",{"_index":927,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["ngonchanges(changes",{"_index":955,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["ngondestroy",{"_index":928,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["ngoninit",{"_index":929,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["ngzone",{"_index":264,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["none",{"_index":411,"title":{},"body":{"components/HereComponent.html":{}}}],["north",{"_index":883,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["note",{"_index":180,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["npm",{"_index":1090,"title":{},"body":{"index.html":{}}}],["null",{"_index":52,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["number",{"_index":29,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["numbers",{"_index":233,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["object",{"_index":9,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"components/HereComponent.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["observable",{"_index":276,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["observable((observer",{"_index":371,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{}}}],["observable(subscriber",{"_index":912,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["observer",{"_index":310,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["observer.next",{"_index":859,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["observer.next((e",{"_index":725,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["observer.next(e",{"_index":377,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HerePolygonManager.html":{}}}],["onchanges",{"_index":921,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["ondestroy",{"_index":920,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["one",{"_index":124,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["oninit",{"_index":922,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["onresize",{"_index":421,"title":{},"body":{"components/HereComponent.html":{}}}],["open",{"_index":526,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["open(infowindow",{"_index":542,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["optional",{"_index":35,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":294,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{}}}],["options.strokeposition",{"_index":360,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["options.ts",{"_index":7,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["os",{"_index":988,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["out",{"_index":1018,"title":{},"body":{"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["output",{"_index":441,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{}}}],["outputs",{"_index":422,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{}}}],["over",{"_index":107,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["overview",{"_index":1099,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":804,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["p.dispose",{"_index":805,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["p1",{"_index":469,"title":{},"body":{"components/HereComponent.html":{}}}],["p1.lat",{"_index":471,"title":{},"body":{"components/HereComponent.html":{}}}],["p1.lng",{"_index":473,"title":{},"body":{"components/HereComponent.html":{}}}],["p2",{"_index":470,"title":{},"body":{"components/HereComponent.html":{}}}],["p2.lat",{"_index":472,"title":{},"body":{"components/HereComponent.html":{}}}],["p2.lng",{"_index":474,"title":{},"body":{"components/HereComponent.html":{}}}],["package",{"_index":1064,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["pano",{"_index":759,"title":{},"body":{"interfaces/HereModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":318,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{}}}],["parameter",{"_index":36,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["parameters",{"_index":119,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":946,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["passed",{"_index":24,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["path",{"_index":769,"title":{},"body":{"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{}}}],["path.clickable",{"_index":779,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.draggable",{"_index":780,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.editable",{"_index":781,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.fillcolor",{"_index":782,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.fillopacity",{"_index":783,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.foreach((item",{"_index":848,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["path.geodesic",{"_index":785,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.paths",{"_index":787,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.strokecolor",{"_index":788,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.strokeopacity",{"_index":789,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.strokeweight",{"_index":790,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.visible",{"_index":791,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.zindex",{"_index":792,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["paths",{"_index":786,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["peer",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":745,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["pipe",{"_index":467,"title":{},"body":{"components/HereComponent.html":{}}}],["pixels",{"_index":43,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["pl",{"_index":852,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["pl.setoptions(options",{"_index":853,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["places",{"_index":758,"title":{},"body":{"interfaces/HereModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["platform",{"_index":744,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["platform.provider",{"_index":1026,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["platform.provider.ts",{"_index":733,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{},"coverage.html":{}}}],["platform.provider.ts:14",{"_index":738,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["platform.provider.ts:7",{"_index":737,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["platformoptions",{"_index":750,"title":{},"body":{"interfaces/HereModuleOptions.html":{}}}],["png",{"_index":230,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["point",{"_index":570,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["point.latitude",{"_index":832,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["point.longitude",{"_index":833,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["points",{"_index":516,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["polygon",{"_index":771,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["polygon.paths.foreach((path",{"_index":798,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["polygonmanager",{"_index":395,"title":{},"body":{"components/HereComponent.html":{},"injectables/HerePolygonManager.html":{},"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["polygonpromise",{"_index":777,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["polylinemanager",{"_index":397,"title":{},"body":{"components/HereComponent.html":{},"injectables/HerePolylineManager.html":{},"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["polylinepromise",{"_index":835,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["position",{"_index":71,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["positioned",{"_index":73,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["private",{"_index":583,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"directives/MarkerClusterComponent.html":{}}}],["processed",{"_index":184,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["processes",{"_index":151,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["promise",{"_index":279,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["promise.all",{"_index":655,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["promise.resolve",{"_index":644,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"injectables/HerePolygonManager.html":{}}}],["properties",{"_index":27,"title":{"properties.html":{}},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"properties.html":{}}}],["property",{"_index":23,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["propname",{"_index":803,"title":{},"body":{"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{}}}],["protected",{"_index":413,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HerePolylineManager.html":{}}}],["protocol",{"_index":671,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["protocol}//js.api.here.com/v3/${version}/mapsjs",{"_index":675,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["provide",{"_index":388,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{},"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["providedin",{"_index":629,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["provider",{"_index":1086,"title":{},"body":{"index.html":{}}}],["providers",{"_index":387,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{},"modules/NgMapsHereModule.html":{}}}],["public",{"_index":461,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsPlatformProvider.html":{}}}],["r",{"_index":902,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["r.addeventlistener(eventname",{"_index":914,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["r.dispose",{"_index":904,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["r.setboundingbox",{"_index":910,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["r.seto",{"_index":906,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["r.setoptions(options",{"_index":908,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["r.setvisibility(rectangle.visible",{"_index":911,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["radius",{"_index":335,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["readonly",{"_index":462,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsLoaderService.html":{}}}],["rect",{"_index":1081,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rectangle",{"_index":867,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.clickable",{"_index":891,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.draggable",{"_index":892,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.east",{"_index":886,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.editable",{"_index":893,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.fillcolor",{"_index":894,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.fillopacity",{"_index":895,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.north",{"_index":884,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.south",{"_index":888,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.strokecolor",{"_index":896,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.strokeopacity",{"_index":897,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.strokeposition",{"_index":898,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.strokeweight",{"_index":899,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.visible",{"_index":900,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.west",{"_index":890,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.zindex",{"_index":901,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectanglemanager",{"_index":399,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereRectangleManager.html":{},"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["rectangleoptions",{"_index":905,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectfrombounds",{"_index":880,"title":{},"body":{"injectables/HereRectangleManager.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rectfrombounds(bounds",{"_index":1082,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reject",{"_index":637,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["removecircle",{"_index":254,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["removecircle(circle",{"_index":284,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["removerectangle",{"_index":862,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["removerectangle(rectangle",{"_index":870,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["removes",{"_index":286,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereRectangleManager.html":{}}}],["repository",{"_index":1118,"title":{},"body":{"properties.html":{}}}],["represented",{"_index":121,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["representing",{"_index":138,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["reset",{"_index":1017,"title":{},"body":{"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["resolution",{"_index":175,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["resolve",{"_index":636,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["rest",{"_index":652,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["result",{"_index":92,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["results",{"_index":238,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retina",{"_index":178,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["return",{"_index":139,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["returned",{"_index":93,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["returns",{"_index":12,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/functions.html":{}}}],["rework",{"_index":994,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["root",{"_index":218,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["rxjs",{"_index":311,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{}}}],["rxjs/operators",{"_index":445,"title":{},"body":{"components/HereComponent.html":{}}}],["s",{"_index":465,"title":{},"body":{"components/HereComponent.html":{},"index.html":{}}}],["s.unsubscribe",{"_index":966,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["scriptloaderservice",{"_index":594,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["second",{"_index":651,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["select",{"_index":206,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["selector",{"_index":403,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{}}}],["service",{"_index":650,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"interfaces/HereModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["set",{"_index":22,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["setbounds",{"_index":863,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["setbounds(rectangle",{"_index":871,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["setcenter",{"_index":255,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["setcenter(circle",{"_index":287,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["setdraggable",{"_index":256,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereRectangleManager.html":{}}}],["setdraggable(circle",{"_index":289,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["setdraggable(rectangle",{"_index":873,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["seteditable",{"_index":257,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereRectangleManager.html":{}}}],["seteditable(circle",{"_index":291,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["seteditable(rectangle",{"_index":875,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["setoptions",{"_index":258,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereRectangleManager.html":{}}}],["setoptions(circle",{"_index":293,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["setoptions(infowindow",{"_index":545,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["setoptions(rectangle",{"_index":877,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["setpolygonoptions",{"_index":763,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["setpolygonoptions(path",{"_index":772,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["setpolylineoptions",{"_index":814,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["setpolylineoptions(line",{"_index":826,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["setposition",{"_index":527,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["setposition(infowindow",{"_index":548,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["setradius",{"_index":259,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["setradius(circle",{"_index":299,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["setvisible",{"_index":260,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereRectangleManager.html":{}}}],["setvisible(circle",{"_index":301,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["setvisible(rectangle",{"_index":879,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["setzindex",{"_index":528,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["setzindex(infowindow",{"_index":550,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["several",{"_index":195,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["shown",{"_index":948,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["simplechanges",{"_index":442,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{}}}],["single",{"_index":185,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["size",{"_index":42,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["sizes",{"_index":166,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["small",{"_index":197,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{}}}],["south",{"_index":887,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["specify",{"_index":111,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["sprites",{"_index":181,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["square",{"_index":44,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["src/.../cluster",{"_index":1122,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../convert.ts",{"_index":1079,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../here",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../options.ts",{"_index":1077,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/lib/cluster/cluster",{"_index":6,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/cluster/marker",{"_index":915,"title":{},"body":{"directives/MarkerClusterComponent.html":{},"coverage.html":{}}}],["src/lib/convert.ts",{"_index":1043,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/here",{"_index":505,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/here.component.ts",{"_index":384,"title":{},"body":{"components/HereComponent.html":{},"coverage.html":{}}}],["src/lib/here.component.ts:112",{"_index":432,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.component.ts:114",{"_index":437,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.component.ts:116",{"_index":435,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.component.ts:118",{"_index":431,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.component.ts:137",{"_index":434,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.component.ts:64",{"_index":430,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.component.ts:73",{"_index":427,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.component.ts:84",{"_index":433,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.component.ts:99",{"_index":436,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.module.ts",{"_index":1019,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["src/lib/managers/circle",{"_index":243,"title":{},"body":{"injectables/HereCircleManager.html":{},"coverage.html":{}}}],["src/lib/managers/info",{"_index":521,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{},"coverage.html":{}}}],["src/lib/managers/polygon",{"_index":760,"title":{},"body":{"injectables/HerePolygonManager.html":{},"coverage.html":{}}}],["src/lib/managers/polyline",{"_index":810,"title":{},"body":{"injectables/HerePolylineManager.html":{},"coverage.html":{}}}],["src/lib/managers/rectangle",{"_index":860,"title":{},"body":{"injectables/HereRectangleManager.html":{},"coverage.html":{}}}],["src/lib/options.ts",{"_index":749,"title":{},"body":{"interfaces/HereModuleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1084,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":31,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["strokecolor",{"_index":337,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["strokeopacity",{"_index":339,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["strokeposition",{"_index":341,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereRectangleManager.html":{}}}],["strokeweight",{"_index":343,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["style",{"_index":15,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["styles",{"_index":123,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["subscribe((bounds",{"_index":495,"title":{},"body":{"components/HereComponent.html":{}}}],["subscribe((center",{"_index":475,"title":{},"body":{"components/HereComponent.html":{}}}],["subscribe((zoom",{"_index":482,"title":{},"body":{"components/HereComponent.html":{}}}],["subscribe(obj.handler",{"_index":992,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["subscriber.next(e",{"_index":913,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["subscribetomapevent('mapviewchangeend",{"_index":466,"title":{},"body":{"components/HereComponent.html":{}}}],["subscription",{"_index":960,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["such",{"_index":128,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["super",{"_index":634,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["super(_apiloader",{"_index":515,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["super(_mapswrapper",{"_index":314,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["support",{"_index":1096,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":99,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["svg",{"_index":1097,"title":{},"body":{"modules.html":{}}}],["svgmarkup",{"_index":1048,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":274,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{}}}],["table",{"_index":1063,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":412,"title":{},"body":{"components/HereComponent.html":{}}}],["text",{"_index":28,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["this._addeventlisteners",{"_index":995,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._apiwrapper.createcircle",{"_index":320,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["this._apiwrapper.createrectangle",{"_index":882,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["this._circles.delete(circle",{"_index":354,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["this._circles.get(circle",{"_index":352,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["this._circles.get(circle).then((c",{"_index":365,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["this._circles.set",{"_index":319,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["this._clustermanager",{"_index":989,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.clearmarkers",{"_index":964,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.init",{"_index":996,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.setaveragecenter(this",{"_index":968,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.setgridsize(this",{"_index":970,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.setimageextension(this",{"_index":972,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.setimagepath(this",{"_index":974,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.setmaxzoom(this",{"_index":976,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.setminimumclustersize(this",{"_index":978,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.setstyles(this",{"_index":980,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.setzoomonclick(this",{"_index":982,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._config",{"_index":1002,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._config.imagepath",{"_index":1003,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._configresolver",{"_index":638,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this._configresolver(c",{"_index":641,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this._configresolver(config",{"_index":642,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this._convertpoints(line",{"_index":834,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["this._infowindows.delete(infowindow",{"_index":560,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["this._infowindows.get(infowindow",{"_index":553,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["this._infowindows.set(infowindow",{"_index":578,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["this._mapswrapper",{"_index":463,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{}}}],["this._mapswrapper.createinfowindow(point",{"_index":577,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["this._mapswrapper.createpolygon",{"_index":778,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["this._mapswrapper.createpolyline",{"_index":836,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["this._mapswrapper.getnativemap",{"_index":572,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["this._mapswrapper.getnativemap().then((map",{"_index":459,"title":{},"body":{"components/HereComponent.html":{}}}],["this._markers.get(marker",{"_index":720,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["this._modules.get(modulename",{"_index":660,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this._observablesubscriptions.foreach((s",{"_index":965,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._observablesubscriptions.push(os",{"_index":993,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._platform",{"_index":742,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["this._polygons.delete(polygon",{"_index":806,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["this._polygons.get(path).then((l",{"_index":807,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["this._polygons.get(polygon",{"_index":795,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["this._polygons.set(path",{"_index":793,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["this._polylines.delete(line",{"_index":855,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["this._polylines.get(line",{"_index":850,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["this._polylines.get(line).then((l",{"_index":856,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["this._polylines.set(line",{"_index":847,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["this._rectangles.get(rectangle",{"_index":903,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["this._rectangles.get(rectangle).then((r",{"_index":907,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["this._rectangles.set",{"_index":881,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["this._zone.run",{"_index":376,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["this._zone.run(async",{"_index":557,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["this.averagecenter",{"_index":997,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.boundschange.emit(bounds",{"_index":496,"title":{},"body":{"components/HereComponent.html":{}}}],["this.calculator",{"_index":998,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.centerchange.emit(center",{"_index":476,"title":{},"body":{"components/HereComponent.html":{}}}],["this.clusterclick.emit(ev",{"_index":986,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.config",{"_index":635,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this.createmoduleurl(modulename",{"_index":666,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this.gridsize",{"_index":999,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.imageextension",{"_index":1000,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.imagepath",{"_index":1001,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.loader.load",{"_index":741,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["this.loader.loadcss(cssurl",{"_index":667,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this.loader.loadscript(jsurl",{"_index":669,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this.loadmodule(heremapslibraries.core",{"_index":653,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this.loadmodule(heremapslibraries.service",{"_index":654,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this.loadmodule(modulename",{"_index":658,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this.loadmodules",{"_index":645,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this.maxzoom",{"_index":1004,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.minimumclustersize",{"_index":1005,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.options).platformoptions",{"_index":747,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["this.styles",{"_index":1006,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.subscription.add(s",{"_index":477,"title":{},"body":{"components/HereComponent.html":{}}}],["this.zoomchange.emit(zoom",{"_index":483,"title":{},"body":{"components/HereComponent.html":{}}}],["this.zoomonclick",{"_index":1007,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["throw",{"_index":662,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{}}}],["timeout",{"_index":204,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["title",{"_index":21,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["todo",{"_index":355,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"directives/MarkerClusterComponent.html":{}}}],["together",{"_index":918,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["tooltip",{"_index":103,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["tree",{"_index":383,"title":{},"body":{"components/HereComponent.html":{}}}],["true",{"_index":88,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["ts",{"_index":991,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["tslib",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":30,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1120,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":359,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{}}}],["types/heremaps",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["typically",{"_index":168,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["typings",{"_index":724,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{},"directives/MarkerClusterComponent.html":{}}}],["ui",{"_index":423,"title":{},"body":{"components/HereComponent.html":{},"interfaces/HereModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":19,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{}}}],["unknown",{"_index":739,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["up",{"_index":149,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["updateanimation",{"_index":679,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateanimation(marker",{"_index":695,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateclickable",{"_index":680,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateclickable(marker",{"_index":697,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatedraggable",{"_index":681,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatedraggable(marker",{"_index":699,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateicon",{"_index":682,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateicon(marker",{"_index":701,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateiconlegacy",{"_index":683,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateiconlegacy(marker",{"_index":703,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatelabel",{"_index":684,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatelabel(marker",{"_index":705,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatemarkerposition",{"_index":685,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatemarkerposition(marker",{"_index":707,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateopacity",{"_index":686,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateopacity(marker",{"_index":709,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatepolygon",{"_index":764,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["updatepolygon(polygon",{"_index":775,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["updatepolylinepoints",{"_index":815,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["updatepolylinepoints(line",{"_index":828,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["updatetitle",{"_index":687,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatetitle(marker",{"_index":711,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatevisible",{"_index":688,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatevisible(marker",{"_index":713,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatezindex",{"_index":689,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatezindex(marker",{"_index":715,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["url",{"_index":217,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["use",{"_index":109,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["useclass",{"_index":389,"title":{},"body":{"components/HereComponent.html":{},"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["used",{"_index":14,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["useexisting",{"_index":924,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["usevalue",{"_index":1028,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["using",{"_index":187,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["value",{"_index":18,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":159,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["var",{"_index":500,"title":{},"body":{"components/HereComponent.html":{}}}],["variable",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1123,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":601,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"interfaces/HereModuleOptions.html":{},"properties.html":{}}}],["view",{"_index":404,"title":{},"body":{"components/HereComponent.html":{}}}],["viewed",{"_index":173,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["visibility",{"_index":96,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["visible",{"_index":345,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["void",{"_index":271,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{}}}],["w",{"_index":564,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["w.close",{"_index":568,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["w.open",{"_index":567,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["w.setcontent(content",{"_index":566,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["want",{"_index":60,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["west",{"_index":889,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["whether",{"_index":56,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["whichever",{"_index":131,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["whose",{"_index":157,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["width",{"_index":407,"title":{},"body":{"components/HereComponent.html":{}}}],["widths",{"_index":235,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["window",{"_index":554,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager",{"_index":455,"title":{},"body":{"components/HereComponent.html":{}}}],["window.manager.ts",{"_index":522,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{},"coverage.html":{}}}],["window.manager.ts:12",{"_index":530,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager.ts:21",{"_index":541,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager.ts:37",{"_index":549,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager.ts:49",{"_index":551,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager.ts:51",{"_index":544,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager.ts:58",{"_index":536,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager.ts:63",{"_index":547,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager.ts:71",{"_index":533,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager.ts:89",{"_index":537,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window:resize",{"_index":425,"title":{},"body":{"components/HereComponent.html":{}}}],["without",{"_index":207,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["work",{"_index":631,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["wrapper.service",{"_index":451,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{}}}],["wrapper.service.ts",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["yarn",{"_index":1091,"title":{},"body":{"index.html":{}}}],["yes",{"_index":615,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["z1",{"_index":481,"title":{},"body":{"components/HereComponent.html":{}}}],["z2",{"_index":480,"title":{},"body":{"components/HereComponent.html":{}}}],["zindex",{"_index":347,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["zoom",{"_index":48,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["zooming",{"_index":67,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["zoomonclick",{"_index":68,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["zoomonclick=true",{"_index":55,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ClusterIconInfo.html":{"url":"interfaces/ClusterIconInfo.html","title":"interface - ClusterIconInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClusterIconInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cluster/cluster-options.ts\n        \n\n\n            \n                Description\n            \n            \n                 the object that a calculator function returns.\n\n array to be used to style the cluster icon.\n If this value is undefined or \"\", title is set to the\n value of the title property passed to the MarkerClusterer.\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ClusterIconInfo {\n  text: string;\n  index: number;\n  title: string;\n}\n\nexport type Calculator = (\n  markers: Array,\n  clusterIconStylesCount: number,\n) => ClusterIconInfo;\n/**\n * Optional parameter passed to the {@link MarkerClusterer} constructor.\n */\nexport interface MarkerClustererOptions {\n  /** [gridSize=60] The grid size of a cluster in pixels. The grid is a square. */\n  gridSize?: number;\n  /**\n   * [maxZoom=null] The maximum zoom level at which clustering is enabled or\n   * null if clustering is to be enabled at all zoom levels.\n   */\n  maxZoom?: number;\n  /**\n   * [zoomOnClick=true] Whether to zoom the map when a cluster marker is\n   * clicked. You may want to set this to false if you have installed a handler\n   * for the click event and it deals with zooming on its own.\n   */\n  zoomOnClick?: boolean;\n  /**\n   * [averageCenter=false] Whether the position of a cluster marker should be\n   * the average position of all markers in the cluster. If set to false, the\n   * cluster marker is positioned at the location of the first marker added to the cluster.\n   */\n  averageCenter?: boolean;\n  /**\n   * [minimumClusterSize=2] The minimum number of markers needed in a cluster\n   * before the markers are hidden and a cluster marker appears.\n   */\n  minimumClusterSize?: number;\n  /**\n   * [ignoreHidden=false] Whether to ignore hidden markers in clusters. You\n   * may want to set this to true to ensure that hidden markers are not included\n   * in the marker count that appears on a cluster marker (this count is the value of the\n   * text property of the result returned by the default calculator).\n   * If set to true and you change the visibility of a marker being clustered, be\n   * sure to also call MarkerClusterer.repaint().\n   */\n  ignoreHidden?: boolean;\n  /**\n   * [title=\"\"] The tooltip to display when the mouse moves over a cluster\n   * marker. (Alternatively, you can use a custom calculator function to specify a\n   * different tooltip for each cluster marker.)\n   */\n  title?: string;\n  /**\n   * [calculator=MarkerClusterer.CALCULATOR] The function used to determine\n   * the text to be displayed on a cluster marker and the index indicating which style to use\n   * for the cluster marker. The input parameters for the function are (1) the array of markers\n   * represented by a cluster marker and (2) the number of cluster icon styles. It returns a\n   * {@link ClusterIconInfo} object. The default calculator returns a\n   * text property which is the number of markers in the cluster and an\n   * index property which is one higher than the lowest integer such that\n   * 10^i exceeds the number of markers in the cluster, or the size of the styles\n   * array, whichever is less. The styles array element used has an index of\n   * index minus 1. For example, the default calculator returns a\n   * text value of \"125\" and an index of 3\n   * for a cluster icon representing 125 markers so the element used in the styles\n   * array is 2. A calculator may also return a title\n   * property that contains the text of the tooltip to be used for the cluster marker. If\n   * title is not defined, the tooltip is set to the value of the title\n   * property for the MarkerClusterer.\n   */\n  calculator?: Calculator;\n  /**\n   * [clusterClass=\"cluster\"] The name of the CSS class defining general styles\n   * for the cluster markers. Use this class to define CSS styles that are not set up by the code\n   * that processes the styles array.\n   */\n  clusterClass?: string;\n  /**\n   * [styles] An array of {@link ClusterIconStyle} elements defining the styles\n   * of the cluster markers to be used. The element to be used to style a given cluster marker\n   * is determined by the function defined by the calculator property.\n   * The default is an array of {@link ClusterIconStyle} elements whose properties are derived\n   * from the values for imagePath, imageExtension, and\n   * imageSizes.\n   */\n  styles?: Array;\n  /**\n   * [enableRetinaIcons=false] Whether to allow the use of cluster icons that\n   * have sizes that are some multiple (typically double) of their actual display size. Icons such\n   * as these look better when viewed on high-resolution monitors such as Apple's Retina displays.\n   * Note: if this property is true, sprites cannot be used as cluster icons.\n   */\n  enableRetinaIcons?: boolean;\n  /**\n   * [batchSize=MarkerClusterer.BATCH_SIZE] Set this property to the\n   * number of markers to be processed in a single batch when using a browser other than\n   * Internet Explorer (for Internet Explorer, use the batchSizeIE property instead).\n   */\n  batchSize?: number;\n  /**\n   * [batchSizeIE=MarkerClusterer.BATCH_SIZE_IE] When Internet Explorer is\n   * being used, markers are processed in several batches with a small delay inserted between\n   * each batch in an attempt to avoid Javascript timeout errors. Set this property to the\n   * number of markers to be processed in a single batch; select as high a number as you can\n   * without causing a timeout error in the browser. This number might need to be as low as 100\n   * if 15,000 markers are being managed, for example.\n   */\n  batchSizeIE?: number;\n  /**\n   * [imagePath=MarkerClusterer.IMAGE_PATH]\n   * The full URL of the root name of the group of image files to use for cluster icons.\n   * The complete file name is of the form imagePathn.imageExtension\n   * where n is the image file number (1, 2, etc.).\n   */\n  imagePath?: string;\n  /**\n   * [imageExtension=MarkerClusterer.IMAGE_EXTENSION]\n   * The extension name for the cluster icon image files (e.g., \"png\" or\n   * \"jpg\").\n   */\n  imageExtension?: string;\n  /**\n   * [imageSizes=MarkerClusterer.IMAGE_SIZES]\n   * An array of numbers containing the widths of the group of\n   * imagePathn.imageExtension image files.\n   * (The images are assumed to be square.)\n   */\n  imageSizes?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HereCircleManager.html":{"url":"injectables/HereCircleManager.html","title":"injectable - HereCircleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HereCircleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/circle-manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    CircleManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCircle\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                    Async\n                                getBounds\n                            \n                            \n                                    Async\n                                getCenter\n                            \n                            \n                                getRadius\n                            \n                            \n                                    Async\n                                removeCircle\n                            \n                            \n                                    Async\n                                setCenter\n                            \n                            \n                                    Async\n                                setDraggable\n                            \n                            \n                                    Async\n                                setEditable\n                            \n                            \n                                    Async\n                                setOptions\n                            \n                            \n                                setRadius\n                            \n                            \n                                    Async\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/circle-manager.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCircle\n                        \n                    \n                \n            \n            \n                \naddCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:105\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRadius\n                        \n                    \n                \n            \n            \n                \ngetRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeCircle\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:48\n                \n            \n\n\n            \n                \n                    Removes the given circle from the map.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setDraggable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setEditable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(circle: NgMapsCircleDirective, options: google.maps.CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of NgMapsCircle\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                            google.maps.CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        options for the circle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRadius\n                        \n                    \n                \n            \n            \n                \nsetRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setVisible\n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport {\n  BoundsLiteral,\n  CircleManager,\n  GeoPoint,\n  MapsApiWrapper,\n  NgMapsCircleDirective,\n} from '@ng-maps/core';\nimport { EMPTY, Observable, Observer } from 'rxjs';\nimport { boundsFromRect } from '../convert';\n\n@Injectable()\nexport class HereCircleManager extends CircleManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  /**\n   * @fixme implement commented properties\n   * @param circle\n   */\n  addCircle(circle: NgMapsCircleDirective) {\n    this._circles.set(\n      circle,\n      this._apiWrapper.createCircle(\n        { lat: circle.latitude, lng: circle.longitude },\n        {\n          // clickable: circle.clickable,\n          // draggable: circle.draggable,\n          // editable: circle.editable,\n          fillColor: circle.fillColor,\n          fillOpacity: circle.fillOpacity,\n          radius: circle.radius,\n          strokeColor: circle.strokeColor,\n          strokeOpacity: circle.strokeOpacity,\n          // strokePosition: circle.strokePosition,\n          strokeWeight: circle.strokeWeight,\n          visible: circle.visible,\n          zIndex: circle.zIndex,\n        },\n      ),\n    );\n  }\n\n  /**\n   * Removes the given circle from the map.\n   */\n  async removeCircle(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    c.dispose();\n    this._circles.delete(circle);\n  }\n\n  /**\n   * @todo check how to improve type casting\n   * @param circle instance of {@link NgMapsCircle}\n   * @param options options for the circle\n   */\n  async setOptions(\n    circle: NgMapsCircleDirective,\n    options: google.maps.CircleOptions,\n  ): Promise {\n    const c = await this._circles.get(circle);\n\n    if (typeof options.strokePosition === 'string') {\n      options.strokePosition = (google.maps.StrokePosition[\n        options.strokePosition\n      ] as any) as google.maps.StrokePosition;\n    }\n    // return c.setOptions(options);\n  }\n\n  async getBounds(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    return boundsFromRect(c.getBoundingBox());\n  }\n\n  async getCenter(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    return c.getCenter();\n  }\n\n  getRadius(circle: NgMapsCircleDirective): Promise {\n    return this._circles.get(circle).then((c) => c.getRadius());\n  }\n\n  async setCenter(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    c.setCenter({ lat: circle.latitude, lng: circle.longitude });\n  }\n\n  async setEditable(circle: NgMapsCircleDirective): Promise {}\n\n  async setDraggable(circle: NgMapsCircleDirective): Promise {}\n\n  async setVisible(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    c.setVisibility(circle.visible);\n  }\n\n  setRadius(circle: NgMapsCircleDirective): Promise {\n    return this._circles.get(circle).then((c) => c.setRadius(circle.radius));\n  }\n\n  createEventObservable(\n    eventName: string,\n    circle: NgMapsCircleDirective,\n  ): Observable {\n    // return new Observable((observer: Observer) => {\n    //   let listener: google.maps.MapsEventListener = null;\n    //   this._circles.get(circle).then((c) => {\n    //     listener = c.addEventListener(eventName, (e: T) =>\n    //       this._zone.run(() => observer.next(e)),\n    //     );\n    //   });\n    //\n    //   return () => {\n    //     if (listener !== null) {\n    //       listener.remove();\n    //     }\n    //   };\n    // });\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HereComponent.html":{"url":"components/HereComponent.html","title":"component - HereComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HereComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/here.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NgMapsViewComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: MapsApiWrapper, useClass: HereMapsWrapperService }\n                                { provide: FitBoundsService, useClass: HereMapsFitBoundsService }\n                                { provide: MarkerManager, useClass: HereMapsMarkerManager }\n                                { provide: CircleManager, useClass: HereCircleManager }\n                                { provide: PolygonManager, useClass: HerePolygonManager }\n                                { provide: PolylineManager, useClass: HerePolylineManager }\n                                { provide: RectangleManager, useClass: HereRectangleManager }\n                                { provide: InfoWindowManager, useClass: HereMapsInfoWindowManager }\n                \n            \n\n\n            \n                selector\n                map-view\n            \n\n\n            \n                styles\n                \n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    \n            \n\n            \n                template\n                \n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _handleBoundsChange\n                            \n                            \n                                    Protected\n                                _handleIdleEvent\n                            \n                            \n                                    Protected\n                                    Async\n                                _handleMapCenterChange\n                            \n                            \n                                    Protected\n                                _handleMapMouseEvents\n                            \n                            \n                                    Protected\n                                _handleMapTypeIdChange\n                            \n                            \n                                    Protected\n                                _handleMapZoomChange\n                            \n                            \n                                    Protected\n                                _handleTilesLoadedEvent\n                            \n                            \n                                onResize\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ui\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _fitBoundsService: FitBoundsService, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/here.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fitBoundsService\n                                                  \n                                                        \n                                                                    FitBoundsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        ui\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/here.component.ts:73\n                            \n                        \n                \n                    \n                        Event that returns the UI object if available\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here.component.ts:64\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleBoundsChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleBoundsChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleIdleEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleIdleEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        _handleMapCenterChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapCenterChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleMapMouseEvents\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapMouseEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleMapTypeIdChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapTypeIdChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleMapZoomChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapZoomChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleTilesLoadedEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleTilesLoadedEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onResize\n                        \n                    \n                \n            \n            \n                \nonResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize')\n                \n            \n\n            \n                \n                    Defined in src/lib/here.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  HostListener,\n  NgZone,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  CircleManager,\n  FitBoundsService,\n  InfoWindowManager,\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsViewComponent,\n  PolygonManager,\n  PolylineManager,\n  RectangleManager,\n} from '@ng-maps/core';\nimport { from } from 'rxjs';\nimport { distinctUntilChanged, mergeMap } from 'rxjs/operators';\nimport { HereMapsFitBoundsService } from './here-maps-fit-bounds.service';\nimport { HereMapsMarkerManager } from './here-maps-marker.manager';\nimport { HereMapsWrapperService } from './here-maps-wrapper.service';\nimport { HereCircleManager } from './managers/circle-manager';\nimport { HereMapsInfoWindowManager } from './managers/info-window.manager';\nimport { HerePolygonManager } from './managers/polygon-manager';\nimport { HerePolylineManager } from './managers/polyline-manager';\nimport { HereRectangleManager } from './managers/rectangle-manager';\n\n@Component({\n  selector: 'map-view',\n  providers: [\n    { provide: MapsApiWrapper, useClass: HereMapsWrapperService },\n    { provide: FitBoundsService, useClass: HereMapsFitBoundsService },\n    { provide: MarkerManager, useClass: HereMapsMarkerManager },\n    { provide: CircleManager, useClass: HereCircleManager },\n    { provide: PolygonManager, useClass: HerePolygonManager },\n    { provide: PolylineManager, useClass: HerePolylineManager },\n    { provide: RectangleManager, useClass: HereRectangleManager },\n    { provide: InfoWindowManager, useClass: HereMapsInfoWindowManager },\n  ],\n  styles: [\n    `\n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    `,\n  ],\n  template: `\n    \n    \n      \n    \n  `,\n})\nexport class HereComponent extends NgMapsViewComponent {\n  @HostListener('window:resize')\n  onResize() {\n    this._mapsWrapper.getNativeMap().then((map) => {\n      map.getViewPort().resize();\n    });\n  }\n\n  /**\n   * Event that returns the UI object if available\n   */\n  @Output() public readonly ui: EventEmitter = new EventEmitter();\n\n  constructor(\n    _mapsWrapper: MapsApiWrapper,\n    _fitBoundsService: FitBoundsService,\n    _zone: NgZone,\n  ) {\n    super(_mapsWrapper, _fitBoundsService, _zone);\n    (this._mapsWrapper as HereMapsWrapperService).ui$.subscribe(this.ui);\n  }\n\n  protected async _handleMapCenterChange(): Promise {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('mapviewchangeend')\n      .pipe(\n        mergeMap(() => from(this._mapsWrapper.getCenter())),\n        distinctUntilChanged(\n          (p1, p2) => p1.lat === p2.lat && p1.lng === p2.lng,\n        ),\n      )\n      .subscribe((center) => {\n        this.centerChange.emit(center);\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleMapZoomChange(): void {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('mapviewchangeend')\n      .pipe(\n        mergeMap(() => from(this._mapsWrapper.getZoom())),\n        distinctUntilChanged((z1, z2) => z1 === z2),\n      )\n      .subscribe((zoom) => {\n        this.zoomChange.emit(zoom);\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleIdleEvent() {}\n\n  protected _handleTilesLoadedEvent() {}\n\n  protected _handleMapTypeIdChange() {}\n\n  protected _handleBoundsChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('mapviewchangeend')\n      .pipe(\n        mergeMap(() => from(this._mapsWrapper.getBounds())),\n        distinctUntilChanged(\n          (b1, b2) =>\n            b1.east === b2.east &&\n            b1.north === b2.north &&\n            b1.west === b2.west &&\n            b1.south === b2.south,\n        ),\n      )\n      .subscribe((bounds) => {\n        this.boundsChange.emit(bounds);\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleMapMouseEvents() {}\n}\n\n    \n\n\n    \n            \n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'HereComponent', 'selector': 'map-view'}];\n    var DIRECTIVES = [{'name': 'MarkerClusterComponent', 'selector': 'map-marker-cluster'}];\n    var ACTUAL_COMPONENT = {'name': 'HereComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HereMapsFitBoundsService.html":{"url":"injectables/HereMapsFitBoundsService.html","title":"injectable - HereMapsFitBoundsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HereMapsFitBoundsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/here-maps-fit-bounds.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    FitBoundsService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                generateBounds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_apiLoader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/lib/here-maps-fit-bounds.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _apiLoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        generateBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateBounds(includeInBounds: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-fit-bounds.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    includeInBounds\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     BoundsLiteral\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  BoundsLiteral,\n  FitBoundsService,\n  GeoPoint,\n  MapsAPILoader,\n} from '@ng-maps/core';\nimport { boundsFromRect } from './convert';\n\n@Injectable()\nexport class HereMapsFitBoundsService extends FitBoundsService {\n  constructor(_apiLoader: MapsAPILoader) {\n    super(_apiLoader);\n  }\n\n  protected generateBounds(\n    includeInBounds: Map,\n  ): BoundsLiteral {\n    const points = Array.from(includeInBounds.values());\n    const bounds = H.geo.Rect.coverPoints(points);\n    return boundsFromRect(bounds);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HereMapsInfoWindowManager.html":{"url":"injectables/HereMapsInfoWindowManager.html","title":"injectable - HereMapsInfoWindowManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HereMapsInfoWindowManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/info-window.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    InfoWindowManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addInfoWindow\n                            \n                            \n                                close\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                    Async\n                                deleteInfoWindow\n                            \n                            \n                                    Async\n                                open\n                            \n                            \n                                setOptions\n                            \n                            \n                                setPosition\n                            \n                            \n                                setZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone, _markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/info-window.manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _markerManager\n                                                  \n                                                        \n                                                                    MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addInfoWindow\n                        \n                    \n                \n            \n            \n                \n                    \n                    addInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:89\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n                    Creates a Google Maps event listener for the given InfoWindow as an Observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteInfoWindow\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open(infoWindow: NgMapsInfoWindowComponent, evt: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    evt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOptions\n                        \n                    \n                \n            \n            \n                \nsetOptions(infoWindow: NgMapsInfoWindowComponent, options: google.maps.InfoWindowOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.InfoWindowOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPosition\n                        \n                    \n                \n            \n            \n                \nsetPosition(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setZIndex\n                        \n                    \n                \n            \n            \n                \nsetZIndex(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport {\n  InfoWindowManager,\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsInfoWindowComponent,\n} from '@ng-maps/core';\nimport { Observable, Observer } from 'rxjs';\nimport { HereMapsWrapperService } from '../here-maps-wrapper.service';\n\n@Injectable()\nexport class HereMapsInfoWindowManager extends InfoWindowManager {\n  constructor(\n    _mapsWrapper: MapsApiWrapper,\n    _zone: NgZone,\n    _markerManager: MarkerManager,\n  ) {\n    super(_mapsWrapper, _zone, _markerManager);\n  }\n\n  async deleteInfoWindow(infoWindow: NgMapsInfoWindowComponent): Promise {\n    const iWindow = await this._infoWindows.get(infoWindow);\n    if (iWindow == null) {\n      // info window already deleted\n      return;\n    } else {\n      return this._zone.run(async () => {\n        iWindow.close();\n        (await (this._mapsWrapper as HereMapsWrapperService).ui).removeBubble(\n          iWindow,\n        );\n        this._infoWindows.delete(infoWindow);\n      });\n    }\n  }\n\n  setPosition(infoWindow: NgMapsInfoWindowComponent): void {\n    const i = this._infoWindows.get(infoWindow);\n    i.setPosition({\n      lat: infoWindow.latitude,\n      lng: infoWindow.longitude,\n    });\n  }\n\n  /**\n   * @todo implement\n   * @param infoWindow\n   */\n  setZIndex(infoWindow: NgMapsInfoWindowComponent): void {}\n\n  async open(infoWindow: NgMapsInfoWindowComponent, evt: any): Promise {\n    const w = this._infoWindows.get(infoWindow);\n    const content = infoWindow.elementRef.nativeElement.cloneNode(true);\n    w.setContent(content);\n    w.open();\n  }\n\n  close(infoWindow: NgMapsInfoWindowComponent): void {\n    const w = this._infoWindows.get(infoWindow);\n    w.close();\n  }\n\n  setOptions(\n    infoWindow: NgMapsInfoWindowComponent,\n    options: google.maps.InfoWindowOptions,\n  ) {\n    const i = this._infoWindows.get(infoWindow);\n    // i.setOptions(options);\n  }\n\n  async addInfoWindow(infoWindow: NgMapsInfoWindowComponent) {\n    let point: H.geo.IPoint;\n    await this._mapsWrapper.getNativeMap();\n    if (infoWindow.hostMarker != null) {\n      point = {\n        lat: infoWindow.hostMarker.latitude,\n        lng: infoWindow.hostMarker.longitude,\n      };\n    } else {\n      point = { lat: infoWindow.latitude, lng: infoWindow.longitude };\n    }\n    const bubble = await this._mapsWrapper.createInfoWindow(point, null);\n    this._infoWindows.set(infoWindow, bubble);\n  }\n\n  /**\n   * Creates a Google Maps event listener for the given InfoWindow as an Observable\n   */\n  createEventObservable(\n    eventName: string,\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Observable {\n    const i = this._infoWindows.get(infoWindow);\n    return new Observable((observer: Observer) => {\n      i.addEventListener(eventName, (e: any) =>\n        this._zone.run(() => observer.next(e)),\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HereMapsLoaderService.html":{"url":"injectables/HereMapsLoaderService.html","title":"injectable - HereMapsLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HereMapsLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/here-maps-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    MapsAPILoader\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configResolver\n                            \n                            \n                                    Private\n                                    Readonly\n                                _modules\n                            \n                            \n                                    Protected\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                    Private\n                                createModuleUrl\n                            \n                            \n                                    Private\n                                distinct\n                            \n                            \n                                load\n                            \n                            \n                                    Private\n                                    Async\n                                loadModule\n                            \n                            \n                                    Private\n                                    Async\n                                loadModules\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: any, loader: ScriptLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/here-maps-loader.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                    ScriptLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(config: HereModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-loader.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                HereModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createModuleUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    createModuleUrl(module: HereMapsLibraries, version: string, ext: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-loader.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                HereMapsLibraries\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '3.1'\n                                    \n\n                                \n                                \n                                    ext\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'js'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        distinct\n                        \n                    \n                \n            \n            \n                \n                    \n                    distinct(acc: Array, next: HereMapsLibraries)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-loader.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    acc\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HereMapsLibraries\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-loader.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadModule\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadModule(moduleName: HereMapsLibraries, version?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-loader.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleName\n                                    \n                                                HereMapsLibraries\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadModules\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadModules()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-loader.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _configResolver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/here-maps-loader.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _modules\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map([\n    [HereMapsLibraries.CORE, ['js']],\n    [HereMapsLibraries.SERVICE, ['js']],\n    [HereMapsLibraries.MAPEVENTS, ['js']],\n    [HereMapsLibraries.UI, ['js', 'css']],\n    [HereMapsLibraries.CLUSTERING, ['js']],\n    [HereMapsLibraries.DATA, ['js']],\n    [HereMapsLibraries.PLACES, ['js']],\n    [HereMapsLibraries.PANO, ['js']],\n  ])\n                    \n                \n                    \n                        \n                                Defined in src/lib/here-maps-loader.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/here-maps-loader.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport { MapsAPILoader, ScriptLoaderService } from '@ng-maps/core';\nimport {\n  HereMapsLibraries,\n  HereModuleOptions,\n  HERE_MAPS_MODULE_OPTIONS,\n} from './options';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HereMapsLoaderService extends MapsAPILoader {\n  private readonly _modules = new Map([\n    [HereMapsLibraries.CORE, ['js']],\n    [HereMapsLibraries.SERVICE, ['js']],\n    [HereMapsLibraries.MAPEVENTS, ['js']],\n    [HereMapsLibraries.UI, ['js', 'css']],\n    [HereMapsLibraries.CLUSTERING, ['js']],\n    [HereMapsLibraries.DATA, ['js']],\n    [HereMapsLibraries.PLACES, ['js']],\n    [HereMapsLibraries.PANO, ['js']],\n  ]);\n  protected _configResolver: (config: HereModuleOptions) => void;\n  protected config: Promise;\n\n  constructor(\n    // This may be a Promise but that doesn't work with ngc\n    @Optional()\n    @Inject(HERE_MAPS_MODULE_OPTIONS)\n    config: any,\n    private loader: ScriptLoaderService,\n  ) {\n    super();\n    this.config = new Promise(\n      (resolve, reject) => (this._configResolver = resolve),\n    );\n    if (config instanceof Promise) {\n      config.then((c) => {\n        this._configResolver(c);\n      });\n    } else if (typeof config === 'object') {\n      this._configResolver(config);\n    }\n  }\n\n  configure(config: HereModuleOptions): void {\n    this._configResolver(config);\n  }\n\n  load(): Promise {\n    if (typeof H !== 'undefined') {\n      return Promise.resolve();\n    } else {\n      return this.loadModules();\n    }\n  }\n\n  private async loadModules(): Promise {\n    const config = await this.config;\n    const libraries = config.libraries;\n    const version = config.version;\n    // Load the Core first, Service second and then the rest of the files\n    await this.loadModule(HereMapsLibraries.CORE, version);\n    await this.loadModule(HereMapsLibraries.SERVICE, version);\n    await Promise.all(\n      Array.isArray(libraries)\n        ? libraries.map((moduleName) => this.loadModule(moduleName, version))\n        : [],\n    );\n  }\n\n  private async loadModule(\n    moduleName: HereMapsLibraries,\n    version?: string,\n  ): Promise {\n    const mod = this._modules.get(moduleName);\n    if (mod === void 0) {\n      throw new Error(`Unknown module ${moduleName}`);\n    }\n    if (mod.includes('css')) {\n      const cssurl = this.createModuleUrl(moduleName, version, 'css');\n      await this.loader.loadCSS(cssurl);\n    }\n    const jsurl = this.createModuleUrl(moduleName, version);\n    await this.loader.loadScript(jsurl);\n  }\n\n  private distinct(acc: Array, next: HereMapsLibraries) {\n    if (acc.find((value) => value === next)) {\n      return acc;\n    }\n    return [...acc, next];\n  }\n\n  private createModuleUrl(\n    module: HereMapsLibraries,\n    version: string = '3.1',\n    ext = 'js',\n  ): string {\n    const protocol = 'https:'; // (document.location as any).protocol,\n    return `${protocol}//js.api.here.com/v3/${version}/mapsjs-${module}.${ext}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HereMapsMarkerManager.html":{"url":"injectables/HereMapsMarkerManager.html","title":"injectable - HereMapsMarkerManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HereMapsMarkerManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/here-maps-marker.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    MarkerManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEventObservable\n                            \n                            \n                                deleteMarker\n                            \n                            \n                                updateAnimation\n                            \n                            \n                                updateClickable\n                            \n                            \n                                updateDraggable\n                            \n                            \n                                updateIcon\n                            \n                            \n                                updateIconLegacy\n                            \n                            \n                                updateLabel\n                            \n                            \n                                updateMarkerPosition\n                            \n                            \n                                updateOpacity\n                            \n                            \n                                updateTitle\n                            \n                            \n                                updateVisible\n                            \n                            \n                                updateZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/here-maps-marker.manager.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string | Array, marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:18\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                            string | Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMarker\n                        \n                    \n                \n            \n            \n                \ndeleteMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAnimation\n                        \n                    \n                \n            \n            \n                \nupdateAnimation(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateClickable\n                        \n                    \n                \n            \n            \n                \nupdateClickable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDraggable\n                        \n                    \n                \n            \n            \n                \nupdateDraggable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIcon\n                        \n                    \n                \n            \n            \n                \nupdateIcon(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIconLegacy\n                        \n                    \n                \n            \n            \n                \nupdateIconLegacy(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLabel\n                        \n                    \n                \n            \n            \n                \nupdateLabel(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMarkerPosition\n                        \n                    \n                \n            \n            \n                \nupdateMarkerPosition(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOpacity\n                        \n                    \n                \n            \n            \n                \nupdateOpacity(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTitle\n                        \n                    \n                \n            \n            \n                \nupdateTitle(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateVisible\n                        \n                    \n                \n            \n            \n                \nupdateVisible(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateZIndex\n                        \n                    \n                \n            \n            \n                \nupdateZIndex(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport {\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsMarkerComponent,\n} from '@ng-maps/core';\nimport { EMPTY, Observable, Observer } from 'rxjs';\n\n@Injectable()\nexport class HereMapsMarkerManager extends MarkerManager {\n  updateIconLegacy(marker: NgMapsMarkerComponent): void {\n    throw new Error('Method not implemented.');\n  }\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  createEventObservable(\n    eventName: string | Array,\n    marker: NgMapsMarkerComponent,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      const m = this._markers.get(marker);\n      if (typeof eventName === 'string') {\n        eventName = [eventName];\n      }\n      eventName.forEach((event) => {\n        m.addEventListener(event, (e: Event) => {\n          // @todo fix typings\n          return this._zone.run(() => observer.next((e as any) as E));\n        });\n      });\n    });\n  }\n\n  deleteMarker(marker: NgMapsMarkerComponent): void {}\n\n  updateAnimation(marker: NgMapsMarkerComponent): void {}\n\n  updateClickable(marker: NgMapsMarkerComponent): void {}\n\n  updateDraggable(marker: NgMapsMarkerComponent): void {}\n\n  updateIcon(marker: NgMapsMarkerComponent): void {}\n\n  updateLabel(marker: NgMapsMarkerComponent): void {}\n\n  updateMarkerPosition(marker: NgMapsMarkerComponent): void {\n    const m: H.map.Marker = this._markers.get(marker);\n    const { latitude, longitude } = marker;\n    m.setGeometry({ lat: latitude, lng: longitude });\n  }\n\n  updateOpacity(marker: NgMapsMarkerComponent): void {}\n\n  updateTitle(marker: NgMapsMarkerComponent): void {}\n\n  updateVisible(marker: NgMapsMarkerComponent): void {\n    const m: H.map.Marker = this._markers.get(marker);\n    m.setVisibility(marker.visible);\n  }\n\n  updateZIndex(marker: NgMapsMarkerComponent): void {\n    const m: H.map.Marker = this._markers.get(marker);\n    m.setZIndex(marker.zIndex);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HereMapsPlatformProvider.html":{"url":"injectables/HereMapsPlatformProvider.html","title":"injectable - HereMapsPlatformProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HereMapsPlatformProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/here-maps-platform.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _platform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getPlatform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: HereModuleOptions | any, loader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/lib/here-maps-platform.provider.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        HereModuleOptions | any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getPlatform\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlatform()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-platform.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :     H.service.Platform\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/here-maps-platform.provider.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { MapsAPILoader } from '@ng-maps/core';\nimport { HereModuleOptions, HERE_MAPS_MODULE_OPTIONS } from './options';\n\n@Injectable()\nexport class HereMapsPlatformProvider {\n  private _platform: H.service.Platform;\n  constructor(\n    @Inject(HERE_MAPS_MODULE_OPTIONS)\n    private options: HereModuleOptions | any,\n    private loader: MapsAPILoader,\n  ) {}\n\n  public async getPlatform() {\n    await this.loader.load();\n    if (this._platform == null) {\n      // Create a Platform object (one per application):\n      this._platform = new H.service.Platform(\n        (await this.options).platformOptions,\n      );\n      // Get an object containing the default map layers:\n    }\n    return this._platform;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HereModuleOptions.html":{"url":"interfaces/HereModuleOptions.html","title":"interface - HereModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HereModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            libraries\n                                        \n                                \n                                \n                                        \n                                            platformOptions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        libraries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        libraries:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformOptions:     H.service.Platform.Options\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     H.service.Platform.Options\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n// this might also be a promise Promise but ngc doesn't like that\nexport const HERE_MAPS_MODULE_OPTIONS = new InjectionToken(\n  'NgHereMaps ModuleOptions',\n);\n\nexport enum HereMapsLibraries {\n  CORE = 'core',\n  SERVICE = 'service',\n  MAPEVENTS = 'mapevents',\n  UI = 'ui',\n  CLUSTERING = 'clustering',\n  DATA = 'data',\n  PLACES = 'places',\n  PANO = 'pano',\n}\n\nexport interface HereModuleOptions {\n  libraries?: Array;\n  version?: string;\n  platformOptions: H.service.Platform.Options;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HerePolygonManager.html":{"url":"injectables/HerePolygonManager.html","title":"injectable - HerePolygonManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HerePolygonManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/polygon-manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PolygonManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPolygon\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                    Async\n                                deletePolygon\n                            \n                            \n                                    Async\n                                setPolygonOptions\n                            \n                            \n                                    Async\n                                updatePolygon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/polygon-manager.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPolygon\n                        \n                    \n                \n            \n            \n                \naddPolygon(path: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon-manager.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, path: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon-manager.ts:59\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deletePolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolygon(polygon: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon-manager.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    polygon\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setPolygonOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolygonOptions(path: NgMapsPolygonDirective, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon-manager.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolygon(polygon: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon-manager.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    polygon\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport {\n  MapsApiWrapper,\n  NgMapsPolygonDirective,\n  PolygonManager,\n} from '@ng-maps/core';\nimport { EMPTY, Observable, Observer } from 'rxjs';\n\n@Injectable()\nexport class HerePolygonManager extends PolygonManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  addPolygon(path: NgMapsPolygonDirective) {\n    const polygonPromise = this._mapsWrapper.createPolygon({\n      clickable: path.clickable,\n      draggable: path.draggable,\n      editable: path.editable,\n      fillColor: path.fillColor,\n      fillOpacity: path.fillOpacity,\n      geodesic: path.geodesic,\n      paths: path.paths,\n      strokeColor: path.strokeColor,\n      strokeOpacity: path.strokeOpacity,\n      strokeWeight: path.strokeWeight,\n      visible: path.visible,\n      zIndex: path.zIndex,\n    });\n    this._polygons.set(path, polygonPromise);\n  }\n\n  async updatePolygon(polygon: NgMapsPolygonDirective): Promise {\n    const item = await this._polygons.get(polygon);\n    const lineString = new H.geo.LineString();\n    polygon.paths.forEach((path) => {\n      lineString.pushPoint(path);\n    });\n    const newPolygon = new H.geo.Polygon(lineString);\n    item.setGeometry(newPolygon);\n  }\n\n  async setPolygonOptions(\n    path: NgMapsPolygonDirective,\n    options: { [propName: string]: any },\n  ): Promise {}\n\n  async deletePolygon(polygon: NgMapsPolygonDirective): Promise {\n    const p = await this._polygons.get(polygon);\n    if (p == null) {\n      return Promise.resolve();\n    }\n    this._zone.run(() => {\n      p.dispose();\n      this._polygons.delete(polygon);\n    });\n  }\n\n  createEventObservable(\n    eventName: string,\n    path: NgMapsPolygonDirective,\n  ): Observable {\n    // return new Observable((observer: Observer) => {\n    //   this._polygons.get(path).then((l: google.maps.Polygon) => {\n    //     l.addListener(eventName, (e: T) =>\n    //       this._zone.run(() => observer.next(e)),\n    //     );\n    //   });\n    // });\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HerePolylineManager.html":{"url":"injectables/HerePolylineManager.html","title":"injectable - HerePolylineManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HerePolylineManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/polyline-manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PolylineManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _convertPoints\n                            \n                            \n                                addPolyline\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                    Async\n                                deletePolyline\n                            \n                            \n                                    Async\n                                setPolylineOptions\n                            \n                            \n                                    Async\n                                updatePolylinePoints\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/polyline-manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _convertPoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    _convertPoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline-manager.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addPolyline\n                        \n                    \n                \n            \n            \n                \naddPolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline-manager.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline-manager.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deletePolyline\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline-manager.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setPolylineOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolylineOptions(line: NgMapsPolyline, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline-manager.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePolylinePoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolylinePoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline-manager.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport {\n  GeoPoint,\n  MapsApiWrapper,\n  NgMapsPolyline,\n  NgMapsPolylinePoint,\n  PolylineManager,\n} from '@ng-maps/core';\nimport { EMPTY, Observable, Observer } from 'rxjs';\n\n@Injectable()\nexport class HerePolylineManager extends PolylineManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  protected _convertPoints(line: NgMapsPolyline): Array {\n    return line._getPoints().map((point: NgMapsPolylinePoint) => ({\n      lat: point.latitude,\n      lng: point.longitude,\n    }));\n  }\n\n  addPolyline(line: NgMapsPolyline) {\n    const path = this._convertPoints(line);\n    const polylinePromise = this._mapsWrapper.createPolyline({\n      clickable: line.clickable,\n      draggable: line.draggable,\n      editable: line.editable,\n      geodesic: line.geodesic,\n      strokeColor: line.strokeColor,\n      strokeOpacity: line.strokeOpacity,\n      strokeWeight: line.strokeWeight,\n      visible: line.visible,\n      zIndex: line.zIndex,\n      icons: line.icons,\n      path,\n    });\n    this._polylines.set(line, polylinePromise);\n  }\n\n  async updatePolylinePoints(line: NgMapsPolyline): Promise {\n    const path = this._convertPoints(line);\n    const lineString = new H.geo.LineString();\n    path.forEach((item) => {\n      lineString.pushPoint(item);\n    });\n    const m = await this._polylines.get(line);\n    if (m != null) {\n      m.setGeometry(lineString);\n    }\n  }\n\n  async setPolylineOptions(\n    line: NgMapsPolyline,\n    options: { [propName: string]: any },\n  ): Promise {\n    const pl = await this._polylines.get(line);\n    // pl.setOptions(options)\n  }\n\n  async deletePolyline(line: NgMapsPolyline): Promise {\n    const m = await this._polylines.get(line);\n    if (m != null) {\n      m.dispose();\n      this._polylines.delete(line);\n    }\n  }\n\n  createEventObservable(\n    eventName: string,\n    line: NgMapsPolyline,\n  ): Observable {\n    // return new Observable((observer: Observer) => {\n    //   this._polylines.get(line).then((l: H.map.Polyline) => {\n    //     l.addEventListener(eventName, () => {\n    //       this._zone.run(() => observer.next());\n    //     });\n    //   });\n    // });\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HereRectangleManager.html":{"url":"injectables/HereRectangleManager.html","title":"injectable - HereRectangleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HereRectangleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/rectangle-manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    RectangleManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRectangle\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                    Async\n                                getBounds\n                            \n                            \n                                    Async\n                                removeRectangle\n                            \n                            \n                                    Async\n                                setBounds\n                            \n                            \n                                    Async\n                                setDraggable\n                            \n                            \n                                    Async\n                                setEditable\n                            \n                            \n                                    Async\n                                setOptions\n                            \n                            \n                                    Async\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/rectangle-manager.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRectangle\n                        \n                    \n                \n            \n            \n                \naddRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:88\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeRectangle\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:48\n                \n            \n\n\n            \n                \n                    Removes the given rectangle from the map.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    setBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setDraggable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setEditable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setVisible\n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport {\n  BoundsLiteral,\n  MapsApiWrapper,\n  NgMapsRectangleDirective,\n  RectangleManager,\n} from '@ng-maps/core';\n\nimport { EMPTY, Observable, Observer } from 'rxjs';\nimport { boundsFromRect, rectFromBounds } from '../convert';\n\n@Injectable()\nexport class HereRectangleManager extends RectangleManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  addRectangle(rectangle: NgMapsRectangleDirective) {\n    this._rectangles.set(\n      rectangle,\n      this._apiWrapper.createRectangle(\n        {\n          north: rectangle.north,\n          east: rectangle.east,\n          south: rectangle.south,\n          west: rectangle.west,\n        },\n        {\n          // clickable: rectangle.clickable,\n          // draggable: rectangle.draggable,\n          // editable: rectangle.editable,\n          fillColor: rectangle.fillColor,\n          fillOpacity: rectangle.fillOpacity,\n          strokeColor: rectangle.strokeColor,\n          strokeOpacity: rectangle.strokeOpacity,\n          // strokePosition: rectangle.strokePosition,\n          strokeWeight: rectangle.strokeWeight,\n          visible: rectangle.visible,\n          zIndex: rectangle.zIndex,\n        },\n      ),\n    );\n  }\n\n  /**\n   * Removes the given rectangle from the map.\n   */\n  async removeRectangle(rectangle: NgMapsRectangleDirective): Promise {\n    const r = await this._rectangles.get(rectangle);\n    r.dispose();\n  }\n\n  async setOptions(\n    rectangle: NgMapsRectangleDirective,\n    // options: RectangleOptions,\n  ): Promise {\n    const r = await this._rectangles.get(rectangle);\n    // r.setO\n    // return this._rectangles.get(rectangle).then((r) => r.setOptions(options));\n  }\n\n  async getBounds(rectangle: NgMapsRectangleDirective): Promise {\n    const r = await this._rectangles.get(rectangle);\n    return boundsFromRect(r.getBoundingBox());\n  }\n\n  async setBounds(rectangle: NgMapsRectangleDirective): Promise {\n    const r = await this._rectangles.get(rectangle);\n    return r.setBoundingBox(\n      rectFromBounds({\n        north: rectangle.north,\n        east: rectangle.east,\n        south: rectangle.south,\n        west: rectangle.west,\n      }),\n    );\n  }\n\n  async setEditable(rectangle: NgMapsRectangleDirective): Promise {}\n\n  async setDraggable(rectangle: NgMapsRectangleDirective): Promise {}\n\n  async setVisible(rectangle: NgMapsRectangleDirective): Promise {\n    const r = await this._rectangles.get(rectangle);\n    r.setVisibility(rectangle.visible);\n  }\n\n  createEventObservable(\n    eventName: string,\n    rectangle: NgMapsRectangleDirective,\n  ): Observable {\n    // return new Observable(subscriber => {\n    //   const listener = (e: E) => this._zone.run(() => subscriber.next(e));\n    //   this._rectangles.get(rectangle).then((r) => {\n    //       r.addEventListener(eventName, listener);\n    //     }\n    //   );\n    // );\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MarkerClusterComponent.html":{"url":"directives/MarkerClusterComponent.html","title":"directive - MarkerClusterComponent","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  MarkerClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cluster/marker-cluster.ts\n        \n\n\n            \n                Description\n            \n            \n                MarkerClusterComponent clusters map marker if they are near together\n\n            \n\n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            OnInit\n                            MarkerClustererOptions\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                ClusterManager\n                                { provide: MarkerManager, useExisting: ClusterManager }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        map-marker-cluster\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _observableSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addEventListeners\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                averageCenter\n                            \n                            \n                                calculator\n                            \n                            \n                                gridSize\n                            \n                            \n                                imageExtension\n                            \n                            \n                                imagePath\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minimumClusterSize\n                            \n                            \n                                styles\n                            \n                            \n                                zoomOnClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clusterClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_config: MarkerClusterConfig, _clusterManager: ClusterManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/cluster/marker-cluster.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _config\n                                                  \n                                                        \n                                                                        MarkerClusterConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _clusterManager\n                                                  \n                                                        \n                                                                        ClusterManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        averageCenter\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:35\n                            \n                        \n                \n                    \n                        Whether the center of each cluster should be the average of all markers in the cluster.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        calculator\n                    \n                \n                \n                    \n                        Type :         Calculator\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:40\n                            \n                        \n                \n                    \n                        A function that calculates the cluster style and text based on the markers in the cluster.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        gridSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:45\n                            \n                        \n                \n                    \n                        The grid size of a cluster in pixels\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        imageExtension\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imagePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:53\n                            \n                        \n                \n                    \n                        The maximum zoom level that a marker can be part of a cluster.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minimumClusterSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:58\n                            \n                        \n                \n                    \n                        The minimum number of markers to be in a cluster before the markers are hidden and a count is shown.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:64\n                            \n                        \n                \n                    \n                        An object that has style properties.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomOnClick\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:69\n                            \n                        \n                \n                    \n                        Whether the default behaviour of clicking on a cluster is to zoom into it.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        clusterClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:72\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _addEventListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/cluster/marker-cluster.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/cluster/marker-cluster.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/cluster/marker-cluster.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/cluster/marker-cluster.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _observableSubscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/lib/cluster/marker-cluster.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { InfoWindowManager, MarkerManager } from '@ng-maps/core';\nimport { Subscription } from 'rxjs';\nimport { MarkerClusterConfig, MARKER_CLUSTER_CONFIG } from './cluster-config';\nimport { ClusterManager } from './cluster-manager';\nimport { Calculator, MarkerClustererOptions } from './cluster-options';\n\n/**\n * MarkerClusterComponent clusters map marker if they are near together\n */\n@Directive({\n  selector: 'map-marker-cluster',\n  providers: [\n    ClusterManager,\n    { provide: MarkerManager, useExisting: ClusterManager },\n  ],\n})\nexport class MarkerClusterComponent\n  implements OnDestroy, OnChanges, OnInit, MarkerClustererOptions\n{\n  /**\n   * Whether the center of each cluster should be the average of all markers in the cluster.\n   */\n  @Input() averageCenter: boolean;\n\n  /**\n   * A function that calculates the cluster style and text based on the markers in the cluster.\n   */\n  @Input() calculator: Calculator;\n\n  /**\n   * The grid size of a cluster in pixels\n   */\n  @Input() gridSize: number;\n\n  @Input() imageExtension: string;\n  @Input() imagePath: string;\n\n  /**\n   * The maximum zoom level that a marker can be part of a cluster.\n   */\n  @Input() maxZoom: number;\n\n  /**\n   * The minimum number of markers to be in a cluster before the markers are hidden and a count is shown.\n   */\n  @Input() minimumClusterSize: number;\n\n  /**\n   * An object that has style properties.\n   * @todo specify type\n   */\n  @Input() styles: Array;\n\n  /**\n   * Whether the default behaviour of clicking on a cluster is to zoom into it.\n   */\n  @Input() zoomOnClick: boolean;\n\n  @Output()\n  clusterClick: EventEmitter =\n    new EventEmitter();\n\n  private _observableSubscriptions: Array = [];\n\n  constructor(\n    @Optional()\n    @Inject(MARKER_CLUSTER_CONFIG)\n    private _config: MarkerClusterConfig = null,\n    private _clusterManager: ClusterManager,\n  ) {}\n\n  /** @internal */\n  ngOnDestroy() {\n    this._clusterManager.clearMarkers();\n    this._observableSubscriptions.forEach((s) => s.unsubscribe());\n  }\n\n  /** @internal */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.averageCenter) {\n      this._clusterManager.setAverageCenter(this);\n    }\n    if (changes.gridSize) {\n      this._clusterManager.setGridSize(this);\n    }\n    if (changes.imageExtension) {\n      this._clusterManager.setImageExtension(this);\n    }\n    if (changes.imagePath) {\n      this._clusterManager.setImagePath(this);\n    }\n    if (changes.maxZoom) {\n      this._clusterManager.setMaxZoom(this);\n    }\n    if (changes.minimumClusterSize) {\n      this._clusterManager.setMinimumClusterSize(this);\n    }\n    if (changes.styles) {\n      this._clusterManager.setStyles(this);\n    }\n    if (changes.zoomOnClick) {\n      this._clusterManager.setZoomOnClick(this);\n    }\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      {\n        name: 'clusterclick',\n        handler: (ev: google.maps.MapMouseEvent) => this.clusterClick.emit(ev),\n      },\n    ];\n    handlers.forEach((obj) => {\n      const os = this._clusterManager\n        .createClusterEventObservable(obj.name, this)\n        // @fixme\n        // @ts-ignore\n        .subscribe(obj.handler);\n      this._observableSubscriptions.push(os);\n    });\n  }\n\n  /**\n   * @todo rework typings\n   * @internal\n   */\n  ngOnInit() {\n    this._addEventListeners();\n    this._clusterManager.init({\n      averageCenter: this.averageCenter,\n      calculator: this.calculator,\n      gridSize: this.gridSize,\n      imageExtension: this.imageExtension,\n      imagePath:\n        this.imagePath == null && this._config != null\n          ? this._config.imagePath\n          : this.imagePath,\n      maxZoom: this.maxZoom,\n      minimumClusterSize: this.minimumClusterSize,\n      styles: this.styles,\n      zoomOnClick: this.zoomOnClick,\n    } as any);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkerClusterConfig.html":{"url":"interfaces/MarkerClusterConfig.html","title":"interface - MarkerClusterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MarkerClusterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cluster/cluster-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            imagePath\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imagePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imagePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport const MARKER_CLUSTER_CONFIG = new InjectionToken(\n  'MARKER_CLUSTER_CONFIG',\n);\n\nexport interface MarkerClusterConfig {\n  imagePath: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkerClustererOptions.html":{"url":"interfaces/MarkerClustererOptions.html","title":"interface - MarkerClustererOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MarkerClustererOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cluster/cluster-options.ts\n        \n\n\n            \n                Description\n            \n            \n                Optional parameter passed to the MarkerClusterer constructor.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            averageCenter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            batchSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            batchSizeIE\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            calculator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clusterClass\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            enableRetinaIcons\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gridSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ignoreHidden\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            imageExtension\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            imagePath\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            imageSizes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxZoom\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minimumClusterSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            styles\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomOnClick\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        averageCenter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        averageCenter:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [averageCenter=false] Whether the position of a cluster marker should be\nthe average position of all markers in the cluster. If set to false, the\ncluster marker is positioned at the location of the first marker added to the cluster.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        batchSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [batchSize=MarkerClusterer.BATCH_SIZE] Set this property to the\nnumber of markers to be processed in a single batch when using a browser other than\nInternet Explorer (for Internet Explorer, use the batchSizeIE property instead).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchSizeIE\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        batchSizeIE:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [batchSizeIE=MarkerClusterer.BATCH_SIZE_IE] When Internet Explorer is\nbeing used, markers are processed in several batches with a small delay inserted between\neach batch in an attempt to avoid Javascript timeout errors. Set this property to the\nnumber of markers to be processed in a single batch; select as high a number as you can\nwithout causing a timeout error in the browser. This number might need to be as low as 100\nif 15,000 markers are being managed, for example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        calculator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        calculator:         Calculator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Calculator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [calculator=MarkerClusterer.CALCULATOR] The function used to determine\nthe text to be displayed on a cluster marker and the index indicating which style to use\nfor the cluster marker. The input parameters for the function are (1) the array of markers\nrepresented by a cluster marker and (2) the number of cluster icon styles. It returns a\nClusterIconInfo object. The default calculator returns a\ntext property which is the number of markers in the cluster and an\nindex property which is one higher than the lowest integer such that\n10^i exceeds the number of markers in the cluster, or the size of the styles\narray, whichever is less. The styles array element used has an index of\nindex minus 1. For example, the default calculator returns a\ntext value of \"125\" and an index of 3\nfor a cluster icon representing 125 markers so the element used in the styles\narray is 2. A calculator may also return a title\nproperty that contains the text of the tooltip to be used for the cluster marker. If\ntitle is not defined, the tooltip is set to the value of the title\nproperty for the MarkerClusterer.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clusterClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clusterClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [clusterClass=\"cluster\"] The name of the CSS class defining general styles\nfor the cluster markers. Use this class to define CSS styles that are not set up by the code\nthat processes the styles array.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableRetinaIcons\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enableRetinaIcons:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [enableRetinaIcons=false] Whether to allow the use of cluster icons that\nhave sizes that are some multiple (typically double) of their actual display size. Icons such\nas these look better when viewed on high-resolution monitors such as Apple's Retina displays.\nNote: if this property is true, sprites cannot be used as cluster icons.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gridSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gridSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [gridSize=60] The grid size of a cluster in pixels. The grid is a square.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreHidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ignoreHidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [ignoreHidden=false] Whether to ignore hidden markers in clusters. You\nmay want to set this to true to ensure that hidden markers are not included\nin the marker count that appears on a cluster marker (this count is the value of the\ntext property of the result returned by the default calculator).\nIf set to true and you change the visibility of a marker being clustered, be\nsure to also call MarkerClusterer.repaint().\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageExtension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageExtension:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [imageExtension=MarkerClusterer.IMAGE_EXTENSION]\nThe extension name for the cluster icon image files (e.g., \"png\" or\n\"jpg\").\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imagePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imagePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [imagePath=MarkerClusterer.IMAGE_PATH]\nThe full URL of the root name of the group of image files to use for cluster icons.\nThe complete file name is of the form imagePathn.imageExtension\nwhere n is the image file number (1, 2, etc.).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageSizes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageSizes:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [imageSizes=MarkerClusterer.IMAGE_SIZES]\nAn array of numbers containing the widths of the group of\nimagePathn.imageExtension image files.\n(The images are assumed to be square.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxZoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxZoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [maxZoom=null] The maximum zoom level at which clustering is enabled or\nnull if clustering is to be enabled at all zoom levels.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimumClusterSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minimumClusterSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [minimumClusterSize=2] The minimum number of markers needed in a cluster\nbefore the markers are hidden and a cluster marker appears.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        styles:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [styles] An array of ClusterIconStyle elements defining the styles\nof the cluster markers to be used. The element to be used to style a given cluster marker\nis determined by the function defined by the calculator property.\nThe default is an array of ClusterIconStyle elements whose properties are derived\nfrom the values for imagePath, imageExtension, and\nimageSizes.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [title=\"\"] The tooltip to display when the mouse moves over a cluster\nmarker. (Alternatively, you can use a custom calculator function to specify a\ndifferent tooltip for each cluster marker.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomOnClick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomOnClick:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [zoomOnClick=true] Whether to zoom the map when a cluster marker is\nclicked. You may want to set this to false if you have installed a handler\nfor the click event and it deals with zooming on its own.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        interface ClusterIconInfo {\n  text: string;\n  index: number;\n  title: string;\n}\n\nexport type Calculator = (\n  markers: Array,\n  clusterIconStylesCount: number,\n) => ClusterIconInfo;\n/**\n * Optional parameter passed to the {@link MarkerClusterer} constructor.\n */\nexport interface MarkerClustererOptions {\n  /** [gridSize=60] The grid size of a cluster in pixels. The grid is a square. */\n  gridSize?: number;\n  /**\n   * [maxZoom=null] The maximum zoom level at which clustering is enabled or\n   * null if clustering is to be enabled at all zoom levels.\n   */\n  maxZoom?: number;\n  /**\n   * [zoomOnClick=true] Whether to zoom the map when a cluster marker is\n   * clicked. You may want to set this to false if you have installed a handler\n   * for the click event and it deals with zooming on its own.\n   */\n  zoomOnClick?: boolean;\n  /**\n   * [averageCenter=false] Whether the position of a cluster marker should be\n   * the average position of all markers in the cluster. If set to false, the\n   * cluster marker is positioned at the location of the first marker added to the cluster.\n   */\n  averageCenter?: boolean;\n  /**\n   * [minimumClusterSize=2] The minimum number of markers needed in a cluster\n   * before the markers are hidden and a cluster marker appears.\n   */\n  minimumClusterSize?: number;\n  /**\n   * [ignoreHidden=false] Whether to ignore hidden markers in clusters. You\n   * may want to set this to true to ensure that hidden markers are not included\n   * in the marker count that appears on a cluster marker (this count is the value of the\n   * text property of the result returned by the default calculator).\n   * If set to true and you change the visibility of a marker being clustered, be\n   * sure to also call MarkerClusterer.repaint().\n   */\n  ignoreHidden?: boolean;\n  /**\n   * [title=\"\"] The tooltip to display when the mouse moves over a cluster\n   * marker. (Alternatively, you can use a custom calculator function to specify a\n   * different tooltip for each cluster marker.)\n   */\n  title?: string;\n  /**\n   * [calculator=MarkerClusterer.CALCULATOR] The function used to determine\n   * the text to be displayed on a cluster marker and the index indicating which style to use\n   * for the cluster marker. The input parameters for the function are (1) the array of markers\n   * represented by a cluster marker and (2) the number of cluster icon styles. It returns a\n   * {@link ClusterIconInfo} object. The default calculator returns a\n   * text property which is the number of markers in the cluster and an\n   * index property which is one higher than the lowest integer such that\n   * 10^i exceeds the number of markers in the cluster, or the size of the styles\n   * array, whichever is less. The styles array element used has an index of\n   * index minus 1. For example, the default calculator returns a\n   * text value of \"125\" and an index of 3\n   * for a cluster icon representing 125 markers so the element used in the styles\n   * array is 2. A calculator may also return a title\n   * property that contains the text of the tooltip to be used for the cluster marker. If\n   * title is not defined, the tooltip is set to the value of the title\n   * property for the MarkerClusterer.\n   */\n  calculator?: Calculator;\n  /**\n   * [clusterClass=\"cluster\"] The name of the CSS class defining general styles\n   * for the cluster markers. Use this class to define CSS styles that are not set up by the code\n   * that processes the styles array.\n   */\n  clusterClass?: string;\n  /**\n   * [styles] An array of {@link ClusterIconStyle} elements defining the styles\n   * of the cluster markers to be used. The element to be used to style a given cluster marker\n   * is determined by the function defined by the calculator property.\n   * The default is an array of {@link ClusterIconStyle} elements whose properties are derived\n   * from the values for imagePath, imageExtension, and\n   * imageSizes.\n   */\n  styles?: Array;\n  /**\n   * [enableRetinaIcons=false] Whether to allow the use of cluster icons that\n   * have sizes that are some multiple (typically double) of their actual display size. Icons such\n   * as these look better when viewed on high-resolution monitors such as Apple's Retina displays.\n   * Note: if this property is true, sprites cannot be used as cluster icons.\n   */\n  enableRetinaIcons?: boolean;\n  /**\n   * [batchSize=MarkerClusterer.BATCH_SIZE] Set this property to the\n   * number of markers to be processed in a single batch when using a browser other than\n   * Internet Explorer (for Internet Explorer, use the batchSizeIE property instead).\n   */\n  batchSize?: number;\n  /**\n   * [batchSizeIE=MarkerClusterer.BATCH_SIZE_IE] When Internet Explorer is\n   * being used, markers are processed in several batches with a small delay inserted between\n   * each batch in an attempt to avoid Javascript timeout errors. Set this property to the\n   * number of markers to be processed in a single batch; select as high a number as you can\n   * without causing a timeout error in the browser. This number might need to be as low as 100\n   * if 15,000 markers are being managed, for example.\n   */\n  batchSizeIE?: number;\n  /**\n   * [imagePath=MarkerClusterer.IMAGE_PATH]\n   * The full URL of the root name of the group of image files to use for cluster icons.\n   * The complete file name is of the form imagePathn.imageExtension\n   * where n is the image file number (1, 2, etc.).\n   */\n  imagePath?: string;\n  /**\n   * [imageExtension=MarkerClusterer.IMAGE_EXTENSION]\n   * The extension name for the cluster icon image files (e.g., \"png\" or\n   * \"jpg\").\n   */\n  imageExtension?: string;\n  /**\n   * [imageSizes=MarkerClusterer.IMAGE_SIZES]\n   * An array of numbers containing the widths of the group of\n   * imagePathn.imageExtension image files.\n   * (The images are assumed to be square.)\n   */\n  imageSizes?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgMapsHereModule.html":{"url":"modules/NgMapsHereModule.html","title":"module - NgMapsHereModule","body":"\n                   \n\n\n\n\n    Modules\n    NgMapsHereModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgMapsHereModule\n\n\n\ncluster_NgMapsHereModule_declarations\n\n\n\ncluster_NgMapsHereModule_exports\n\n\n\ncluster_NgMapsHereModule_HereComponent_providers\n\n\n\ncluster_NgMapsHereModule_providers\n\n\n\n\nHereComponent\n\nHereComponent\n\n\n\nNgMapsHereModule\n\nNgMapsHereModule\n\nNgMapsHereModule -->\n\nHereComponent->NgMapsHereModule\n\n\n\n\n\nMarkerClusterComponent\n\nMarkerClusterComponent\n\nNgMapsHereModule -->\n\nMarkerClusterComponent->NgMapsHereModule\n\n\n\n\n\nHereComponent \n\nHereComponent \n\nHereComponent  -->\n\nNgMapsHereModule->HereComponent \n\n\n\n\n\nMarkerClusterComponent \n\nMarkerClusterComponent \n\nMarkerClusterComponent  -->\n\nNgMapsHereModule->MarkerClusterComponent \n\n\n\n\n\n{ provide: MapsApiWrapper, useClass: HereMapsWrapperService }\n\n{ provide: MapsApiWrapper, useClass: HereMapsWrapperService }\n\nHereComponent -->\n\n{ provide: MapsApiWrapper, useClass: HereMapsWrapperService }->HereComponent\n\n\n\n\n\n{ provide: FitBoundsService, useClass: HereMapsFitBoundsService }\n\n{ provide: FitBoundsService, useClass: HereMapsFitBoundsService }\n\nHereComponent -->\n\n{ provide: FitBoundsService, useClass: HereMapsFitBoundsService }->HereComponent\n\n\n\n\n\n{ provide: MarkerManager, useClass: HereMapsMarkerManager }\n\n{ provide: MarkerManager, useClass: HereMapsMarkerManager }\n\nHereComponent -->\n\n{ provide: MarkerManager, useClass: HereMapsMarkerManager }->HereComponent\n\n\n\n\n\n{ provide: CircleManager, useClass: HereCircleManager }\n\n{ provide: CircleManager, useClass: HereCircleManager }\n\nHereComponent -->\n\n{ provide: CircleManager, useClass: HereCircleManager }->HereComponent\n\n\n\n\n\n{ provide: PolygonManager, useClass: HerePolygonManager }\n\n{ provide: PolygonManager, useClass: HerePolygonManager }\n\nHereComponent -->\n\n{ provide: PolygonManager, useClass: HerePolygonManager }->HereComponent\n\n\n\n\n\n{ provide: PolylineManager, useClass: HerePolylineManager }\n\n{ provide: PolylineManager, useClass: HerePolylineManager }\n\nHereComponent -->\n\n{ provide: PolylineManager, useClass: HerePolylineManager }->HereComponent\n\n\n\n\n\n{ provide: RectangleManager, useClass: HereRectangleManager }\n\n{ provide: RectangleManager, useClass: HereRectangleManager }\n\nHereComponent -->\n\n{ provide: RectangleManager, useClass: HereRectangleManager }->HereComponent\n\n\n\n\n\n{ provide: InfoWindowManager, useClass: HereMapsInfoWindowManager }\n\n{ provide: InfoWindowManager, useClass: HereMapsInfoWindowManager }\n\nHereComponent -->\n\n{ provide: InfoWindowManager, useClass: HereMapsInfoWindowManager }->HereComponent\n\n\n\n\n\nHereMapsPlatformProvider\n\nHereMapsPlatformProvider\n\nNgMapsHereModule -->\n\nHereMapsPlatformProvider->NgMapsHereModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/here.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HereComponent\n                        \n                        \n                            MarkerClusterComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HereMapsPlatformProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HereComponent\n                        \n                        \n                            MarkerClusterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MapsAPILoader, MAP_PROVIDER } from '@ng-maps/core';\nimport { MarkerClusterComponent } from './cluster/marker-cluster';\nimport { HereMapsLoaderService } from './here-maps-loader.service';\nimport { HereMapsPlatformProvider } from './here-maps-platform.provider';\nimport { HereComponent } from './here.component';\n\n@NgModule({\n  declarations: [HereComponent, MarkerClusterComponent],\n  exports: [HereComponent, MarkerClusterComponent],\n  providers: [\n    HereMapsPlatformProvider,\n    {\n      provide: MapsAPILoader,\n      useClass: HereMapsLoaderService,\n    },\n    {\n      provide: MAP_PROVIDER,\n      useValue: 'HereMaps',\n    },\n  ],\n})\nexport class NgMapsHereModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/cluster/cluster-config.ts\n            \n            interface\n            MarkerClusterConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/cluster/cluster-config.ts\n            \n            variable\n            MARKER_CLUSTER_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/cluster/cluster-manager.ts\n            \n            injectable\n            ClusterManager\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/lib/cluster/cluster-options.ts\n            \n            interface\n            ClusterIconInfo\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/lib/cluster/cluster-options.ts\n            \n            interface\n            MarkerClustererOptions\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/lib/cluster/marker-cluster.ts\n            \n            directive\n            MarkerClusterComponent\n            \n                47 %\n                (8/17)\n            \n        \n        \n            \n                \n                src/lib/convert.ts\n            \n            function\n            boundsFromRect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/convert.ts\n            \n            function\n            rectFromBounds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/here-maps-fit-bounds.service.ts\n            \n            injectable\n            HereMapsFitBoundsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/here-maps-loader.service.ts\n            \n            injectable\n            HereMapsLoaderService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/here-maps-marker.manager.ts\n            \n            injectable\n            HereMapsMarkerManager\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/lib/here-maps-marker.ts\n            \n            variable\n            svgMarkup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/here-maps-platform.provider.ts\n            \n            injectable\n            HereMapsPlatformProvider\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/here-maps-wrapper.service.ts\n            \n            injectable\n            HereMapsWrapperService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/lib/here.component.ts\n            \n            component\n            HereComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/lib/managers/circle-manager.ts\n            \n            injectable\n            HereCircleManager\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/lib/managers/info-window.manager.ts\n            \n            injectable\n            HereMapsInfoWindowManager\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/lib/managers/polygon-manager.ts\n            \n            injectable\n            HerePolygonManager\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/managers/polyline-manager.ts\n            \n            injectable\n            HerePolylineManager\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/managers/rectangle-manager.ts\n            \n            injectable\n            HereRectangleManager\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/lib/options.ts\n            \n            interface\n            HereModuleOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/options.ts\n            \n            variable\n            HERE_MAPS_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.0.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^8.0.0 || ^9.0.0 || ^10.0.0\n        \n            @angular/core : ^8.0.0 || ^9.0.0 || ^10.0.0\n        \n            @ng-maps/core : ^2.0.0-alpha.7\n        \n            @types/heremaps : ^3.1.1\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HereMapsLibraries   (src/.../options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/options.ts\n    \n        \n            \n                \n                    \n                        \n                        HereMapsLibraries\n                    \n                \n                        \n                            \n                                 CORE\n                            \n                        \n                        \n                            \n                                Value : core\n                            \n                        \n                        \n                            \n                                 SERVICE\n                            \n                        \n                        \n                            \n                                Value : service\n                            \n                        \n                        \n                            \n                                 MAPEVENTS\n                            \n                        \n                        \n                            \n                                Value : mapevents\n                            \n                        \n                        \n                            \n                                 UI\n                            \n                        \n                        \n                            \n                                Value : ui\n                            \n                        \n                        \n                            \n                                 CLUSTERING\n                            \n                        \n                        \n                            \n                                Value : clustering\n                            \n                        \n                        \n                            \n                                 DATA\n                            \n                        \n                        \n                            \n                                Value : data\n                            \n                        \n                        \n                            \n                                 PLACES\n                            \n                        \n                        \n                            \n                                Value : places\n                            \n                        \n                        \n                            \n                                 PANO\n                            \n                        \n                        \n                            \n                                Value : pano\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            boundsFromRect   (src/.../convert.ts)\n                        \n                        \n                            rectFromBounds   (src/.../convert.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/convert.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        boundsFromRect\n                        \n                    \n                \n            \n            \n                \nboundsFromRect(rect)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rect\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     BoundsLiteral\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rectFromBounds\n                        \n                    \n                \n            \n            \n                \nrectFromBounds(bounds: BoundsLiteral)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bounds\n                                    \n                                            BoundsLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ng-maps/here\nProvider for Here Maps\nInstallation\nInstall with your favorite package manager\nnpm i -S @ng-maps/here\nor\nyarn add @ng-maps/here\nAdd to AppModule\nAdd the following line to your AppModule\nNgMapsHereModule.forRoot({})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgMapsHereModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgMapsHereModule\n\n\n\ncluster_NgMapsHereModule_declarations\n\n\n\ncluster_NgMapsHereModule_HereComponent_providers\n\n\n\ncluster_NgMapsHereModule_exports\n\n\n\ncluster_NgMapsHereModule_providers\n\n\n\n\nHereComponent\n\nHereComponent\n\n\n\nNgMapsHereModule\n\nNgMapsHereModule\n\nNgMapsHereModule -->\n\nHereComponent->NgMapsHereModule\n\n\n\n\n\nMarkerClusterComponent\n\nMarkerClusterComponent\n\nNgMapsHereModule -->\n\nMarkerClusterComponent->NgMapsHereModule\n\n\n\n\n\nHereComponent \n\nHereComponent \n\nHereComponent  -->\n\nNgMapsHereModule->HereComponent \n\n\n\n\n\nMarkerClusterComponent \n\nMarkerClusterComponent \n\nMarkerClusterComponent  -->\n\nNgMapsHereModule->MarkerClusterComponent \n\n\n\n\n\n{ provide: MapsApiWrapper, useClass: HereMapsWrapperService }\n\n{ provide: MapsApiWrapper, useClass: HereMapsWrapperService }\n\nHereComponent -->\n\n{ provide: MapsApiWrapper, useClass: HereMapsWrapperService }->HereComponent\n\n\n\n\n\n{ provide: FitBoundsService, useClass: HereMapsFitBoundsService }\n\n{ provide: FitBoundsService, useClass: HereMapsFitBoundsService }\n\nHereComponent -->\n\n{ provide: FitBoundsService, useClass: HereMapsFitBoundsService }->HereComponent\n\n\n\n\n\n{ provide: MarkerManager, useClass: HereMapsMarkerManager }\n\n{ provide: MarkerManager, useClass: HereMapsMarkerManager }\n\nHereComponent -->\n\n{ provide: MarkerManager, useClass: HereMapsMarkerManager }->HereComponent\n\n\n\n\n\n{ provide: CircleManager, useClass: HereCircleManager }\n\n{ provide: CircleManager, useClass: HereCircleManager }\n\nHereComponent -->\n\n{ provide: CircleManager, useClass: HereCircleManager }->HereComponent\n\n\n\n\n\n{ provide: PolygonManager, useClass: HerePolygonManager }\n\n{ provide: PolygonManager, useClass: HerePolygonManager }\n\nHereComponent -->\n\n{ provide: PolygonManager, useClass: HerePolygonManager }->HereComponent\n\n\n\n\n\n{ provide: PolylineManager, useClass: HerePolylineManager }\n\n{ provide: PolylineManager, useClass: HerePolylineManager }\n\nHereComponent -->\n\n{ provide: PolylineManager, useClass: HerePolylineManager }->HereComponent\n\n\n\n\n\n{ provide: RectangleManager, useClass: HereRectangleManager }\n\n{ provide: RectangleManager, useClass: HereRectangleManager }\n\nHereComponent -->\n\n{ provide: RectangleManager, useClass: HereRectangleManager }->HereComponent\n\n\n\n\n\n{ provide: InfoWindowManager, useClass: HereMapsInfoWindowManager }\n\n{ provide: InfoWindowManager, useClass: HereMapsInfoWindowManager }\n\nHereComponent -->\n\n{ provide: InfoWindowManager, useClass: HereMapsInfoWindowManager }->HereComponent\n\n\n\n\n\nHereMapsPlatformProvider\n\nHereMapsPlatformProvider\n\nNgMapsHereModule -->\n\nHereMapsPlatformProvider->NgMapsHereModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.0.0-alpha.13\n        \n            Keywords : angular, ng, angular8, angular 8, maps, map, ng2, angular2, agm, here, here maps, here-maps, heremaps\n        \n            Homepage : https://ng-maps.github.io/core\n        \n            Bugs : https://github.com/ng-maps/ng-maps/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/ng-maps/ng-maps.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Calculator   (src/.../cluster-options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/cluster/cluster-options.ts\n    \n    \n        \n            \n                \n                    \n                    Calculator\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HERE_MAPS_MODULE_OPTIONS   (src/.../options.ts)\n                        \n                        \n                            MARKER_CLUSTER_CONFIG   (src/.../cluster-config.ts)\n                        \n                        \n                            svgMarkup   (src/.../here-maps-marker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HERE_MAPS_MODULE_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'NgHereMaps ModuleOptions',\n)\n                    \n                \n\n\n        \n    \n\n    src/lib/cluster/cluster-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MARKER_CLUSTER_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'MARKER_CLUSTER_CONFIG',\n)\n                    \n                \n\n\n        \n    \n\n    src/lib/here-maps-marker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        svgMarkup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : '' +\n  'H'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
