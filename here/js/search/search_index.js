var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/ClusterIconInfo.html",[0,1.053,1,1.834]],["body/interfaces/ClusterIconInfo.html",[0,1.016,1,2.427,2,1.017,3,0.298,4,0.298,5,0.488,6,0.908,7,1.149,8,1.149,9,1.399,10,3.122,11,2.072,12,0.808,13,2.286,14,4.082,15,2.47,16,3.143,17,3.241,18,2.072,19,1.534,20,0.042,21,4.242,22,4.082,23,4.242,24,2.364,25,2.884,26,0.423,27,1.377,28,3.496,29,3.901,30,0.548,31,1.304,32,0.459,33,3.845,34,1.534,35,0.339,36,1.534,37,2.775,38,0.429,39,1.017,40,1.534,41,2.024,42,2.47,43,1.313,44,2.364,45,1.313,46,1.534,47,1.313,48,1.913,49,1.313,50,1.771,51,2.364,52,0.732,53,1.534,54,1.313,55,1.534,56,2.775,57,0.659,58,2.953,59,1.534,60,2.364,61,2.364,62,1.534,63,1.313,64,1.534,65,1.017,66,1.534,67,1.534,68,1.313,69,2.775,70,1.534,71,2.364,72,1.313,73,1.534,74,1.534,75,1.313,76,1.534,77,1.313,78,1.534,79,1.313,80,1.534,81,1.313,82,2.47,83,2.364,84,1.313,85,1.534,86,1.313,87,1.313,88,2.884,89,1.534,90,1.534,91,2.024,92,0.02,93,1.534,94,1.918,95,1.534,96,1.534,97,2.884,98,1.534,99,1.534,100,1.534,101,1.534,102,1.534,103,3.241,104,2.024,105,1.534,106,1.534,107,1.534,108,1.534,109,3.698,110,1.534,111,1.313,112,1.534,113,2.024,114,1.534,115,1.534,116,1.534,117,1.534,118,1.313,119,0.382,120,2.47,121,1.534,122,2.884,123,3.122,124,1.313,125,1.534,126,1.534,127,1.534,128,2.884,129,1.534,130,1.534,131,1.534,132,1.534,133,2.47,134,1.534,135,2.364,136,2.364,137,1.534,138,1.534,139,0.534,140,1.534,141,0.662,142,1.534,143,0.808,144,2.024,145,0.589,146,2.364,147,1.534,148,1.534,149,1.534,150,1.534,151,1.534,152,1.534,153,2.364,154,2.364,155,1.017,156,1.534,157,1.534,158,1.534,159,1.534,160,1.771,161,2.024,162,2.364,163,1.534,164,1.534,165,2.775,166,1.534,167,1.534,168,1.534,169,1.534,170,1.534,171,1.534,172,1.534,173,1.534,174,2.364,175,1.534,176,1.534,177,1.534,178,1.534,179,1.534,180,1.534,181,1.534,182,1.534,183,1.534,184,2.884,185,2.364,186,2.884,187,1.534,188,2.024,189,2.884,190,2.884,191,2.364,192,1.534,193,1.534,194,1.534,195,1.534,196,1.534,197,1.534,198,1.534,199,1.534,200,1.534,201,1.534,202,1.534,203,1.534,204,2.364,205,1.534,206,1.534,207,1.534,208,1.534,209,1.534,210,1.534,211,1.534,212,1.313,213,1.534,214,1.534,215,1.534,216,1.534,217,1.534,218,1.313,219,2.364,220,3.241,221,2.47,222,1.534,223,1.534,224,2.364,225,1.534,226,1.534,227,1.534,228,1.534,229,1.534,230,1.534,231,1.534,232,1.534,233,1.534,234,1.313,235,1.534,236,1.534,237,1.534,238,0.02,239,0.013]],["title/injectables/HereCircleManager.html",[240,0.301,241,1.834]],["body/injectables/HereCircleManager.html",[3,0.313,4,0.313,5,0.273,8,1.208,12,1.086,20,0.042,26,0.164,27,0.77,30,0.76,31,1.04,32,0.313,35,0.974,37,1.381,38,0.451,52,1.173,57,1.056,92,0.013,119,1.111,139,1.408,141,1.234,143,1.099,145,0.402,155,1.629,238,0.02,239,0.013,240,0.302,241,1.84,242,0.624,243,4.454,244,1.07,245,1.056,246,2.975,247,0.856,248,2.992,249,1.761,250,2.254,251,2.456,252,2.992,253,2.992,254,2.992,255,2.992,256,2.456,257,2.456,258,2.548,259,2.992,260,2.456,261,1.304,262,1.766,263,1.766,264,1.766,265,1.613,266,0.856,267,2.992,268,5.924,269,1.964,270,5.707,271,0.693,272,0.955,273,1.964,274,2.456,275,1.454,276,1.761,277,2.992,278,1.964,279,2.216,280,2.992,281,1.964,282,2.992,283,1.613,284,2.992,285,1.613,286,2.456,287,2.992,288,1.964,289,2.992,290,1.964,291,2.992,292,1.964,293,1.964,294,1.801,295,3.624,296,1.964,297,2.992,298,2.992,299,1.964,300,2.992,301,1.964,302,0.83,303,0.356,304,1.208,305,1.381,306,0.402,307,0.451,308,1.629,309,1.454,310,0.77,311,1.07,312,1.381,313,0.856,314,1.613,315,1.613,316,1.964,317,2.975,318,1.964,319,1.964,320,1.84,321,2.992,322,1.84,323,2.992,324,1.208,325,1.964,326,1.208,327,1.964,328,1.208,329,1.964,330,1.381,331,1.964,332,1.381,333,1.964,334,1.964,335,1.964,336,1.208,337,1.964,338,1.208,339,1.964,340,1.613,341,1.964,342,1.208,343,1.964,344,1.208,345,1.964,346,1.208,347,1.964,348,1.18,349,4.595,350,2.003,351,4.595,352,1.964,353,1.964,354,1.208,355,1.964,356,1.964,357,1.964,358,1.964,359,1.381,360,3.624,361,2.992,362,1.964,363,1.964,364,1.964,365,3.624,366,1.964,367,1.964,368,1.964,369,1.964,370,0.402,371,1.07,372,2.548,373,1.964,374,1.964,375,1.07,376,0.955,377,1.381,378,1.964]],["title/components/HereComponent.html",[379,1.834,380,1.625]],["body/components/HereComponent.html",[3,0.317,4,0.317,5,0.276,9,1.467,12,1.036,16,1.082,20,0.042,26,0.166,30,0.419,32,0.317,35,0.36,38,0.693,57,1.822,58,1.082,65,1.643,92,0.014,104,2.565,119,0.407,123,2.244,133,2.121,141,1.186,143,0.834,145,0.407,238,0.021,239,0.014,241,2.244,245,1.065,246,2.996,247,0.863,250,1.43,261,0.866,262,2.011,263,1.776,264,1.776,266,1.315,271,1.693,279,1.183,302,1.089,303,0.36,306,0.407,307,0.456,310,0.779,313,0.866,348,0.937,370,0.407,379,2.244,380,2.219,381,3.018,382,1.987,383,1.987,384,1.631,385,3.649,386,1.631,387,1.856,388,3.887,389,4.539,390,2.565,391,3.789,392,2.244,393,2.244,394,2.244,395,2.996,396,2.244,397,2.996,398,2.244,399,2.996,400,2.244,401,2.565,402,2.244,403,3.346,404,3.649,405,3.649,406,3.649,407,3.649,408,4.615,409,3.649,410,2.996,411,3.649,412,3.018,413,3.499,414,4.076,415,4.076,416,4.076,417,4.076,418,4.076,419,4.076,420,4.076,421,2.477,422,3.081,423,3.018,424,3.649,425,4.076,426,3.018,427,3.346,428,3.018,429,1.987,430,1.987,431,1.987,432,1.987,433,1.987,434,1.987,435,1.987,436,1.987,437,1.987,438,2.477,439,1.631,440,3.649,441,4.076,442,1.987,443,2.244,444,1.16,445,1.396,446,1.987,447,1.987,448,1.631,449,1.987,450,2.865,451,1.987,452,1.987,453,1.987,454,1.987,455,1.987,456,1.987,457,1.987,458,1.987,459,1.987,460,1.631,461,1.631,462,3.346,463,1.987,464,2.996,465,3.649,466,3.649,467,1.987,468,1.987,469,1.987,470,1.987,471,1.987,472,1.987,473,1.987,474,1.987,475,1.987,476,3.649,477,1.987,478,1.987,479,3.018,480,1.987,481,1.987,482,1.987,483,1.987,484,1.987,485,1.987,486,1.987,487,1.987,488,1.987,489,1.987,490,1.987,491,1.987,492,1.987,493,1.987,494,1.987,495,1.987,496,1.396,497,3.018,498,1.082,499,4.076,500,1.987,501,1.631,502,0.965,503,1.987]],["title/injectables/HereMapsFitBoundsService.html",[240,0.301,392,1.834]],["body/injectables/HereMapsFitBoundsService.html",[3,0.609,4,0.609,5,0.531,12,0.783,20,0.041,26,0.319,30,0.659,32,0.609,35,0.862,38,0.878,57,1.825,92,0.026,119,0.973,139,1.093,141,1.092,143,0.973,145,0.783,238,0.032,239,0.026,240,0.479,242,1.215,245,1.677,247,1.359,302,1.058,303,0.693,304,3.179,305,2.688,306,0.783,307,0.878,311,2.082,312,2.688,348,1.22,391,4.244,392,2.922,413,3.179,444,1.643,445,3.635,504,2.513,505,3.138,506,5.17,507,4.752,508,3.325,509,3.823,510,3.823,511,3.823,512,3.823,513,4.752,514,3.823,515,3.823,516,3.823,517,3.138,518,3.823,519,3.823]],["title/injectables/HereMapsInfoWindowManager.html",[240,0.301,402,1.834]],["body/injectables/HereMapsInfoWindowManager.html",[3,0.542,4,0.372,5,0.324,12,1.061,20,0.042,26,0.194,30,0.745,31,1.031,32,0.372,35,0.958,38,0.782,52,1.574,65,1.853,92,0.016,119,1.099,139,1.148,141,1.214,143,1.082,145,0.478,155,1.853,238,0.023,239,0.016,240,0.343,242,0.742,245,1.201,247,0.973,249,1.951,250,2.071,258,2.823,261,1.017,262,1.923,263,1.923,264,1.923,266,1.483,271,1.784,272,1.134,275,1.654,276,2.28,279,1.73,294,1.574,302,0.903,303,0.423,306,0.478,307,0.536,309,1.654,310,0.915,313,1.017,315,1.916,317,1.916,320,2.469,322,2.469,348,1.33,350,1.923,354,1.435,370,0.478,371,1.271,372,2.392,375,1.853,376,1.134,377,1.641,390,1.641,393,2.713,401,2.823,402,2.092,410,1.916,443,1.435,444,1.276,448,1.916,462,1.916,520,4.408,521,1.916,522,3.403,523,3.403,524,3.403,525,3.403,526,3.403,527,3.403,528,4.413,529,2.334,530,3.403,531,5.879,532,2.334,533,5.6,534,3.403,535,2.334,536,2.334,537,3.403,538,3.403,539,3.403,540,2.334,541,3.403,542,4.015,543,2.334,544,2.334,545,4.015,546,2.334,547,3.403,548,2.334,549,3.403,550,2.334,551,4.015,552,4.897,553,2.334,554,2.334,555,2.334,556,2.334,557,2.334,558,2.334,559,2.334,560,2.334,561,3.403,562,3.403,563,3.403,564,2.334,565,2.334,566,2.334,567,2.334,568,2.334,569,4.015,570,2.334,571,2.334,572,2.334,573,2.334,574,2.334,575,3.403,576,2.334,577,2.334,578,2.334]],["title/injectables/HereMapsLoaderService.html",[240,0.301,579,1.834]],["body/injectables/HereMapsLoaderService.html",[3,0.352,4,0.352,5,0.306,9,1.073,11,1.073,12,0.983,13,1.694,18,1.889,19,1.812,20,0.042,26,0.184,27,1.28,30,0.689,31,1.36,32,0.352,35,0.901,38,0.75,57,1.153,75,1.552,92,0.015,94,1.587,119,0.939,139,1.311,141,1.217,143,0.939,144,2.733,145,0.452,218,1.552,221,1.552,238,0.022,239,0.015,240,0.329,242,0.702,245,1.153,247,0.934,250,1.882,271,1.516,279,2.107,294,0.865,302,0.796,303,0.4,306,0.452,307,0.507,348,1.275,350,2.092,359,2.296,370,0.879,413,2.952,444,1.708,461,3.191,504,2.612,508,2.39,579,2.008,580,1.812,581,3.887,582,3.956,583,3.887,584,4.35,585,3.266,586,3.887,587,3.266,588,4.585,589,3.887,590,4.296,591,2.207,592,3.191,593,4.296,594,3.266,595,3.266,596,2.497,597,2.207,598,2.207,599,3.725,600,4.466,601,3.887,602,2.207,603,2.117,604,3.266,605,5.693,606,3.266,607,4.585,608,2.207,609,3.887,610,2.207,611,2.207,612,2.207,613,3.887,614,2.207,615,2.207,616,2.207,617,3.266,618,3.266,619,3.266,620,3.266,621,3.266,622,3.266,623,3.266,624,3.266,625,2.207,626,1.552,627,1.202,628,2.207,629,1.812,630,2.207,631,1.812,632,1.812,633,2.207,634,3.266,635,3.266,636,2.207,637,2.207,638,2.207,639,2.207,640,2.207,641,3.266,642,1.812,643,1.812,644,2.207,645,1.812,646,2.207,647,2.207,648,1.552,649,1.552,650,2.207,651,2.207,652,2.207,653,2.207,654,2.207,655,2.207,656,2.207,657,2.207,658,3.266,659,2.207,660,1.812,661,1.812,662,2.207,663,2.207,664,2.207,665,3.266,666,2.207,667,2.207,668,2.207,669,2.207,670,2.207,671,2.207,672,2.207,673,2.207,674,2.207,675,2.207]],["title/injectables/HereMapsMarkerManager.html",[240,0.301,394,1.834]],["body/injectables/HereMapsMarkerManager.html",[3,0.361,4,0.361,5,0.315,12,1.131,13,1.72,20,0.042,26,0.189,30,0.779,31,1.117,32,0.361,35,1.01,38,0.521,58,3.077,65,1.234,92,0.015,119,1.149,139,0.952,141,1.28,143,1.141,145,0.464,238,0.023,239,0.015,240,0.336,242,0.72,245,1.175,247,0.952,249,1.918,261,1.451,262,1.896,263,1.896,264,1.896,266,0.988,271,2.063,272,1.101,275,2.253,276,1.918,302,0.808,303,0.411,306,0.464,307,0.521,308,1.234,309,1.618,310,0.888,313,0.988,320,1.393,322,1.393,348,1.19,354,1.393,359,1.593,370,0.682,371,1.234,375,2.15,376,1.101,393,2.427,394,2.048,444,1.784,504,2.728,661,1.86,676,1.86,677,3.33,678,3.33,679,3.33,680,3.33,681,3.33,682,3.33,683,3.33,684,3.33,685,3.33,686,3.33,687,3.33,688,3.33,689,2.266,690,6.01,691,2.266,692,3.33,693,2.266,694,3.33,695,2.266,696,3.33,697,2.266,698,3.33,699,2.266,700,3.33,701,2.266,702,3.33,703,2.266,704,3.33,705,2.266,706,3.33,707,2.266,708,3.33,709,2.266,710,3.33,711,2.266,712,3.33,713,2.266,714,3.33,715,2.266,716,2.266,717,2.266,718,3.572,719,4.351,720,2.266,721,2.266,722,2.266,723,1.86,724,2.266,725,3.948,726,3.33,727,3.33,728,2.266,729,2.266,730,2.266]],["title/injectables/HereMapsPlatformProvider.html",[240,0.301,731,1.625]],["body/injectables/HereMapsPlatformProvider.html",[3,0.576,4,0.576,5,0.501,9,2.228,12,0.739,20,0.042,26,0.301,27,1.797,30,0.636,32,0.576,35,0.655,38,1.053,52,1.415,57,1.274,92,0.025,94,1.755,119,0.739,124,2.538,139,1.032,141,1.157,143,0.739,145,0.739,234,2.538,238,0.031,239,0.025,240,0.462,242,1.148,247,1.311,250,1.974,294,1.974,302,1.031,303,0.655,306,0.739,307,0.83,350,1.998,370,0.739,444,1.684,460,4.135,504,2.575,508,3.258,582,3.844,592,4.135,596,2.885,626,2.538,627,1.966,632,2.964,731,2.496,732,2.964,733,5.036,734,5.298,735,3.61,736,4.584,737,3.61,738,5.036,739,3.61,740,5.036,741,3.61,742,3.61,743,3.61,744,3.61,745,3.61,746,3.61]],["title/interfaces/HereModuleOptions.html",[0,1.053,596,1.625]],["body/interfaces/HereModuleOptions.html",[0,1.368,2,2.111,3,0.618,4,0.618,5,0.538,13,2.267,20,0.042,26,0.323,27,1.878,30,0.722,31,1.336,32,0.829,35,0.985,50,2.947,92,0.026,238,0.033,239,0.026,279,1.878,302,0.794,303,0.703,348,0.995,370,0.794,422,3.369,596,2.61,599,2.725,600,4.462,627,2.111,629,3.182,631,3.182,645,4.462,648,3.369,649,3.369,747,2.383,748,5.435,749,5.202,750,3.369,751,3.182,752,3.182,753,3.876,754,3.934,755,3.934,756,3.934,757,3.934]],["title/injectables/HerePolygonManager.html",[240,0.301,396,1.834]],["body/injectables/HerePolygonManager.html",[3,0.433,4,0.433,5,0.377,12,1.018,20,0.042,26,0.226,30,0.76,31,1.214,32,0.433,35,0.934,38,0.625,52,1.065,92,0.019,119,1.082,139,1.25,141,1.184,143,1.055,145,0.556,238,0.026,239,0.019,240,0.383,242,0.864,244,1.48,245,1.339,247,1.085,249,2.124,250,2.147,261,1.653,262,2.061,263,2.061,264,2.061,266,1.185,271,0.959,272,1.321,274,3.114,275,1.844,276,2.124,279,2.019,294,1.713,302,0.895,303,0.493,306,0.556,307,0.625,308,2.066,309,1.844,310,1.065,313,1.185,324,1.672,326,1.672,328,1.672,330,1.911,332,1.911,336,1.672,338,1.672,342,1.672,344,1.672,346,1.672,348,1.277,350,1.653,370,0.895,371,1.48,375,1.48,376,1.844,377,1.911,395,3.587,396,2.333,643,2.232,758,4.341,759,3.794,760,3.794,761,4.37,762,3.794,763,2.719,764,3.794,765,5.801,766,2.719,767,4.23,768,2.719,769,3.794,770,2.719,771,3.794,772,2.719,773,3.114,774,2.719,775,3.794,776,2.719,777,3.794,778,2.719,779,2.719,780,2.719,781,2.719,782,2.719,783,2.719,784,2.232,785,2.719,786,2.719,787,2.719,788,2.719,789,2.719,790,2.719,791,2.719,792,2.719,793,2.719,794,2.719,795,3.794,796,2.232,797,2.232,798,2.719,799,2.719,800,2.719,801,2.719,802,2.719,803,2.232,804,3.794,805,2.719,806,2.719,807,2.719,808,2.719,809,2.719]],["title/injectables/HerePolylineManager.html",[240,0.301,398,1.834]],["body/injectables/HerePolylineManager.html",[3,0.41,4,0.41,5,0.357,12,1.036,13,1.591,20,0.042,26,0.215,30,0.751,31,1.185,32,0.41,35,0.944,38,0.592,52,1.431,92,0.018,119,1.066,139,1.213,141,1.196,143,1.066,145,0.527,165,1.81,238,0.025,239,0.018,240,0.368,242,0.818,244,1.402,245,1.289,247,1.044,249,2.062,250,2.121,261,1.591,262,2.012,263,2.012,264,2.012,266,1.122,271,0.909,272,1.251,275,1.775,276,2.062,279,1.984,294,1.663,302,0.869,303,0.467,305,1.81,306,0.527,307,0.592,308,1.988,309,1.775,310,1.009,313,1.122,320,1.583,322,1.583,324,1.583,326,1.583,328,1.583,336,1.583,338,1.583,342,1.583,344,1.583,346,1.583,348,1.337,350,1.849,370,0.747,371,1.402,376,1.251,397,3.483,398,2.245,413,2.609,718,3.79,767,3.483,773,2.998,784,2.114,796,2.114,797,2.114,803,2.114,810,4.367,811,3.651,812,3.651,813,3.651,814,4.243,815,3.651,816,2.575,817,3.651,818,5.834,819,2.575,820,4.442,821,3.651,822,2.575,823,2.575,824,3.651,825,2.114,826,2.575,827,2.575,828,3.651,829,2.575,830,3.651,831,2.575,832,2.575,833,2.575,834,3.651,835,3.651,836,2.575,837,2.575,838,2.575,839,2.575,840,2.575,841,2.575,842,2.575,843,2.575,844,2.575,845,2.575,846,2.575,847,2.575,848,2.575,849,2.575,850,4.243,851,2.575,852,2.575,853,2.575,854,2.575,855,2.575,856,2.575,857,2.575,858,2.575,859,2.575]],["title/injectables/HereRectangleManager.html",[240,0.301,400,1.834]],["body/injectables/HereRectangleManager.html",[3,0.366,4,0.366,5,0.318,12,1.077,20,0.042,26,0.191,30,0.752,31,1.02,32,0.366,35,0.97,38,0.527,57,1.185,92,0.016,119,1.109,139,1.332,141,1.228,143,1.095,145,0.469,155,1.829,238,0.023,239,0.016,240,0.339,242,0.729,244,1.249,245,1.185,247,0.96,249,1.931,250,2.272,251,2.757,256,2.757,257,2.757,258,2.794,260,2.757,261,1.464,262,1.907,263,1.907,264,1.907,265,1.882,266,0.999,271,0.809,272,1.114,275,1.632,276,1.931,279,2.188,283,1.882,285,1.882,286,2.757,294,0.899,302,0.896,303,0.416,304,1.41,306,0.469,307,0.527,308,1.829,309,1.114,310,0.899,311,1.249,312,1.612,313,0.999,324,1.41,326,1.41,328,1.41,330,1.612,332,1.612,336,1.41,338,1.41,340,1.882,342,1.41,344,1.41,346,1.41,348,1.249,350,2.03,370,0.469,372,2.361,375,2.164,376,1.114,399,3.263,400,2.065,825,1.882,860,4.449,861,3.359,862,3.359,863,3.359,864,3.359,865,5.909,866,2.293,867,5.624,868,2.293,869,3.359,870,3.359,871,3.359,872,2.293,873,3.359,874,2.293,875,3.359,876,2.293,877,2.293,878,2.293,879,3.359,880,2.361,881,2.293,882,2.293,883,3.359,884,3.359,885,3.359,886,3.359,887,3.359,888,3.359,889,3.359,890,3.359,891,2.293,892,2.293,893,2.293,894,2.293,895,2.293,896,2.293,897,2.293,898,2.293,899,2.293,900,2.293,901,2.293,902,4.658,903,4.658,904,2.293,905,2.293,906,2.293,907,3.359,908,2.293,909,2.293,910,2.293,911,2.293,912,2.293,913,2.293,914,2.293]],["title/directives/MarkerClusterComponent.html",[498,1.625,502,1.45]],["body/directives/MarkerClusterComponent.html",[3,0.318,4,0.318,5,0.277,8,1.228,9,1.472,10,2.954,11,1.472,12,0.837,13,1.781,15,2.873,16,3.101,18,0.97,20,0.042,26,0.166,27,1.602,28,2.13,29,3.48,30,0.755,31,1.049,32,0.318,33,3.48,35,0.741,38,0.696,39,1.993,41,2.13,42,2.13,43,2.13,45,2.873,47,2.13,48,2.225,49,2.13,52,1.435,54,2.873,56,2.873,57,1.442,58,2.518,63,1.404,68,2.873,69,2.873,72,2.13,77,2.873,79,2.13,81,2.13,82,2.13,84,2.873,86,1.404,87,2.13,91,2.13,92,0.014,94,1.779,111,1.404,113,2.13,118,3.633,119,0.62,123,2.513,141,1.272,143,0.749,145,0.409,160,2.513,161,2.873,238,0.021,239,0.014,247,0.866,271,1.442,294,0.783,302,0.947,303,0.362,306,0.409,307,0.459,310,0.783,314,1.639,348,0.778,354,1.863,370,0.409,386,1.639,387,1.863,388,2.13,393,2.251,401,1.404,403,2.487,421,2.487,427,3.355,438,2.487,439,3.355,450,1.404,498,1.65,501,1.639,502,1.986,582,3.48,584,1.639,626,1.404,723,1.639,915,4.575,916,1.639,917,3.03,918,3.03,919,3.03,920,3.661,921,3.661,922,3.661,923,4.063,924,3.03,925,3.661,926,4.086,927,3.03,928,4.086,929,4.086,930,3.03,931,4.086,932,1.997,933,2.513,934,3.661,935,3.03,936,3.03,937,1.997,938,3.03,939,1.997,940,3.03,941,3.03,942,1.997,943,1.997,944,1.997,945,1.997,946,3.03,947,1.997,948,3.03,949,1.997,950,1.997,951,3.03,952,3.03,953,1.997,954,1.997,955,3.03,956,1.997,957,1.997,958,1.997,959,1.997,960,1.997,961,1.228,962,1.997,963,3.661,964,1.997,965,1.997,966,1.997,967,1.997,968,1.997,969,1.997,970,1.997,971,1.997,972,1.997,973,1.997,974,1.997,975,1.997,976,1.997,977,1.997,978,1.997,979,1.997,980,1.997,981,1.997,982,1.997,983,1.997,984,1.997,985,1.997,986,1.997,987,1.997,988,1.997,989,1.997,990,1.997,991,1.997,992,1.997,993,1.997,994,1.997,995,1.997,996,1.997,997,1.997,998,1.997,999,1.997,1000,1.997,1001,3.03,1002,1.997,1003,1.997,1004,1.997,1005,1.997,1006,1.997,1007,1.997]],["title/interfaces/MarkerClusterConfig.html",[0,1.053,933,1.834]],["body/interfaces/MarkerClusterConfig.html",[0,1.54,2,2.376,3,0.695,4,0.695,5,0.605,6,2.12,20,0.041,26,0.363,27,2.017,30,0.605,31,1.406,32,0.821,92,0.03,160,3.478,238,0.035,239,0.03,302,0.893,303,0.791,348,1.12,370,0.893,750,3.618,933,3.165,961,3.165,1008,3.067]],["title/interfaces/MarkerClustererOptions.html",[0,1.053,39,1.625]],["body/interfaces/MarkerClustererOptions.html",[0,0.734,1,1.921,2,0.679,3,0.199,4,0.199,5,0.482,6,0.606,7,0.766,8,0.766,9,1.011,10,3.211,11,2.027,12,0.768,13,2.327,14,4.114,15,2.196,16,3.171,17,3.081,18,1.824,20,0.041,21,3.932,22,4.114,23,4.287,24,1.708,25,2.565,26,0.391,27,1.225,28,3.228,29,3.956,30,0.704,31,1.251,32,0.332,33,3.904,34,1.023,35,1.017,36,1.708,37,2.196,38,0.478,39,1.133,40,1.708,41,2.196,42,2.638,43,1.462,44,2.565,45,2.196,46,1.708,47,1.462,48,2.043,49,1.462,50,1.921,51,2.565,52,0.815,53,1.708,54,2.196,55,1.708,56,2.933,57,0.734,58,3.012,59,1.708,60,2.565,61,2.565,62,1.708,63,1.462,64,1.708,65,1.133,66,1.708,67,1.708,68,2.196,69,3.302,70,1.708,71,2.565,72,1.462,73,1.708,74,1.708,75,1.462,76,1.708,77,2.196,78,1.708,79,1.462,80,1.708,81,1.462,82,2.638,83,2.565,84,2.196,85,1.708,86,1.462,87,1.462,88,3.081,89,1.708,90,1.708,91,2.196,92,0.018,93,1.708,94,2.027,95,1.708,96,1.708,97,3.081,98,1.708,99,1.708,100,1.708,101,1.708,102,2.565,103,3.425,104,2.196,105,1.708,106,1.708,107,1.708,108,1.708,109,3.856,110,1.708,111,1.462,112,1.708,113,2.196,114,1.708,115,1.708,116,1.708,117,1.708,118,1.462,119,0.426,120,2.638,121,1.708,122,3.081,123,3.261,124,1.462,125,1.708,126,1.708,127,1.708,128,3.081,129,1.708,130,1.708,131,1.708,132,1.708,133,2.638,134,1.708,135,2.565,136,2.565,137,1.708,138,1.708,139,0.595,140,1.708,141,0.718,142,1.708,143,0.854,144,2.196,145,0.64,146,2.565,147,1.708,148,1.708,149,1.708,150,1.708,151,1.708,152,2.565,153,2.565,154,2.565,155,1.133,156,1.708,157,1.708,158,1.708,159,1.708,160,2.307,161,2.638,162,3.081,163,1.708,164,1.708,165,2.933,166,1.708,167,1.708,168,1.708,169,1.708,170,1.708,171,1.708,172,1.708,173,1.708,174,2.565,175,1.708,176,1.708,177,1.708,178,1.708,179,1.708,180,1.708,181,1.708,182,2.565,183,1.708,184,3.081,185,2.565,186,3.081,187,1.708,188,2.196,189,3.081,190,3.081,191,3.081,192,1.708,193,2.565,194,1.708,195,1.708,196,1.708,197,1.708,198,1.708,199,1.708,200,1.708,201,1.708,202,1.708,203,1.708,204,2.565,205,1.708,206,1.708,207,1.708,208,1.708,209,1.708,210,1.708,211,1.708,212,1.462,213,1.708,214,1.708,215,1.708,216,1.708,217,1.708,218,1.462,219,2.565,220,3.425,221,2.638,222,1.708,223,1.708,224,2.565,225,1.708,226,1.708,227,1.708,228,1.708,229,1.708,230,1.708,231,1.708,232,1.708,233,1.708,234,1.462,235,1.708,236,1.708,237,1.708,238,0.014,239,0.008]],["title/modules/NgMapsHereModule.html",[603,1.625,1009,1.834]],["body/modules/NgMapsHereModule.html",[3,0.58,4,0.58,5,0.505,16,1.981,20,0.042,32,0.58,48,2.508,92,0.025,145,0.745,238,0.031,239,0.025,302,1.146,303,0.66,306,0.745,307,0.836,380,3.223,387,3.108,388,3.238,389,2.986,443,2.832,444,1.464,496,2.557,502,2.876,508,2.832,579,2.832,603,1.981,731,3.049,1009,3.639,1010,2.557,1011,2.237,1012,4.149,1013,2.986,1014,4.149,1015,2.986,1016,2.986,1017,2.986,1018,2.986,1019,2.986,1020,2.986,1021,3.637,1022,4.606,1023,4.606,1024,3.637,1025,3.637,1026,3.637,1027,3.637,1028,3.637,1029,3.637]],["title/coverage.html",[1030,3.32]],["body/coverage.html",[0,1.826,1,2.085,5,0.471,6,2.606,7,2.707,11,2.14,20,0.041,30,0.471,39,1.846,92,0.023,212,2.383,238,0.03,239,0.023,240,0.587,241,2.085,243,2.783,244,2.92,311,1.846,370,0.694,379,2.085,380,1.846,384,2.783,390,2.383,392,2.085,394,2.085,396,2.085,398,2.085,400,2.085,402,2.085,444,1.747,445,2.383,498,1.846,502,1.648,504,2.671,505,2.783,520,2.783,521,2.783,579,2.085,580,2.783,596,1.846,627,1.846,660,4.875,676,2.783,731,1.846,732,2.783,747,2.707,758,2.783,810,2.783,860,2.783,880,2.383,915,2.783,916,2.783,923,2.783,933,2.085,961,2.085,1008,3.095,1030,2.783,1031,3.391,1032,3.391,1033,3.391,1034,3.391,1035,4.889,1036,5.363,1037,3.391,1038,3.391,1039,3.391,1040,3.391,1041,3.391,1042,3.391,1043,3.614,1044,3.391,1045,3.391,1046,3.391,1047,2.783,1048,2.783,1049,4.403,1050,3.391,1051,3.391,1052,4.403,1053,4.403,1054,3.391,1055,3.391,1056,3.391,1057,3.391,1058,3.391,1059,3.391,1060,3.391,1061,3.391]],["title/dependencies.html",[1011,2.202,1062,2.056]],["body/dependencies.html",[20,0.041,92,0.03,238,0.035,239,0.03,303,0.807,306,0.911,307,1.023,1011,3.203,1063,4.452,1064,5.209,1065,4.452,1066,4.452,1067,5.209,1068,5.209,1069,5.209,1070,4.452,1071,4.452,1072,4.452]],["title/miscellaneous/enumerations.html",[1073,0.982,1074,2.939]],["body/miscellaneous/enumerations.html",[18,2.889,20,0.041,26,0.362,50,3.157,92,0.03,238,0.035,239,0.03,422,3.609,599,3.609,648,3.609,649,3.609,747,2.67,754,4.214,755,4.214,756,4.214,757,4.214,1073,1.702,1074,3.565,1075,3.565]],["title/miscellaneous/functions.html",[1073,0.982,1076,2.939]],["body/miscellaneous/functions.html",[12,0.918,20,0.04,26,0.374,35,0.948,92,0.031,119,1.071,143,1.071,238,0.036,239,0.031,304,2.757,311,2.848,517,3.68,880,3.677,1043,3.68,1073,1.757,1076,3.68,1077,5.23,1078,4.483,1079,4.483,1080,4.483]],["title/index.html",[26,0.209,1081,2.505,1082,2.505]],["body/index.html",[20,0.036,92,0.03,238,0.036,239,0.03,306,1.069,443,3.212,444,1.66,450,3.144,464,3.672,603,2.436,820,3.672,1062,3.672,1083,4.473,1084,4.473,1085,4.473,1086,4.473,1087,4.473,1088,5.223,1089,4.473,1090,5.532,1091,5.223,1092,4.473,1093,4.473]],["title/modules.html",[1010,2.843]],["body/modules.html",[20,0.037,92,0.032,188,3.296,238,0.037,239,0.032,1009,2.883,1010,3.296,1094,4.688,1095,4.688,1096,4.688]],["title/overview.html",[1097,3.32]],["body/overview.html",[2,2.269,20,0.04,48,2.727,92,0.028,120,3.775,238,0.034,239,0.028,242,1.324,379,2.562,380,3.187,387,2.562,496,2.929,498,2.269,502,2.844,603,2.727,731,2.924,1009,3.673,1011,2.562,1012,3.42,1013,3.42,1014,3.42,1015,3.42,1016,3.42,1017,3.42,1018,3.42,1019,3.42,1020,3.42,1097,3.42,1098,4.167,1099,4.167]],["title/miscellaneous/typealiases.html",[1073,0.982,1100,3.581]],["body/miscellaneous/typealiases.html",[6,2.251,7,3.277,10,3.277,11,2.251,20,0.036,26,0.386,30,0.643,92,0.032,238,0.036,239,0.032,1073,1.816,1101,4.632,1102,3.803]],["title/miscellaneous/variables.html",[1073,0.982,1103,2.939]],["body/miscellaneous/variables.html",[6,2.097,18,2.648,20,0.041,26,0.359,92,0.029,94,2.648,238,0.035,239,0.029,370,1.047,444,1.625,504,2.097,627,2.784,642,3.542,747,2.653,750,3.595,751,3.542,752,3.542,961,3.351,1008,3.595,1047,4.198,1048,4.198,1073,1.691,1075,3.542,1102,3.542,1103,3.542,1104,4.314]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":660,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"coverage.html":{}}}],["0/1",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":120,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{},"overview.html":{}}}],["1/10",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":212,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{},"coverage.html":{}}}],["10^i",{"_index":129,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["11",{"_index":1098,"title":{},"body":{"overview.html":{}}}],["125",{"_index":136,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["15,000",{"_index":213,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["17/17",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":122,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["2.0.0",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":1038,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":137,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["3.1",{"_index":604,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["3.1.1",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1099,"title":{},"body":{"overview.html":{}}}],["47",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["8.0.0",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["8/17",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["_addeventlisteners",{"_index":926,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["_apiloader",{"_index":510,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["_clustermanager",{"_index":934,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["_config",{"_index":936,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["_configresolver",{"_index":581,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["_convertpoints",{"_index":811,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["_convertpoints(line",{"_index":817,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["_fitboundsservice",{"_index":425,"title":{},"body":{"components/HereComponent.html":{}}}],["_handleboundschange",{"_index":414,"title":{},"body":{"components/HereComponent.html":{}}}],["_handleidleevent",{"_index":415,"title":{},"body":{"components/HereComponent.html":{}}}],["_handlemapcenterchange",{"_index":416,"title":{},"body":{"components/HereComponent.html":{}}}],["_handlemapmouseevents",{"_index":417,"title":{},"body":{"components/HereComponent.html":{}}}],["_handlemaptypeidchange",{"_index":418,"title":{},"body":{"components/HereComponent.html":{}}}],["_handlemapzoomchange",{"_index":419,"title":{},"body":{"components/HereComponent.html":{}}}],["_handletilesloadedevent",{"_index":420,"title":{},"body":{"components/HereComponent.html":{}}}],["_mapswrapper",{"_index":266,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["_markermanager",{"_index":528,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["_modules",{"_index":583,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["_observablesubscriptions",{"_index":925,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["_platform",{"_index":733,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["_zone",{"_index":263,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["acc",{"_index":609,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["acc.find((value",{"_index":669,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["actual",{"_index":170,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["actual_component",{"_index":503,"title":{},"body":{"components/HereComponent.html":{}}}],["add",{"_index":1090,"title":{},"body":{"index.html":{}}}],["addcircle",{"_index":248,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["addcircle(circle",{"_index":267,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["added",{"_index":76,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["addinfowindow",{"_index":522,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["addinfowindow(infowindow",{"_index":530,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["addpolygon",{"_index":759,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["addpolygon(path",{"_index":764,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["addpolyline",{"_index":812,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["addpolyline(line",{"_index":821,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["addrectangle",{"_index":861,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["addrectangle(rectangle",{"_index":864,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["aliases",{"_index":1101,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":164,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["alpha.7",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["already",{"_index":554,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["alternatively",{"_index":108,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["angular/common",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":303,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"modules/NgMapsHereModule.html":{},"dependencies.html":{}}}],["any).protocol",{"_index":673,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["appears",{"_index":83,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["apple's",{"_index":177,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["application",{"_index":744,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["appmodule",{"_index":1091,"title":{},"body":{"index.html":{}}}],["array",{"_index":13,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolylineManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["array.from(includeinbounds.values",{"_index":516,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["array.isarray(libraries",{"_index":655,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["assumed",{"_index":237,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["async",{"_index":250,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["attempt",{"_index":201,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["available",{"_index":428,"title":{},"body":{"components/HereComponent.html":{}}}],["average",{"_index":72,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["averagecenter",{"_index":77,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["averagecenter=false",{"_index":70,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["avoid",{"_index":202,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["await",{"_index":350,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["b1",{"_index":484,"title":{},"body":{"components/HereComponent.html":{}}}],["b1.east",{"_index":486,"title":{},"body":{"components/HereComponent.html":{}}}],["b1.north",{"_index":488,"title":{},"body":{"components/HereComponent.html":{}}}],["b1.south",{"_index":492,"title":{},"body":{"components/HereComponent.html":{}}}],["b1.west",{"_index":490,"title":{},"body":{"components/HereComponent.html":{}}}],["b2",{"_index":485,"title":{},"body":{"components/HereComponent.html":{}}}],["b2.east",{"_index":487,"title":{},"body":{"components/HereComponent.html":{}}}],["b2.north",{"_index":489,"title":{},"body":{"components/HereComponent.html":{}}}],["b2.south",{"_index":493,"title":{},"body":{"components/HereComponent.html":{}}}],["b2.west",{"_index":491,"title":{},"body":{"components/HereComponent.html":{}}}],["based",{"_index":941,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["batch",{"_index":186,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["batches",{"_index":196,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["batchsize",{"_index":193,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["batchsize=markerclusterer.batch_size",{"_index":183,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["batchsizeie",{"_index":191,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["batchsizeie=markerclusterer.batch_size_ie",{"_index":194,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["before",{"_index":81,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["behaviour",{"_index":951,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["being",{"_index":97,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["better",{"_index":172,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["between",{"_index":200,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["boolean",{"_index":69,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["bootstrap",{"_index":1013,"title":{},"body":{"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["bounds",{"_index":517,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{},"miscellaneous/functions.html":{}}}],["bounds.service",{"_index":446,"title":{},"body":{"components/HereComponent.html":{}}}],["bounds.service.ts",{"_index":505,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{},"coverage.html":{}}}],["bounds.service.ts:11",{"_index":509,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["bounds.service.ts:16",{"_index":512,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["boundsfromrect",{"_index":311,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereRectangleManager.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["boundsfromrect(bounds",{"_index":519,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["boundsfromrect(c.getboundingbox",{"_index":363,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["boundsfromrect(r.getboundingbox",{"_index":909,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["boundsfromrect(rect",{"_index":1078,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boundsliteral",{"_index":304,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereRectangleManager.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":1096,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":188,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{},"modules.html":{}}}],["bubble",{"_index":575,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["c",{"_index":349,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["c.addeventlistener(eventname",{"_index":374,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["c.dispose",{"_index":352,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["c.getcenter",{"_index":364,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["c.getradius",{"_index":366,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["c.setcenter",{"_index":367,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["c.setoptions(options",{"_index":362,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["c.setradius(circle.radius",{"_index":369,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["c.setvisibility(circle.visible",{"_index":368,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["calculates",{"_index":940,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["calculator",{"_index":10,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/typealiases.html":{}}}],["calculator=markerclusterer.calculator",{"_index":114,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["call",{"_index":100,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["casting",{"_index":357,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["causing",{"_index":208,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["center",{"_index":938,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["change",{"_index":95,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["changes",{"_index":957,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["changes.averagecenter",{"_index":967,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["changes.gridsize",{"_index":969,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["changes.imageextension",{"_index":971,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["changes.imagepath",{"_index":973,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["changes.maxzoom",{"_index":975,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["changes.minimumclustersize",{"_index":977,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["changes.styles",{"_index":979,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["changes.zoomonclick",{"_index":981,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["check",{"_index":355,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle",{"_index":270,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.clickable",{"_index":325,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.draggable",{"_index":327,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.editable",{"_index":329,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.fillcolor",{"_index":331,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.fillopacity",{"_index":333,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.latitude",{"_index":321,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.longitude",{"_index":323,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.radius",{"_index":335,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.strokecolor",{"_index":337,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.strokeopacity",{"_index":339,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.strokeposition",{"_index":341,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.strokeweight",{"_index":343,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.visible",{"_index":345,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circle.zindex",{"_index":347,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["circlemanager",{"_index":246,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{}}}],["class",{"_index":145,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{}}}],["click",{"_index":64,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["clickable",{"_index":324,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["clicked",{"_index":59,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["clicking",{"_index":952,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["close",{"_index":523,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["close(infowindow",{"_index":534,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["cluster",{"_index":16,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{}}}],["cluster.ts",{"_index":916,"title":{},"body":{"directives/MarkerClusterComponent.html":{},"coverage.html":{}}}],["cluster.ts:117",{"_index":954,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:138",{"_index":959,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:34",{"_index":937,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:39",{"_index":939,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:44",{"_index":942,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:46",{"_index":943,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:47",{"_index":944,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:52",{"_index":945,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:57",{"_index":947,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:63",{"_index":949,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:68",{"_index":950,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:70",{"_index":953,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:74",{"_index":935,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:84",{"_index":958,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster.ts:90",{"_index":956,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["cluster/marker",{"_index":1024,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["cluster_ngmapsheremodule",{"_index":1015,"title":{},"body":{"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["cluster_ngmapsheremodule_declarations",{"_index":1016,"title":{},"body":{"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["cluster_ngmapsheremodule_exports",{"_index":1017,"title":{},"body":{"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["cluster_ngmapsheremodule_providers",{"_index":1018,"title":{},"body":{"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["clusterclass",{"_index":152,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["clusterclass=\"cluster",{"_index":142,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["clusterclick",{"_index":931,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["clustered",{"_index":98,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["clustericoninfo",{"_index":1,"title":{"interfaces/ClusterIconInfo.html":{}},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{},"coverage.html":{}}}],["clustericonstyle",{"_index":153,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["clustericonstylescount",{"_index":34,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["clustering",{"_index":50,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/HereModuleOptions.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/enumerations.html":{}}}],["clustermanager",{"_index":923,"title":{},"body":{"directives/MarkerClusterComponent.html":{},"coverage.html":{}}}],["clusters",{"_index":87,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["code",{"_index":150,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["commented",{"_index":316,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["complete",{"_index":222,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["component",{"_index":379,"title":{"components/HereComponent.html":{}},"body":{"components/HereComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_template",{"_index":500,"title":{},"body":{"components/HereComponent.html":{}}}],["components",{"_index":381,"title":{},"body":{"components/HereComponent.html":{}}}],["config",{"_index":584,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"directives/MarkerClusterComponent.html":{}}}],["config.libraries",{"_index":646,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["config.then((c",{"_index":639,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["config.ts",{"_index":1008,"title":{},"body":{"interfaces/MarkerClusterConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.version",{"_index":647,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["configure",{"_index":585,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["configure(config",{"_index":595,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["const",{"_index":348,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{}}}],["constructor",{"_index":38,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["constructor(_apiloader",{"_index":507,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["constructor(_config",{"_index":932,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["constructor(_mapswrapper",{"_index":261,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["constructor(config",{"_index":591,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["constructor(options",{"_index":735,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["container",{"_index":405,"title":{},"body":{"components/HereComponent.html":{}}}],["containing",{"_index":234,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["contains",{"_index":140,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["content",{"_index":410,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{}}}],["convert",{"_index":312,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereRectangleManager.html":{}}}],["core",{"_index":648,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"interfaces/HereModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["count",{"_index":91,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["coverage",{"_index":1030,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":741,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["createclustereventobservable(obj.name",{"_index":990,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["createeventobservable",{"_index":249,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["createeventobservable(eventname",{"_index":272,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["createmoduleurl",{"_index":586,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["createmoduleurl(module",{"_index":598,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["creates",{"_index":537,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["css",{"_index":144,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["cssurl",{"_index":664,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["custom",{"_index":110,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["data",{"_index":755,"title":{},"body":{"interfaces/HereModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["deals",{"_index":66,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["declarations",{"_index":1012,"title":{},"body":{"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["default",{"_index":94,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":148,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["defined",{"_index":141,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["defining",{"_index":146,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["delay",{"_index":198,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["deleted",{"_index":555,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["deleteinfowindow",{"_index":524,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["deleteinfowindow(infowindow",{"_index":539,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["deletemarker",{"_index":677,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["deletemarker(marker",{"_index":692,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["deletepolygon",{"_index":760,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["deletepolygon(polygon",{"_index":769,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["deletepolyline",{"_index":813,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["deletepolyline(line",{"_index":824,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["dependencies",{"_index":1011,"title":{"dependencies.html":{}},"body":{"modules/NgMapsHereModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derived",{"_index":158,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["determine",{"_index":115,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["determined",{"_index":156,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["different",{"_index":112,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["directive",{"_index":498,"title":{"directives/MarkerClusterComponent.html":{}},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":501,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{}}}],["display",{"_index":104,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"components/HereComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["displayed",{"_index":116,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["displays",{"_index":179,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["distinct",{"_index":587,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["distinct(acc",{"_index":606,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["distinctuntilchanged",{"_index":440,"title":{},"body":{"components/HereComponent.html":{}}}],["distinctuntilchanged((z1",{"_index":478,"title":{},"body":{"components/HereComponent.html":{}}}],["document.location",{"_index":672,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["documentation",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":629,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"interfaces/HereModuleOptions.html":{}}}],["dom",{"_index":382,"title":{},"body":{"components/HereComponent.html":{}}}],["double",{"_index":169,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["draggable",{"_index":326,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["e",{"_index":375,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HereRectangleManager.html":{}}}],["e.g",{"_index":229,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["each",{"_index":113,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["east",{"_index":885,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["editable",{"_index":328,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["element",{"_index":133,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"components/HereComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["elements",{"_index":154,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["empty",{"_index":308,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["enabled",{"_index":51,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["enableretinaicons",{"_index":182,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["enableretinaicons=false",{"_index":163,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["ensure",{"_index":89,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["enum",{"_index":753,"title":{},"body":{"interfaces/HereModuleOptions.html":{}}}],["enumerations",{"_index":1074,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":209,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["error('method",{"_index":716,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["error(`unknown",{"_index":662,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["errors",{"_index":205,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["etc",{"_index":226,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["ev",{"_index":984,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["event",{"_index":65,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["eventemitter",{"_index":427,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{}}}],["eventname",{"_index":275,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["eventname.foreach((event",{"_index":720,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["evt",{"_index":542,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["example",{"_index":135,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["exceeds",{"_index":130,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["explorer",{"_index":190,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["export",{"_index":32,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{}}}],["exports",{"_index":1014,"title":{},"body":{"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["ext",{"_index":601,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["extends",{"_index":245,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["extension",{"_index":228,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["false",{"_index":61,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["favorite",{"_index":1086,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{}}}],["files",{"_index":221,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["fillcolor",{"_index":330,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HereRectangleManager.html":{}}}],["fillopacity",{"_index":332,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HereRectangleManager.html":{}}}],["first",{"_index":75,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["fit",{"_index":445,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"coverage.html":{}}}],["fitboundsservice",{"_index":391,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{}}}],["fix",{"_index":722,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["fixme",{"_index":314,"title":{},"body":{"injectables/HereCircleManager.html":{},"directives/MarkerClusterComponent.html":{}}}],["following",{"_index":1092,"title":{},"body":{"index.html":{}}}],["form",{"_index":223,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["from(this._mapswrapper.getbounds",{"_index":483,"title":{},"body":{"components/HereComponent.html":{}}}],["from(this._mapswrapper.getcenter",{"_index":467,"title":{},"body":{"components/HereComponent.html":{}}}],["from(this._mapswrapper.getzoom",{"_index":477,"title":{},"body":{"components/HereComponent.html":{}}}],["full",{"_index":216,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["function",{"_index":11,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1076,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":147,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["generatebounds",{"_index":506,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["generatebounds(includeinbounds",{"_index":511,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["geodesic",{"_index":784,"title":{},"body":{"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{}}}],["geopoint",{"_index":305,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HerePolylineManager.html":{}}}],["getbounds",{"_index":251,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereRectangleManager.html":{}}}],["getbounds(circle",{"_index":277,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["getbounds(rectangle",{"_index":869,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["getcenter",{"_index":252,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["getcenter(circle",{"_index":280,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["getplatform",{"_index":734,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["getradius",{"_index":253,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["getradius(circle",{"_index":282,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["getting",{"_index":1081,"title":{"index.html":{}},"body":{}}],["given",{"_index":155,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereRectangleManager.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["google",{"_index":538,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["google.maps.circleoptions",{"_index":295,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["google.maps.infowindowoptions",{"_index":545,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["google.maps.mapseventlistener",{"_index":373,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["google.maps.mouseevent",{"_index":985,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["google.maps.polygon",{"_index":808,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["google.maps.strokeposition",{"_index":361,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["grid",{"_index":41,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["gridsize",{"_index":45,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["gridsize=60",{"_index":40,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["group",{"_index":219,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["h",{"_index":642,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"miscellaneous/variables.html":{}}}],["h.geo.ipoint",{"_index":570,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["h.geo.linestring",{"_index":797,"title":{},"body":{"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{}}}],["h.geo.polygon(linestring",{"_index":801,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["h.geo.rect.coverpoints(points",{"_index":518,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["h.map.marker",{"_index":725,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["h.map.polyline",{"_index":857,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["h.service.platform",{"_index":738,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["h.service.platform.options",{"_index":749,"title":{},"body":{"interfaces/HereModuleOptions.html":{}}}],["handler",{"_index":63,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["handlers",{"_index":983,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["handlers.foreach((obj",{"_index":987,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["height",{"_index":409,"title":{},"body":{"components/HereComponent.html":{}}}],["here",{"_index":443,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"modules/NgMapsHereModule.html":{},"index.html":{}}}],["here.component",{"_index":1027,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["here_maps_module_options",{"_index":627,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["herecirclemanager",{"_index":241,"title":{"injectables/HereCircleManager.html":{}},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"coverage.html":{}}}],["herecomponent",{"_index":380,"title":{"components/HereComponent.html":{}},"body":{"components/HereComponent.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"overview.html":{}}}],["heremaps",{"_index":1029,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["heremapsfitboundsservice",{"_index":392,"title":{"injectables/HereMapsFitBoundsService.html":{}},"body":{"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"coverage.html":{}}}],["heremapsinfowindowmanager",{"_index":402,"title":{"injectables/HereMapsInfoWindowManager.html":{}},"body":{"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"coverage.html":{}}}],["heremapslibraries",{"_index":599,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"interfaces/HereModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["heremapslibraries.clustering",{"_index":621,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["heremapslibraries.core",{"_index":617,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["heremapslibraries.data",{"_index":622,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["heremapslibraries.mapevents",{"_index":619,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["heremapslibraries.pano",{"_index":624,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["heremapslibraries.places",{"_index":623,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["heremapslibraries.service",{"_index":618,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["heremapslibraries.ui",{"_index":620,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["heremapsloaderservice",{"_index":579,"title":{"injectables/HereMapsLoaderService.html":{}},"body":{"injectables/HereMapsLoaderService.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{}}}],["heremapsmarkermanager",{"_index":394,"title":{"injectables/HereMapsMarkerManager.html":{}},"body":{"components/HereComponent.html":{},"injectables/HereMapsMarkerManager.html":{},"coverage.html":{}}}],["heremapsplatformprovider",{"_index":731,"title":{"injectables/HereMapsPlatformProvider.html":{}},"body":{"injectables/HereMapsPlatformProvider.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"overview.html":{}}}],["heremapswrapperservice",{"_index":390,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"coverage.html":{}}}],["heremapswrapperservice).ui$.subscribe(this.ui",{"_index":463,"title":{},"body":{"components/HereComponent.html":{}}}],["heremapswrapperservice).ui).removebubble",{"_index":558,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["heremoduleoptions",{"_index":596,"title":{"interfaces/HereModuleOptions.html":{}},"body":{"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"coverage.html":{}}}],["herepolygonmanager",{"_index":396,"title":{"injectables/HerePolygonManager.html":{}},"body":{"components/HereComponent.html":{},"injectables/HerePolygonManager.html":{},"coverage.html":{}}}],["herepolylinemanager",{"_index":398,"title":{"injectables/HerePolylineManager.html":{}},"body":{"components/HereComponent.html":{},"injectables/HerePolylineManager.html":{},"coverage.html":{}}}],["hererectanglemanager",{"_index":400,"title":{"injectables/HereRectangleManager.html":{}},"body":{"components/HereComponent.html":{},"injectables/HereRectangleManager.html":{},"coverage.html":{}}}],["hidden",{"_index":82,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["high",{"_index":174,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["higher",{"_index":125,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["hostlistener",{"_index":437,"title":{},"body":{"components/HereComponent.html":{}}}],["hostlistener('window:resize",{"_index":456,"title":{},"body":{"components/HereComponent.html":{}}}],["hostlisteners",{"_index":423,"title":{},"body":{"components/HereComponent.html":{}}}],["html",{"_index":497,"title":{},"body":{"components/HereComponent.html":{}}}],["https",{"_index":671,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["i.addeventlistener(eventname",{"_index":578,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["i.setoptions(options",{"_index":568,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["i.setposition",{"_index":560,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["icon",{"_index":17,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["icons",{"_index":165,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HerePolylineManager.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["identifier",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":86,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["ignorehidden",{"_index":102,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["ignorehidden=false",{"_index":85,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["image",{"_index":220,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["imageextension",{"_index":161,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["imageextension=markerclusterer.image_extension",{"_index":227,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["imagepath",{"_index":160,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["imagepath=markerclusterer.image_path",{"_index":215,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["imagepathn.imageextension",{"_index":224,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["images",{"_index":236,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["imagesizes",{"_index":162,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["imagesizes=markerclusterer.image_sizes",{"_index":232,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["implement",{"_index":315,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{}}}],["implemented",{"_index":717,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["implements",{"_index":919,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["import",{"_index":302,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"modules/NgMapsHereModule.html":{}}}],["improve",{"_index":356,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["included",{"_index":90,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["includeinbounds",{"_index":513,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":117,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{}}}],["infowindow",{"_index":533,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["infowindow.elementref.nativeelement.clonenode(true",{"_index":564,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["infowindow.hostmarker",{"_index":572,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["infowindow.hostmarker.latitude",{"_index":573,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["infowindow.hostmarker.longitude",{"_index":574,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["infowindow.latitude",{"_index":561,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["infowindow.longitude",{"_index":562,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["infowindowmanager",{"_index":401,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"directives/MarkerClusterComponent.html":{}}}],["inherit",{"_index":408,"title":{},"body":{"components/HereComponent.html":{}}}],["inject",{"_index":626,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"directives/MarkerClusterComponent.html":{}}}],["inject(here_maps_module_options",{"_index":632,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{}}}],["inject(marker_cluster_config",{"_index":962,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["injectable",{"_index":240,"title":{"injectables/HereCircleManager.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"coverage.html":{}}}],["injectables",{"_index":242,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"overview.html":{}}}],["injectiontoken",{"_index":750,"title":{},"body":{"interfaces/HereModuleOptions.html":{},"interfaces/MarkerClusterConfig.html":{},"miscellaneous/variables.html":{}}}],["inner",{"_index":406,"title":{},"body":{"components/HereComponent.html":{}}}],["input",{"_index":118,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["inputs",{"_index":930,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["inserted",{"_index":199,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["install",{"_index":1085,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1084,"title":{},"body":{"index.html":{}}}],["installed",{"_index":62,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["instance",{"_index":297,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["instanceof",{"_index":638,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["instead",{"_index":192,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["integer",{"_index":127,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ClusterIconInfo.html":{},"interfaces/HereModuleOptions.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{}},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/HereModuleOptions.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/HereModuleOptions.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"overview.html":{}}}],["internal",{"_index":963,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["internet",{"_index":189,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["item",{"_index":794,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["item.setgeometry(newpolygon",{"_index":802,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["iwindow",{"_index":551,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["iwindow.close",{"_index":557,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["javascript",{"_index":203,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["jpg",{"_index":231,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["js",{"_index":605,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["jsurl",{"_index":667,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["l.addeventlistener(eventname",{"_index":858,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["l.addlistener(eventname",{"_index":809,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["lat",{"_index":320,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolylineManager.html":{}}}],["latitude",{"_index":726,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["layers",{"_index":746,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["legend",{"_index":496,"title":{},"body":{"components/HereComponent.html":{},"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["less",{"_index":132,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["level",{"_index":49,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["levels",{"_index":53,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["libraries",{"_index":645,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"interfaces/HereModuleOptions.html":{}}}],["libraries.map((modulename",{"_index":656,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["line",{"_index":820,"title":{},"body":{"injectables/HerePolylineManager.html":{},"index.html":{}}}],["line._getpoints().map((point",{"_index":831,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.clickable",{"_index":837,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.draggable",{"_index":838,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.editable",{"_index":839,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.geodesic",{"_index":840,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.icons",{"_index":846,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.strokecolor",{"_index":841,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.strokeopacity",{"_index":842,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.strokeweight",{"_index":843,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.visible",{"_index":844,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["line.zindex",{"_index":845,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["linestring",{"_index":796,"title":{},"body":{"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{}}}],["linestring.pushpoint(item",{"_index":849,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["linestring.pushpoint(path",{"_index":799,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["link",{"_index":37,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["listener",{"_index":372,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereRectangleManager.html":{}}}],["listener.remove",{"_index":378,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["literal",{"_index":773,"title":{},"body":{"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{}}}],["lng",{"_index":322,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolylineManager.html":{}}}],["load",{"_index":588,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader",{"_index":592,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{}}}],["loader.service",{"_index":1025,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["loader.service.ts",{"_index":580,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:13",{"_index":625,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader.service.ts:23",{"_index":616,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader.service.ts:24",{"_index":594,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader.service.ts:46",{"_index":597,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader.service.ts:50",{"_index":610,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader.service.ts:58",{"_index":615,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader.service.ts:72",{"_index":612,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader.service.ts:88",{"_index":608,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loader.service.ts:95",{"_index":602,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loadmodule",{"_index":589,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loadmodule(modulename",{"_index":611,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["loadmodules",{"_index":590,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["location",{"_index":74,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["longitude",{"_index":727,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["look",{"_index":171,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["low",{"_index":211,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["lowest",{"_index":126,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["m",{"_index":718,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolylineManager.html":{}}}],["m.addeventlistener(event",{"_index":721,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["m.dispose",{"_index":854,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["m.setgeometry",{"_index":728,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["m.setgeometry(linestring",{"_index":851,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["m.setvisibility(marker.visible",{"_index":729,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["m.setzindex(marker.zindex",{"_index":730,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["managed",{"_index":214,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["manager",{"_index":450,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{},"index.html":{}}}],["manager.ts",{"_index":244,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"coverage.html":{}}}],["manager.ts:101",{"_index":299,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["manager.ts:105",{"_index":273,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["manager.ts:11",{"_index":766,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["manager.ts:12",{"_index":816,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["manager.ts:13",{"_index":265,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereRectangleManager.html":{}}}],["manager.ts:17",{"_index":819,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["manager.ts:18",{"_index":866,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["manager.ts:22",{"_index":269,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["manager.ts:24",{"_index":822,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["manager.ts:29",{"_index":776,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["manager.ts:39",{"_index":774,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["manager.ts:42",{"_index":829,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["manager.ts:44",{"_index":770,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["manager.ts:48",{"_index":285,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereRectangleManager.html":{}}}],["manager.ts:53",{"_index":878,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["manager.ts:54",{"_index":827,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["manager.ts:55",{"_index":768,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["manager.ts:59",{"_index":296,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["manager.ts:6",{"_index":763,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["manager.ts:62",{"_index":825,"title":{},"body":{"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["manager.ts:67",{"_index":872,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["manager.ts:70",{"_index":823,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["manager.ts:73",{"_index":278,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["manager.ts:78",{"_index":281,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["manager.ts:79",{"_index":876,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["manager.ts:81",{"_index":874,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["manager.ts:83",{"_index":283,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereRectangleManager.html":{}}}],["manager.ts:87",{"_index":288,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["manager.ts:88",{"_index":868,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["manager.ts:92",{"_index":292,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["manager.ts:94",{"_index":290,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["manager.ts:96",{"_index":301,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["managers/circle",{"_index":449,"title":{},"body":{"components/HereComponent.html":{}}}],["managers/info",{"_index":451,"title":{},"body":{"components/HereComponent.html":{}}}],["managers/polygon",{"_index":453,"title":{},"body":{"components/HereComponent.html":{}}}],["managers/polyline",{"_index":454,"title":{},"body":{"components/HereComponent.html":{}}}],["managers/rectangle",{"_index":455,"title":{},"body":{"components/HereComponent.html":{}}}],["map",{"_index":57,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["map.getviewport().resize",{"_index":459,"title":{},"body":{"components/HereComponent.html":{}}}],["map_provider",{"_index":1023,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["mapevents",{"_index":754,"title":{},"body":{"interfaces/HereModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["maps",{"_index":444,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["maps/core",{"_index":307,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"modules/NgMapsHereModule.html":{},"dependencies.html":{}}}],["maps/here",{"_index":1088,"title":{},"body":{"index.html":{}}}],["mapsapiloader",{"_index":508,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"modules/NgMapsHereModule.html":{}}}],["mapsapiwrapper",{"_index":262,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["marker",{"_index":58,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"components/HereComponent.html":{},"injectables/HereMapsMarkerManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["marker.manager",{"_index":447,"title":{},"body":{"components/HereComponent.html":{}}}],["marker.manager.ts",{"_index":676,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{},"coverage.html":{}}}],["marker.manager.ts:11",{"_index":703,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:13",{"_index":689,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:18",{"_index":691,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:36",{"_index":693,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:38",{"_index":695,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:40",{"_index":697,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:42",{"_index":699,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:44",{"_index":701,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:46",{"_index":705,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:48",{"_index":707,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:54",{"_index":709,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:56",{"_index":711,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:58",{"_index":713,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.manager.ts:63",{"_index":715,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["marker.ts",{"_index":1047,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["marker_cluster_config",{"_index":961,"title":{},"body":{"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["markerclustercomponent",{"_index":502,"title":{"directives/MarkerClusterComponent.html":{}},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"overview.html":{}}}],["markerclusterconfig",{"_index":933,"title":{"interfaces/MarkerClusterConfig.html":{}},"body":{"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"coverage.html":{}}}],["markerclusterer",{"_index":25,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["markerclusterer.repaint",{"_index":101,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["markerclustereroptions",{"_index":39,"title":{"interfaces/MarkerClustererOptions.html":{}},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"coverage.html":{}}}],["markermanager",{"_index":393,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"directives/MarkerClusterComponent.html":{}}}],["markers",{"_index":33,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["matching",{"_index":238,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":47,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["maxzoom",{"_index":54,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["maxzoom=null",{"_index":46,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["mergemap",{"_index":441,"title":{},"body":{"components/HereComponent.html":{}}}],["metadata",{"_index":386,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{}}}],["methods",{"_index":247,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{}}}],["minimum",{"_index":79,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["minimumclustersize",{"_index":84,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["minimumclustersize=2",{"_index":78,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["minus",{"_index":134,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["miscellaneous",{"_index":1073,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mod",{"_index":658,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["mod.includes('css",{"_index":663,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["module",{"_index":603,"title":{"modules/NgMapsHereModule.html":{}},"body":{"injectables/HereMapsLoaderService.html":{},"modules/NgMapsHereModule.html":{},"index.html":{},"overview.html":{}}}],["modulename",{"_index":613,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["moduleoptions",{"_index":752,"title":{},"body":{"interfaces/HereModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":1010,"title":{"modules.html":{}},"body":{"modules/NgMapsHereModule.html":{},"modules.html":{}}}],["module}.${ext",{"_index":675,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["monitors",{"_index":176,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["mouse",{"_index":105,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["moves",{"_index":106,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["multiple",{"_index":167,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["n",{"_index":225,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["name",{"_index":143,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/functions.html":{}}}],["near",{"_index":917,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["need",{"_index":210,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["needed",{"_index":80,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["new",{"_index":370,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpolygon",{"_index":800,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["next",{"_index":607,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["ng",{"_index":306,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"modules/NgMapsHereModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngc",{"_index":631,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"interfaces/HereModuleOptions.html":{}}}],["ngheremaps",{"_index":751,"title":{},"body":{"interfaces/HereModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["ngmapscircle",{"_index":358,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["ngmapscircledirective",{"_index":268,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["ngmapsheremodule",{"_index":1009,"title":{"modules/NgMapsHereModule.html":{}},"body":{"modules/NgMapsHereModule.html":{},"modules.html":{},"overview.html":{}}}],["ngmapsheremodule.forroot",{"_index":1093,"title":{},"body":{"index.html":{}}}],["ngmapsinfowindowcomponent",{"_index":531,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["ngmapsmarkercomponent",{"_index":690,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["ngmapspolygon",{"_index":765,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["ngmapspolyline",{"_index":818,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["ngmapspolylinepoint",{"_index":830,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["ngmapsrectangledirective",{"_index":865,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["ngmapsviewcomponent",{"_index":385,"title":{},"body":{"components/HereComponent.html":{}}}],["ngmodule",{"_index":1022,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["ngonchanges",{"_index":927,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["ngonchanges(changes",{"_index":955,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["ngondestroy",{"_index":928,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["ngoninit",{"_index":929,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["ngzone",{"_index":264,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["none",{"_index":411,"title":{},"body":{"components/HereComponent.html":{}}}],["north",{"_index":883,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["note",{"_index":180,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["npm",{"_index":1087,"title":{},"body":{"index.html":{}}}],["null",{"_index":52,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["number",{"_index":29,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["numbers",{"_index":233,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["object",{"_index":9,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"components/HereComponent.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["observable",{"_index":276,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["observable((observer",{"_index":371,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{}}}],["observable(subscriber",{"_index":912,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["observer",{"_index":309,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["observer.next",{"_index":859,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["observer.next((e",{"_index":724,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["observer.next(e",{"_index":377,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HerePolygonManager.html":{}}}],["onchanges",{"_index":921,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["ondestroy",{"_index":920,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["one",{"_index":124,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["oninit",{"_index":922,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["onresize",{"_index":457,"title":{},"body":{"components/HereComponent.html":{}}}],["open",{"_index":525,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["open(infowindow",{"_index":541,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["optional",{"_index":35,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":294,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{}}}],["options.strokeposition",{"_index":360,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["options.ts",{"_index":7,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["os",{"_index":988,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["out",{"_index":1020,"title":{},"body":{"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["output",{"_index":438,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{}}}],["outputs",{"_index":421,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{}}}],["over",{"_index":107,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["overview",{"_index":1097,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":804,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["p.dispose",{"_index":805,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["p1",{"_index":468,"title":{},"body":{"components/HereComponent.html":{}}}],["p1.lat",{"_index":470,"title":{},"body":{"components/HereComponent.html":{}}}],["p1.lng",{"_index":472,"title":{},"body":{"components/HereComponent.html":{}}}],["p2",{"_index":469,"title":{},"body":{"components/HereComponent.html":{}}}],["p2.lat",{"_index":471,"title":{},"body":{"components/HereComponent.html":{}}}],["p2.lng",{"_index":473,"title":{},"body":{"components/HereComponent.html":{}}}],["package",{"_index":1062,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["pano",{"_index":757,"title":{},"body":{"interfaces/HereModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":317,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{}}}],["parameter",{"_index":36,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["parameters",{"_index":119,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":946,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["passed",{"_index":24,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["path",{"_index":767,"title":{},"body":{"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{}}}],["path.clickable",{"_index":779,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.draggable",{"_index":780,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.editable",{"_index":781,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.fillcolor",{"_index":782,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.fillopacity",{"_index":783,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.foreach((item",{"_index":848,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["path.geodesic",{"_index":785,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.paths",{"_index":787,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.strokecolor",{"_index":788,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.strokeopacity",{"_index":789,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.strokeweight",{"_index":790,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.visible",{"_index":791,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["path.zindex",{"_index":792,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["paths",{"_index":786,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["peer",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":743,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["pipe",{"_index":466,"title":{},"body":{"components/HereComponent.html":{}}}],["pixels",{"_index":43,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["pl",{"_index":852,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["pl.setoptions(options",{"_index":853,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["places",{"_index":756,"title":{},"body":{"interfaces/HereModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["platform",{"_index":742,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["platform.provider",{"_index":1026,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["platform.provider.ts",{"_index":732,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{},"coverage.html":{}}}],["platform.provider.ts:14",{"_index":737,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["platform.provider.ts:7",{"_index":736,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["platformoptions",{"_index":748,"title":{},"body":{"interfaces/HereModuleOptions.html":{}}}],["png",{"_index":230,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["point",{"_index":569,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["point.latitude",{"_index":832,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["point.longitude",{"_index":833,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["points",{"_index":515,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["polygon",{"_index":771,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["polygon.paths.foreach((path",{"_index":798,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["polygonmanager",{"_index":395,"title":{},"body":{"components/HereComponent.html":{},"injectables/HerePolygonManager.html":{}}}],["polygonpromise",{"_index":777,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["polylinemanager",{"_index":397,"title":{},"body":{"components/HereComponent.html":{},"injectables/HerePolylineManager.html":{}}}],["polylinepromise",{"_index":835,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["position",{"_index":71,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["positioned",{"_index":73,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["private",{"_index":582,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"directives/MarkerClusterComponent.html":{}}}],["processed",{"_index":184,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["processes",{"_index":151,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["promise",{"_index":279,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["promise.all",{"_index":654,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["promise.resolve",{"_index":643,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"injectables/HerePolygonManager.html":{}}}],["properties",{"_index":27,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["property",{"_index":23,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["propname",{"_index":803,"title":{},"body":{"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{}}}],["protected",{"_index":413,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HerePolylineManager.html":{}}}],["protocol",{"_index":670,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["protocol}//js.api.here.com/v3/${version}/mapsjs",{"_index":674,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["provide",{"_index":388,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{},"modules/NgMapsHereModule.html":{}}}],["providedin",{"_index":628,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["provider",{"_index":1083,"title":{},"body":{"index.html":{}}}],["providers",{"_index":387,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{},"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["public",{"_index":460,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsPlatformProvider.html":{}}}],["r",{"_index":902,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["r.addeventlistener(eventname",{"_index":914,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["r.dispose",{"_index":904,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["r.setboundingbox",{"_index":910,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["r.seto",{"_index":906,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["r.setoptions(options",{"_index":908,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["r.setvisibility(rectangle.visible",{"_index":911,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["radius",{"_index":334,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["readonly",{"_index":461,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsLoaderService.html":{}}}],["rect",{"_index":1079,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rectangle",{"_index":867,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.clickable",{"_index":891,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.draggable",{"_index":892,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.east",{"_index":886,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.editable",{"_index":893,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.fillcolor",{"_index":894,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.fillopacity",{"_index":895,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.north",{"_index":884,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.south",{"_index":888,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.strokecolor",{"_index":896,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.strokeopacity",{"_index":897,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.strokeposition",{"_index":898,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.strokeweight",{"_index":899,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.visible",{"_index":900,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.west",{"_index":890,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectangle.zindex",{"_index":901,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectanglemanager",{"_index":399,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereRectangleManager.html":{}}}],["rectangleoptions",{"_index":905,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["rectfrombounds",{"_index":880,"title":{},"body":{"injectables/HereRectangleManager.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rectfrombounds(bounds",{"_index":1080,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reject",{"_index":636,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["removecircle",{"_index":254,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["removecircle(circle",{"_index":284,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["removerectangle",{"_index":862,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["removerectangle(rectangle",{"_index":870,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["removes",{"_index":286,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereRectangleManager.html":{}}}],["represented",{"_index":121,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["representing",{"_index":138,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["reset",{"_index":1019,"title":{},"body":{"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["resolution",{"_index":175,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["resolve",{"_index":635,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["rest",{"_index":651,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["result",{"_index":92,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":239,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retina",{"_index":178,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["return",{"_index":139,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["returned",{"_index":93,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["returns",{"_index":12,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/functions.html":{}}}],["rework",{"_index":994,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["root",{"_index":218,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["rxjs",{"_index":310,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{}}}],["rxjs/operators",{"_index":442,"title":{},"body":{"components/HereComponent.html":{}}}],["s",{"_index":464,"title":{},"body":{"components/HereComponent.html":{},"index.html":{}}}],["s.unsubscribe",{"_index":966,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["scriptloaderservice",{"_index":593,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["second",{"_index":650,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["select",{"_index":206,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["selector",{"_index":403,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{}}}],["service",{"_index":649,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"interfaces/HereModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["set",{"_index":22,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["setbounds",{"_index":863,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["setbounds(rectangle",{"_index":871,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["setcenter",{"_index":255,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["setcenter(circle",{"_index":287,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["setdraggable",{"_index":256,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereRectangleManager.html":{}}}],["setdraggable(circle",{"_index":289,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["setdraggable(rectangle",{"_index":873,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["seteditable",{"_index":257,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereRectangleManager.html":{}}}],["seteditable(circle",{"_index":291,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["seteditable(rectangle",{"_index":875,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["setoptions",{"_index":258,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereRectangleManager.html":{}}}],["setoptions(circle",{"_index":293,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["setoptions(infowindow",{"_index":544,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["setoptions(rectangle",{"_index":877,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["setpolygonoptions",{"_index":761,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["setpolygonoptions(path",{"_index":772,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["setpolylineoptions",{"_index":814,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["setpolylineoptions(line",{"_index":826,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["setposition",{"_index":526,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["setposition(infowindow",{"_index":547,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["setradius",{"_index":259,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["setradius(circle",{"_index":298,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["setvisible",{"_index":260,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereRectangleManager.html":{}}}],["setvisible(circle",{"_index":300,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["setvisible(rectangle",{"_index":879,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["setzindex",{"_index":527,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["setzindex(infowindow",{"_index":549,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["several",{"_index":195,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["shown",{"_index":948,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["simplechanges",{"_index":439,"title":{},"body":{"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{}}}],["single",{"_index":185,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["size",{"_index":42,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["sizes",{"_index":166,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["small",{"_index":197,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{}}}],["south",{"_index":887,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["specify",{"_index":111,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["sprites",{"_index":181,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["square",{"_index":44,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["src/.../cluster",{"_index":1102,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../convert.ts",{"_index":1077,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../here",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../options.ts",{"_index":1075,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/lib/cluster/cluster",{"_index":6,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/cluster/marker",{"_index":915,"title":{},"body":{"directives/MarkerClusterComponent.html":{},"coverage.html":{}}}],["src/lib/convert.ts",{"_index":1043,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/here",{"_index":504,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/here.component.ts",{"_index":384,"title":{},"body":{"components/HereComponent.html":{},"coverage.html":{}}}],["src/lib/here.component.ts:112",{"_index":431,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.component.ts:114",{"_index":436,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.component.ts:116",{"_index":434,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.component.ts:118",{"_index":430,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.component.ts:137",{"_index":433,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.component.ts:64",{"_index":429,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.component.ts:73",{"_index":426,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.component.ts:84",{"_index":432,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.component.ts:99",{"_index":435,"title":{},"body":{"components/HereComponent.html":{}}}],["src/lib/here.module.ts",{"_index":1021,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["src/lib/managers/circle",{"_index":243,"title":{},"body":{"injectables/HereCircleManager.html":{},"coverage.html":{}}}],["src/lib/managers/info",{"_index":520,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{},"coverage.html":{}}}],["src/lib/managers/polygon",{"_index":758,"title":{},"body":{"injectables/HerePolygonManager.html":{},"coverage.html":{}}}],["src/lib/managers/polyline",{"_index":810,"title":{},"body":{"injectables/HerePolylineManager.html":{},"coverage.html":{}}}],["src/lib/managers/rectangle",{"_index":860,"title":{},"body":{"injectables/HereRectangleManager.html":{},"coverage.html":{}}}],["src/lib/options.ts",{"_index":747,"title":{},"body":{"interfaces/HereModuleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1082,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":31,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["strokecolor",{"_index":336,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["strokeopacity",{"_index":338,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["strokeposition",{"_index":340,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereRectangleManager.html":{}}}],["strokeweight",{"_index":342,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["style",{"_index":15,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["styles",{"_index":123,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"components/HereComponent.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["subscribe((bounds",{"_index":494,"title":{},"body":{"components/HereComponent.html":{}}}],["subscribe((center",{"_index":474,"title":{},"body":{"components/HereComponent.html":{}}}],["subscribe((zoom",{"_index":481,"title":{},"body":{"components/HereComponent.html":{}}}],["subscribe(obj.handler",{"_index":992,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["subscriber.next(e",{"_index":913,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["subscribetomapevent('mapviewchangeend",{"_index":465,"title":{},"body":{"components/HereComponent.html":{}}}],["subscription",{"_index":960,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["such",{"_index":128,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["super",{"_index":633,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["super(_apiloader",{"_index":514,"title":{},"body":{"injectables/HereMapsFitBoundsService.html":{}}}],["super(_mapswrapper",{"_index":313,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["support",{"_index":1094,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":99,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["svg",{"_index":1095,"title":{},"body":{"modules.html":{}}}],["svgmarkup",{"_index":1048,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":274,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{}}}],["table",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":412,"title":{},"body":{"components/HereComponent.html":{}}}],["text",{"_index":28,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["this._addeventlisteners",{"_index":995,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._apiwrapper.createcircle",{"_index":319,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["this._apiwrapper.createrectangle",{"_index":882,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["this._circles.delete(circle",{"_index":353,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["this._circles.get(circle",{"_index":351,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["this._circles.get(circle).then((c",{"_index":365,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["this._circles.set",{"_index":318,"title":{},"body":{"injectables/HereCircleManager.html":{}}}],["this._clustermanager",{"_index":989,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.clearmarkers",{"_index":964,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.init",{"_index":996,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.setaveragecenter(this",{"_index":968,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.setgridsize(this",{"_index":970,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.setimageextension(this",{"_index":972,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.setimagepath(this",{"_index":974,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.setmaxzoom(this",{"_index":976,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.setminimumclustersize(this",{"_index":978,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.setstyles(this",{"_index":980,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._clustermanager.setzoomonclick(this",{"_index":982,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._config",{"_index":1002,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._config.imagepath",{"_index":1003,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._configresolver",{"_index":637,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this._configresolver(c",{"_index":640,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this._configresolver(config",{"_index":641,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this._convertpoints(line",{"_index":834,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["this._infowindows.delete(infowindow",{"_index":559,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["this._infowindows.get(infowindow",{"_index":552,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["this._infowindows.set(infowindow",{"_index":577,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["this._mapswrapper",{"_index":462,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{}}}],["this._mapswrapper.createinfowindow(point",{"_index":576,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["this._mapswrapper.createpolygon",{"_index":778,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["this._mapswrapper.createpolyline",{"_index":836,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["this._mapswrapper.getnativemap",{"_index":571,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["this._mapswrapper.getnativemap().then((map",{"_index":458,"title":{},"body":{"components/HereComponent.html":{}}}],["this._markers.get(marker",{"_index":719,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["this._modules.get(modulename",{"_index":659,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this._observablesubscriptions.foreach((s",{"_index":965,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._observablesubscriptions.push(os",{"_index":993,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this._platform",{"_index":740,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["this._polygons.delete(polygon",{"_index":806,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["this._polygons.get(path).then((l",{"_index":807,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["this._polygons.get(polygon",{"_index":795,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["this._polygons.set(path",{"_index":793,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["this._polylines.delete(line",{"_index":855,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["this._polylines.get(line",{"_index":850,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["this._polylines.get(line).then((l",{"_index":856,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["this._polylines.set(line",{"_index":847,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["this._rectangles.get(rectangle",{"_index":903,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["this._rectangles.get(rectangle).then((r",{"_index":907,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["this._rectangles.set",{"_index":881,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["this._zone.run",{"_index":376,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["this._zone.run(async",{"_index":556,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["this.averagecenter",{"_index":997,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.boundschange.emit(bounds",{"_index":495,"title":{},"body":{"components/HereComponent.html":{}}}],["this.calculator",{"_index":998,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.centerchange.emit(center",{"_index":475,"title":{},"body":{"components/HereComponent.html":{}}}],["this.clusterclick.emit(ev",{"_index":986,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.config",{"_index":634,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this.createmoduleurl(modulename",{"_index":665,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this.gridsize",{"_index":999,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.imageextension",{"_index":1000,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.imagepath",{"_index":1001,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.loader.load",{"_index":739,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["this.loader.loadcss(cssurl",{"_index":666,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this.loader.loadscript(jsurl",{"_index":668,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this.loadmodule(heremapslibraries.core",{"_index":652,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this.loadmodule(heremapslibraries.service",{"_index":653,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this.loadmodule(modulename",{"_index":657,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this.loadmodules",{"_index":644,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["this.maxzoom",{"_index":1004,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.minimumclustersize",{"_index":1005,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.options).platformoptions",{"_index":745,"title":{},"body":{"injectables/HereMapsPlatformProvider.html":{}}}],["this.styles",{"_index":1006,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["this.subscription.add(s",{"_index":476,"title":{},"body":{"components/HereComponent.html":{}}}],["this.zoomchange.emit(zoom",{"_index":482,"title":{},"body":{"components/HereComponent.html":{}}}],["this.zoomonclick",{"_index":1007,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["throw",{"_index":661,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{}}}],["timeout",{"_index":204,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["title",{"_index":21,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["todo",{"_index":354,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsMarkerManager.html":{},"directives/MarkerClusterComponent.html":{}}}],["together",{"_index":918,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["tooltip",{"_index":103,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["tree",{"_index":383,"title":{},"body":{"components/HereComponent.html":{}}}],["true",{"_index":88,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["ts",{"_index":991,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["tslib",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":30,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsFitBoundsService.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HereMapsPlatformProvider.html":{},"interfaces/HereModuleOptions.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClusterConfig.html":{},"interfaces/MarkerClustererOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1100,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":359,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{}}}],["types/heremaps",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["typically",{"_index":168,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["typings",{"_index":723,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{},"directives/MarkerClusterComponent.html":{}}}],["ui",{"_index":422,"title":{},"body":{"components/HereComponent.html":{},"interfaces/HereModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":19,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{}}}],["up",{"_index":149,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["updateanimation",{"_index":678,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateanimation(marker",{"_index":694,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateclickable",{"_index":679,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateclickable(marker",{"_index":696,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatedraggable",{"_index":680,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatedraggable(marker",{"_index":698,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateicon",{"_index":681,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateicon(marker",{"_index":700,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateiconlegacy",{"_index":682,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateiconlegacy(marker",{"_index":702,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatelabel",{"_index":683,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatelabel(marker",{"_index":704,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatemarkerposition",{"_index":684,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatemarkerposition(marker",{"_index":706,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateopacity",{"_index":685,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updateopacity(marker",{"_index":708,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatepolygon",{"_index":762,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["updatepolygon(polygon",{"_index":775,"title":{},"body":{"injectables/HerePolygonManager.html":{}}}],["updatepolylinepoints",{"_index":815,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["updatepolylinepoints(line",{"_index":828,"title":{},"body":{"injectables/HerePolylineManager.html":{}}}],["updatetitle",{"_index":686,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatetitle(marker",{"_index":710,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatevisible",{"_index":687,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatevisible(marker",{"_index":712,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatezindex",{"_index":688,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["updatezindex(marker",{"_index":714,"title":{},"body":{"injectables/HereMapsMarkerManager.html":{}}}],["url",{"_index":217,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["use",{"_index":109,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["useclass",{"_index":389,"title":{},"body":{"components/HereComponent.html":{},"modules/NgMapsHereModule.html":{}}}],["used",{"_index":14,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["useexisting",{"_index":924,"title":{},"body":{"directives/MarkerClusterComponent.html":{}}}],["usevalue",{"_index":1028,"title":{},"body":{"modules/NgMapsHereModule.html":{}}}],["using",{"_index":187,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["value",{"_index":18,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"injectables/HereMapsLoaderService.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":159,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["var",{"_index":499,"title":{},"body":{"components/HereComponent.html":{}}}],["variable",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1103,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":600,"title":{},"body":{"injectables/HereMapsLoaderService.html":{},"interfaces/HereModuleOptions.html":{}}}],["view",{"_index":404,"title":{},"body":{"components/HereComponent.html":{}}}],["viewed",{"_index":173,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["visibility",{"_index":96,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["visible",{"_index":344,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["void",{"_index":271,"title":{},"body":{"injectables/HereCircleManager.html":{},"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{},"injectables/HereMapsLoaderService.html":{},"injectables/HereMapsMarkerManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{},"directives/MarkerClusterComponent.html":{}}}],["w",{"_index":563,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["w.close",{"_index":567,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["w.open",{"_index":566,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["w.setcontent(content",{"_index":565,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["want",{"_index":60,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["west",{"_index":889,"title":{},"body":{"injectables/HereRectangleManager.html":{}}}],["whether",{"_index":56,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["whichever",{"_index":131,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["whose",{"_index":157,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["width",{"_index":407,"title":{},"body":{"components/HereComponent.html":{}}}],["widths",{"_index":235,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["window",{"_index":553,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager",{"_index":452,"title":{},"body":{"components/HereComponent.html":{}}}],["window.manager.ts",{"_index":521,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{},"coverage.html":{}}}],["window.manager.ts:14",{"_index":529,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager.ts:23",{"_index":540,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager.ts:39",{"_index":548,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager.ts:51",{"_index":550,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager.ts:53",{"_index":543,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager.ts:60",{"_index":535,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager.ts:65",{"_index":546,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager.ts:73",{"_index":532,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window.manager.ts:91",{"_index":536,"title":{},"body":{"injectables/HereMapsInfoWindowManager.html":{}}}],["window:resize",{"_index":424,"title":{},"body":{"components/HereComponent.html":{}}}],["without",{"_index":207,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["work",{"_index":630,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["wrapper.service",{"_index":448,"title":{},"body":{"components/HereComponent.html":{},"injectables/HereMapsInfoWindowManager.html":{}}}],["wrapper.service.ts",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["yarn",{"_index":1089,"title":{},"body":{"index.html":{}}}],["yes",{"_index":614,"title":{},"body":{"injectables/HereMapsLoaderService.html":{}}}],["z1",{"_index":480,"title":{},"body":{"components/HereComponent.html":{}}}],["z2",{"_index":479,"title":{},"body":{"components/HereComponent.html":{}}}],["zindex",{"_index":346,"title":{},"body":{"injectables/HereCircleManager.html":{},"injectables/HerePolygonManager.html":{},"injectables/HerePolylineManager.html":{},"injectables/HereRectangleManager.html":{}}}],["zoom",{"_index":48,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{},"modules/NgMapsHereModule.html":{},"overview.html":{}}}],["zooming",{"_index":67,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["zoomonclick",{"_index":68,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"directives/MarkerClusterComponent.html":{},"interfaces/MarkerClustererOptions.html":{}}}],["zoomonclick=true",{"_index":55,"title":{},"body":{"interfaces/ClusterIconInfo.html":{},"interfaces/MarkerClustererOptions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ClusterIconInfo.html":{"url":"interfaces/ClusterIconInfo.html","title":"interface - ClusterIconInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClusterIconInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cluster/cluster-options.ts\n        \n\n            \n                Description\n            \n            \n                the object that a calculator function returns.\narray to be used to style the cluster icon.\nIf this value is undefined or \"\", title is set to the\nvalue of the title property passed to the MarkerClusterer.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        index\n                                \n                                \n                                        text\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ClusterIconInfo {\n  text: string;\n  index: number;\n  title: string;\n}\n\nexport type Calculator = (\n  markers: Array,\n  clusterIconStylesCount: number,\n) => ClusterIconInfo;\n/**\n * Optional parameter passed to the {@link MarkerClusterer} constructor.\n */\nexport interface MarkerClustererOptions {\n  /** [gridSize=60] The grid size of a cluster in pixels. The grid is a square. */\n  gridSize?: number;\n  /**\n   * [maxZoom=null] The maximum zoom level at which clustering is enabled or\n   * null if clustering is to be enabled at all zoom levels.\n   */\n  maxZoom?: number;\n  /**\n   * [zoomOnClick=true] Whether to zoom the map when a cluster marker is\n   * clicked. You may want to set this to false if you have installed a handler\n   * for the click event and it deals with zooming on its own.\n   */\n  zoomOnClick?: boolean;\n  /**\n   * [averageCenter=false] Whether the position of a cluster marker should be\n   * the average position of all markers in the cluster. If set to false, the\n   * cluster marker is positioned at the location of the first marker added to the cluster.\n   */\n  averageCenter?: boolean;\n  /**\n   * [minimumClusterSize=2] The minimum number of markers needed in a cluster\n   * before the markers are hidden and a cluster marker appears.\n   */\n  minimumClusterSize?: number;\n  /**\n   * [ignoreHidden=false] Whether to ignore hidden markers in clusters. You\n   * may want to set this to true to ensure that hidden markers are not included\n   * in the marker count that appears on a cluster marker (this count is the value of the\n   * text property of the result returned by the default calculator).\n   * If set to true and you change the visibility of a marker being clustered, be\n   * sure to also call MarkerClusterer.repaint().\n   */\n  ignoreHidden?: boolean;\n  /**\n   * [title=\"\"] The tooltip to display when the mouse moves over a cluster\n   * marker. (Alternatively, you can use a custom calculator function to specify a\n   * different tooltip for each cluster marker.)\n   */\n  title?: string;\n  /**\n   * [calculator=MarkerClusterer.CALCULATOR] The function used to determine\n   * the text to be displayed on a cluster marker and the index indicating which style to use\n   * for the cluster marker. The input parameters for the function are (1) the array of markers\n   * represented by a cluster marker and (2) the number of cluster icon styles. It returns a\n   * {@link ClusterIconInfo} object. The default calculator returns a\n   * text property which is the number of markers in the cluster and an\n   * index property which is one higher than the lowest integer such that\n   * 10^i exceeds the number of markers in the cluster, or the size of the styles\n   * array, whichever is less. The styles array element used has an index of\n   * index minus 1. For example, the default calculator returns a\n   * text value of \"125\" and an index of 3\n   * for a cluster icon representing 125 markers so the element used in the styles\n   * array is 2. A calculator may also return a title\n   * property that contains the text of the tooltip to be used for the cluster marker. If\n   * title is not defined, the tooltip is set to the value of the title\n   * property for the MarkerClusterer.\n   */\n  calculator?: Calculator;\n  /**\n   * [clusterClass=\"cluster\"] The name of the CSS class defining general styles\n   * for the cluster markers. Use this class to define CSS styles that are not set up by the code\n   * that processes the styles array.\n   */\n  clusterClass?: string;\n  /**\n   * [styles] An array of {@link ClusterIconStyle} elements defining the styles\n   * of the cluster markers to be used. The element to be used to style a given cluster marker\n   * is determined by the function defined by the calculator property.\n   * The default is an array of {@link ClusterIconStyle} elements whose properties are derived\n   * from the values for imagePath, imageExtension, and\n   * imageSizes.\n   */\n  styles?: Array;\n  /**\n   * [enableRetinaIcons=false] Whether to allow the use of cluster icons that\n   * have sizes that are some multiple (typically double) of their actual display size. Icons such\n   * as these look better when viewed on high-resolution monitors such as Apple's Retina displays.\n   * Note: if this property is true, sprites cannot be used as cluster icons.\n   */\n  enableRetinaIcons?: boolean;\n  /**\n   * [batchSize=MarkerClusterer.BATCH_SIZE] Set this property to the\n   * number of markers to be processed in a single batch when using a browser other than\n   * Internet Explorer (for Internet Explorer, use the batchSizeIE property instead).\n   */\n  batchSize?: number;\n  /**\n   * [batchSizeIE=MarkerClusterer.BATCH_SIZE_IE] When Internet Explorer is\n   * being used, markers are processed in several batches with a small delay inserted between\n   * each batch in an attempt to avoid Javascript timeout errors. Set this property to the\n   * number of markers to be processed in a single batch; select as high a number as you can\n   * without causing a timeout error in the browser. This number might need to be as low as 100\n   * if 15,000 markers are being managed, for example.\n   */\n  batchSizeIE?: number;\n  /**\n   * [imagePath=MarkerClusterer.IMAGE_PATH]\n   * The full URL of the root name of the group of image files to use for cluster icons.\n   * The complete file name is of the form imagePathn.imageExtension\n   * where n is the image file number (1, 2, etc.).\n   */\n  imagePath?: string;\n  /**\n   * [imageExtension=MarkerClusterer.IMAGE_EXTENSION]\n   * The extension name for the cluster icon image files (e.g., \"png\" or\n   * \"jpg\").\n   */\n  imageExtension?: string;\n  /**\n   * [imageSizes=MarkerClusterer.IMAGE_SIZES]\n   * An array of numbers containing the widths of the group of\n   * imagePathn.imageExtension image files.\n   * (The images are assumed to be square.)\n   */\n  imageSizes?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HereCircleManager.html":{"url":"injectables/HereCircleManager.html","title":"injectable - HereCircleManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HereCircleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/circle-manager.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CircleManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCircle\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                    Async\n                                getBounds\n                            \n                            \n                                    Async\n                                getCenter\n                            \n                            \n                                getRadius\n                            \n                            \n                                    Async\n                                removeCircle\n                            \n                            \n                                    Async\n                                setCenter\n                            \n                            \n                                    Async\n                                setDraggable\n                            \n                            \n                                    Async\n                                setEditable\n                            \n                            \n                                    Async\n                                setOptions\n                            \n                            \n                                setRadius\n                            \n                            \n                                    Async\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/circle-manager.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCircle\n                        \n                        \n                    \n                \n            \n            \n                \naddCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:105\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRadius\n                        \n                        \n                    \n                \n            \n            \n                \ngetRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeCircle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:48\n                \n            \n\n\n            \n                \n                    Removes the given circle from the map.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setCenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setDraggable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setEditable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(circle: NgMapsCircleDirective, options: google.maps.CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of {\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                            google.maps.CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        options for the circle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRadius\n                        \n                        \n                    \n                \n            \n            \n                \nsetRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setVisible\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle-manager.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport {\n  BoundsLiteral,\n  CircleManager,\n  GeoPoint,\n  MapsApiWrapper,\n  NgMapsCircleDirective,\n} from '@ng-maps/core';\nimport { EMPTY, Observable, Observer } from 'rxjs';\nimport { boundsFromRect } from '../convert';\n\n@Injectable()\nexport class HereCircleManager extends CircleManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  /**\n   * @fixme implement commented properties\n   * @param circle\n   */\n  addCircle(circle: NgMapsCircleDirective) {\n    this._circles.set(\n      circle,\n      this._apiWrapper.createCircle(\n        { lat: circle.latitude, lng: circle.longitude },\n        {\n          // clickable: circle.clickable,\n          // draggable: circle.draggable,\n          // editable: circle.editable,\n          fillColor: circle.fillColor,\n          fillOpacity: circle.fillOpacity,\n          radius: circle.radius,\n          strokeColor: circle.strokeColor,\n          strokeOpacity: circle.strokeOpacity,\n          // strokePosition: circle.strokePosition,\n          strokeWeight: circle.strokeWeight,\n          visible: circle.visible,\n          zIndex: circle.zIndex,\n        },\n      ),\n    );\n  }\n\n  /**\n   * Removes the given circle from the map.\n   */\n  async removeCircle(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    c.dispose();\n    this._circles.delete(circle);\n  }\n\n  /**\n   * @todo check how to improve type casting\n   * @param circle instance of {@link NgMapsCircle}\n   * @param options options for the circle\n   */\n  async setOptions(\n    circle: NgMapsCircleDirective,\n    options: google.maps.CircleOptions,\n  ): Promise {\n    const c = await this._circles.get(circle);\n\n    if (typeof options.strokePosition === 'string') {\n      options.strokePosition = (google.maps.StrokePosition[\n        options.strokePosition\n      ] as any) as google.maps.StrokePosition;\n    }\n    // return c.setOptions(options);\n  }\n\n  async getBounds(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    return boundsFromRect(c.getBoundingBox());\n  }\n\n  async getCenter(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    return c.getCenter();\n  }\n\n  getRadius(circle: NgMapsCircleDirective): Promise {\n    return this._circles.get(circle).then((c) => c.getRadius());\n  }\n\n  async setCenter(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    c.setCenter({ lat: circle.latitude, lng: circle.longitude });\n  }\n\n  async setEditable(circle: NgMapsCircleDirective): Promise {}\n\n  async setDraggable(circle: NgMapsCircleDirective): Promise {}\n\n  async setVisible(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    c.setVisibility(circle.visible);\n  }\n\n  setRadius(circle: NgMapsCircleDirective): Promise {\n    return this._circles.get(circle).then((c) => c.setRadius(circle.radius));\n  }\n\n  createEventObservable(\n    eventName: string,\n    circle: NgMapsCircleDirective,\n  ): Observable {\n    // return new Observable((observer: Observer) => {\n    //   let listener: google.maps.MapsEventListener = null;\n    //   this._circles.get(circle).then((c) => {\n    //     listener = c.addEventListener(eventName, (e: T) =>\n    //       this._zone.run(() => observer.next(e)),\n    //     );\n    //   });\n    //\n    //   return () => {\n    //     if (listener !== null) {\n    //       listener.remove();\n    //     }\n    //   };\n    // });\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HereComponent.html":{"url":"components/HereComponent.html","title":"component - HereComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HereComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/here.component.ts\n\n\n\n    \n        Extends\n    \n    \n            NgMapsViewComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: MapsApiWrapper, useClass: HereMapsWrapperService }\n                                { provide: FitBoundsService, useClass: HereMapsFitBoundsService }\n                                { provide: MarkerManager, useClass: HereMapsMarkerManager }\n                                { provide: CircleManager, useClass: HereCircleManager }\n                                { provide: PolygonManager, useClass: HerePolygonManager }\n                                { provide: PolylineManager, useClass: HerePolylineManager }\n                                { provide: RectangleManager, useClass: HereRectangleManager }\n                                { provide: InfoWindowManager, useClass: HereMapsInfoWindowManager }\n                \n            \n\n\n            \n                selector\n                map-view\n            \n\n\n            \n                styles\n                \n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    \n            \n\n            \n                template\n                \n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _handleBoundsChange\n                            \n                            \n                                    Protected\n                                _handleIdleEvent\n                            \n                            \n                                    Protected\n                                    Async\n                                _handleMapCenterChange\n                            \n                            \n                                    Protected\n                                _handleMapMouseEvents\n                            \n                            \n                                    Protected\n                                _handleMapTypeIdChange\n                            \n                            \n                                    Protected\n                                _handleMapZoomChange\n                            \n                            \n                                    Protected\n                                _handleTilesLoadedEvent\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ui\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _fitBoundsService: FitBoundsService, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/here.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fitBoundsService\n                                                  \n                                                        \n                                                                    FitBoundsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        ui\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/here.component.ts:73\n                            \n                        \n                \n                    \n                        Event that returns the UI object if available\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here.component.ts:64\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _handleBoundsChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleBoundsChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _handleIdleEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleIdleEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            _handleMapCenterChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapCenterChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _handleMapMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapMouseEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _handleMapTypeIdChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapTypeIdChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _handleMapZoomChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapZoomChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _handleTilesLoadedEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleTilesLoadedEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  HostListener,\n  NgZone,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  CircleManager,\n  FitBoundsService,\n  InfoWindowManager,\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsViewComponent,\n  PolygonManager,\n  PolylineManager,\n  RectangleManager,\n} from '@ng-maps/core';\nimport { from } from 'rxjs';\nimport { distinctUntilChanged, mergeMap } from 'rxjs/operators';\nimport { HereMapsFitBoundsService } from './here-maps-fit-bounds.service';\nimport { HereMapsMarkerManager } from './here-maps-marker.manager';\nimport { HereMapsWrapperService } from './here-maps-wrapper.service';\nimport { HereCircleManager } from './managers/circle-manager';\nimport { HereMapsInfoWindowManager } from './managers/info-window.manager';\nimport { HerePolygonManager } from './managers/polygon-manager';\nimport { HerePolylineManager } from './managers/polyline-manager';\nimport { HereRectangleManager } from './managers/rectangle-manager';\n\n@Component({\n  selector: 'map-view',\n  providers: [\n    { provide: MapsApiWrapper, useClass: HereMapsWrapperService },\n    { provide: FitBoundsService, useClass: HereMapsFitBoundsService },\n    { provide: MarkerManager, useClass: HereMapsMarkerManager },\n    { provide: CircleManager, useClass: HereCircleManager },\n    { provide: PolygonManager, useClass: HerePolygonManager },\n    { provide: PolylineManager, useClass: HerePolylineManager },\n    { provide: RectangleManager, useClass: HereRectangleManager },\n    { provide: InfoWindowManager, useClass: HereMapsInfoWindowManager },\n  ],\n  styles: [\n    `\n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    `,\n  ],\n  template: `\n    \n    \n      \n    \n  `,\n})\nexport class HereComponent extends NgMapsViewComponent {\n  @HostListener('window:resize')\n  onResize() {\n    this._mapsWrapper.getNativeMap().then((map) => {\n      map.getViewPort().resize();\n    });\n  }\n\n  /**\n   * Event that returns the UI object if available\n   */\n  @Output() public readonly ui: EventEmitter = new EventEmitter();\n\n  constructor(\n    _mapsWrapper: MapsApiWrapper,\n    _fitBoundsService: FitBoundsService,\n    _zone: NgZone,\n  ) {\n    super(_mapsWrapper, _fitBoundsService, _zone);\n    (this._mapsWrapper as HereMapsWrapperService).ui$.subscribe(this.ui);\n  }\n\n  protected async _handleMapCenterChange(): Promise {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('mapviewchangeend')\n      .pipe(\n        mergeMap(() => from(this._mapsWrapper.getCenter())),\n        distinctUntilChanged(\n          (p1, p2) => p1.lat === p2.lat && p1.lng === p2.lng,\n        ),\n      )\n      .subscribe((center) => {\n        this.centerChange.emit(center);\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleMapZoomChange(): void {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('mapviewchangeend')\n      .pipe(\n        mergeMap(() => from(this._mapsWrapper.getZoom())),\n        distinctUntilChanged((z1, z2) => z1 === z2),\n      )\n      .subscribe((zoom) => {\n        this.zoomChange.emit(zoom);\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleIdleEvent() {}\n\n  protected _handleTilesLoadedEvent() {}\n\n  protected _handleMapTypeIdChange() {}\n\n  protected _handleBoundsChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('mapviewchangeend')\n      .pipe(\n        mergeMap(() => from(this._mapsWrapper.getBounds())),\n        distinctUntilChanged(\n          (b1, b2) =>\n            b1.east === b2.east &&\n            b1.north === b2.north &&\n            b1.west === b2.west &&\n            b1.south === b2.south,\n        ),\n      )\n      .subscribe((bounds) => {\n        this.boundsChange.emit(bounds);\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleMapMouseEvents() {}\n}\n\n    \n\n\n    \n            \n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'HereComponent', 'selector': 'map-view'}];\n    var DIRECTIVES = [{'name': 'MarkerClusterComponent', 'selector': 'map-marker-cluster'}];\n    var ACTUAL_COMPONENT = {'name': 'HereComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HereMapsFitBoundsService.html":{"url":"injectables/HereMapsFitBoundsService.html","title":"injectable - HereMapsFitBoundsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HereMapsFitBoundsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/here-maps-fit-bounds.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FitBoundsService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                generateBounds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_apiLoader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/lib/here-maps-fit-bounds.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _apiLoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            generateBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateBounds(includeInBounds: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-fit-bounds.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    includeInBounds\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     BoundsLiteral\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  BoundsLiteral,\n  FitBoundsService,\n  GeoPoint,\n  MapsAPILoader,\n} from '@ng-maps/core';\nimport { boundsFromRect } from './convert';\n\n@Injectable()\nexport class HereMapsFitBoundsService extends FitBoundsService {\n  constructor(_apiLoader: MapsAPILoader) {\n    super(_apiLoader);\n  }\n\n  protected generateBounds(\n    includeInBounds: Map,\n  ): BoundsLiteral {\n    const points = Array.from(includeInBounds.values());\n    const bounds = H.geo.Rect.coverPoints(points);\n    return boundsFromRect(bounds);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HereMapsInfoWindowManager.html":{"url":"injectables/HereMapsInfoWindowManager.html","title":"injectable - HereMapsInfoWindowManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HereMapsInfoWindowManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/info-window.manager.ts\n        \n\n\n            \n                Extends\n            \n            \n                    InfoWindowManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addInfoWindow\n                            \n                            \n                                close\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                    Async\n                                deleteInfoWindow\n                            \n                            \n                                    Async\n                                open\n                            \n                            \n                                setOptions\n                            \n                            \n                                setPosition\n                            \n                            \n                                setZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone, _markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/info-window.manager.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _markerManager\n                                                  \n                                                        \n                                                                    MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addInfoWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:91\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n                    Creates a Google Maps event listener for the given InfoWindow as an Observable\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteInfoWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            open\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    open(infoWindow: NgMapsInfoWindowComponent, evt: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    evt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(infoWindow: NgMapsInfoWindowComponent, options: google.maps.InfoWindowOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.InfoWindowOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setZIndex\n                        \n                        \n                    \n                \n            \n            \n                \nsetZIndex(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport {\n  InfoWindowManager,\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsInfoWindowComponent,\n} from '@ng-maps/core';\nimport { Observable, Observer } from 'rxjs';\nimport { HereMapsWrapperService } from '../here-maps-wrapper.service';\n\n@Injectable()\nexport class HereMapsInfoWindowManager extends InfoWindowManager {\n  constructor(\n    _mapsWrapper: MapsApiWrapper,\n    _zone: NgZone,\n    _markerManager: MarkerManager,\n  ) {\n    super(_mapsWrapper, _zone, _markerManager);\n  }\n\n  async deleteInfoWindow(infoWindow: NgMapsInfoWindowComponent): Promise {\n    const iWindow = await this._infoWindows.get(infoWindow);\n    if (iWindow == null) {\n      // info window already deleted\n      return;\n    } else {\n      return this._zone.run(async () => {\n        iWindow.close();\n        (await (this._mapsWrapper as HereMapsWrapperService).ui).removeBubble(\n          iWindow,\n        );\n        this._infoWindows.delete(infoWindow);\n      });\n    }\n  }\n\n  setPosition(infoWindow: NgMapsInfoWindowComponent): void {\n    const i = this._infoWindows.get(infoWindow);\n    i.setPosition({\n      lat: infoWindow.latitude,\n      lng: infoWindow.longitude,\n    });\n  }\n\n  /**\n   * @todo implement\n   * @param infoWindow\n   */\n  setZIndex(infoWindow: NgMapsInfoWindowComponent): void {}\n\n  async open(infoWindow: NgMapsInfoWindowComponent, evt: any): Promise {\n    const w = this._infoWindows.get(infoWindow);\n    const content = infoWindow.elementRef.nativeElement.cloneNode(true);\n    w.setContent(content);\n    w.open();\n  }\n\n  close(infoWindow: NgMapsInfoWindowComponent): void {\n    const w = this._infoWindows.get(infoWindow);\n    w.close();\n  }\n\n  setOptions(\n    infoWindow: NgMapsInfoWindowComponent,\n    options: google.maps.InfoWindowOptions,\n  ) {\n    const i = this._infoWindows.get(infoWindow);\n    // i.setOptions(options);\n  }\n\n  async addInfoWindow(infoWindow: NgMapsInfoWindowComponent) {\n    let point: H.geo.IPoint;\n    await this._mapsWrapper.getNativeMap();\n    if (infoWindow.hostMarker != null) {\n      point = {\n        lat: infoWindow.hostMarker.latitude,\n        lng: infoWindow.hostMarker.longitude,\n      };\n    } else {\n      point = { lat: infoWindow.latitude, lng: infoWindow.longitude };\n    }\n    const bubble = await this._mapsWrapper.createInfoWindow(point, null);\n    this._infoWindows.set(infoWindow, bubble);\n  }\n\n  /**\n   * Creates a Google Maps event listener for the given InfoWindow as an Observable\n   */\n  createEventObservable(\n    eventName: string,\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Observable {\n    const i = this._infoWindows.get(infoWindow);\n    return new Observable((observer: Observer) => {\n      i.addEventListener(eventName, (e: any) =>\n        this._zone.run(() => observer.next(e)),\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HereMapsLoaderService.html":{"url":"injectables/HereMapsLoaderService.html","title":"injectable - HereMapsLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HereMapsLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/here-maps-loader.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MapsAPILoader\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configResolver\n                            \n                            \n                                    Private\n                                    Readonly\n                                _modules\n                            \n                            \n                                    Protected\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                    Private\n                                createModuleUrl\n                            \n                            \n                                    Private\n                                distinct\n                            \n                            \n                                load\n                            \n                            \n                                    Private\n                                    Async\n                                loadModule\n                            \n                            \n                                    Private\n                                    Async\n                                loadModules\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: any, loader: ScriptLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/here-maps-loader.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                    ScriptLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(config: HereModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-loader.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                HereModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createModuleUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createModuleUrl(module: HereMapsLibraries, version: string, ext: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-loader.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                HereMapsLibraries\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '3.1'\n                                    \n\n                                \n                                \n                                    ext\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'js'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            distinct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    distinct(acc: Array, next: HereMapsLibraries)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-loader.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    acc\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HereMapsLibraries\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-loader.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            loadModule\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadModule(moduleName: HereMapsLibraries, version?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-loader.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleName\n                                    \n                                                HereMapsLibraries\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            loadModules\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadModules()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-loader.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/here-maps-loader.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map([\n    [HereMapsLibraries.CORE, ['js']],\n    [HereMapsLibraries.SERVICE, ['js']],\n    [HereMapsLibraries.MAPEVENTS, ['js']],\n    [HereMapsLibraries.UI, ['js', 'css']],\n    [HereMapsLibraries.CLUSTERING, ['js']],\n    [HereMapsLibraries.DATA, ['js']],\n    [HereMapsLibraries.PLACES, ['js']],\n    [HereMapsLibraries.PANO, ['js']],\n  ])\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/here-maps-loader.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/here-maps-loader.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport { MapsAPILoader, ScriptLoaderService } from '@ng-maps/core';\nimport {\n  HereMapsLibraries,\n  HereModuleOptions,\n  HERE_MAPS_MODULE_OPTIONS,\n} from './options';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HereMapsLoaderService extends MapsAPILoader {\n  private readonly _modules = new Map([\n    [HereMapsLibraries.CORE, ['js']],\n    [HereMapsLibraries.SERVICE, ['js']],\n    [HereMapsLibraries.MAPEVENTS, ['js']],\n    [HereMapsLibraries.UI, ['js', 'css']],\n    [HereMapsLibraries.CLUSTERING, ['js']],\n    [HereMapsLibraries.DATA, ['js']],\n    [HereMapsLibraries.PLACES, ['js']],\n    [HereMapsLibraries.PANO, ['js']],\n  ]);\n  protected _configResolver: (config: HereModuleOptions) => void;\n  protected config: Promise;\n\n  constructor(\n    // This may be a Promise but that doesn't work with ngc\n    @Optional()\n    @Inject(HERE_MAPS_MODULE_OPTIONS)\n    config: any,\n    private loader: ScriptLoaderService,\n  ) {\n    super();\n    this.config = new Promise(\n      (resolve, reject) => (this._configResolver = resolve),\n    );\n    if (config instanceof Promise) {\n      config.then((c) => {\n        this._configResolver(c);\n      });\n    } else if (typeof config === 'object') {\n      this._configResolver(config);\n    }\n  }\n\n  configure(config: HereModuleOptions): void {\n    this._configResolver(config);\n  }\n\n  load(): Promise {\n    if (typeof H !== 'undefined') {\n      return Promise.resolve();\n    } else {\n      return this.loadModules();\n    }\n  }\n\n  private async loadModules(): Promise {\n    const config = await this.config;\n    const libraries = config.libraries;\n    const version = config.version;\n    // Load the Core first, Service second and then the rest of the files\n    await this.loadModule(HereMapsLibraries.CORE, version);\n    await this.loadModule(HereMapsLibraries.SERVICE, version);\n    await Promise.all(\n      Array.isArray(libraries)\n        ? libraries.map((moduleName) => this.loadModule(moduleName, version))\n        : [],\n    );\n  }\n\n  private async loadModule(\n    moduleName: HereMapsLibraries,\n    version?: string,\n  ): Promise {\n    const mod = this._modules.get(moduleName);\n    if (mod === void 0) {\n      throw new Error(`Unknown module ${moduleName}`);\n    }\n    if (mod.includes('css')) {\n      const cssurl = this.createModuleUrl(moduleName, version, 'css');\n      await this.loader.loadCSS(cssurl);\n    }\n    const jsurl = this.createModuleUrl(moduleName, version);\n    await this.loader.loadScript(jsurl);\n  }\n\n  private distinct(acc: Array, next: HereMapsLibraries) {\n    if (acc.find((value) => value === next)) {\n      return acc;\n    }\n    return [...acc, next];\n  }\n\n  private createModuleUrl(\n    module: HereMapsLibraries,\n    version: string = '3.1',\n    ext = 'js',\n  ): string {\n    const protocol = 'https:'; // (document.location as any).protocol,\n    return `${protocol}//js.api.here.com/v3/${version}/mapsjs-${module}.${ext}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HereMapsMarkerManager.html":{"url":"injectables/HereMapsMarkerManager.html","title":"injectable - HereMapsMarkerManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HereMapsMarkerManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/here-maps-marker.manager.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MarkerManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEventObservable\n                            \n                            \n                                deleteMarker\n                            \n                            \n                                updateAnimation\n                            \n                            \n                                updateClickable\n                            \n                            \n                                updateDraggable\n                            \n                            \n                                updateIcon\n                            \n                            \n                                updateIconLegacy\n                            \n                            \n                                updateLabel\n                            \n                            \n                                updateMarkerPosition\n                            \n                            \n                                updateOpacity\n                            \n                            \n                                updateTitle\n                            \n                            \n                                updateVisible\n                            \n                            \n                                updateZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/here-maps-marker.manager.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string | Array, marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:18\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                            string | Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteMarker\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAnimation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAnimation(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateClickable\n                        \n                        \n                    \n                \n            \n            \n                \nupdateClickable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateDraggable\n                        \n                        \n                    \n                \n            \n            \n                \nupdateDraggable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateIcon\n                        \n                        \n                    \n                \n            \n            \n                \nupdateIcon(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateIconLegacy\n                        \n                        \n                    \n                \n            \n            \n                \nupdateIconLegacy(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLabel\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLabel(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateMarkerPosition\n                        \n                        \n                    \n                \n            \n            \n                \nupdateMarkerPosition(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOpacity\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOpacity(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTitle\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTitle(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateVisible\n                        \n                        \n                    \n                \n            \n            \n                \nupdateVisible(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateZIndex\n                        \n                        \n                    \n                \n            \n            \n                \nupdateZIndex(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-marker.manager.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport {\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsMarkerComponent,\n} from '@ng-maps/core';\nimport { EMPTY, Observable, Observer } from 'rxjs';\n\n@Injectable()\nexport class HereMapsMarkerManager extends MarkerManager {\n  updateIconLegacy(marker: NgMapsMarkerComponent): void {\n    throw new Error('Method not implemented.');\n  }\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  createEventObservable(\n    eventName: string | Array,\n    marker: NgMapsMarkerComponent,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      const m = this._markers.get(marker);\n      if (typeof eventName === 'string') {\n        eventName = [eventName];\n      }\n      eventName.forEach((event) => {\n        m.addEventListener(event, (e: Event) => {\n          // @todo fix typings\n          return this._zone.run(() => observer.next((e as any) as E));\n        });\n      });\n    });\n  }\n\n  deleteMarker(marker: NgMapsMarkerComponent): void {}\n\n  updateAnimation(marker: NgMapsMarkerComponent): void {}\n\n  updateClickable(marker: NgMapsMarkerComponent): void {}\n\n  updateDraggable(marker: NgMapsMarkerComponent): void {}\n\n  updateIcon(marker: NgMapsMarkerComponent): void {}\n\n  updateLabel(marker: NgMapsMarkerComponent): void {}\n\n  updateMarkerPosition(marker: NgMapsMarkerComponent): void {\n    const m: H.map.Marker = this._markers.get(marker);\n    const { latitude, longitude } = marker;\n    m.setGeometry({ lat: latitude, lng: longitude });\n  }\n\n  updateOpacity(marker: NgMapsMarkerComponent): void {}\n\n  updateTitle(marker: NgMapsMarkerComponent): void {}\n\n  updateVisible(marker: NgMapsMarkerComponent): void {\n    const m: H.map.Marker = this._markers.get(marker);\n    m.setVisibility(marker.visible);\n  }\n\n  updateZIndex(marker: NgMapsMarkerComponent): void {\n    const m: H.map.Marker = this._markers.get(marker);\n    m.setZIndex(marker.zIndex);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HereMapsPlatformProvider.html":{"url":"injectables/HereMapsPlatformProvider.html","title":"injectable - HereMapsPlatformProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HereMapsPlatformProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/here-maps-platform.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _platform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getPlatform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: HereModuleOptions | any, loader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/lib/here-maps-platform.provider.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        HereModuleOptions | any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getPlatform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlatform()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/here-maps-platform.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     H.service.Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/here-maps-platform.provider.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { MapsAPILoader } from '@ng-maps/core';\nimport { HereModuleOptions, HERE_MAPS_MODULE_OPTIONS } from './options';\n\n@Injectable()\nexport class HereMapsPlatformProvider {\n  private _platform: H.service.Platform;\n  constructor(\n    @Inject(HERE_MAPS_MODULE_OPTIONS)\n    private options: HereModuleOptions | any,\n    private loader: MapsAPILoader,\n  ) {}\n\n  public async getPlatform() {\n    await this.loader.load();\n    if (this._platform == null) {\n      // Create a Platform object (one per application):\n      this._platform = new H.service.Platform(\n        (await this.options).platformOptions,\n      );\n      // Get an object containing the default map layers:\n    }\n    return this._platform;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HereModuleOptions.html":{"url":"interfaces/HereModuleOptions.html","title":"interface - HereModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HereModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        libraries\n                                \n                                \n                                        platformOptions\n                                \n                                \n                                            Optional\n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        libraries\n                                    \n                                \n                                \n                                    \n                                        libraries:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformOptions\n                                    \n                                \n                                \n                                    \n                                        platformOptions:     H.service.Platform.Options\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     H.service.Platform.Options\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n// this might also be a promise Promise but ngc doesn't like that\nexport const HERE_MAPS_MODULE_OPTIONS = new InjectionToken(\n  'NgHereMaps ModuleOptions',\n);\n\nexport enum HereMapsLibraries {\n  CORE = 'core',\n  SERVICE = 'service',\n  MAPEVENTS = 'mapevents',\n  UI = 'ui',\n  CLUSTERING = 'clustering',\n  DATA = 'data',\n  PLACES = 'places',\n  PANO = 'pano',\n}\n\nexport interface HereModuleOptions {\n  libraries?: Array;\n  version?: string;\n  platformOptions: H.service.Platform.Options;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HerePolygonManager.html":{"url":"injectables/HerePolygonManager.html","title":"injectable - HerePolygonManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HerePolygonManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/polygon-manager.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PolygonManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPolygon\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                    Async\n                                deletePolygon\n                            \n                            \n                                    Async\n                                setPolygonOptions\n                            \n                            \n                                    Async\n                                updatePolygon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/polygon-manager.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addPolygon\n                        \n                        \n                    \n                \n            \n            \n                \naddPolygon(path: NgMapsPolygon)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon-manager.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, path: NgMapsPolygon)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon-manager.ts:55\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                            NgMapsPolygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePolygon\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolygon(polygon: NgMapsPolygon)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon-manager.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    polygon\n                                    \n                                            NgMapsPolygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setPolygonOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolygonOptions(path: NgMapsPolygon, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon-manager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updatePolygon\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolygon(polygon: NgMapsPolygon)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon-manager.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    polygon\n                                    \n                                            NgMapsPolygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { MapsApiWrapper, NgMapsPolygon, PolygonManager } from '@ng-maps/core';\nimport { EMPTY, Observable, Observer } from 'rxjs';\n\n@Injectable()\nexport class HerePolygonManager extends PolygonManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  addPolygon(path: NgMapsPolygon) {\n    const polygonPromise = this._mapsWrapper.createPolygon({\n      clickable: path.clickable,\n      draggable: path.draggable,\n      editable: path.editable,\n      fillColor: path.fillColor,\n      fillOpacity: path.fillOpacity,\n      geodesic: path.geodesic,\n      paths: path.paths,\n      strokeColor: path.strokeColor,\n      strokeOpacity: path.strokeOpacity,\n      strokeWeight: path.strokeWeight,\n      visible: path.visible,\n      zIndex: path.zIndex,\n    });\n    this._polygons.set(path, polygonPromise);\n  }\n\n  async updatePolygon(polygon: NgMapsPolygon): Promise {\n    const item = await this._polygons.get(polygon);\n    const lineString = new H.geo.LineString();\n    polygon.paths.forEach((path) => {\n      lineString.pushPoint(path);\n    });\n    const newPolygon = new H.geo.Polygon(lineString);\n    item.setGeometry(newPolygon);\n  }\n\n  async setPolygonOptions(\n    path: NgMapsPolygon,\n    options: { [propName: string]: any },\n  ): Promise {}\n\n  async deletePolygon(polygon: NgMapsPolygon): Promise {\n    const p = await this._polygons.get(polygon);\n    if (p == null) {\n      return Promise.resolve();\n    }\n    this._zone.run(() => {\n      p.dispose();\n      this._polygons.delete(polygon);\n    });\n  }\n\n  createEventObservable(\n    eventName: string,\n    path: NgMapsPolygon,\n  ): Observable {\n    // return new Observable((observer: Observer) => {\n    //   this._polygons.get(path).then((l: google.maps.Polygon) => {\n    //     l.addListener(eventName, (e: T) =>\n    //       this._zone.run(() => observer.next(e)),\n    //     );\n    //   });\n    // });\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HerePolylineManager.html":{"url":"injectables/HerePolylineManager.html","title":"injectable - HerePolylineManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HerePolylineManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/polyline-manager.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PolylineManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _convertPoints\n                            \n                            \n                                addPolyline\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                    Async\n                                deletePolyline\n                            \n                            \n                                    Async\n                                setPolylineOptions\n                            \n                            \n                                    Async\n                                updatePolylinePoints\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/polyline-manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _convertPoints\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _convertPoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline-manager.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addPolyline\n                        \n                        \n                    \n                \n            \n            \n                \naddPolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline-manager.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline-manager.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePolyline\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline-manager.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setPolylineOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolylineOptions(line: NgMapsPolyline, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline-manager.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updatePolylinePoints\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolylinePoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline-manager.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport {\n  GeoPoint,\n  MapsApiWrapper,\n  NgMapsPolyline,\n  NgMapsPolylinePoint,\n  PolylineManager,\n} from '@ng-maps/core';\nimport { EMPTY, Observable, Observer } from 'rxjs';\n\n@Injectable()\nexport class HerePolylineManager extends PolylineManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  protected _convertPoints(line: NgMapsPolyline): Array {\n    return line._getPoints().map((point: NgMapsPolylinePoint) => ({\n      lat: point.latitude,\n      lng: point.longitude,\n    }));\n  }\n\n  addPolyline(line: NgMapsPolyline) {\n    const path = this._convertPoints(line);\n    const polylinePromise = this._mapsWrapper.createPolyline({\n      clickable: line.clickable,\n      draggable: line.draggable,\n      editable: line.editable,\n      geodesic: line.geodesic,\n      strokeColor: line.strokeColor,\n      strokeOpacity: line.strokeOpacity,\n      strokeWeight: line.strokeWeight,\n      visible: line.visible,\n      zIndex: line.zIndex,\n      icons: line.icons,\n      path,\n    });\n    this._polylines.set(line, polylinePromise);\n  }\n\n  async updatePolylinePoints(line: NgMapsPolyline): Promise {\n    const path = this._convertPoints(line);\n    const lineString = new H.geo.LineString();\n    path.forEach((item) => {\n      lineString.pushPoint(item);\n    });\n    const m = await this._polylines.get(line);\n    if (m != null) {\n      m.setGeometry(lineString);\n    }\n  }\n\n  async setPolylineOptions(\n    line: NgMapsPolyline,\n    options: { [propName: string]: any },\n  ): Promise {\n    const pl = await this._polylines.get(line);\n    // pl.setOptions(options)\n  }\n\n  async deletePolyline(line: NgMapsPolyline): Promise {\n    const m = await this._polylines.get(line);\n    if (m != null) {\n      m.dispose();\n      this._polylines.delete(line);\n    }\n  }\n\n  createEventObservable(\n    eventName: string,\n    line: NgMapsPolyline,\n  ): Observable {\n    // return new Observable((observer: Observer) => {\n    //   this._polylines.get(line).then((l: H.map.Polyline) => {\n    //     l.addEventListener(eventName, () => {\n    //       this._zone.run(() => observer.next());\n    //     });\n    //   });\n    // });\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HereRectangleManager.html":{"url":"injectables/HereRectangleManager.html","title":"injectable - HereRectangleManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HereRectangleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/rectangle-manager.ts\n        \n\n\n            \n                Extends\n            \n            \n                    RectangleManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRectangle\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                    Async\n                                getBounds\n                            \n                            \n                                    Async\n                                removeRectangle\n                            \n                            \n                                    Async\n                                setBounds\n                            \n                            \n                                    Async\n                                setDraggable\n                            \n                            \n                                    Async\n                                setEditable\n                            \n                            \n                                    Async\n                                setOptions\n                            \n                            \n                                    Async\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/rectangle-manager.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addRectangle\n                        \n                        \n                    \n                \n            \n            \n                \naddRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:88\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeRectangle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:48\n                \n            \n\n\n            \n                \n                    Removes the given rectangle from the map.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setDraggable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setEditable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setVisible\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle-manager.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport {\n  BoundsLiteral,\n  MapsApiWrapper,\n  NgMapsRectangleDirective,\n  RectangleManager,\n} from '@ng-maps/core';\n\nimport { EMPTY, Observable, Observer } from 'rxjs';\nimport { boundsFromRect, rectFromBounds } from '../convert';\n\n@Injectable()\nexport class HereRectangleManager extends RectangleManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  addRectangle(rectangle: NgMapsRectangleDirective) {\n    this._rectangles.set(\n      rectangle,\n      this._apiWrapper.createRectangle(\n        {\n          north: rectangle.north,\n          east: rectangle.east,\n          south: rectangle.south,\n          west: rectangle.west,\n        },\n        {\n          // clickable: rectangle.clickable,\n          // draggable: rectangle.draggable,\n          // editable: rectangle.editable,\n          fillColor: rectangle.fillColor,\n          fillOpacity: rectangle.fillOpacity,\n          strokeColor: rectangle.strokeColor,\n          strokeOpacity: rectangle.strokeOpacity,\n          // strokePosition: rectangle.strokePosition,\n          strokeWeight: rectangle.strokeWeight,\n          visible: rectangle.visible,\n          zIndex: rectangle.zIndex,\n        },\n      ),\n    );\n  }\n\n  /**\n   * Removes the given rectangle from the map.\n   */\n  async removeRectangle(rectangle: NgMapsRectangleDirective): Promise {\n    const r = await this._rectangles.get(rectangle);\n    r.dispose();\n  }\n\n  async setOptions(\n    rectangle: NgMapsRectangleDirective,\n    // options: RectangleOptions,\n  ): Promise {\n    const r = await this._rectangles.get(rectangle);\n    // r.setO\n    // return this._rectangles.get(rectangle).then((r) => r.setOptions(options));\n  }\n\n  async getBounds(rectangle: NgMapsRectangleDirective): Promise {\n    const r = await this._rectangles.get(rectangle);\n    return boundsFromRect(r.getBoundingBox());\n  }\n\n  async setBounds(rectangle: NgMapsRectangleDirective): Promise {\n    const r = await this._rectangles.get(rectangle);\n    return r.setBoundingBox(\n      rectFromBounds({\n        north: rectangle.north,\n        east: rectangle.east,\n        south: rectangle.south,\n        west: rectangle.west,\n      }),\n    );\n  }\n\n  async setEditable(rectangle: NgMapsRectangleDirective): Promise {}\n\n  async setDraggable(rectangle: NgMapsRectangleDirective): Promise {}\n\n  async setVisible(rectangle: NgMapsRectangleDirective): Promise {\n    const r = await this._rectangles.get(rectangle);\n    r.setVisibility(rectangle.visible);\n  }\n\n  createEventObservable(\n    eventName: string,\n    rectangle: NgMapsRectangleDirective,\n  ): Observable {\n    // return new Observable(subscriber => {\n    //   const listener = (e: E) => this._zone.run(() => subscriber.next(e));\n    //   this._rectangles.get(rectangle).then((r) => {\n    //       r.addEventListener(eventName, listener);\n    //     }\n    //   );\n    // );\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MarkerClusterComponent.html":{"url":"directives/MarkerClusterComponent.html","title":"directive - MarkerClusterComponent","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MarkerClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cluster/marker-cluster.ts\n        \n\n            \n                Description\n            \n            \n                MarkerClusterComponent clusters map marker if they are near together\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            OnInit\n                            MarkerClustererOptions\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                ClusterManager\n                                { provide: MarkerManager, useExisting: ClusterManager }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        map-marker-cluster\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _observableSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addEventListeners\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                averageCenter\n                            \n                            \n                                calculator\n                            \n                            \n                                gridSize\n                            \n                            \n                                imageExtension\n                            \n                            \n                                imagePath\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minimumClusterSize\n                            \n                            \n                                styles\n                            \n                            \n                                zoomOnClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clusterClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_config: MarkerClusterConfig, _clusterManager: ClusterManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/cluster/marker-cluster.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _config\n                                                  \n                                                        \n                                                                        MarkerClusterConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _clusterManager\n                                                  \n                                                        \n                                                                        ClusterManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        averageCenter\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:34\n                            \n                        \n                \n                    \n                        Whether the center of each cluster should be the average of all markers in the cluster.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        calculator\n                    \n                \n                \n                    \n                        Type :         Calculator\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:39\n                            \n                        \n                \n                    \n                        A function that calculates the cluster style and text based on the markers in the cluster.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        gridSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:44\n                            \n                        \n                \n                    \n                        The grid size of a cluster in pixels\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        imageExtension\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imagePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:52\n                            \n                        \n                \n                    \n                        The maximum zoom level that a marker can be part of a cluster.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minimumClusterSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:57\n                            \n                        \n                \n                    \n                        The minimum number of markers to be in a cluster before the markers are hidden and a count is shown.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:63\n                            \n                        \n                \n                    \n                        An object that has style properties.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomOnClick\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:68\n                            \n                        \n                \n                    \n                        Whether the default behaviour of clicking on a cluster is to zoom into it.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        clusterClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:70\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _addEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/cluster/marker-cluster.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/cluster/marker-cluster.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/cluster/marker-cluster.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/cluster/marker-cluster.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _observableSubscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/cluster/marker-cluster.ts:74\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { InfoWindowManager, MarkerManager } from '@ng-maps/core';\nimport { Subscription } from 'rxjs';\nimport { MarkerClusterConfig, MARKER_CLUSTER_CONFIG } from './cluster-config';\nimport { ClusterManager } from './cluster-manager';\nimport { Calculator, MarkerClustererOptions } from './cluster-options';\n\n/**\n * MarkerClusterComponent clusters map marker if they are near together\n */\n@Directive({\n  selector: 'map-marker-cluster',\n  providers: [\n    ClusterManager,\n    { provide: MarkerManager, useExisting: ClusterManager },\n  ],\n})\nexport class MarkerClusterComponent\n  implements OnDestroy, OnChanges, OnInit, MarkerClustererOptions {\n  /**\n   * Whether the center of each cluster should be the average of all markers in the cluster.\n   */\n  @Input() averageCenter: boolean;\n\n  /**\n   * A function that calculates the cluster style and text based on the markers in the cluster.\n   */\n  @Input() calculator: Calculator;\n\n  /**\n   * The grid size of a cluster in pixels\n   */\n  @Input() gridSize: number;\n\n  @Input() imageExtension: string;\n  @Input() imagePath: string;\n\n  /**\n   * The maximum zoom level that a marker can be part of a cluster.\n   */\n  @Input() maxZoom: number;\n\n  /**\n   * The minimum number of markers to be in a cluster before the markers are hidden and a count is shown.\n   */\n  @Input() minimumClusterSize: number;\n\n  /**\n   * An object that has style properties.\n   * @todo specify type\n   */\n  @Input() styles: Array;\n\n  /**\n   * Whether the default behaviour of clicking on a cluster is to zoom into it.\n   */\n  @Input() zoomOnClick: boolean;\n\n  @Output() clusterClick: EventEmitter = new EventEmitter();\n\n  private _observableSubscriptions: Array = [];\n\n  constructor(\n    @Optional()\n    @Inject(MARKER_CLUSTER_CONFIG)\n    private _config: MarkerClusterConfig = null,\n    private _clusterManager: ClusterManager,\n  ) {}\n\n  /** @internal */\n  ngOnDestroy() {\n    this._clusterManager.clearMarkers();\n    this._observableSubscriptions.forEach((s) => s.unsubscribe());\n  }\n\n  /** @internal */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.averageCenter) {\n      this._clusterManager.setAverageCenter(this);\n    }\n    if (changes.gridSize) {\n      this._clusterManager.setGridSize(this);\n    }\n    if (changes.imageExtension) {\n      this._clusterManager.setImageExtension(this);\n    }\n    if (changes.imagePath) {\n      this._clusterManager.setImagePath(this);\n    }\n    if (changes.maxZoom) {\n      this._clusterManager.setMaxZoom(this);\n    }\n    if (changes.minimumClusterSize) {\n      this._clusterManager.setMinimumClusterSize(this);\n    }\n    if (changes.styles) {\n      this._clusterManager.setStyles(this);\n    }\n    if (changes.zoomOnClick) {\n      this._clusterManager.setZoomOnClick(this);\n    }\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      {\n        name: 'clusterclick',\n        handler: (ev: google.maps.MouseEvent) => this.clusterClick.emit(ev),\n      },\n    ];\n    handlers.forEach((obj) => {\n      const os = this._clusterManager\n        .createClusterEventObservable(obj.name, this)\n        // @fixme\n        // @ts-ignore\n        .subscribe(obj.handler);\n      this._observableSubscriptions.push(os);\n    });\n  }\n\n  /**\n   * @todo rework typings\n   * @internal\n   */\n  ngOnInit() {\n    this._addEventListeners();\n    this._clusterManager.init({\n      averageCenter: this.averageCenter,\n      calculator: this.calculator,\n      gridSize: this.gridSize,\n      imageExtension: this.imageExtension,\n      imagePath:\n        this.imagePath == null && this._config != null\n          ? this._config.imagePath\n          : this.imagePath,\n      maxZoom: this.maxZoom,\n      minimumClusterSize: this.minimumClusterSize,\n      styles: this.styles,\n      zoomOnClick: this.zoomOnClick,\n    } as any);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkerClusterConfig.html":{"url":"interfaces/MarkerClusterConfig.html","title":"interface - MarkerClusterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkerClusterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cluster/cluster-config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        imagePath\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imagePath\n                                    \n                                \n                                \n                                    \n                                        imagePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport const MARKER_CLUSTER_CONFIG = new InjectionToken(\n  'MARKER_CLUSTER_CONFIG',\n);\n\nexport interface MarkerClusterConfig {\n  imagePath: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkerClustererOptions.html":{"url":"interfaces/MarkerClustererOptions.html","title":"interface - MarkerClustererOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkerClustererOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cluster/cluster-options.ts\n        \n\n            \n                Description\n            \n            \n                Optional parameter passed to the MarkerClusterer constructor.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        averageCenter\n                                \n                                \n                                            Optional\n                                        batchSize\n                                \n                                \n                                            Optional\n                                        batchSizeIE\n                                \n                                \n                                            Optional\n                                        calculator\n                                \n                                \n                                            Optional\n                                        clusterClass\n                                \n                                \n                                            Optional\n                                        enableRetinaIcons\n                                \n                                \n                                            Optional\n                                        gridSize\n                                \n                                \n                                            Optional\n                                        ignoreHidden\n                                \n                                \n                                            Optional\n                                        imageExtension\n                                \n                                \n                                            Optional\n                                        imagePath\n                                \n                                \n                                            Optional\n                                        imageSizes\n                                \n                                \n                                            Optional\n                                        maxZoom\n                                \n                                \n                                            Optional\n                                        minimumClusterSize\n                                \n                                \n                                            Optional\n                                        styles\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        zoomOnClick\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        averageCenter\n                                    \n                                \n                                \n                                    \n                                        averageCenter:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [averageCenter=false] Whether the position of a cluster marker should be\nthe average position of all markers in the cluster. If set to false, the\ncluster marker is positioned at the location of the first marker added to the cluster.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchSize\n                                    \n                                \n                                \n                                    \n                                        batchSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [batchSize=MarkerClusterer.BATCH_SIZE] Set this property to the\nnumber of markers to be processed in a single batch when using a browser other than\nInternet Explorer (for Internet Explorer, use the batchSizeIE property instead).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchSizeIE\n                                    \n                                \n                                \n                                    \n                                        batchSizeIE:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [batchSizeIE=MarkerClusterer.BATCH_SIZE_IE] When Internet Explorer is\nbeing used, markers are processed in several batches with a small delay inserted between\neach batch in an attempt to avoid Javascript timeout errors. Set this property to the\nnumber of markers to be processed in a single batch; select as high a number as you can\nwithout causing a timeout error in the browser. This number might need to be as low as 100\nif 15,000 markers are being managed, for example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        calculator\n                                    \n                                \n                                \n                                    \n                                        calculator:         Calculator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Calculator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [calculator=MarkerClusterer.CALCULATOR] The function used to determine\nthe text to be displayed on a cluster marker and the index indicating which style to use\nfor the cluster marker. The input parameters for the function are (1) the array of markers\nrepresented by a cluster marker and (2) the number of cluster icon styles. It returns a\nClusterIconInfo object. The default calculator returns a\ntext property which is the number of markers in the cluster and an\nindex property which is one higher than the lowest integer such that\n10^i exceeds the number of markers in the cluster, or the size of the styles\narray, whichever is less. The styles array element used has an index of\nindex minus 1. For example, the default calculator returns a\ntext value of \"125\" and an index of 3\nfor a cluster icon representing 125 markers so the element used in the styles\narray is 2. A calculator may also return a title\nproperty that contains the text of the tooltip to be used for the cluster marker. If\ntitle is not defined, the tooltip is set to the value of the title\nproperty for the MarkerClusterer.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clusterClass\n                                    \n                                \n                                \n                                    \n                                        clusterClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [clusterClass=\"cluster\"] The name of the CSS class defining general styles\nfor the cluster markers. Use this class to define CSS styles that are not set up by the code\nthat processes the styles array.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableRetinaIcons\n                                    \n                                \n                                \n                                    \n                                        enableRetinaIcons:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [enableRetinaIcons=false] Whether to allow the use of cluster icons that\nhave sizes that are some multiple (typically double) of their actual display size. Icons such\nas these look better when viewed on high-resolution monitors such as Apple's Retina displays.\nNote: if this property is true, sprites cannot be used as cluster icons.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gridSize\n                                    \n                                \n                                \n                                    \n                                        gridSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [gridSize=60] The grid size of a cluster in pixels. The grid is a square. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreHidden\n                                    \n                                \n                                \n                                    \n                                        ignoreHidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [ignoreHidden=false] Whether to ignore hidden markers in clusters. You\nmay want to set this to true to ensure that hidden markers are not included\nin the marker count that appears on a cluster marker (this count is the value of the\ntext property of the result returned by the default calculator).\nIf set to true and you change the visibility of a marker being clustered, be\nsure to also call MarkerClusterer.repaint().\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageExtension\n                                    \n                                \n                                \n                                    \n                                        imageExtension:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [imageExtension=MarkerClusterer.IMAGE_EXTENSION]\nThe extension name for the cluster icon image files (e.g., \"png\" or\n\"jpg\").\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imagePath\n                                    \n                                \n                                \n                                    \n                                        imagePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [imagePath=MarkerClusterer.IMAGE_PATH]\nThe full URL of the root name of the group of image files to use for cluster icons.\nThe complete file name is of the form imagePathn.imageExtension\nwhere n is the image file number (1, 2, etc.).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageSizes\n                                    \n                                \n                                \n                                    \n                                        imageSizes:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [imageSizes=MarkerClusterer.IMAGE_SIZES]\nAn array of numbers containing the widths of the group of\nimagePathn.imageExtension image files.\n(The images are assumed to be square.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxZoom\n                                    \n                                \n                                \n                                    \n                                        maxZoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [maxZoom=null] The maximum zoom level at which clustering is enabled or\nnull if clustering is to be enabled at all zoom levels.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimumClusterSize\n                                    \n                                \n                                \n                                    \n                                        minimumClusterSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [minimumClusterSize=2] The minimum number of markers needed in a cluster\nbefore the markers are hidden and a cluster marker appears.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                    \n                                \n                                \n                                    \n                                        styles:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [styles] An array of ClusterIconStyle elements defining the styles\nof the cluster markers to be used. The element to be used to style a given cluster marker\nis determined by the function defined by the calculator property.\nThe default is an array of ClusterIconStyle elements whose properties are derived\nfrom the values for imagePath, imageExtension, and\nimageSizes.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [title=\"\"] The tooltip to display when the mouse moves over a cluster\nmarker. (Alternatively, you can use a custom calculator function to specify a\ndifferent tooltip for each cluster marker.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomOnClick\n                                    \n                                \n                                \n                                    \n                                        zoomOnClick:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    [zoomOnClick=true] Whether to zoom the map when a cluster marker is\nclicked. You may want to set this to false if you have installed a handler\nfor the click event and it deals with zooming on its own.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        interface ClusterIconInfo {\n  text: string;\n  index: number;\n  title: string;\n}\n\nexport type Calculator = (\n  markers: Array,\n  clusterIconStylesCount: number,\n) => ClusterIconInfo;\n/**\n * Optional parameter passed to the {@link MarkerClusterer} constructor.\n */\nexport interface MarkerClustererOptions {\n  /** [gridSize=60] The grid size of a cluster in pixels. The grid is a square. */\n  gridSize?: number;\n  /**\n   * [maxZoom=null] The maximum zoom level at which clustering is enabled or\n   * null if clustering is to be enabled at all zoom levels.\n   */\n  maxZoom?: number;\n  /**\n   * [zoomOnClick=true] Whether to zoom the map when a cluster marker is\n   * clicked. You may want to set this to false if you have installed a handler\n   * for the click event and it deals with zooming on its own.\n   */\n  zoomOnClick?: boolean;\n  /**\n   * [averageCenter=false] Whether the position of a cluster marker should be\n   * the average position of all markers in the cluster. If set to false, the\n   * cluster marker is positioned at the location of the first marker added to the cluster.\n   */\n  averageCenter?: boolean;\n  /**\n   * [minimumClusterSize=2] The minimum number of markers needed in a cluster\n   * before the markers are hidden and a cluster marker appears.\n   */\n  minimumClusterSize?: number;\n  /**\n   * [ignoreHidden=false] Whether to ignore hidden markers in clusters. You\n   * may want to set this to true to ensure that hidden markers are not included\n   * in the marker count that appears on a cluster marker (this count is the value of the\n   * text property of the result returned by the default calculator).\n   * If set to true and you change the visibility of a marker being clustered, be\n   * sure to also call MarkerClusterer.repaint().\n   */\n  ignoreHidden?: boolean;\n  /**\n   * [title=\"\"] The tooltip to display when the mouse moves over a cluster\n   * marker. (Alternatively, you can use a custom calculator function to specify a\n   * different tooltip for each cluster marker.)\n   */\n  title?: string;\n  /**\n   * [calculator=MarkerClusterer.CALCULATOR] The function used to determine\n   * the text to be displayed on a cluster marker and the index indicating which style to use\n   * for the cluster marker. The input parameters for the function are (1) the array of markers\n   * represented by a cluster marker and (2) the number of cluster icon styles. It returns a\n   * {@link ClusterIconInfo} object. The default calculator returns a\n   * text property which is the number of markers in the cluster and an\n   * index property which is one higher than the lowest integer such that\n   * 10^i exceeds the number of markers in the cluster, or the size of the styles\n   * array, whichever is less. The styles array element used has an index of\n   * index minus 1. For example, the default calculator returns a\n   * text value of \"125\" and an index of 3\n   * for a cluster icon representing 125 markers so the element used in the styles\n   * array is 2. A calculator may also return a title\n   * property that contains the text of the tooltip to be used for the cluster marker. If\n   * title is not defined, the tooltip is set to the value of the title\n   * property for the MarkerClusterer.\n   */\n  calculator?: Calculator;\n  /**\n   * [clusterClass=\"cluster\"] The name of the CSS class defining general styles\n   * for the cluster markers. Use this class to define CSS styles that are not set up by the code\n   * that processes the styles array.\n   */\n  clusterClass?: string;\n  /**\n   * [styles] An array of {@link ClusterIconStyle} elements defining the styles\n   * of the cluster markers to be used. The element to be used to style a given cluster marker\n   * is determined by the function defined by the calculator property.\n   * The default is an array of {@link ClusterIconStyle} elements whose properties are derived\n   * from the values for imagePath, imageExtension, and\n   * imageSizes.\n   */\n  styles?: Array;\n  /**\n   * [enableRetinaIcons=false] Whether to allow the use of cluster icons that\n   * have sizes that are some multiple (typically double) of their actual display size. Icons such\n   * as these look better when viewed on high-resolution monitors such as Apple's Retina displays.\n   * Note: if this property is true, sprites cannot be used as cluster icons.\n   */\n  enableRetinaIcons?: boolean;\n  /**\n   * [batchSize=MarkerClusterer.BATCH_SIZE] Set this property to the\n   * number of markers to be processed in a single batch when using a browser other than\n   * Internet Explorer (for Internet Explorer, use the batchSizeIE property instead).\n   */\n  batchSize?: number;\n  /**\n   * [batchSizeIE=MarkerClusterer.BATCH_SIZE_IE] When Internet Explorer is\n   * being used, markers are processed in several batches with a small delay inserted between\n   * each batch in an attempt to avoid Javascript timeout errors. Set this property to the\n   * number of markers to be processed in a single batch; select as high a number as you can\n   * without causing a timeout error in the browser. This number might need to be as low as 100\n   * if 15,000 markers are being managed, for example.\n   */\n  batchSizeIE?: number;\n  /**\n   * [imagePath=MarkerClusterer.IMAGE_PATH]\n   * The full URL of the root name of the group of image files to use for cluster icons.\n   * The complete file name is of the form imagePathn.imageExtension\n   * where n is the image file number (1, 2, etc.).\n   */\n  imagePath?: string;\n  /**\n   * [imageExtension=MarkerClusterer.IMAGE_EXTENSION]\n   * The extension name for the cluster icon image files (e.g., \"png\" or\n   * \"jpg\").\n   */\n  imageExtension?: string;\n  /**\n   * [imageSizes=MarkerClusterer.IMAGE_SIZES]\n   * An array of numbers containing the widths of the group of\n   * imagePathn.imageExtension image files.\n   * (The images are assumed to be square.)\n   */\n  imageSizes?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgMapsHereModule.html":{"url":"modules/NgMapsHereModule.html","title":"module - NgMapsHereModule","body":"\n                   \n\n\n\n\n    Modules\n    NgMapsHereModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgMapsHereModule\n\n\n\ncluster_NgMapsHereModule_declarations\n\n\n\ncluster_NgMapsHereModule_exports\n\n\n\ncluster_NgMapsHereModule_providers\n\n\n\n\nHereComponent\n\nHereComponent\n\n\n\nNgMapsHereModule\n\nNgMapsHereModule\n\nNgMapsHereModule -->\n\nHereComponent->NgMapsHereModule\n\n\n\n\n\nMarkerClusterComponent\n\nMarkerClusterComponent\n\nNgMapsHereModule -->\n\nMarkerClusterComponent->NgMapsHereModule\n\n\n\n\n\nHereComponent \n\nHereComponent \n\nHereComponent  -->\n\nNgMapsHereModule->HereComponent \n\n\n\n\n\nMarkerClusterComponent \n\nMarkerClusterComponent \n\nMarkerClusterComponent  -->\n\nNgMapsHereModule->MarkerClusterComponent \n\n\n\n\n\nHereMapsPlatformProvider\n\nHereMapsPlatformProvider\n\nNgMapsHereModule -->\n\nHereMapsPlatformProvider->NgMapsHereModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/here.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HereComponent\n                        \n                        \n                            MarkerClusterComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HereMapsPlatformProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HereComponent\n                        \n                        \n                            MarkerClusterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MapsAPILoader, MAP_PROVIDER } from '@ng-maps/core';\nimport { MarkerClusterComponent } from './cluster/marker-cluster';\nimport { HereMapsLoaderService } from './here-maps-loader.service';\nimport { HereMapsPlatformProvider } from './here-maps-platform.provider';\nimport { HereComponent } from './here.component';\n\n@NgModule({\n  declarations: [HereComponent, MarkerClusterComponent],\n  exports: [HereComponent, MarkerClusterComponent],\n  providers: [\n    HereMapsPlatformProvider,\n    {\n      provide: MapsAPILoader,\n      useClass: HereMapsLoaderService,\n    },\n    {\n      provide: MAP_PROVIDER,\n      useValue: 'HereMaps',\n    },\n  ],\n})\nexport class NgMapsHereModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/cluster/cluster-config.ts\n            \n            interface\n            MarkerClusterConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/cluster/cluster-config.ts\n            \n            variable\n            MARKER_CLUSTER_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/cluster/cluster-manager.ts\n            \n            injectable\n            ClusterManager\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/lib/cluster/cluster-options.ts\n            \n            interface\n            ClusterIconInfo\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/lib/cluster/cluster-options.ts\n            \n            interface\n            MarkerClustererOptions\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/lib/cluster/marker-cluster.ts\n            \n            directive\n            MarkerClusterComponent\n            \n                47 %\n                (8/17)\n            \n        \n        \n            \n                \n                src/lib/convert.ts\n            \n            function\n            boundsFromRect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/convert.ts\n            \n            function\n            rectFromBounds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/here-maps-fit-bounds.service.ts\n            \n            injectable\n            HereMapsFitBoundsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/here-maps-loader.service.ts\n            \n            injectable\n            HereMapsLoaderService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/here-maps-marker.manager.ts\n            \n            injectable\n            HereMapsMarkerManager\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/lib/here-maps-marker.ts\n            \n            variable\n            svgMarkup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/here-maps-platform.provider.ts\n            \n            injectable\n            HereMapsPlatformProvider\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/here-maps-wrapper.service.ts\n            \n            injectable\n            HereMapsWrapperService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/lib/here.component.ts\n            \n            component\n            HereComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/lib/managers/circle-manager.ts\n            \n            injectable\n            HereCircleManager\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/lib/managers/info-window.manager.ts\n            \n            injectable\n            HereMapsInfoWindowManager\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/lib/managers/polygon-manager.ts\n            \n            injectable\n            HerePolygonManager\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/managers/polyline-manager.ts\n            \n            injectable\n            HerePolylineManager\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/managers/rectangle-manager.ts\n            \n            injectable\n            HereRectangleManager\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/lib/options.ts\n            \n            interface\n            HereModuleOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/options.ts\n            \n            variable\n            HERE_MAPS_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.0.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^8.0.0 || ^9.0.0 || ^10.0.0\n        \n            @angular/core : ^8.0.0 || ^9.0.0 || ^10.0.0\n        \n            @ng-maps/core : ^2.0.0-alpha.7\n        \n            @types/heremaps : ^3.1.1\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HereMapsLibraries   (src/.../options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/options.ts\n    \n        \n            \n                \n                    \n                        \n                        HereMapsLibraries\n                    \n                \n                        \n                            \n                                 CORE\n                            \n                        \n                        \n                            \n                                Value : core\n                            \n                        \n                        \n                            \n                                 SERVICE\n                            \n                        \n                        \n                            \n                                Value : service\n                            \n                        \n                        \n                            \n                                 MAPEVENTS\n                            \n                        \n                        \n                            \n                                Value : mapevents\n                            \n                        \n                        \n                            \n                                 UI\n                            \n                        \n                        \n                            \n                                Value : ui\n                            \n                        \n                        \n                            \n                                 CLUSTERING\n                            \n                        \n                        \n                            \n                                Value : clustering\n                            \n                        \n                        \n                            \n                                 DATA\n                            \n                        \n                        \n                            \n                                Value : data\n                            \n                        \n                        \n                            \n                                 PLACES\n                            \n                        \n                        \n                            \n                                Value : places\n                            \n                        \n                        \n                            \n                                 PANO\n                            \n                        \n                        \n                            \n                                Value : pano\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            boundsFromRect   (src/.../convert.ts)\n                        \n                        \n                            rectFromBounds   (src/.../convert.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/convert.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            boundsFromRect\n                        \n                        \n                    \n                \n            \n            \n                \nboundsFromRect(rect)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rect\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     BoundsLiteral\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rectFromBounds\n                        \n                        \n                    \n                \n            \n            \n                \nrectFromBounds(bounds)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bounds\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHere Maps Module\nProvider for Here Maps\nInstallation\nInstall with your favorite package manager\nnpm i -S @ng-maps/here\nor\nyarn add @ng-maps/here\nAdd to AppModule\nAdd the following line to your AppModule\nNgMapsHereModule.forRoot({})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgMapsHereModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgMapsHereModule\n\n\n\ncluster_NgMapsHereModule_declarations\n\n\n\ncluster_NgMapsHereModule_exports\n\n\n\ncluster_NgMapsHereModule_providers\n\n\n\n\nHereComponent\n\nHereComponent\n\n\n\nNgMapsHereModule\n\nNgMapsHereModule\n\nNgMapsHereModule -->\n\nHereComponent->NgMapsHereModule\n\n\n\n\n\nMarkerClusterComponent\n\nMarkerClusterComponent\n\nNgMapsHereModule -->\n\nMarkerClusterComponent->NgMapsHereModule\n\n\n\n\n\nHereComponent \n\nHereComponent \n\nHereComponent  -->\n\nNgMapsHereModule->HereComponent \n\n\n\n\n\nMarkerClusterComponent \n\nMarkerClusterComponent \n\nMarkerClusterComponent  -->\n\nNgMapsHereModule->MarkerClusterComponent \n\n\n\n\n\nHereMapsPlatformProvider\n\nHereMapsPlatformProvider\n\nNgMapsHereModule -->\n\nHereMapsPlatformProvider->NgMapsHereModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Calculator   (src/.../cluster-options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/cluster/cluster-options.ts\n    \n    \n        \n            \n                \n                    \n                    Calculator\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HERE_MAPS_MODULE_OPTIONS   (src/.../options.ts)\n                        \n                        \n                            MARKER_CLUSTER_CONFIG   (src/.../cluster-config.ts)\n                        \n                        \n                            svgMarkup   (src/.../here-maps-marker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HERE_MAPS_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\n  'NgHereMaps ModuleOptions',\n)\n                        \n                    \n\n\n            \n        \n\n    src/lib/cluster/cluster-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MARKER_CLUSTER_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\n  'MARKER_CLUSTER_CONFIG',\n)\n                        \n                    \n\n\n            \n        \n\n    src/lib/here-maps-marker.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            svgMarkup\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : '' +\n  'H'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
