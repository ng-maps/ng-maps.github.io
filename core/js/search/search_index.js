var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/BoundsLiteral.html",[0,0.667,1,1.314]],["body/interfaces/BoundsLiteral.html",[0,0.99,1,2.297,2,1.949,3,0.454,4,0.454,5,0.356,6,4.288,7,0.31,8,0.595,9,5.55,10,5.55,11,5.55,12,5.55,13,1.37,14,0.342,15,0.026,16,0.404,17,0.022,18,0.022]],["title/injectables/CircleManager.html",[19,0.576,20,2.285]],["body/injectables/CircleManager.html",[1,1.12,3,0.261,4,0.261,5,0.205,7,0.178,8,0.414,14,0.347,15,0.026,16,0.232,17,0.015,18,0.015,19,0.7,20,2.78,21,1.12,22,5.596,23,1.947,24,1.664,25,4.855,26,0.872,27,1.363,28,2.512,29,4.855,30,2.493,31,2.309,32,3.612,33,4.855,34,4.162,35,3.52,36,3.52,37,3.52,38,3.612,39,4.162,40,3.52,41,0.701,42,2.465,43,2.341,44,2.493,45,2.719,46,1.283,47,2.915,48,1.378,49,1.273,50,0.937,51,3.52,52,2.915,53,3.599,54,2.465,55,5.806,56,1.356,57,2.288,58,1.071,59,1.386,60,0.756,61,2.915,62,1.623,63,1.84,64,1.525,65,2.915,66,2.465,67,2.915,68,2.915,69,2.915,70,2.915,71,4.162,72,2.915,73,3.52,74,2.528,75,1.137,76,4.162,77,2.915,78,4.162,79,2.915,80,4.162,81,2.915,82,2.915,83,2.013,84,2.948,85,2.168,86,0.979,87,4.162,88,4.162,89,2.915,90,4.162,91,2.915,92,0.802,93,0.655,94,0.755,95,2.915,96,0.933,97,0.49,98,0.75,99,2.465,100,1.386,101,2.168,102,1.12,103,1.386,104,1.12,105,0.75,106,0.857,107,1.623,108,0.418,109,2.168,110,3.612,111,1.947,112,2.465,113,2.915,114,2.915,115,1.497]],["title/interfaces/CircleOptions.html",[0,0.667,84,1.904]],["body/interfaces/CircleOptions.html",[0,1.013,2,1.996,3,0.464,4,0.464,5,0.365,7,0.317,8,0.603,13,1.253,14,0.271,15,0.026,16,0.414,17,0.022,18,0.022,50,0.87,83,1.744,84,3.375,96,0.808,116,4.391,117,2.891,118,5.125,119,3.898,120,5.593,121,3.863]],["title/classes/FitBoundsAccessor.html",[108,0.491,122,1.756]],["body/classes/FitBoundsAccessor.html",[0,0.751,1,1.935,3,0.344,4,0.344,5,0.27,7,0.235,13,0.751,14,0.201,15,0.027,16,0.474,17,0.019,18,0.019,19,0.847,24,1.941,26,1.055,27,1.26,28,2.275,31,1.83,46,0.751,56,0.806,60,0.599,64,1.941,75,1.205,86,1.292,94,1.018,96,0.986,97,0.647,98,0.99,100,1.83,102,2.156,103,1.83,104,1.479,105,0.99,106,1.48,108,0.854,122,2.585,123,2.863,124,3.057,125,2.142,126,3.362,127,3.362,128,3.362,129,3.057,130,3.362,131,3.254,132,3.362,133,2.803,134,3.614,135,3.848,136,4.174,137,2.863,138,2.863,139,3.745,140,3.745,141,2.863,142,2.863,143,2.57,144,2.225,145,2.142,146,2.337,147,1.976,148,3.614,149,1.479,150,2.57,151,2.803,152,2.863,153,2.863,154,2.337,155,3.124,156,2.863,157,2.863,158,2.863,159,2.863,160,3.745,161,2.863,162,2.863,163,2.863,164,2.863,165,2.57,166,2.863,167,2.863,168,2.863,169,2.863,170,2.863,171,2.863,172,1.884,173,1.976,174,2.863,175,2.863,176,1.65,177,3.745,178,2.863,179,3.745,180,2.863,181,3.745,182,3.057,183,2.863,184,2.863,185,2.863,186,2.863,187,2.863]],["title/interfaces/FitBoundsDetails.html",[0,0.667,147,1.756]],["body/interfaces/FitBoundsDetails.html",[0,0.767,1,1.961,2,1.51,3,0.351,4,0.351,5,0.276,7,0.24,8,0.508,13,0.767,14,0.266,15,0.027,16,0.478,17,0.019,18,0.019,19,0.858,24,1.954,27,1.213,28,2.154,31,1.869,60,0.611,64,1.885,75,1.213,94,1.028,96,0.992,97,0.661,98,1.011,100,1.869,102,2.389,103,1.869,104,1.51,105,1.011,106,1.5,108,0.814,122,2.017,124,2.385,125,2.187,126,2.624,127,2.624,128,2.624,129,2.385,130,2.624,131,3.193,132,2.624,133,2.187,134,2.385,136,4.216,137,2.922,138,2.922,139,3.796,140,3.796,141,2.922,142,2.922,143,2.624,144,2.255,145,2.187,146,2.385,147,2.62,148,3.94,149,1.51,150,2.624,151,2.841,152,2.922,153,2.922,154,2.385,155,3.155,156,2.922,157,2.922,158,2.922,159,2.922,160,3.796,161,2.922,162,2.922,163,2.922,164,2.922,165,2.624,166,2.922,167,2.922,168,2.922,169,2.922,170,2.922,171,2.922,172,1.903,173,2.017,174,2.922,175,2.922,176,1.666,177,3.796,178,2.922,179,3.796,180,2.922,181,3.796,182,3.098,183,2.922,184,2.922,185,2.922,186,2.922,187,2.922]],["title/injectables/FitBoundsService.html",[19,0.576,151,1.904]],["body/injectables/FitBoundsService.html",[0,0.624,1,1.961,3,0.286,4,0.286,5,0.224,7,0.195,8,0.442,13,0.996,14,0.327,15,0.027,16,0.44,17,0.016,18,0.016,19,0.747,21,1.228,24,2.107,26,0.931,27,1.293,28,2.155,31,2.624,41,0.769,46,1.259,48,1.257,49,1.171,50,0.861,56,1.257,58,1.314,60,0.691,64,1.885,75,1.244,86,1.073,92,1.222,93,0.998,94,1.088,96,0.934,97,0.538,98,0.822,100,1.52,102,2.228,103,1.52,104,1.228,105,0.822,106,1.306,108,0.733,122,1.641,124,3.96,125,1.779,126,2.134,127,2.134,128,2.134,129,1.941,130,2.134,131,3.223,132,2.134,133,1.779,134,1.941,136,4.312,137,2.377,138,2.377,139,3.304,140,3.304,141,2.377,142,2.377,143,2.134,144,2.438,145,1.779,146,2.697,147,1.641,148,3.737,149,1.228,150,2.134,151,3.071,152,3.304,153,3.304,154,2.697,155,3.548,156,3.797,157,3.304,158,3.797,159,3.304,160,3.304,161,2.377,162,2.377,163,2.377,164,2.377,165,2.134,166,2.377,167,2.377,168,2.377,169,3.797,170,3.304,171,3.304,172,1.714,173,1.641,174,2.377,175,2.377,176,1.501,177,3.304,178,2.377,179,3.304,180,3.797,181,4.463,182,3.644,183,2.377,184,3.304,185,2.377,186,3.797,187,2.377,188,4.441,189,4.441,190,3.196,191,3.196,192,3.196,193,3.196,194,3.196,195,3.196,196,3.196,197,3.196,198,3.196,199,3.196,200,3.196,201,3.196,202,3.196,203,3.196]],["title/interfaces/GeoPoint.html",[0,0.667,102,1.314]],["body/interfaces/GeoPoint.html",[0,0.862,2,1.698,3,0.395,4,0.395,5,0.31,7,0.27,8,0.547,13,1.282,14,0.287,15,0.026,16,0.352,17,0.02,18,0.02,93,1.513,102,2.113,204,3.735,205,3.286,206,3.487,207,3.487,208,3.061,209,6.264,210,4.184,211,5.498,212,6.569,213,6.905,214,5.498,215,5.498,216,5.498,217,2.769,218,5.498,219,3.061,220,4.09,221,6.264,222,5.498,223,5.498,224,4.649,225,3.061,226,6.264,227,5.297,228,6.264,229,5.498,230,5.498,231,5.498,232,5.498,233,4.09,234,5.498]],["title/injectables/InfoWindowManager.html",[19,0.576,235,2.285]],["body/injectables/InfoWindowManager.html",[3,0.297,4,0.297,5,0.233,7,0.203,8,0.454,14,0.343,15,0.026,16,0.265,17,0.017,18,0.017,19,0.768,21,1.277,24,1.908,26,0.956,27,1.353,28,2.494,30,2.675,38,3.876,41,1.097,43,2.479,44,2.675,45,2.88,46,1.269,48,1.363,49,1.254,50,0.923,56,1.327,57,2.127,58,1.63,59,1.58,60,0.811,62,1.85,63,2.017,64,1.847,74,2.77,75,1.094,83,1.75,92,0.914,93,0.746,94,0.828,96,0.915,97,0.559,98,0.855,105,1.341,106,0.977,107,1.85,108,0.477,235,3.047,236,5.553,237,2.809,238,5.21,239,5.21,240,3.858,241,5.21,242,3.876,243,4.562,244,4.562,245,2.219,246,5.21,247,3.406,248,4.562,249,3.047,250,3.322,251,3.868,252,3.322,253,5.039,254,4.562,255,3.322,256,3.322,257,4.562,258,3.047,259,2.598,260,4.562,261,3.322,262,3.322,263,3.322,264,3.322,265,2.018,266,3.322,267,5.21,268,3.322,269,4.562,270,3.322,271,4.562,272,3.322,273,2.809,274,1.85,275,3.322]],["title/interfaces/MapOptions.html",[0,0.667,276,2.285]],["body/interfaces/MapOptions.html",[0,0.906,2,1.784,3,0.415,4,0.415,5,0.326,7,0.283,8,0.564,13,1.194,14,0.351,15,0.026,16,0.37,17,0.021,18,0.021,46,0.906,50,1.004,60,0.882,111,3.1,117,2.584,276,3.786,277,4.793,278,6.373,279,3.272,280,6.373,281,6.373,282,6.373,283,3.548,284,6.373,285,4.642,286,5.668,287,4.642,288,2.533,289,3.1]],["title/injectables/MapsAPILoader.html",[19,0.576,144,1.512]],["body/injectables/MapsAPILoader.html",[3,0.41,4,0.41,5,0.322,7,0.28,8,0.56,14,0.318,15,0.026,16,0.365,17,0.021,18,0.021,19,0.947,21,1.762,24,2.083,26,1.179,27,1.294,28,2.411,46,1.238,48,0.961,49,0.895,50,0.935,56,1.179,57,1.889,58,1.448,96,0.714,97,0.771,106,2.021,108,0.658,144,2.487,145,3.626,274,3.132,290,4.35,291,3.411,292,5.147,293,5.147,294,4.757,295,4.239,296,4.185,297,4.585,298,3.877,299,4.585,300,4.185,301,4.585,302,3.758,303,4.585]],["title/injectables/MapsApiWrapper.html",[19,0.576,43,1.512]],["body/injectables/MapsApiWrapper.html",[1,2.287,3,0.202,4,0.202,5,0.158,7,0.138,8,0.343,13,1.138,14,0.34,15,0.026,16,0.18,17,0.013,18,0.013,19,0.579,21,0.866,24,1.735,26,0.721,27,1.374,28,2.525,31,2.223,32,3.477,35,2.911,41,0.542,43,1.522,44,2.144,45,2.4,46,1.304,48,1.348,49,1.256,50,0.945,56,1.385,57,2.321,58,1.558,60,0.826,63,1.522,64,1.312,83,2.219,84,2.602,93,0.506,94,0.409,96,0.926,97,0.379,98,0.58,100,1.072,101,1.677,102,2.503,103,1.072,104,0.866,105,0.58,106,1.982,108,0.324,109,1.677,110,2.561,111,1.506,131,2.4,144,2.066,145,1.255,146,1.369,176,0.663,265,3.057,276,3.687,283,1.255,288,1.906,290,4.477,304,1.906,305,4.176,306,4.176,307,4.674,308,4.176,309,4.176,310,3.442,311,4.176,312,4.176,313,3.442,314,3.442,315,4.176,316,3.531,317,4.674,318,2.789,319,4.674,320,4.674,321,3.442,322,4.176,323,3.442,324,3.442,325,3.442,326,3.442,327,2.254,328,3.442,329,3.442,330,2.254,331,2.254,332,2.254,333,3.948,334,2.254,335,5.307,336,2.254,337,3.442,338,2.254,339,2.254,340,4.176,341,2.254,342,3.442,343,2.254,344,2.838,345,2.254,346,1.917,347,3.442,348,2.254,349,3.442,350,2.254,351,2.254,352,3.477,353,2.254,354,3.442,355,2.254,356,5.307,357,3.687,358,2.254,359,2.254,360,2.254,361,2.254,362,2.254,363,2.254,364,3.442,365,2.254,366,3.442,367,2.254,368,2.254,369,3.442,370,2.254,371,3.442,372,2.254,373,3.442,374,2.254,375,3.442,376,2.254,377,3.442,378,2.254,379,2.254,380,1.506,381,2.254,382,1.906,383,2.254,384,1.906,385,1.906,386,3.442,387,1.906,388,2.254,389,2.254,390,1.677]],["title/interfaces/MarkerIcon.html",[0,0.667,391,2.285]],["body/interfaces/MarkerIcon.html",[0,0.888,2,1.749,3,0.407,4,0.407,5,0.32,7,0.278,8,0.557,13,1.366,14,0.356,15,0.026,16,0.363,17,0.021,18,0.021,50,1.007,60,1.079,391,3.74,392,3.385,393,3.848,394,3.844,395,3.844,396,4.708,397,6.33,398,6.33,399,3.524,400,3.524,401,3.524,402,4.708,403,4.512]],["title/injectables/MarkerManager.html",[19,0.576,247,2.077]],["body/injectables/MarkerManager.html",[3,0.25,4,0.25,5,0.196,7,0.171,8,0.402,14,0.349,15,0.026,16,0.223,17,0.015,18,0.015,19,0.679,21,1.073,24,1.731,26,0.846,27,1.371,28,2.512,30,2.434,41,0.971,43,2.296,44,2.434,45,2.667,46,1.298,48,1.393,49,1.291,50,0.949,56,1.377,57,1.356,58,1.756,59,1.329,60,0.808,62,1.555,63,1.784,64,1.49,75,1.013,92,0.769,93,0.627,94,0.732,96,0.808,97,0.47,98,0.719,105,0.719,106,0.821,107,1.555,108,0.401,172,0.938,176,1.187,206,1.555,207,1.555,245,1.866,247,2.451,249,2.696,279,1.434,318,3.166,385,3.414,403,3.003,404,2.362,405,4.741,406,4.037,407,4.037,408,4.037,409,4.037,410,4.037,411,4.037,412,4.037,413,4.037,414,4.037,415,4.037,416,4.037,417,4.037,418,4.037,419,4.037,420,2.793,421,4.037,422,3.915,423,2.793,424,4.038,425,2.255,426,2.793,427,4.037,428,2.793,429,4.037,430,2.793,431,4.037,432,2.793,433,4.037,434,2.793,435,4.037,436,2.793,437,4.037,438,2.793,439,4.037,440,2.793,441,4.037,442,2.793,443,4.037,444,2.793,445,4.037,446,2.793,447,4.037,448,2.793,449,4.037,450,2.793,451,4.037,452,2.793,453,2.793,454,2.362,455,4.037,456,4.037,457,4.037,458,2.362,459,2.793,460,2.078,461,2.793,462,2.793,463,1.866,464,2.793,465,1.555,466,2.793,467,2.362,468,2.793,469,1.15,470,2.793,471,1.235,472,2.793,473,2.078,474,2.793,475,1.434,476,2.793,477,2.362,478,2.078,479,4.037,480,2.793,481,2.793,482,2.793]],["title/interfaces/MarkerOptions.html",[0,0.667,344,2.077]],["body/interfaces/MarkerOptions.html",[0,0.921,2,1.814,3,0.422,4,0.422,5,0.332,7,0.288,8,0.57,13,1.203,14,0.343,15,0.026,16,0.376,17,0.021,18,0.021,50,0.991,60,1.039,105,1.65,117,2.629,288,2.397,344,3.478,392,3.512,460,4.768,469,2.64,471,2.834,473,4.768,475,3.292,483,5.213,484,3.893,485,4.768]],["title/directives/NgMapsCircleDirective.html",[53,1.756,486,1.006]],["body/directives/NgMapsCircleDirective.html",[1,0.645,3,0.15,4,0.15,5,0.118,7,0.103,8,0.272,13,1.147,14,0.348,15,0.027,16,0.134,17,0.01,18,0.01,20,2.651,26,0.572,27,1.313,31,1.888,32,2.953,41,0.404,46,1.303,48,0.722,49,0.673,50,0.495,53,1.401,55,5.681,56,1.033,57,1.333,58,1.124,59,0.799,60,0.767,63,1.206,75,1.002,83,1.158,84,1.919,92,1.502,93,1.193,94,1.093,96,0.728,97,0.283,98,0.432,100,0.799,101,1.249,102,0.645,103,0.799,104,0.645,108,0.241,120,4.169,149,1.325,172,1.158,176,1.014,208,2.431,217,1.755,219,1.919,233,2.03,259,2.914,279,1.77,288,1.96,289,1.122,318,3.125,333,3.48,346,2.431,394,2.652,395,2.652,399,2.431,400,2.431,401,2.431,425,1.298,465,2.21,469,2.03,471,2.179,475,2.532,484,2.652,486,0.802,487,0.692,488,1.42,489,1.298,490,2.302,491,1.64,492,1.77,493,0.799,494,1.298,495,2.832,496,3.447,497,2.093,498,2.915,499,2.86,500,2.953,501,2.729,502,1.298,503,2.038,504,2.651,505,1.298,506,2.302,507,1.298,508,3.447,509,3.447,510,3.447,511,2.652,512,2.093,513,2.093,514,2.916,515,2.916,516,2.652,517,2.652,518,2.916,519,3.447,520,2.302,521,1.42,522,1.679,523,2.308,524,2.56,525,1.679,526,1.823,527,2.411,528,1.823,529,1.823,530,2.302,531,3.547,532,2.803,533,1.679,534,3.569,535,1.657,536,1.679,537,1.823,538,2.841,539,1.823,540,1.823,541,1.823,542,2.308,543,1.679,544,2.953,545,2.651,546,2.651,547,3.431,548,2.651,549,2.651,550,2.651,551,1.679,552,2.21,553,2.411,554,2.411,555,1.679,556,3.357,557,1.679,558,1.93,559,1.679,560,2.729,561,2.729,562,2.03,563,1.679,564,3.293,565,1.679,566,1.679,567,1.657,568,1.823,569,1.679,570,1.679,571,1.823,572,1.823,573,3.45,574,1.679,575,3.949,576,3.97,577,2.651,578,1.679,579,2.651,580,2.605,581,2.651,582,2.953,583,1.679,584,1.679,585,1.657,586,1.657,587,1.679,588,1.657,589,1.679,590,1.657,591,1.679,592,2.605,593,1.679,594,1.679,595,1.679,596,1.679,597,1.679,598,1.679,599,1.657,600,1.657,601,1.679,602,2.729,603,2.411,604,1.679,605,1.206,606,1.679,607,2.03,608,1.679,609,1.298,610,1.679,611,1.679,612,1.679,613,1.679,614,2.915,615,1.679,616,1.679,617,2.632,618,3.018,619,2.564,620,1.679,621,1.249,622,1.02,623,1.122,624,1.42,625,1.42,626,1.249,627,1.42,628,1.679,629,1.679,630,1.679,631,2.729,632,1.249,633,1.42,634,1.122,635,1.122,636,1.679,637,1.42,638,1.42,639,1.249,640,1.42,641,1.249,642,1.42,643,1.679,644,1.679,645,1.679,646,1.657,647,1.122,648,1.249,649,1.122,650,1.679,651,0.935,652,1.122,653,1.122,654,1.02,655,1.42,656,1.42,657,1.679,658,1.679,659,1.42,660,1.679,661,1.42,662,1.679,663,1.42,664,1.42,665,1.42,666,1.42,667,1.42,668,1.42,669,1.42,670,1.42,671,1.42,672,1.42,673,1.42,674,1.42,675,1.42,676,1.42,677,1.42,678,1.42,679,1.679,680,1.679,681,1.42,682,1.42,683,1.42,684,1.249,685,2.308,686,1.42,687,1.42,688,2.03,689,1.679,690,1.679,691,1.679,692,1.679,693,2.308,694,1.679,695,1.679,696,1.679,697,1.42,698,0.935,699,1.679,700,1.42,701,1.679]],["title/modules/NgMapsCoreModule.html",[702,2.285,703,2.285]],["body/modules/NgMapsCoreModule.html",[3,0.397,4,0.397,5,0.312,15,0.027,16,0.514,17,0.02,18,0.02,53,2.833,60,0.859,86,1.492,94,0.806,96,1.065,97,0.748,99,3.757,104,1.708,105,1.42,108,0.638,131,2.282,149,1.708,172,1.492,176,1.765,251,3.072,273,3.757,274,2.474,380,4.009,422,3.072,454,3.757,702,3.685,703,3.685,704,3.305,705,2.968,706,4.105,707,4.666,708,5.518,709,5.518,710,4.443,711,5.518,712,3.072,713,4.443,714,3.685,715,4.443,716,2.833,717,3.757,718,2.625,719,4.666,720,2.625,721,2.833,722,3.757,723,3.305,724,3.757,725,3.757,726,3.757,727,4.666,728,4.443,729,3.757,730,4.443,731,4.465,732,4.443,733,4.443]],["title/directives/NgMapsFitBoundsDirective.html",[486,1.006,712,1.904]],["body/directives/NgMapsFitBoundsDirective.html",[3,0.27,4,0.27,5,0.212,7,0.184,8,0.425,14,0.307,15,0.027,16,0.241,17,0.016,18,0.016,26,0.894,27,1.245,28,1.533,41,1.027,46,1.207,48,1.037,49,0.966,50,0.711,56,1.127,58,1.385,74,2.592,75,0.833,86,1.014,92,1.562,93,1.39,94,0.976,96,0.838,97,0.508,98,0.777,108,0.711,115,1.551,122,3.026,125,1.681,126,2.851,127,2.851,128,2.851,129,2.592,130,2.851,131,2.915,132,2.851,133,2.376,134,1.834,143,2.017,147,3.177,149,1.902,151,2.996,155,2.376,217,1.335,225,1.681,265,1.834,288,1.533,302,3.936,469,2.626,485,2.246,486,1.582,487,1.243,489,2.03,490,3.307,491,2.355,492,2.542,493,1.436,494,2.03,495,3.068,499,3.445,502,2.03,503,2.763,504,3.594,505,2.03,524,2.851,532,1.551,577,3.594,580,2.376,605,2.188,609,2.03,617,1.887,684,2.246,688,2.246,698,1.681,712,2.376,734,5.32,735,4.268,736,4.268,737,1.887,738,4.8,739,4.951,740,4.268,741,3.02,742,4.951,743,4.268,744,4.268,745,3.02,746,2.592,747,3.175,748,4.268,749,3.02,750,5.677,751,4.268,752,4.268,753,3.609,754,5.381,755,4.951,756,2.996,757,3.02,758,3.02,759,3.02,760,3.02,761,4.268,762,3.02,763,4.268,764,3.02,765,2.553,766,4.268,767,3.02,768,3.02,769,3.02,770,3.02,771,3.02,772,3.02,773,3.02,774,3.02,775,2.246,776,1.681,777,3.02,778,3.02,779,2.553,780,4.268,781,1.834,782,3.02,783,4.268,784,2.017,785,3.02,786,5.381,787,4.951,788,4.951,789,3.02,790,3.02,791,3.02,792,3.02,793,2.553,794,3.02,795,3.02,796,3.02]],["title/components/NgMapsInfoWindowComponent.html",[251,1.904,737,1.512]],["body/components/NgMapsInfoWindowComponent.html",[3,0.583,4,0.172,5,0.135,7,0.117,8,0.302,13,1.11,14,0.326,15,0.027,16,0.153,17,0.011,18,0.011,24,0.603,26,0.898,27,1.32,41,0.731,46,1.272,48,0.898,49,1.015,50,0.774,53,0.985,56,1.192,57,1.439,58,1.278,60,0.773,75,1.22,83,1.02,86,0.644,92,1.484,93,1.116,94,0.348,96,0.727,97,0.634,108,0.275,111,1.282,115,1.935,129,1.844,149,1.647,155,2.098,172,1.02,173,2.201,176,1.373,208,2.896,210,2.862,217,1.342,219,2.6,225,1.691,235,2.862,240,4.561,242,4.392,251,2.896,253,3.188,259,1.894,265,1.165,274,3.595,288,1.783,318,2.517,346,2.386,390,1.427,422,3.167,424,2.289,425,1.444,458,1.622,469,1.251,471,2.064,478,2.259,486,0.564,487,0.79,489,1.444,490,2.517,491,1.793,492,1.935,493,0.913,494,2.85,495,2.997,497,2.836,500,3.188,502,1.444,503,2.201,504,2.862,505,1.444,507,1.444,524,1.666,532,2.398,558,0.848,567,3.016,573,2.201,592,1.068,605,1.342,609,1.444,617,2.3,618,1.559,632,1.427,634,1.282,635,1.282,647,1.282,652,1.282,653,1.282,654,1.165,712,1.068,714,1.282,716,0.985,718,0.913,720,0.913,721,0.985,737,2.3,746,2.602,753,2.568,756,3.003,775,1.427,781,1.844,797,2.028,798,1.427,799,4.87,800,1.427,801,2.028,802,2.028,803,3.037,804,3.037,805,2.028,806,2.028,807,1.844,808,1.844,809,2.602,810,3.037,811,5.554,812,2.517,813,3.769,814,3.769,815,5.904,816,3.769,817,3.037,818,4.285,819,3.624,820,4.669,821,3.769,822,5.202,823,3.769,824,1.919,825,1.919,826,3.037,827,1.919,828,1.691,829,4.285,830,3.037,831,4.285,832,1.919,833,3.037,834,3.694,835,1.919,836,4.285,837,4.285,838,4.285,839,1.919,840,1.919,841,4.285,842,3.037,843,3.037,844,3.037,845,3.037,846,3.037,847,2.259,848,1.919,849,5.904,850,4.199,851,2.568,852,3.624,853,2.259,854,4.199,855,3.624,856,2.568,857,4.285,858,2.568,859,3.037,860,2.259,861,1.919,862,3.037,863,2.568,864,1.919,865,3.037,866,1.919,867,1.919,868,1.919,869,3.037,870,1.919,871,1.919,872,1.919,873,1.919,874,3.037,875,1.919,876,1.919,877,3.037,878,1.919,879,1.919,880,1.919,881,1.427,882,3.037,883,1.919,884,4.285,885,3.037,886,3.037,887,1.919,888,1.919,889,3.037,890,2.568,891,1.919,892,1.919,893,1.919,894,1.427,895,1.919,896,1.622,897,1.919,898,1.919,899,3.037,900,3.037,901,1.427,902,1.427,903,1.919,904,1.622,905,1.919,906,1.919,907,1.919,908,1.919,909,1.919,910,3.037,911,3.037,912,1.919,913,1.919,914,1.919,915,1.919,916,1.919,917,1.919,918,1.919,919,1.282,920,1.919,921,1.919,922,1.622,923,2.568,924,3.624,925,1.622,926,1.622,927,1.622,928,1.622,929,1.622,930,1.622,931,1.622,932,1.282,933,1.622,934,1.282,935,1.622]],["title/components/NgMapsMarkerComponent.html",[422,1.904,737,1.512]],["body/components/NgMapsMarkerComponent.html",[3,0.396,4,0.134,5,0.105,7,0.091,8,0.247,13,1.094,14,0.336,15,0.027,16,0.198,17,0.009,18,0.009,24,1.599,26,0.52,27,1.305,30,1.273,41,0.36,46,1.282,48,0.52,49,0.801,50,0.531,53,0.767,56,1.066,58,1.139,60,0.9,64,1.162,75,1.157,83,0.502,86,0.502,92,1.664,93,1.3,94,1.034,96,0.763,97,0.417,98,0.385,105,0.638,106,0.729,108,0.356,115,0.767,122,2.107,131,0.767,134,2.246,147,0.767,148,0.908,149,1.885,154,1.506,155,1.77,172,1.574,173,1.9,176,1.206,206,1.381,207,1.381,208,2.463,210,2.471,219,2.463,220,1.845,225,0.832,242,1.845,247,2.687,251,1.381,253,2.364,258,1.656,259,2.557,274,2.06,279,1.273,283,0.832,288,1.976,302,1.656,344,1.93,346,2.463,382,2.097,391,2.74,402,1.845,422,2.731,424,4.011,460,3.291,463,3.13,465,2.463,467,3.128,469,1.822,471,1.956,473,3.291,475,0.767,477,3.741,478,2.752,483,2.097,486,0.439,487,0.615,489,1.18,491,1.512,492,1.632,493,0.711,494,2.618,495,2.618,499,2.834,502,1.18,503,1.9,505,1.512,507,1.512,511,2.246,512,2.491,513,2.246,516,2.687,517,2.687,524,2.673,527,1.506,532,2.519,534,3.462,535,1.506,538,2.246,552,1.381,553,1.506,554,1.506,558,0.661,573,3.178,575,3.342,579,1.656,580,1.381,581,1.656,582,1.845,585,1.506,586,1.506,588,1.506,590,1.506,592,0.832,600,2.246,603,1.506,605,0.661,609,1.18,617,2.52,618,2.519,619,1.845,622,0.908,633,1.264,634,0.998,635,0.998,639,1.112,641,1.112,651,2.284,698,0.832,712,0.832,714,2.123,716,0.767,718,0.711,720,0.711,721,0.767,737,1.956,746,1.506,747,1.845,765,1.264,775,1.845,776,1.77,784,0.998,797,1.656,798,1.112,801,1.656,802,1.656,805,0.998,806,0.998,807,0.908,808,0.908,809,1.93,812,2.123,819,3.128,828,1.381,850,3.128,851,2.097,852,2.097,853,1.845,854,3.128,855,3.128,856,2.097,858,2.097,860,3.903,881,1.112,901,3.052,902,3.052,904,1.264,919,2.123,922,1.264,923,2.097,924,3.128,925,1.264,926,1.264,927,1.264,928,1.264,929,1.264,930,1.264,931,1.264,932,0.998,933,1.264,934,0.998,935,1.264,936,1.112,937,1.112,938,2.364,939,2.48,940,2.097,941,2.48,942,3.178,943,3.178,944,3.178,945,2.752,946,3.699,947,3.699,948,2.752,949,3.699,950,2.48,951,3.178,952,3.699,953,3.128,954,3.178,955,1.495,956,1.495,957,1.495,958,4.425,959,1.495,960,2.48,961,2.48,962,2.48,963,2.48,964,1.495,965,2.48,966,2.48,967,1.495,968,1.495,969,1.495,970,1.495,971,1.845,972,1.495,973,2.48,974,1.495,975,2.097,976,2.48,977,1.495,978,2.48,979,2.48,980,2.48,981,2.48,982,2.48,983,1.495,984,1.495,985,1.495,986,2.48,987,2.752,988,2.48,989,2.48,990,1.495,991,1.495,992,1.495,993,1.495,994,1.495,995,2.48,996,1.495,997,3.699,998,1.495,999,1.495,1000,1.495,1001,1.495,1002,1.495,1003,1.495,1004,1.495,1005,1.495,1006,1.495,1007,1.495,1008,3.178,1009,2.48,1010,1.495,1011,1.495,1012,1.495,1013,3.699,1014,3.699,1015,1.495,1016,2.48,1017,3.469,1018,2.48,1019,1.495,1020,1.495,1021,1.112,1022,1.112,1023,1.495,1024,1.495,1025,1.495,1026,0.998,1027,1.264,1028,1.495,1029,1.112,1030,1.506,1031,1.381,1032,1.381,1033,1.656,1034,1.656,1035,1.495,1036,1.495,1037,1.495,1038,2.48,1039,1.495,1040,1.495,1041,1.495,1042,1.495,1043,1.112,1044,1.495,1045,1.495,1046,1.495,1047,1.495,1048,2.48,1049,1.495,1050,2.48,1051,1.112,1052,1.495,1053,1.495,1054,1.495,1055,1.495,1056,1.495,1057,1.495,1058,1.495,1059,1.495,1060,1.495,1061,1.495,1062,1.495,1063,1.495,1064,1.495,1065,1.495,1066,1.495,1067,1.495,1068,1.495,1069,1.495,1070,1.495,1071,1.495,1072,1.495,1073,4.687,1074,1.495,1075,1.495,1076,1.495,1077,1.495,1078,1.495,1079,1.495,1080,1.495,1081,1.495,1082,1.495,1083,1.495,1084,1.495,1085,1.495,1086,1.495,1087,4.103,1088,4.103,1089,1.495,1090,1.495,1091,1.264,1092,1.495,1093,1.495,1094,1.495,1095,1.495,1096,1.495,1097,1.495,1098,1.495,1099,1.495,1100,1.495,1101,1.495,1102,1.495,1103,1.495,1104,1.495,1105,1.495,1106,1.112,1107,1.112]],["title/directives/NgMapsPolygonDirective.html",[486,1.006,716,1.756]],["body/directives/NgMapsPolygonDirective.html",[3,0.13,4,0.13,5,0.102,7,0.089,8,0.242,13,1.042,14,0.335,15,0.027,16,0.193,17,0.009,18,0.009,26,0.509,27,1.275,41,0.35,46,1.282,48,0.654,49,1.105,50,0.581,56,0.971,58,0.937,60,0.784,64,0.458,75,1.065,86,0.489,92,1.335,93,1.09,94,1.01,96,0.63,97,0.408,98,0.375,102,0.56,103,0.693,104,0.56,108,0.348,115,0.748,121,3.249,148,1.474,149,1.199,154,1.474,172,0.815,173,1.869,176,1.07,206,3.242,207,3.242,217,1.609,227,2.052,259,2.839,279,2.077,283,0.811,288,1.96,289,0.973,394,2.456,395,2.456,396,1.805,399,2.252,400,2.252,401,2.252,403,1.805,425,2.693,463,1.621,465,2.027,469,2.075,471,2.048,475,2.077,484,2.21,486,0.714,487,0.6,489,1.154,491,1.484,492,1.602,493,0.693,494,1.484,495,2.908,497,1.895,499,2.702,502,1.154,503,1.869,505,1.154,506,3.094,507,1.154,511,1.895,512,0.884,513,0.884,514,2.084,515,2.084,516,1.895,517,1.895,518,2.084,520,0.973,524,2.46,526,1.621,527,2.21,528,1.621,529,1.621,530,1.621,531,3.473,532,2.99,534,3.157,535,1.474,537,1.621,538,2.947,539,1.621,540,1.621,541,1.621,544,2.708,545,2.431,546,2.431,547,3.241,548,2.431,549,2.431,550,2.431,552,2.027,553,2.21,554,2.21,558,2.36,562,1.805,564,2.917,567,1.474,568,1.621,571,1.621,572,1.621,573,3.344,575,3.929,585,1.474,586,1.474,588,1.474,590,1.474,592,2.895,599,1.474,600,1.474,605,1.379,609,1.154,617,2.46,618,2.803,622,0.884,623,2.431,649,1.621,651,0.811,654,0.884,698,0.811,716,1.246,737,1.379,756,2.579,776,0.811,781,1.474,784,2.431,801,1.621,805,0.973,806,0.973,807,0.884,808,0.884,809,0.884,812,2.084,828,0.811,847,1.805,863,3.078,919,0.973,936,1.083,938,2.321,945,2.708,948,2.708,971,1.805,975,3.078,987,1.805,1021,1.083,1022,1.083,1026,3.565,1030,0.884,1031,0.811,1032,0.811,1033,0.973,1034,0.973,1043,3.249,1051,1.083,1106,1.083,1107,1.083,1108,1.231,1109,2.427,1110,4.922,1111,1.231,1112,3.12,1113,3.12,1114,3.078,1115,3.12,1116,4.514,1117,4.707,1118,2.427,1119,3.12,1120,3.12,1121,3.12,1122,3.12,1123,3.12,1124,3.12,1125,3.12,1126,3.12,1127,3.12,1128,3.12,1129,3.12,1130,1.456,1131,2.431,1132,1.456,1133,2.427,1134,1.456,1135,1.456,1136,2.052,1137,2.052,1138,2.052,1139,1.456,1140,1.456,1141,1.456,1142,3.078,1143,2.052,1144,1.805,1145,2.052,1146,3.078,1147,2.052,1148,2.052,1149,2.052,1150,2.052,1151,2.052,1152,2.052,1153,2.052,1154,2.052,1155,2.052,1156,1.456,1157,2.427,1158,2.427,1159,3.64,1160,2.427,1161,2.427,1162,2.427,1163,2.427,1164,2.427,1165,2.427,1166,3.64,1167,4.853,1168,2.427,1169,2.052,1170,3.64,1171,2.427,1172,3.078,1173,3.64,1174,1.805,1175,3.64,1176,2.427,1177,2.427,1178,2.427,1179,1.456,1180,2.052,1181,2.052,1182,1.456,1183,1.456,1184,1.456,1185,1.456,1186,1.456,1187,1.456,1188,2.638,1189,1.456,1190,2.638,1191,1.456,1192,1.456,1193,1.456,1194,1.456,1195,1.456,1196,1.456,1197,1.456,1198,1.456,1199,2.052,1200,1.456,1201,2.052,1202,1.456,1203,1.456,1204,1.456,1205,1.456,1206,2.427,1207,1.456,1208,1.456,1209,1.456,1210,1.456,1211,1.456,1212,1.456,1213,1.456,1214,1.456,1215,1.231,1216,3.693,1217,1.456,1218,1.456,1219,1.456,1220,1.456,1221,1.456,1222,3.12,1223,2.427,1224,1.456,1225,1.083,1226,1.231,1227,1.456,1228,3.12,1229,2.052,1230,1.456,1231,1.456,1232,1.456,1233,1.231,1234,4.514,1235,4.514,1236,4.104,1237,1.456,1238,1.456,1239,2.638,1240,1.456,1241,1.456,1242,1.456,1243,1.456,1244,1.456,1245,1.456,1246,1.456,1247,1.456,1248,1.456,1249,1.231,1250,1.231,1251,1.456,1252,1.231,1253,1.083,1254,1.083,1255,1.231,1256,1.231,1257,1.456,1258,1.456,1259,1.456,1260,1.456,1261,1.456,1262,1.456,1263,1.456,1264,1.231]],["title/directives/NgMapsPolyline.html",[486,1.006,718,1.627]],["body/directives/NgMapsPolyline.html",[3,0.149,4,0.149,5,0.117,7,0.102,8,0.269,13,0.909,14,0.339,15,0.027,16,0.216,17,0.01,18,0.01,26,0.567,27,1.307,41,0.4,46,1.292,48,0.567,49,1.127,50,0.566,56,1.029,58,1.016,60,0.764,64,0.522,75,0.999,83,0.909,86,0.558,92,1.408,93,1.15,94,1.048,96,0.676,97,0.455,98,0.428,104,0.639,108,0.389,115,0.854,121,3.464,133,0.926,149,1.669,172,1.564,173,2.026,176,1.16,217,1.744,225,0.926,259,2.892,279,1.758,288,2.039,289,1.111,399,2.418,400,2.418,401,2.418,425,2.215,465,1.507,469,2.022,471,2.17,475,1.758,484,1.644,486,0.796,487,0.685,489,1.288,491,1.629,492,1.758,493,0.791,494,1.629,495,2.915,497,2.079,499,2.946,502,1.288,503,2.026,505,1.288,506,2.901,507,1.288,511,2.079,512,1.01,513,1.01,514,2.287,515,2.287,516,2.079,517,2.079,518,2.287,520,1.111,524,2.626,526,1.808,527,2.396,528,1.808,529,1.808,530,1.808,531,3.634,532,3.086,534,3.304,535,1.644,537,1.808,538,3.108,539,1.808,540,2.901,541,1.808,545,1.808,546,1.808,547,2.636,548,1.808,549,1.808,550,1.808,552,1.507,553,1.644,554,1.644,558,0.735,562,2.014,564,3.11,567,1.644,568,1.808,571,1.808,572,1.808,573,3.399,575,3.998,585,1.644,586,1.644,588,1.644,590,1.644,592,3.029,599,1.644,600,1.644,605,0.735,609,1.288,617,2.461,618,2.916,621,1.237,622,1.01,623,1.808,646,1.01,647,1.111,648,1.237,649,1.111,651,0.926,652,1.111,653,1.111,654,1.01,698,0.926,718,1.877,720,1.288,737,1.513,756,2.197,776,0.926,781,1.644,801,1.808,805,1.111,807,1.01,808,1.01,809,1.01,812,2.287,828,0.926,881,1.237,919,1.808,932,4.422,936,1.237,938,2.547,945,2.935,948,2.935,971,2.014,987,2.014,1017,2.895,1021,1.237,1022,1.237,1027,1.406,1030,1.01,1031,0.926,1032,0.926,1033,1.111,1034,1.111,1051,1.237,1106,1.237,1107,1.237,1110,3.464,1111,1.406,1114,3.337,1116,4.708,1136,2.289,1137,2.289,1138,2.289,1142,3.337,1143,2.289,1144,2.014,1145,2.289,1146,3.337,1147,3.337,1148,2.289,1149,2.289,1150,2.289,1151,2.289,1152,2.289,1153,2.289,1154,2.289,1155,2.289,1180,2.289,1181,2.289,1188,2.895,1190,2.895,1199,2.289,1201,2.289,1215,1.406,1225,1.237,1226,1.406,1229,2.289,1233,1.406,1234,4.708,1235,4.708,1236,4.327,1239,2.895,1249,1.406,1250,1.406,1252,1.406,1253,1.237,1254,1.237,1255,1.406,1256,1.406,1264,1.406,1265,1.237,1266,3.424,1267,3.424,1268,3.946,1269,4.909,1270,2.707,1271,3.424,1272,3.424,1273,3.424,1274,3.424,1275,3.424,1276,3.424,1277,3.424,1278,3.424,1279,3.424,1280,3.424,1281,3.424,1282,1.663,1283,2.636,1284,1.663,1285,2.707,1286,1.663,1287,1.663,1288,1.663,1289,1.663,1290,2.707,1291,1.663,1292,1.663,1293,1.663,1294,1.663,1295,1.663,1296,1.663,1297,1.663,1298,1.663,1299,1.663,1300,1.663,1301,1.663,1302,1.663,1303,1.663,1304,1.663,1305,1.663,1306,1.663,1307,1.663,1308,1.663,1309,1.663,1310,1.663,1311,1.663,1312,1.663,1313,1.663,1314,1.663,1315,1.663,1316,1.663,1317,1.663,1318,2.707,1319,1.663,1320,1.663,1321,1.663,1322,1.663,1323,1.237,1324,1.663,1325,1.663,1326,2.707,1327,1.663,1328,1.663,1329,3.424,1330,1.663,1331,1.663,1332,1.663,1333,1.663,1334,3.424,1335,1.663,1336,1.663,1337,1.663,1338,1.663,1339,1.663,1340,1.663,1341,1.663,1342,1.663,1343,1.663,1344,1.663,1345,1.663,1346,1.663,1347,1.663,1348,1.663,1349,1.663,1350,1.663,1351,1.663]],["title/directives/NgMapsPolylinePoint.html",[486,1.006,720,1.627]],["body/directives/NgMapsPolylinePoint.html",[3,0.366,4,0.366,5,0.287,7,0.25,13,1.188,14,0.318,15,0.026,16,0.326,17,0.019,18,0.019,26,1.097,27,1.257,41,1.389,46,1.228,48,0.857,49,0.798,50,0.587,56,0.857,75,1.022,86,1.373,94,0.742,96,0.636,97,0.688,104,2.548,108,0.587,115,2.099,172,1.373,182,3.179,205,3.041,206,2.276,207,2.276,208,3.505,219,3.505,224,4.427,259,2.314,346,3.646,486,1.539,487,1.683,489,2.49,491,2.747,493,1.945,494,2.49,502,2.49,505,2.49,507,2.49,573,3.127,577,3.497,579,3.497,580,2.915,581,3.497,605,1.807,609,2.49,617,2.553,618,2.688,634,3.497,635,3.497,718,2.49,720,2.897,746,3.179,756,3.391,784,3.497,901,3.041,902,3.041,932,4.067,1352,5.446,1353,5.235,1354,5.776,1355,4.088,1356,4.088,1357,4.088,1358,4.088,1359,4.088,1360,4.088,1361,4.088,1362,4.088]],["title/directives/NgMapsRectangleDirective.html",[486,1.006,721,1.756]],["body/directives/NgMapsRectangleDirective.html",[1,0.654,3,0.152,4,0.152,5,0.12,7,0.104,8,0.275,9,3.718,10,3.718,11,3.718,12,3.718,13,1.179,14,0.347,15,0.027,16,0.136,17,0.01,18,0.01,26,0.578,27,1.31,31,1.903,41,0.409,46,1.305,48,0.729,49,0.679,50,0.499,56,0.986,57,0.926,58,1.132,59,0.81,60,0.733,63,1.22,75,1.008,83,1.168,92,1.508,93,1.199,94,1.084,96,0.684,97,0.286,98,0.438,100,0.81,108,0.244,149,1.337,172,1.168,176,0.811,217,1.769,220,2.052,233,2.052,259,2.9,279,0.874,288,1.968,333,3.841,346,3.052,352,2.588,384,1.439,394,2.67,395,2.67,399,2.448,400,2.448,401,2.448,425,1.312,465,2.228,469,2.042,471,2.191,475,2.258,484,2.859,486,0.811,487,0.701,489,1.312,490,2.324,491,1.655,492,1.786,493,0.81,494,1.312,495,2.841,497,2.113,498,2.942,499,2.875,500,2.976,502,1.312,503,2.055,504,2.672,505,1.312,506,2.324,507,1.312,511,2.67,512,2.113,513,2.113,514,2.937,515,2.937,516,2.67,517,2.67,518,2.937,520,2.324,521,1.439,523,2.333,524,2.57,526,1.843,527,2.43,528,1.843,529,1.843,530,2.324,531,3.662,532,2.815,534,3.581,535,1.675,537,1.843,538,2.859,539,1.843,540,1.843,541,1.843,542,2.333,544,2.976,545,2.672,546,2.672,547,3.449,548,2.672,549,2.672,550,2.672,552,2.228,553,2.43,554,2.43,556,4.366,558,1.538,564,3.449,567,1.675,568,1.843,571,1.843,572,1.843,573,3.433,575,3.925,577,1.843,579,2.672,580,2.621,581,2.672,582,2.976,585,1.675,586,1.675,588,1.675,590,1.675,592,2.621,599,1.675,600,1.675,603,1.675,605,1.22,607,2.052,609,1.312,614,3.718,617,2.67,618,2.985,619,2.052,621,1.266,622,1.034,623,1.843,624,2.333,625,2.333,626,2.052,627,2.333,632,1.266,637,1.439,638,1.439,639,1.266,640,1.439,641,1.266,642,1.439,646,1.675,647,1.137,648,1.266,649,1.137,651,0.948,652,1.137,653,1.137,654,1.034,655,1.439,656,1.439,659,1.439,661,1.439,663,1.439,664,1.439,665,1.439,666,1.439,667,1.439,668,1.439,669,1.439,670,1.439,671,1.439,672,1.439,673,1.439,674,1.439,675,1.439,676,1.439,677,1.439,678,1.439,681,1.439,682,1.439,683,1.439,684,1.266,685,2.333,686,1.439,687,1.439,688,1.266,693,1.439,697,1.439,698,0.948,700,1.439,721,1.417,756,2.228,776,0.948,802,1.843,828,0.948,934,4.524,1030,1.034,1031,0.948,1032,0.948,1033,1.137,1034,1.137,1363,1.439,1364,3.479,1365,2.759,1366,2.759,1367,3.479,1368,3.479,1369,3.479,1370,2.672,1371,1.702,1372,1.702,1373,1.702,1374,1.702,1375,1.702,1376,1.702,1377,1.702,1378,1.702,1379,1.702,1380,1.702,1381,1.702,1382,1.702,1383,1.702,1384,1.702,1385,1.702,1386,1.702,1387,1.702,1388,2.759,1389,1.702,1390,1.702,1391,1.702,1392,1.702,1393,1.702,1394,1.702,1395,1.702,1396,1.702,1397,1.702,1398,1.702,1399,1.702,1400,1.702,1401,2.759,1402,1.702,1403,1.702,1404,1.702,1405,1.702,1406,1.702,1407,1.702,1408,1.702,1409,1.702,1410,1.702,1411,1.702,1412,1.702,1413,2.759,1414,1.702,1415,1.702,1416,1.702,1417,1.702,1418,1.702,1419,1.702,1420,1.702,1421,1.702,1422,1.702,1423,1.702,1424,1.702,1425,1.702,1426,1.702,1427,1.702,1428,1.702,1429,1.702]],["title/classes/NoOpMapsAPILoader.html",[108,0.491,1430,2.545]],["body/classes/NoOpMapsAPILoader.html",[3,0.371,4,0.371,5,0.291,7,0.253,8,0.526,14,0.319,15,0.026,16,0.33,17,0.02,18,0.02,24,1.923,26,1.107,27,1.261,41,0.997,46,1.234,48,1.107,49,1.031,50,0.928,56,1.107,57,1.773,58,1.359,86,1.392,96,0.905,97,0.697,105,1.69,106,1.974,108,0.595,118,4.466,123,3.083,144,2.903,146,2.517,176,1.219,258,4.088,274,2.307,290,3.527,291,3.083,292,4.466,293,4.466,294,4.466,295,4.088,296,3.929,298,3.504,300,4.808,302,2.768,580,2.94,747,3.929,1169,4.466,1174,3.929,1430,4.553,1431,4.466,1432,5.176,1433,5.281,1434,5.281,1435,5.281,1436,5.281,1437,4.466,1438,4.466,1439,3.504,1440,4.144,1441,6.121,1442,4.144,1443,4.144,1444,4.144,1445,4.144,1446,3.083,1447,3.083,1448,3.504,1449,4.144,1450,4.144,1451,4.144,1452,4.144,1453,4.144]],["title/interfaces/Padding.html",[0,0.667,357,2.285]],["body/interfaces/Padding.html",[0,0.99,2,1.949,3,0.454,4,0.454,5,0.356,7,0.31,8,0.595,13,1.37,14,0.342,15,0.026,16,0.404,17,0.022,18,0.022,357,3.992,599,3.986,1454,4.288,1455,6.564,1456,6.564,1457,6.564]],["title/injectables/PolygonManager.html",[19,0.576,1131,2.285]],["body/injectables/PolygonManager.html",[3,0.342,4,0.342,5,0.269,7,0.234,8,0.499,14,0.348,15,0.026,16,0.305,17,0.019,18,0.019,19,0.843,21,1.469,24,1.937,26,1.05,27,1.339,28,2.474,30,2.872,41,1.206,43,2.624,44,2.872,45,3.049,46,1.258,48,1.351,49,1.234,50,0.908,56,1.292,57,2.196,58,1.29,59,1.819,60,0.924,62,2.129,63,2.216,64,1.758,75,1.159,83,1.878,92,1.052,93,0.859,94,0.909,96,0.924,97,0.643,98,0.984,105,0.984,106,1.124,107,2.129,108,0.549,245,2.554,249,3.348,396,4.795,603,3.044,646,2.322,716,3.537,717,3.233,1110,2.844,1117,3.233,1131,3.348,1458,3.233,1459,5.594,1460,5.594,1461,5.013,1462,5.594,1463,5.013,1464,3.824,1465,3.824,1466,3.824,1467,3.824,1468,5.013,1469,3.824,1470,3.824,1471,3.824,1472,5.013,1473,3.824,1474,3.824]],["title/injectables/PolylineManager.html",[19,0.576,1283,2.285]],["body/injectables/PolylineManager.html",[3,0.319,4,0.319,5,0.251,7,0.218,8,0.477,14,0.347,15,0.026,16,0.284,17,0.018,18,0.018,19,0.806,21,1.372,23,2.385,24,2.024,26,1.004,27,1.328,28,2.454,30,2.776,41,1.152,43,2.554,44,2.776,45,2.967,46,1.257,48,1.35,49,1.237,50,0.91,56,1.3,57,2.163,58,1.233,59,1.698,60,0.899,62,1.988,63,2.118,64,1.699,66,3.019,75,1.127,83,1.815,85,2.656,92,0.982,93,0.802,94,0.869,96,0.966,97,0.601,98,0.919,102,1.372,103,1.698,104,2.078,105,0.919,106,1.05,107,1.988,108,0.513,176,1.05,182,2.168,206,1.988,207,1.988,245,2.385,249,3.2,425,2.279,603,2.909,646,2.168,718,3.282,719,4.051,720,2.279,1031,3.633,1283,3.2,1475,5.517,1476,5.406,1477,4.79,1478,4.79,1479,4.79,1480,5.406,1481,4.79,1482,3.57,1483,4.79,1484,3.57,1485,4.79,1486,3.019,1487,3.57,1488,4.79,1489,3.57,1490,4.79,1491,3.57,1492,3.57,1493,3.57,1494,3.57,1495,3.57]],["title/injectables/RectangleManager.html",[19,0.576,1370,2.285]],["body/injectables/RectangleManager.html",[1,1.268,3,0.295,4,0.295,5,0.232,7,0.202,8,0.452,14,0.345,15,0.026,16,0.263,17,0.017,18,0.017,19,0.764,21,1.268,23,2.204,24,1.757,26,0.952,27,1.359,28,2.505,30,2.666,31,2.47,36,4.39,37,4.39,38,3.862,40,4.39,41,0.794,42,2.791,43,2.472,44,2.666,45,2.872,46,1.28,48,1.374,49,1.267,50,0.932,51,3.84,54,2.791,56,1.345,57,2.25,58,1.169,59,1.57,60,0.808,62,1.838,63,2.007,64,1.631,73,3.84,74,2.758,75,1.183,83,1.744,85,2.455,92,0.908,93,0.741,94,0.824,96,0.913,97,0.555,98,0.849,100,1.57,105,0.849,106,0.971,107,1.838,108,0.474,109,2.455,721,3.583,722,2.791,934,4.571,1370,3.033,1486,2.791,1496,5.592,1497,5.192,1498,4.542,1499,5.192,1500,4.542,1501,3.301,1502,4.542,1503,3.301,1504,3.301,1505,3.301,1506,3.301,1507,4.542,1508,3.301,1509,3.301,1510,3.301,1511,3.301,1512,3.301,1513,5.192,1514,3.301,1515,3.301,1516,3.301,1517,3.301]],["title/injectables/ScriptLoaderService.html",[19,0.576,1518,2.545]],["body/injectables/ScriptLoaderService.html",[3,0.264,4,0.264,5,0.395,7,0.18,8,0.418,14,0.327,15,0.027,16,0.235,17,0.016,18,0.016,19,0.707,21,1.134,26,0.88,27,1.221,41,0.71,46,1.221,48,1.226,49,1.141,50,0.84,56,1.261,57,2.212,60,1.038,64,1.838,74,3.234,75,1.039,86,1.41,92,0.812,93,1.098,94,0.887,96,0.654,97,0.497,108,0.424,110,3.637,112,3.551,172,2.021,176,1.77,217,1.857,259,1.305,265,1.792,295,3.907,300,4.722,380,2.805,387,2.496,402,3.962,495,3.154,524,1.857,746,2.969,776,1.643,779,2.496,828,2.338,834,2.196,1030,2.55,1031,2.338,1253,3.637,1254,3.637,1437,5.292,1438,4.759,1439,2.496,1446,2.196,1447,2.196,1448,2.496,1518,3.124,1519,5.367,1520,2.496,1521,4.889,1522,4.889,1523,4.2,1524,4.2,1525,4.2,1526,4.2,1527,4.889,1528,4.2,1529,4.2,1530,2.952,1531,5.326,1532,5.628,1533,4.2,1534,2.952,1535,5.326,1536,5.628,1537,4.2,1538,2.952,1539,6.151,1540,5.326,1541,4.946,1542,5.326,1543,5.326,1544,4.2,1545,5.849,1546,2.952,1547,2.952,1548,2.952,1549,2.952,1550,4.2,1551,2.952,1552,2.952,1553,2.952,1554,2.952,1555,2.952,1556,2.952,1557,2.952,1558,2.952,1559,4.2,1560,5.326,1561,2.952,1562,2.952,1563,2.952,1564,2.952,1565,2.952,1566,2.952,1567,2.952,1568,2.952,1569,2.952,1570,4.2,1571,2.952,1572,2.952,1573,2.952,1574,2.952,1575,2.952,1576,2.952,1577,2.952,1578,2.952,1579,2.952,1580,4.889,1581,2.952,1582,2.952,1583,2.952,1584,2.952,1585,2.952,1586,2.952,1587,2.952,1588,2.952,1589,2.952,1590,2.952,1591,2.952,1592,2.952,1593,2.952,1594,2.952,1595,2.952,1596,2.952,1597,2.952,1598,2.952]],["title/interfaces/ShapeOptions.html",[0,0.667,119,2.077]],["body/interfaces/ShapeOptions.html",[0,0.924,2,1.82,3,0.424,4,0.424,5,0.333,7,0.289,8,0.571,13,1.359,14,0.353,15,0.026,16,0.377,17,0.021,18,0.021,50,1.006,60,1.04,117,2.637,119,3.485,288,2.217,394,3.897,395,3.897,399,3.573,400,3.573,401,3.573,469,2.642,471,2.837,1599,4.005]],["title/changelog.html",[1600,2.422,1601,2.422,1602,2.422]],["body/changelog.html",[2,1.867,5,0.341,15,0.024,16,0.387,17,0.022,18,0.022,106,1.429,424,2.95,463,3.245,605,2.576,707,4.108,781,2.95,847,4.643,1026,3.245,1174,3.614,1602,4.108,1603,4.859,1604,4.859,1605,4.108,1606,6.242,1607,6.242,1608,4.859,1609,5.827,1610,5.827,1611,5.827,1612,5.827,1613,5.827,1614,4.859,1615,4.859,1616,4.927,1617,4.859,1618,5.827,1619,5.827,1620,4.859,1621,4.859,1622,4.859,1623,4.859,1624,6.472,1625,5.827,1626,5.827,1627,4.859,1628,4.859,1629,4.859,1630,5.827,1631,3.245,1632,4.859,1633,4.108,1634,4.859,1635,4.859,1636,4.859,1637,4.859,1638,4.859,1639,4.859,1640,4.859,1641,4.859,1642,4.859]],["title/coverage.html",[1643,3.935]],["body/coverage.html",[0,1.286,1,1.44,5,0.263,6,3.169,14,0.196,15,0.026,17,0.018,18,0.018,19,1.119,20,2.503,22,3.169,23,3.699,43,1.657,53,1.924,84,2.087,94,0.68,102,1.44,105,0.965,106,1.801,108,0.71,116,3.169,117,3.28,119,2.276,122,1.924,124,3.363,125,3.28,144,1.657,145,2.087,147,1.924,151,2.087,204,3.169,205,3.68,235,2.503,236,3.169,237,3.169,247,2.276,251,2.087,276,2.503,277,3.169,290,3.699,291,3.68,304,3.169,344,2.276,357,2.503,380,3.699,391,2.503,392,3.68,393,3.169,404,3.169,422,2.087,486,1.85,488,3.169,558,3.065,626,2.788,705,3.934,712,2.087,714,2.503,716,1.924,718,1.783,720,1.783,721,1.924,723,2.788,731,2.788,734,3.169,737,2.448,799,3.68,800,3.68,894,2.788,937,3.68,1029,2.788,1108,3.169,1131,2.503,1216,3.169,1265,3.68,1283,2.503,1323,2.788,1352,3.169,1363,3.169,1370,2.503,1430,2.788,1431,3.169,1454,3.169,1458,3.169,1475,3.169,1496,3.169,1518,2.788,1519,3.169,1520,3.169,1599,3.169,1643,3.169,1644,3.169,1645,3.748,1646,3.748,1647,6.415,1648,3.169,1649,3.169,1650,5.891,1651,3.748,1652,3.748,1653,4.948,1654,3.748,1655,3.748,1656,3.748,1657,3.748,1658,3.748,1659,3.748,1660,3.748,1661,3.748,1662,5.539,1663,3.748,1664,3.748,1665,3.748,1666,3.748,1667,3.748,1668,3.748,1669,5.539,1670,4.948,1671,3.748,1672,5.539,1673,3.748,1674,3.748,1675,3.748,1676,3.748,1677,4.184,1678,4.948,1679,3.169,1680,3.748,1681,3.748,1682,3.748,1683,3.748,1684,3.748,1685,3.748,1686,3.748,1687,3.748,1688,3.748,1689,3.748]],["title/dependencies.html",[1631,2.745,1690,2.422]],["body/dependencies.html",[15,0.026,17,0.022,18,0.022,97,0.869,98,1.33,1446,3.843,1631,4.036,1691,5.167,1692,5.167,1693,5.167,1694,6.405,1695,6.405,1696,6.405,1697,5.167,1698,5.167,1699,5.167,1700,5.167,1701,5.167,1702,5.167,1703,5.167,1704,5.167]],["title/miscellaneous/functions.html",[1705,1.594,1706,3.475]],["body/miscellaneous/functions.html",[7,0.319,14,0.318,15,0.025,17,0.023,18,0.023,48,1.275,49,1.188,50,0.874,60,1.032,705,3.493,726,4.422,727,5.146,729,4.422,731,4.789,1648,5.146,1649,5.146,1705,2.911,1706,4.422,1707,5.443]],["title/index.html",[7,0.175,1600,2.422,1601,2.422]],["body/index.html",[13,1.284,14,0.277,15,0.022,17,0.02,18,0.02,49,1.139,60,0.651,75,1.139,83,1.784,86,1.961,93,0.94,96,0.651,105,1.503,144,1.85,165,2.795,208,2.958,210,3.549,217,1.85,219,2.958,225,2.33,258,3.549,283,2.33,288,1.503,295,2.795,296,3.113,316,3.538,390,3.113,424,2.541,425,1.99,485,3.113,487,1.723,507,1.99,524,1.85,552,2.33,558,1.85,607,3.113,617,2.349,702,3.9,703,2.795,706,4.716,737,2.349,738,3.538,793,4.937,797,3.549,798,3.113,802,2.795,806,2.795,807,3.227,808,2.541,809,2.541,834,3.113,853,3.113,860,3.113,896,5.566,940,3.538,953,3.538,1032,2.33,1043,3.113,1091,4.493,1144,3.113,1172,4.493,1432,3.538,1447,3.113,1541,3.538,1616,3.538,1633,3.538,1644,3.538,1708,6.143,1709,4.185,1710,4.185,1711,4.185,1712,4.185,1713,4.185,1714,6.143,1715,5.839,1716,6.143,1717,4.185,1718,4.185,1719,5.314,1720,4.185,1721,5.314,1722,4.185,1723,4.185,1724,4.185,1725,4.185,1726,4.185,1727,4.185,1728,4.185,1729,4.185,1730,5.839,1731,4.185,1732,4.185,1733,4.185,1734,4.185,1735,4.185,1736,4.185,1737,5.314,1738,4.185,1739,4.185,1740,4.185,1741,4.185,1742,4.185,1743,4.185,1744,4.185,1745,4.185,1746,4.185,1747,4.493,1748,3.538,1749,3.538,1750,4.185,1751,4.185,1752,4.185,1753,4.185,1754,5.314,1755,4.185,1756,4.185,1757,4.185,1758,3.538,1759,4.185,1760,4.185]],["title/modules.html",[704,3.462]],["body/modules.html",[15,0.023,17,0.023,18,0.023,703,3.664,704,4.081,890,4.639,1761,5.486,1762,5.486]],["title/overview.html",[1763,3.935]],["body/overview.html",[2,2.056,15,0.023,17,0.023,18,0.023,21,2.056,123,3.98,283,3.433,487,2.203,651,2.979,702,3.573,797,3.573,1026,3.573,1631,4.119,1677,4.524,1679,4.524,1758,4.524,1763,4.524,1764,5.35,1765,5.35,1766,5.35]],["title/properties.html",[8,0.409,1690,2.422]],["body/properties.html",[8,0.522,15,0.026,17,0.023,18,0.023,75,1.024,105,1.351,133,2.922,706,3.904,1032,2.922,1225,3.904,1605,4.437,1767,5.248,1768,5.248,1769,5.248,1770,5.248,1771,5.248,1772,5.248,1773,5.248,1774,6.098,1775,6.098,1776,5.248,1777,5.248,1778,5.248,1779,5.248,1780,5.248]],["title/miscellaneous/typealiases.html",[1705,1.594,1781,4.11]],["body/miscellaneous/typealiases.html",[7,0.322,14,0.275,15,0.025,17,0.023,18,0.023,75,1.029,117,3.405,119,3.203,124,3.203,125,3.405,150,4.085,352,4.55,1705,2.937,1747,4.461,1748,4.461,1749,4.461,1782,5.275,1783,5.275,1784,6.117,1785,5.275,1786,5.275,1787,5.275,1788,5.275]],["title/miscellaneous/variables.html",[1705,1.594,1789,3.475]],["body/miscellaneous/variables.html",[7,0.311,13,1.242,14,0.332,15,0.026,17,0.022,18,0.022,92,1.808,93,1.476,94,0.923,558,2.813,705,3.398,723,4.455,724,4.303,725,4.303,799,3.785,800,4.455,894,4.455,937,3.785,1029,4.455,1265,3.785,1323,4.455,1705,2.833,1707,4.303,1789,4.303,1790,5.088,1791,5.088,1792,5.088]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":558,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":553,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["0.11.4",{"_index":1702,"title":{},"body":{"dependencies.html":{}}}],["0.12.0",{"_index":1703,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":1704,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1670,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1686,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1669,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1672,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["02",{"_index":1639,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":1607,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1636,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1638,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":651,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"overview.html":{}}}],["1.0",{"_index":554,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["1/11",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":1683,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1685,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1026,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"changelog.html":{},"overview.html":{}}}],["12",{"_index":1625,"title":{},"body":{"changelog.html":{}}}],["12/25",{"_index":1656,"title":{},"body":{"coverage.html":{}}}],["14.0.0",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["14b3c93",{"_index":1622,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1222,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["15.0.0",{"_index":1695,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["16.0.0",{"_index":1696,"title":{},"body":{"dependencies.html":{}}}],["170",{"_index":228,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["18",{"_index":1616,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["180",{"_index":221,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["190",{"_index":226,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["1d7c3d7",{"_index":1642,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":1766,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":1692,"title":{},"body":{"dependencies.html":{}}}],["2/10",{"_index":1687,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1671,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1216,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"coverage.html":{}}}],["200",{"_index":157,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["2022",{"_index":1624,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":1606,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1608,"title":{},"body":{"changelog.html":{}}}],["22/35",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["22/37",{"_index":1661,"title":{},"body":{"coverage.html":{}}}],["24/36",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["27/38",{"_index":1652,"title":{},"body":{"coverage.html":{}}}],["28/38",{"_index":1668,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1765,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":1637,"title":{},"body":{"changelog.html":{}}}],["3.0.2",{"_index":1635,"title":{},"body":{"changelog.html":{}}}],["3/9",{"_index":1654,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1626,"title":{},"body":{"changelog.html":{}}}],["300px",{"_index":808,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"index.html":{}}}],["33",{"_index":1653,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":1627,"title":{},"body":{"changelog.html":{}}}],["4.0.1",{"_index":1623,"title":{},"body":{"changelog.html":{}}}],["4.0.2",{"_index":1617,"title":{},"body":{"changelog.html":{}}}],["4.0.3",{"_index":1615,"title":{},"body":{"changelog.html":{}}}],["4/6",{"_index":1664,"title":{},"body":{"coverage.html":{}}}],["48",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["49/72",{"_index":1659,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1223,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["5.0.0",{"_index":1605,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["50",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["51.678418",{"_index":1024,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["59",{"_index":1660,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1679,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["62",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":1658,"title":{},"body":{"coverage.html":{}}}],["69d7cbc",{"_index":1614,"title":{},"body":{"changelog.html":{}}}],["7.0.0",{"_index":1700,"title":{},"body":{"dependencies.html":{}}}],["7.809007",{"_index":1025,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["71",{"_index":1651,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":1667,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":626,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"coverage.html":{}}}],["8c27283",{"_index":1620,"title":{},"body":{"changelog.html":{}}}],["8d70d41",{"_index":1634,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":1677,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["90",{"_index":213,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["_addeventlisteners",{"_index":945,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["_api",{"_index":305,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["_apiwrapper",{"_index":51,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["_boundschangesampletime",{"_index":156,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_circleaddedtomanager",{"_index":496,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["_circles",{"_index":25,"title":{},"body":{"injectables/CircleManager.html":{}}}],["_convertpoints",{"_index":1477,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["_convertpoints(line",{"_index":1483,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["_createidentifier",{"_index":186,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_createidentifier(latlng",{"_index":191,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["_document",{"_index":292,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["_fitboundsaccessor",{"_index":744,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["_fitboundsdetails",{"_index":943,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_fitboundsservice",{"_index":742,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["_getpoints",{"_index":1268,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["_id",{"_index":812,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["_includeinbounds",{"_index":158,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_infowindowaddedtomanager",{"_index":813,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindowmanager",{"_index":826,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindowoptionsinputs",{"_index":814,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindows",{"_index":238,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["_init",{"_index":1114,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["_latestfitboundsdetails",{"_index":739,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["_loader",{"_index":329,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["_manager",{"_index":523,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["_mapoptions",{"_index":498,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["_mapresolver",{"_index":306,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["_mapswrapper",{"_index":249,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["_markeraddedtomanger",{"_index":944,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_markermanager",{"_index":246,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["_markers",{"_index":405,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["_polygonaddedtomanager",{"_index":1112,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["_polygonmanager",{"_index":1133,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["_polygonoptionsattributes",{"_index":1113,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["_polygons",{"_index":1459,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["_polylineaddedtomanager",{"_index":1266,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["_polylinemanager",{"_index":1285,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["_polylineoptionsattributes",{"_index":1267,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["_polylines",{"_index":1476,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["_rectangleaddedtomanager",{"_index":1364,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["_rectangles",{"_index":1497,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["_registereventlisteners",{"_index":500,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["_setinfowindowoptions",{"_index":817,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_setinfowindowoptions(changes",{"_index":865,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_updatebounds",{"_index":740,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["_updatebounds(newfitboundsdetails",{"_index":748,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["_updatecircleoptionschanges",{"_index":501,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["_updatecircleoptionschanges(changes",{"_index":602,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["_updatefitboundsdetails",{"_index":946,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_updateopenstate",{"_index":818,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_updatepolygonoptions",{"_index":1115,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["_updatepolygonoptions(changes",{"_index":1204,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["_updaterectangleoptionschanges",{"_index":1365,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["_updaterectangleoptionschanges(changes",{"_index":1401,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["_window",{"_index":293,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["_zone",{"_index":44,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["abstract",{"_index":28,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBoundsDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["according",{"_index":856,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["activates",{"_index":1750,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":935,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["add",{"_index":896,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"index.html":{}}}],["addcircle",{"_index":29,"title":{},"body":{"injectables/CircleManager.html":{}}}],["addcircle(circle",{"_index":52,"title":{},"body":{"injectables/CircleManager.html":{}}}],["added",{"_index":747,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["addinfowindow",{"_index":239,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["addinfowindow(infowindow",{"_index":250,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["additional",{"_index":1753,"title":{},"body":{"index.html":{}}}],["additionally",{"_index":1721,"title":{},"body":{"index.html":{}}}],["addmarker",{"_index":406,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["addmarker(marker",{"_index":421,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["addpolygon",{"_index":1460,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["addpolygon(path",{"_index":1465,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["addpolyline",{"_index":1478,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["addpolyline(line",{"_index":1485,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["addrectangle",{"_index":1498,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["addrectangle(rectangle",{"_index":1502,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["adds",{"_index":735,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["addtobounds",{"_index":188,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["addtobounds(latlng",{"_index":171,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["addtomap",{"_index":335,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["adjust",{"_index":1632,"title":{},"body":{"changelog.html":{}}}],["aftercontentinit",{"_index":938,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["agm",{"_index":133,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"directives/NgMapsPolyline.html":{},"properties.html":{}}}],["aliases",{"_index":1782,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["along",{"_index":1290,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["alreadyloaded",{"_index":1521,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["alternative",{"_index":1724,"title":{},"body":{"index.html":{}}}],["always",{"_index":859,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["angular",{"_index":1032,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{},"properties.html":{}}}],["angular/common",{"_index":1446,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["angular/core",{"_index":97,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1697,"title":{},"body":{"dependencies.html":{}}}],["angular2",{"_index":1770,"title":{},"body":{"properties.html":{}}}],["animation",{"_index":477,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["any).readystate",{"_index":1561,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["anyway",{"_index":785,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["api",{"_index":106,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"changelog.html":{},"coverage.html":{}}}],["appear",{"_index":1152,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["appearing",{"_index":858,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["application",{"_index":1712,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1720,"title":{},"body":{"index.html":{}}}],["around",{"_index":233,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["array",{"_index":425,"title":{},"body":{"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolylineManager.html":{},"index.html":{}}}],["arrays",{"_index":1167,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["async",{"_index":318,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["attaches",{"_index":1740,"title":{},"body":{"index.html":{}}}],["auto",{"_index":129,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["automatically",{"_index":975,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["available",{"_index":890,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"modules.html":{}}}],["await",{"_index":458,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["before",{"_index":845,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["behaviorsubject",{"_index":136,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["between",{"_index":552,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{}}}],["bicyclinglayer",{"_index":1749,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["boolean",{"_index":288,"title":{},"body":{"interfaces/MapOptions.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{},"index.html":{}}}],["bottom",{"_index":1455,"title":{},"body":{"interfaces/Padding.html":{}}}],["bounce",{"_index":1013,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["bounds",{"_index":131,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{}}}],["bounds.delete(this._createidentifier(latlng",{"_index":183,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["bounds.set(id",{"_index":178,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["bounds.ts",{"_index":125,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["bounds.ts:105",{"_index":758,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:31",{"_index":135,"title":{},"body":{"classes/FitBoundsAccessor.html":{}}}],["bounds.ts:34",{"_index":745,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:36",{"_index":760,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:37",{"_index":743,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:39",{"_index":203,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:40",{"_index":201,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:43",{"_index":202,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:45",{"_index":190,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:47",{"_index":757,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:54",{"_index":759,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:58",{"_index":197,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:62",{"_index":193,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:72",{"_index":200,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:78",{"_index":749,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:80",{"_index":194,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:84",{"_index":198,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:88",{"_index":192,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds_changed",{"_index":1425,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["boundschange",{"_index":1367,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["boundsliteral",{"_index":1,"title":{"interfaces/BoundsLiteral.html":{}},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["boundsmap",{"_index":150,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"miscellaneous/typealiases.html":{}}}],["boundspadding",{"_index":356,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["box",{"_index":354,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["break",{"_index":693,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["breaking",{"_index":1609,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1762,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["browsers",{"_index":1563,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["bug",{"_index":1618,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1773,"title":{},"body":{"properties.html":{}}}],["build",{"_index":1640,"title":{},"body":{"changelog.html":{}}}],["cached",{"_index":794,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["call",{"_index":834,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["case",{"_index":688,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["casting",{"_index":114,"title":{},"body":{"injectables/CircleManager.html":{}}}],["center",{"_index":333,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["center_changed",{"_index":694,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["centerchange",{"_index":508,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["change",{"_index":781,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"changelog.html":{}}}],["changed",{"_index":577,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["changefitboundschangesampletime",{"_index":189,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["changefitboundschangesampletime(timems",{"_index":184,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["changelog",{"_index":1602,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":605,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"changelog.html":{}}}],["changes.animation",{"_index":1068,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.clickable",{"_index":1066,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.draggable",{"_index":639,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["changes.east",{"_index":1415,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["changes.editable",{"_index":637,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["changes.icon",{"_index":1060,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.iconurl",{"_index":1058,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.isopen",{"_index":906,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["changes.label",{"_index":1055,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.latitude",{"_index":634,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["changes.latitude.currentvalue",{"_index":1360,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["changes.longitude",{"_index":635,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["changes.longitude.currentvalue",{"_index":1361,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["changes.north",{"_index":1414,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["changes.opacity",{"_index":1062,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.radius",{"_index":643,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["changes.south",{"_index":1416,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["changes.title",{"_index":1053,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.visible",{"_index":641,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["changes.west",{"_index":1417,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["changes.zindex",{"_index":904,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["changes[k].currentvalue",{"_index":654,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["changing",{"_index":846,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["character",{"_index":966,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["check",{"_index":112,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["child",{"_index":976,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["circle",{"_index":55,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircleDirective.html":{}}}],["circle's",{"_index":576,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["circle'},{'name",{"_index":928,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["circleclick",{"_index":509,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["circledblclick",{"_index":510,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["circlemanager",{"_index":20,"title":{"injectables/CircleManager.html":{}},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircleDirective.html":{},"coverage.html":{}}}],["circleoptions",{"_index":84,"title":{"interfaces/CircleOptions.html":{}},"body":{"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"coverage.html":{}}}],["circumference",{"_index":542,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["clamped",{"_index":211,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["class",{"_index":108,"title":{"classes/FitBoundsAccessor.html":{},"classes/NoOpMapsAPILoader.html":{}},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["classes",{"_index":123,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"classes/NoOpMapsAPILoader.html":{},"overview.html":{}}}],["clearinstancelisteners",{"_index":307,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["click",{"_index":1188,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["clickable",{"_index":475,"title":{},"body":{"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["clicked",{"_index":600,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["clicks",{"_index":582,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["close",{"_index":240,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["close(infowindow",{"_index":254,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["closed",{"_index":863,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["closes",{"_index":869,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["cmp",{"_index":804,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["code",{"_index":1612,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":545,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["colors",{"_index":547,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["compared",{"_index":571,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["complete",{"_index":779,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["complex",{"_index":1176,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["component",{"_index":737,"title":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":925,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["components",{"_index":797,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{},"overview.html":{}}}],["computing",{"_index":153,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["config",{"_index":298,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["configuration",{"_index":1730,"title":{},"body":{"index.html":{}}}],["configure",{"_index":294,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["configure(config",{"_index":296,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"index.html":{}}}],["considered",{"_index":844,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["consist",{"_index":1164,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["const",{"_index":172,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["constructor(@inject(document",{"_index":1448,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{}}}],["constructor(_apiwrapper",{"_index":42,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["constructor(_fitboundsaccessor",{"_index":741,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["constructor(_infowindowmanager",{"_index":824,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["constructor(_loader",{"_index":327,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["constructor(_manager",{"_index":521,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["constructor(_mapswrapper",{"_index":245,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["constructor(_polygonmanager",{"_index":1130,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["constructor(_polylinemanager",{"_index":1282,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["constructor(document",{"_index":1439,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{}}}],["constructor(loader",{"_index":159,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["constructor(markermanager",{"_index":955,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["constructor(private",{"_index":622,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["constructor(protected",{"_index":109,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/RectangleManager.html":{}}}],["container",{"_index":1321,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["contains",{"_index":708,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["content",{"_index":811,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["content's",{"_index":843,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["contentchildren",{"_index":1027,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{}}}],["contentchildren(ngmapsinfowindowcomponent",{"_index":1018,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["contentchildren(ngmapspolylinepoint",{"_index":1318,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["control",{"_index":539,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["converted",{"_index":227,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["coordinates",{"_index":1159,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["core",{"_index":707,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"changelog.html":{}}}],["coredirectives",{"_index":731,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["correct",{"_index":897,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["coverage",{"_index":1643,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1218,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["createcircle",{"_index":308,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createcircle(center",{"_index":331,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createcsselement",{"_index":1523,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["createcsselement(href",{"_index":1529,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["createdrawingmanager",{"_index":309,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createdrawingmanager(param",{"_index":334,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createeventobservable",{"_index":30,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["createeventobservable('closeclick",{"_index":909,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["createeventobservable('drag",{"_index":1092,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('dragend",{"_index":1095,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('dragstart",{"_index":1086,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('rightclick",{"_index":1082,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable(['click",{"_index":1074,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable(eventname",{"_index":59,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["createeventobservable(obj.name",{"_index":1252,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["createinfowindow",{"_index":310,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createinfowindow(center",{"_index":337,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createmap",{"_index":311,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createmap(el",{"_index":339,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createmarker",{"_index":312,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createmarker(position",{"_index":343,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createpolygon",{"_index":313,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createpolygon(options",{"_index":347,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createpolyline",{"_index":314,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createpolyline(options",{"_index":349,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createrectangle",{"_index":315,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createrectangle(box",{"_index":351,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["creates",{"_index":257,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["createscriptelement",{"_index":1524,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["createscriptelement(src",{"_index":1533,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["cs",{"_index":1072,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["css",{"_index":1541,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["css3",{"_index":546,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["curvature",{"_index":1145,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["custom",{"_index":736,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["d",{"_index":1091,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["dblclick",{"_index":1190,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["declarations",{"_index":732,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["decorators",{"_index":881,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{}}}],["default",{"_index":92,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":531,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["defined",{"_index":46,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["defines",{"_index":1180,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["degrees",{"_index":209,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["deleteinfowindow",{"_index":241,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["deleteinfowindow(infowindow",{"_index":261,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["deletemarker",{"_index":407,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["deletemarker(marker",{"_index":427,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["deletepolygon",{"_index":1461,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["deletepolygon(paths",{"_index":1468,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["deletepolyline",{"_index":1479,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["deletepolyline(line",{"_index":1488,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["dependencies",{"_index":1631,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":1718,"title":{},"body":{"index.html":{}}}],["described",{"_index":1752,"title":{},"body":{"index.html":{}}}],["description",{"_index":86,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["designates",{"_index":1160,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["details",{"_index":777,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["dev",{"_index":1717,"title":{},"body":{"index.html":{}}}],["dimensions",{"_index":1153,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["directive",{"_index":486,"title":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"coverage.html":{}}}],["directives",{"_index":487,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{},"overview.html":{}}}],["directives/circle",{"_index":99,"title":{},"body":{"injectables/CircleManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/fit",{"_index":713,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["directives/info",{"_index":273,"title":{},"body":{"injectables/InfoWindowManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/map",{"_index":715,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["directives/marker",{"_index":454,"title":{},"body":{"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/polygon",{"_index":717,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"injectables/PolygonManager.html":{}}}],["directives/polyline",{"_index":719,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"injectables/PolylineManager.html":{}}}],["directives/rectangle",{"_index":722,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"injectables/RectangleManager.html":{}}}],["directives/services/pipes",{"_index":709,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["disable",{"_index":828,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["disableautopan",{"_index":820,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["disabledoubleclickzoom",{"_index":278,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["displayed",{"_index":850,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["displaying",{"_index":853,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["distinctuntilchanged",{"_index":763,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["document",{"_index":300,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{}}}],["document.createelement('link",{"_index":1581,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["document.createelement('script",{"_index":1574,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["documentation",{"_index":1644,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":592,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["don't",{"_index":789,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["drag",{"_index":511,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["dragend",{"_index":512,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["draggable",{"_index":279,"title":{},"body":{"interfaces/MapOptions.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["dragged",{"_index":971,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["dragging",{"_index":538,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["drags",{"_index":586,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["dragstart",{"_index":513,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["drop",{"_index":1014,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ds",{"_index":1085,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["duplicate",{"_index":981,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["dynamic",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":1539,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["e",{"_index":62,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["each",{"_index":1137,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["earlier",{"_index":627,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["earth",{"_index":1146,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["earth's",{"_index":561,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["east",{"_index":9,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["edges",{"_index":1142,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["edit",{"_index":537,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["editable",{"_index":506,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["el",{"_index":342,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["element",{"_index":746,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/ScriptLoaderService.html":{}}}],["element.addeventlistener('error",{"_index":1572,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["element.addeventlistener('load",{"_index":1571,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["element.addeventlistener('readystatechange",{"_index":1569,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["elementref",{"_index":815,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["emits",{"_index":862,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["emitted",{"_index":581,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["emitter",{"_index":579,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["error('expected",{"_index":1042,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["errorhandler",{"_index":1573,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["errorhandler(event",{"_index":1567,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["eslint",{"_index":1030,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["eslint/no",{"_index":1033,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ev",{"_index":1235,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["even",{"_index":1201,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["event",{"_index":259,"title":{},"body":{"injectables/InfoWindowManager.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["event.type",{"_index":1565,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["eventemitter",{"_index":573,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["eventemitter.emit",{"_index":696,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["eventemitter.emit(bounds",{"_index":1428,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["eventemitter.emit(radius",{"_index":692,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["eventemitter.emit(value",{"_index":697,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["eventname",{"_index":63,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["events",{"_index":530,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.foreach((eventemitter",{"_index":683,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('bounds_changed",{"_index":1421,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["events.set('center_changed",{"_index":657,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["events.set('click",{"_index":659,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('dblclick",{"_index":661,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('drag",{"_index":663,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('dragend",{"_index":665,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('dragstart",{"_index":667,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('mousedown",{"_index":669,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('mousemove",{"_index":671,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('mouseout",{"_index":673,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('mouseover",{"_index":675,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('mouseup",{"_index":677,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('radius_changed",{"_index":679,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["events.set('rightclick",{"_index":681,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["example",{"_index":225,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{},"index.html":{}}}],["except",{"_index":548,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["explorer",{"_index":625,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["export",{"_index":16,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"changelog.html":{}}}],["exports",{"_index":733,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["extended",{"_index":549,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["extends",{"_index":118,"title":{},"body":{"interfaces/CircleOptions.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["fact",{"_index":230,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["fall",{"_index":223,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["false",{"_index":532,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["feature",{"_index":132,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["features",{"_index":1754,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"changelog.html":{},"coverage.html":{}}}],["fill",{"_index":544,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["fillcolor",{"_index":394,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["fillopacity",{"_index":395,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["filter",{"_index":1258,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["find",{"_index":1757,"title":{},"body":{"index.html":{}}}],["fired",{"_index":575,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["first",{"_index":1169,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["fit",{"_index":130,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["fitbounds",{"_index":316,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"index.html":{}}}],["fitbounds(bounds",{"_index":355,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["fitboundsaccessor",{"_index":122,"title":{"classes/FitBoundsAccessor.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["fitboundsdetails",{"_index":147,"title":{"interfaces/FitBoundsDetails.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["fitboundsservice",{"_index":151,"title":{"injectables/FitBoundsService.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"coverage.html":{}}}],["fixes",{"_index":1619,"title":{},"body":{"changelog.html":{}}}],["fixme",{"_index":289,"title":{},"body":{"interfaces/MapOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["flag",{"_index":979,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["flatmap",{"_index":138,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["follow",{"_index":1144,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"index.html":{}}}],["foreground",{"_index":961,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["forwardref",{"_index":942,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["from(loader.load()).pipe",{"_index":161,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["front",{"_index":854,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["fully",{"_index":830,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["function",{"_index":380,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"modules/NgMapsCoreModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["functions",{"_index":1706,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":988,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["generatebounds",{"_index":169,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["generatebounds(includeinbounds",{"_index":196,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["generated",{"_index":1603,"title":{},"body":{"changelog.html":{}}}],["geodesic",{"_index":1116,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["geopoint",{"_index":102,"title":{"interfaces/GeoPoint.html":{}},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["getbounds",{"_index":31,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{}}}],["getbounds(circle",{"_index":65,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getbounds(rectangle",{"_index":1505,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["getbounds(this",{"_index":1426,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["getcenter",{"_index":32,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{}}}],["getcenter(circle",{"_index":67,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getfitboundsdetails",{"_index":134,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{}}}],["getmaptypeid",{"_index":317,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["getnativemap",{"_index":319,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["getnativemarker",{"_index":408,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["getnativemarker(marker",{"_index":429,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["getradius",{"_index":33,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getradius(circle",{"_index":69,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getradius(this",{"_index":690,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["gets",{"_index":580,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["getting",{"_index":1600,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["getzoom",{"_index":320,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["github",{"_index":1760,"title":{},"body":{"index.html":{}}}],["given",{"_index":74,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"directives/NgMapsFitBoundsDirective.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["globe",{"_index":234,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["google",{"_index":258,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"index.html":{}}}],["google.maps",{"_index":1629,"title":{},"body":{"changelog.html":{}}}],["google.maps.animation[marker.animation",{"_index":480,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["google.maps.icon",{"_index":958,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["google.maps.infowindowoptions",{"_index":267,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["google.maps.latlng",{"_index":181,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["google.maps.latlngliteral",{"_index":182,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["google.maps.mapmouseevent",{"_index":1088,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["google.maps.markerlabel",{"_index":483,"title":{},"body":{"interfaces/MarkerOptions.html":{},"components/NgMapsMarkerComponent.html":{}}}],["google.maps.polygonoptions",{"_index":1206,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["google.maps.polymouseevent",{"_index":1236,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["google.maps.rectangleoptions",{"_index":1513,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["google.maps.strokeposition",{"_index":628,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["google.maps.strokeposition.center",{"_index":629,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["googlemaps",{"_index":728,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["graph",{"_index":1761,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":218,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["handleinfowindowupdate",{"_index":947,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["handler",{"_index":1234,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["handlers",{"_index":1233,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["handlers.foreach((obj",{"_index":1249,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["handles",{"_index":528,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["head",{"_index":1522,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["height",{"_index":807,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"index.html":{}}}],["here",{"_index":485,"title":{},"body":{"interfaces/MarkerOptions.html":{},"directives/NgMapsFitBoundsDirective.html":{},"index.html":{}}}],["heremaps",{"_index":730,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["hi",{"_index":810,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["higher",{"_index":852,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["holds",{"_index":884,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["hole",{"_index":1219,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["homepage",{"_index":1771,"title":{},"body":{"properties.html":{}}}],["host",{"_index":889,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["hostmarker",{"_index":816,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["href",{"_index":1531,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["html",{"_index":923,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["htmlelement",{"_index":340,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["htmlheadelement",{"_index":1550,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["htmllinkelement",{"_index":1532,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["htmlscriptelement",{"_index":1536,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["https://github.com/ng",{"_index":1774,"title":{},"body":{"properties.html":{}}}],["https://ng",{"_index":1225,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"properties.html":{}}}],["hybrid",{"_index":1743,"title":{},"body":{"index.html":{}}}],["icon",{"_index":463,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"changelog.html":{}}}],["icon.ts",{"_index":393,"title":{},"body":{"interfaces/MarkerIcon.html":{},"coverage.html":{}}}],["icons",{"_index":1269,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["iconurl",{"_index":949,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["id",{"_index":173,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["identifier",{"_index":1645,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":1562,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["ignore",{"_index":1254,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"injectables/ScriptLoaderService.html":{}}}],["image",{"_index":960,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["implement",{"_index":126,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["implementation",{"_index":1621,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":489,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["import",{"_index":96,"title":{},"body":{"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["important",{"_index":1436,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["improve",{"_index":113,"title":{},"body":{"injectables/CircleManager.html":{}}}],["includeinbounds",{"_index":170,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":285,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["indicates",{"_index":526,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{}}}],["infowindow",{"_index":253,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["infowindow.open(event",{"_index":1078,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["infowindowclose",{"_index":823,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["infowindowid",{"_index":894,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["infowindowid++).tostring",{"_index":877,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["infowindowmanager",{"_index":235,"title":{"injectables/InfoWindowManager.html":{}},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{}}}],["infowindows",{"_index":849,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["inherited",{"_index":1441,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["inject",{"_index":1447,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["injectable",{"_index":19,"title":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":21,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":710,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["injectiontoken('map",{"_index":724,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":617,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{}}}],["input('markerclickable",{"_index":1036,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["input('markerdraggable",{"_index":1035,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["input('polydraggable",{"_index":1227,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["input('polylinedraggable",{"_index":1325,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["input('rectangledraggable",{"_index":1411,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["inputs",{"_index":505,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["inserting",{"_index":1177,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["inside",{"_index":802,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{}}}],["install",{"_index":1715,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1713,"title":{},"body":{"index.html":{}}}],["instance",{"_index":87,"title":{},"body":{"injectables/CircleManager.html":{}}}],["instruction",{"_index":1723,"title":{},"body":{"index.html":{}}}],["integrity",{"_index":1545,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/BoundsLiteral.html":{},"interfaces/CircleOptions.html":{},"interfaces/FitBoundsDetails.html":{},"interfaces/GeoPoint.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerIcon.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Padding.html":{},"interfaces/ShapeOptions.html":{}},"body":{"interfaces/BoundsLiteral.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerIcon.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Padding.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{}}}],["interface/bounds",{"_index":100,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{}}}],["interface/circle",{"_index":101,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{}}}],["interface/geo",{"_index":103,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"injectables/PolylineManager.html":{}}}],["interface/map",{"_index":381,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["interface/marker",{"_index":382,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"components/NgMapsMarkerComponent.html":{}}}],["interface/padding",{"_index":383,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["interface/rectangle",{"_index":384,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"interfaces/CircleOptions.html":{},"interfaces/FitBoundsDetails.html":{},"interfaces/GeoPoint.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerIcon.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Padding.html":{},"interfaces/ShapeOptions.html":{},"changelog.html":{},"overview.html":{}}}],["internal",{"_index":149,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["internet",{"_index":624,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["interpreted",{"_index":1143,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["invisible",{"_index":754,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["isgooglemaps",{"_index":1648,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isgooglemaps(token",{"_index":726,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"miscellaneous/functions.html":{}}}],["isheremaps",{"_index":1649,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isheremaps(token",{"_index":729,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"miscellaneous/functions.html":{}}}],["isn't",{"_index":1725,"title":{},"body":{"index.html":{}}}],["isopen",{"_index":821,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["issues",{"_index":1641,"title":{},"body":{"changelog.html":{}}}],["it's",{"_index":1435,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["javascript",{"_index":962,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["jscutlery/semver",{"_index":1604,"title":{},"body":{"changelog.html":{}}}],["k",{"_index":649,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["key",{"_index":633,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{}}}],["keywords",{"_index":1768,"title":{},"body":{"properties.html":{}}}],["label",{"_index":460,"title":{},"body":{"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"components/NgMapsMarkerComponent.html":{}}}],["last",{"_index":1171,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["lat",{"_index":206,"title":{},"body":{"interfaces/GeoPoint.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["later",{"_index":1732,"title":{},"body":{"index.html":{}}}],["latestfitboundsdetails",{"_index":790,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["latitude",{"_index":208,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"index.html":{}}}],["latitudes",{"_index":857,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["latlng",{"_index":148,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["latlng.lat}+${latlng.lng",{"_index":187,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["latlngbounds",{"_index":607,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{}}}],["latlngboundsliteral",{"_index":1739,"title":{},"body":{"index.html":{}}}],["latlngs",{"_index":1175,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["layer",{"_index":1751,"title":{},"body":{"index.html":{}}}],["layers",{"_index":1746,"title":{},"body":{"index.html":{}}}],["layertypes",{"_index":1784,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lazy",{"_index":1728,"title":{},"body":{"index.html":{}}}],["left",{"_index":1456,"title":{},"body":{"interfaces/Padding.html":{}}}],["legend",{"_index":922,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["less",{"_index":216,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["level",{"_index":1731,"title":{},"body":{"index.html":{}}}],["library",{"_index":1711,"title":{},"body":{"index.html":{}}}],["license",{"_index":1777,"title":{},"body":{"properties.html":{}}}],["line",{"_index":1031,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolylineManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["line._getpoints().map",{"_index":1493,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["lineclick",{"_index":1271,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linedblclick",{"_index":1272,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linedrag",{"_index":1273,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linedragend",{"_index":1274,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linedragstart",{"_index":1275,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemousedown",{"_index":1276,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemousemove",{"_index":1277,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemouseout",{"_index":1278,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemouseover",{"_index":1279,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemouseup",{"_index":1280,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linerightclick",{"_index":1281,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["lines",{"_index":1149,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["link",{"_index":115,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["listener",{"_index":260,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["literal",{"_index":603,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["lng",{"_index":207,"title":{},"body":{"interfaces/GeoPoint.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["load",{"_index":295,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["loadcss",{"_index":1525,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loadcss(href",{"_index":1537,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loaded",{"_index":1438,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{}}}],["loader",{"_index":146,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["loader.service.ts",{"_index":1520,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:10",{"_index":1528,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:17",{"_index":1548,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:46",{"_index":1534,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:56",{"_index":1530,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:73",{"_index":1546,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:8",{"_index":1549,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:9",{"_index":1551,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:91",{"_index":1538,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.ts",{"_index":291,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["loader.ts:11",{"_index":1440,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["loader.ts:5",{"_index":303,"title":{},"body":{"injectables/MapsAPILoader.html":{}}}],["loader.ts:6",{"_index":301,"title":{},"body":{"injectables/MapsAPILoader.html":{}}}],["loader.ts:7",{"_index":299,"title":{},"body":{"injectables/MapsAPILoader.html":{}}}],["loader.ts:8",{"_index":297,"title":{},"body":{"injectables/MapsAPILoader.html":{}}}],["loader/maps",{"_index":145,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"coverage.html":{}}}],["loader/noop",{"_index":1431,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["loading",{"_index":1729,"title":{},"body":{"index.html":{}}}],["loads",{"_index":1540,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loadscript",{"_index":1526,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loadscript(src",{"_index":1544,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["location",{"_index":750,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["longitude",{"_index":219,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"index.html":{}}}],["longitudes",{"_index":231,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["loop",{"_index":1161,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["lower",{"_index":855,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["m",{"_index":457,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["maintained",{"_index":1154,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["make",{"_index":127,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["manager",{"_index":621,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["manager.ts",{"_index":23,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["manager.ts:10",{"_index":1517,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:11",{"_index":1492,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:12",{"_index":95,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:13",{"_index":1501,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:14",{"_index":1482,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:15",{"_index":47,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:17",{"_index":1503,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:21",{"_index":1484,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:22",{"_index":54,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:26",{"_index":1514,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:29",{"_index":72,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:31",{"_index":1486,"title":{},"body":{"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:33",{"_index":1491,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:35",{"_index":85,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:37",{"_index":1511,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:40",{"_index":66,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolylineManager.html":{}}}],["manager.ts:41",{"_index":1509,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:42",{"_index":1487,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:44",{"_index":68,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:45",{"_index":1516,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:48",{"_index":70,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:49",{"_index":1504,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:52",{"_index":77,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:54",{"_index":81,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:56",{"_index":79,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:58",{"_index":91,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:60",{"_index":89,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:62",{"_index":61,"title":{},"body":{"injectables/CircleManager.html":{}}}],["map",{"_index":75,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["map((includeinbounds",{"_index":166,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["map.component.html",{"_index":1022,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["map_provider",{"_index":723,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapfitbounds",{"_index":738,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"index.html":{}}}],["mapfitbounds]'},{'name",{"_index":929,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["mapoptions",{"_index":276,"title":{"interfaces/MapOptions.html":{}},"body":{"interfaces/MapOptions.html":{},"injectables/MapsApiWrapper.html":{},"coverage.html":{}}}],["maps",{"_index":105,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["maps.git",{"_index":1780,"title":{},"body":{"properties.html":{}}}],["maps.github.io/core",{"_index":1772,"title":{},"body":{"properties.html":{}}}],["maps.github.io/core/components/ngmapsviewcomponent.html|ngmapsview",{"_index":1226,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["maps/core",{"_index":1708,"title":{},"body":{"index.html":{}}}],["maps/google",{"_index":1722,"title":{},"body":{"index.html":{}}}],["maps/issues",{"_index":1776,"title":{},"body":{"properties.html":{}}}],["maps/ng",{"_index":1775,"title":{},"body":{"properties.html":{}}}],["mapsapiloader",{"_index":144,"title":{"injectables/MapsAPILoader.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"index.html":{}}}],["mapsapiloader:18",{"_index":1445,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["mapsapiloader:22",{"_index":1444,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["mapsapiloader:5",{"_index":1443,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["mapsapiloader:6",{"_index":1442,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["mapsapiwrapper",{"_index":43,"title":{"injectables/MapsApiWrapper.html":{}},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["maptypecontrol",{"_index":280,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["maptypeid",{"_index":1741,"title":{},"body":{"index.html":{}}}],["marker",{"_index":424,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"changelog.html":{},"index.html":{}}}],["marker's",{"_index":973,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["marker'},{'name",{"_index":927,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["marker.animation",{"_index":479,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.clickable",{"_index":476,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.draggable",{"_index":462,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.hostmarker",{"_index":1045,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["marker.iconurl",{"_index":464,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.label",{"_index":461,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.latitude",{"_index":455,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.longitude",{"_index":456,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.manager",{"_index":275,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["marker.opacity",{"_index":466,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.optimized",{"_index":468,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.title",{"_index":474,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.visible",{"_index":470,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.zindex",{"_index":472,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["markerclick",{"_index":953,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["markerclickable",{"_index":950,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markerdraggable",{"_index":951,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markericon",{"_index":391,"title":{"interfaces/MarkerIcon.html":{}},"body":{"interfaces/MarkerIcon.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["markerid",{"_index":1029,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["markerid++).tostring",{"_index":1037,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markermanager",{"_index":247,"title":{"injectables/MarkerManager.html":{}},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["markeroptions",{"_index":344,"title":{"interfaces/MarkerOptions.html":{}},"body":{"injectables/MapsApiWrapper.html":{},"interfaces/MarkerOptions.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["markerrightclick",{"_index":954,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markers",{"_index":860,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["matching",{"_index":18,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":841,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["maxwidth",{"_index":822,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["maxzoom",{"_index":1737,"title":{},"body":{"index.html":{}}}],["means",{"_index":214,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["mergemap",{"_index":139,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["metadata",{"_index":493,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["meters",{"_index":560,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["method",{"_index":1734,"title":{},"body":{"index.html":{}}}],["methods",{"_index":26,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["minzoom",{"_index":1736,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1705,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1778,"title":{},"body":{"properties.html":{}}}],["mode",{"_index":1181,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["modular",{"_index":1709,"title":{},"body":{"index.html":{}}}],["module",{"_index":702,"title":{"modules/NgMapsCoreModule.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":704,"title":{"modules.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"modules.html":{}}}],["more",{"_index":1043,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"index.html":{}}}],["mouse",{"_index":529,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mousedown",{"_index":514,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mouseevent",{"_index":1239,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["mousemove",{"_index":515,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mouseout",{"_index":516,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mouseover",{"_index":517,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mouses",{"_index":997,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["mouseup",{"_index":518,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mycomponent",{"_index":1023,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["mymapcomponent",{"_index":1215,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["name",{"_index":49,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["named",{"_index":550,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["native",{"_index":885,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["need",{"_index":793,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"index.html":{}}}],["nestedpaths",{"_index":1221,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["nesting",{"_index":1217,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["new",{"_index":94,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newcenter",{"_index":366,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["newfitboundsdetails",{"_index":755,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["next",{"_index":776,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["ng",{"_index":706,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"index.html":{},"properties.html":{}}}],["ng2",{"_index":1769,"title":{},"body":{"properties.html":{}}}],["ngaftercontentinit",{"_index":948,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["ngmapscircledirective",{"_index":53,"title":{"directives/NgMapsCircleDirective.html":{}},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapscircledirective._mapoptions.indexof(k",{"_index":650,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["ngmapscoremodule",{"_index":703,"title":{"modules/NgMapsCoreModule.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"index.html":{},"modules.html":{}}}],["ngmapsfitboundsdirective",{"_index":712,"title":{"directives/NgMapsFitBoundsDirective.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapsinfowindowcomponent",{"_index":251,"title":{"components/NgMapsInfoWindowComponent.html":{}},"body":{"injectables/InfoWindowManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapsinfowindowcomponent._infowindowoptionsinputs.includes(k",{"_index":915,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["ngmapsmarker",{"_index":1104,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ngmapsmarkercomponent",{"_index":422,"title":{"components/NgMapsMarkerComponent.html":{}},"body":{"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapspolygon",{"_index":1109,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["ngmapspolygondirective",{"_index":716,"title":{"directives/NgMapsPolygonDirective.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"injectables/PolygonManager.html":{},"coverage.html":{}}}],["ngmapspolygondirective._polygonoptionsattributes.indexof(k",{"_index":1259,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["ngmapspolyline",{"_index":718,"title":{"directives/NgMapsPolyline.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["ngmapspolyline._polylineoptionsattributes.indexof(k",{"_index":1335,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["ngmapspolylinepoint",{"_index":720,"title":{"directives/NgMapsPolylinePoint.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["ngmapsrectangledirective",{"_index":721,"title":{"directives/NgMapsRectangleDirective.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["ngmapsrectangledirective._mapoptions.indexof(k",{"_index":1420,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["ngmapsview",{"_index":1111,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["ngmapsviewcomponent",{"_index":714,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmodule",{"_index":711,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["ngonchanges",{"_index":502,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ngonchanges(changes",{"_index":609,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ngondestroy",{"_index":503,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ngoninit",{"_index":504,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ngzone",{"_index":45,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["noopmapsapiloader",{"_index":1430,"title":{"classes/NoOpMapsAPILoader.html":{}},"body":{"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["north",{"_index":10,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["note",{"_index":1151,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["npm",{"_index":1714,"title":{},"body":{"index.html":{}}}],["null",{"_index":302,"title":{},"body":{"injectables/MapsAPILoader.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["number",{"_index":13,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"interfaces/MapOptions.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/Padding.html":{},"interfaces/ShapeOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["number(this.latitude",{"_index":1046,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["number(this.longitude",{"_index":1047,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["obj",{"_index":1262,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["obj[k",{"_index":1261,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["object.keys(changes",{"_index":1257,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["object.keys(changes).filter",{"_index":648,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["object.keys(changes).filter((k",{"_index":914,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["observable",{"_index":64,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["observeload",{"_index":1527,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["observeload(element",{"_index":1547,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["old",{"_index":783,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["once",{"_index":1543,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["onchanges",{"_index":491,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ondestroy",{"_index":492,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["one",{"_index":784,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["oninit",{"_index":490,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["opacity",{"_index":465,"title":{},"body":{"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["open",{"_index":242,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["open(event",{"_index":874,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["open(infowindow",{"_index":263,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["openinfowindow",{"_index":952,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["opens",{"_index":831,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["optimize",{"_index":978,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["optimized",{"_index":467,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["option",{"_index":286,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["optional",{"_index":50,"title":{},"body":{"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"miscellaneous/functions.html":{}}}],["optionkeys",{"_index":647,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["optionkeys.foreach((k",{"_index":652,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["optionkeys.length",{"_index":655,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["options",{"_index":83,"title":{},"body":{"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"index.html":{}}}],["options.ts",{"_index":117,"title":{},"body":{"interfaces/CircleOptions.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["options.ts:8",{"_index":287,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["options[k",{"_index":653,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["order",{"_index":851,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ordered",{"_index":1157,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["os",{"_index":1250,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["ouside",{"_index":838,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["out",{"_index":1758,"title":{},"body":{"index.html":{},"overview.html":{}}}],["output",{"_index":618,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["outputs",{"_index":507,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{}}}],["outside",{"_index":220,"title":{},"body":{"interfaces/GeoPoint.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["over",{"_index":535,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["overlap",{"_index":1220,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["overview",{"_index":1763,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1690,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":357,"title":{"interfaces/Padding.html":{}},"body":{"injectables/MapsApiWrapper.html":{},"interfaces/Padding.html":{},"coverage.html":{}}}],["page",{"_index":1432,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"index.html":{}}}],["pan",{"_index":829,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["panto",{"_index":321,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["panto(newcenter",{"_index":364,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["pantobounds",{"_index":322,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["pantobounds(bounds",{"_index":367,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["param",{"_index":110,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/ScriptLoaderService.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":396,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsPolygonDirective.html":{},"injectables/PolygonManager.html":{}}}],["paths",{"_index":1117,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"injectables/PolygonManager.html":{}}}],["peer",{"_index":1693,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":768,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["pixels",{"_index":568,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["play",{"_index":1016,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["point",{"_index":104,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["point'},{'name",{"_index":933,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["point.latitude",{"_index":1494,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["point.longitude",{"_index":1495,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["point.positionchanged.subscribe",{"_index":1328,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["point.ts",{"_index":205,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsPolylinePoint.html":{},"coverage.html":{}}}],["point.ts:21",{"_index":1356,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:26",{"_index":1357,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:32",{"_index":1358,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:33",{"_index":1355,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:37",{"_index":1359,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["pointerdown",{"_index":1075,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["pointerenter",{"_index":1098,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["pointerleave",{"_index":1101,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["points",{"_index":540,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["polyclick",{"_index":1119,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polydblclick",{"_index":1120,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polydrag",{"_index":1121,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polydragend",{"_index":1122,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polydraggable",{"_index":1118,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polydragstart",{"_index":1123,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polygon",{"_index":1110,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"injectables/PolygonManager.html":{}}}],["polygon'},{'name",{"_index":930,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["polygonmanager",{"_index":1131,"title":{"injectables/PolygonManager.html":{}},"body":{"directives/NgMapsPolygonDirective.html":{},"injectables/PolygonManager.html":{},"coverage.html":{}}}],["polygons",{"_index":1173,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polyline",{"_index":932,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["polyline'},{'name",{"_index":931,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["polylinedraggable",{"_index":1270,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["polylineid",{"_index":1323,"title":{},"body":{"directives/NgMapsPolyline.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["polylineid++).tostring",{"_index":1324,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["polylinemanager",{"_index":1283,"title":{"injectables/PolylineManager.html":{}},"body":{"directives/NgMapsPolyline.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["polylines",{"_index":1163,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polymousedown",{"_index":1124,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polymousemove",{"_index":1125,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polymouseout",{"_index":1126,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polymouseover",{"_index":1127,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polymouseup",{"_index":1128,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polyrightclick",{"_index":1129,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polys",{"_index":572,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["position",{"_index":346,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["positionchanged",{"_index":1354,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["possible",{"_index":752,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["prevent",{"_index":980,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["private",{"_index":495,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["proccede",{"_index":1564,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["production",{"_index":1727,"title":{},"body":{"index.html":{}}}],["project",{"_index":1759,"title":{},"body":{"index.html":{}}}],["promise",{"_index":57,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["promise((resolve",{"_index":387,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"injectables/ScriptLoaderService.html":{}}}],["promise.resolve",{"_index":1453,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"properties.html":{}}}],["property",{"_index":623,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["propname",{"_index":646,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["protected",{"_index":24,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["provide",{"_index":940,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["provided",{"_index":1755,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":1552,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["provider",{"_index":725,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":939,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["public",{"_index":27,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["querylist",{"_index":1017,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{}}}],["radius",{"_index":120,"title":{},"body":{"interfaces/CircleOptions.html":{},"directives/NgMapsCircleDirective.html":{}}}],["radius_changed",{"_index":689,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["radiuschange",{"_index":519,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["range",{"_index":212,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["rc",{"_index":1081,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["readme",{"_index":936,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["readonly",{"_index":155,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ready",{"_index":1726,"title":{},"body":{"index.html":{}}}],["readystate",{"_index":1560,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["rectangle",{"_index":934,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{}}}],["rectangle's",{"_index":1388,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["rectangleclick",{"_index":1368,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["rectangledblclick",{"_index":1369,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["rectangledraggable",{"_index":1366,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["rectanglemanager",{"_index":1370,"title":{"injectables/RectangleManager.html":{}},"body":{"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["rectangleoptions",{"_index":352,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"directives/NgMapsRectangleDirective.html":{},"miscellaneous/typealiases.html":{}}}],["reduce((obj",{"_index":1260,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["refactoring",{"_index":1613,"title":{},"body":{"changelog.html":{}}}],["reflects",{"_index":229,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["regardless",{"_index":842,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["registered",{"_index":1107,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["reject",{"_index":1557,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["reject(event",{"_index":1568,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["relative",{"_index":1155,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["remove",{"_index":782,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["removecircle",{"_index":34,"title":{},"body":{"injectables/CircleManager.html":{}}}],["removecircle(circle",{"_index":71,"title":{},"body":{"injectables/CircleManager.html":{}}}],["removefrombounds",{"_index":180,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["removefrombounds(latlng",{"_index":199,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["removerectangle",{"_index":1499,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["removerectangle(rectangle",{"_index":1506,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["removes",{"_index":73,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["removing",{"_index":1178,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["rename",{"_index":1034,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["rendered",{"_index":1147,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["rendering",{"_index":982,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["renders",{"_index":801,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["repeat",{"_index":1168,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["repeatedly",{"_index":585,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["replaysubject",{"_index":1008,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["replaysubject(1",{"_index":1009,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["repository",{"_index":1779,"title":{},"body":{"properties.html":{}}}],["represents",{"_index":1353,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["required",{"_index":556,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["reset",{"_index":1764,"title":{},"body":{"overview.html":{}}}],["resolve",{"_index":389,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["resolve(event",{"_index":1566,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["resolved",{"_index":1542,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["responsible",{"_index":152,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["result",{"_index":1165,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["results",{"_index":17,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":176,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolylineManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["returns",{"_index":56,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["right",{"_index":599,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/Padding.html":{}}}],["rightclick",{"_index":520,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["rightclicks",{"_index":995,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["roadmap",{"_index":1742,"title":{},"body":{"index.html":{}}}],["root",{"_index":1553,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["rotation",{"_index":397,"title":{},"body":{"interfaces/MarkerIcon.html":{}}}],["rxjs",{"_index":98,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":143,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["s",{"_index":1331,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["sample",{"_index":140,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["satellite",{"_index":1744,"title":{},"body":{"index.html":{}}}],["scale",{"_index":398,"title":{},"body":{"interfaces/MarkerIcon.html":{}}}],["scalecontrol",{"_index":281,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["screen",{"_index":987,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["script",{"_index":1437,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{}}}],["script.async",{"_index":1578,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["script.defer",{"_index":1579,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["script.src",{"_index":1575,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["script.type",{"_index":1576,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptloaderservice",{"_index":1518,"title":{"injectables/ScriptLoaderService.html":{}},"body":{"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["scrollwheel",{"_index":282,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["see",{"_index":963,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["segment",{"_index":1138,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["selector",{"_index":494,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["self",{"_index":761,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["sequence",{"_index":1158,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["service",{"_index":1733,"title":{},"body":{"index.html":{}}}],["services/fit",{"_index":765,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{}}}],["services/managers/circle",{"_index":620,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["services/managers/info",{"_index":892,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["services/managers/marker.manager",{"_index":1028,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["services/managers/polygon.manager",{"_index":1224,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["services/managers/polyline",{"_index":1322,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["services/managers/rectangle",{"_index":1410,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["set",{"_index":217,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["setbounds",{"_index":1500,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setbounds(rectangle",{"_index":1507,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setcenter",{"_index":35,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/MapsApiWrapper.html":{}}}],["setcenter(circle",{"_index":76,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setcenter(newcenter",{"_index":369,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["setdraggable",{"_index":36,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["setdraggable(circle",{"_index":78,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setdraggable(rectangle",{"_index":1508,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["seteditable",{"_index":37,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["seteditable(circle",{"_index":80,"title":{},"body":{"injectables/CircleManager.html":{}}}],["seteditable(rectangle",{"_index":1510,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setmapoptions",{"_index":323,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["setmapoptions(options",{"_index":371,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["setoptions",{"_index":38,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/RectangleManager.html":{}}}],["setoptions(circle",{"_index":82,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setoptions(infowindow",{"_index":266,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setoptions(rectangle",{"_index":1512,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setpolygonoptions",{"_index":1462,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["setpolygonoptions(path",{"_index":1470,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["setpolylineoptions",{"_index":1480,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["setpolylineoptions(line",{"_index":1489,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["setposition",{"_index":243,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setposition(infowindow",{"_index":269,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setradius",{"_index":39,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setradius(circle",{"_index":88,"title":{},"body":{"injectables/CircleManager.html":{}}}],["sets",{"_index":833,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["setvisible",{"_index":40,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["setvisible(circle",{"_index":90,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setvisible(rectangle",{"_index":1515,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setzindex",{"_index":244,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setzindex(infowindow",{"_index":271,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setzoom",{"_index":324,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["setzoom(zoom",{"_index":373,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["shakable",{"_index":1710,"title":{},"body":{"index.html":{}}}],["shape",{"_index":121,"title":{},"body":{"interfaces/CircleOptions.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["shapeoptions",{"_index":119,"title":{"interfaces/ShapeOptions.html":{}},"body":{"interfaces/CircleOptions.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["sharereplay",{"_index":141,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["sharereplay(1",{"_index":168,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["shown",{"_index":541,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["simple",{"_index":1172,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"index.html":{}}}],["simplechange",{"_index":619,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["simplechanges",{"_index":756,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["single",{"_index":154,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{}}}],["south",{"_index":11,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["space",{"_index":1150,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["specified",{"_index":215,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["specify",{"_index":1166,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src",{"_index":1535,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["src/.../core.module.ts",{"_index":1707,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../fit",{"_index":1783,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../info",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../layers.ts",{"_index":1785,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../marker.ts",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../polyline.ts",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rectangle",{"_index":1786,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/core.module.ts",{"_index":705,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/directives/circle.ts",{"_index":488,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"coverage.html":{}}}],["src/lib/directives/circle.ts:100",{"_index":566,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:105",{"_index":569,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:110",{"_index":570,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:116",{"_index":574,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:122",{"_index":578,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:129",{"_index":583,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:136",{"_index":584,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:143",{"_index":587,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:150",{"_index":589,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:157",{"_index":591,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:164",{"_index":593,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:171",{"_index":594,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:178",{"_index":595,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:185",{"_index":596,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:192",{"_index":597,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:198",{"_index":598,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:201",{"_index":613,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:203",{"_index":616,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:206",{"_index":612,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:213",{"_index":610,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:23",{"_index":522,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:235",{"_index":604,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:250",{"_index":601,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:26",{"_index":615,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:296",{"_index":611,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:304",{"_index":606,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:308",{"_index":608,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:40",{"_index":555,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:45",{"_index":557,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:50",{"_index":525,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:55",{"_index":533,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:61",{"_index":536,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:66",{"_index":543,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:71",{"_index":551,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:76",{"_index":559,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:81",{"_index":563,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:86",{"_index":565,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/fit",{"_index":734,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"coverage.html":{}}}],["src/lib/directives/info",{"_index":799,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/directives/map.ts",{"_index":1657,"title":{},"body":{"coverage.html":{}}}],["src/lib/directives/marker.ts",{"_index":937,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/directives/marker.ts:106",{"_index":959,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:108",{"_index":957,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:113",{"_index":984,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:118",{"_index":974,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:123",{"_index":972,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:129",{"_index":977,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:137",{"_index":985,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:143",{"_index":969,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:149",{"_index":1015,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:155",{"_index":993,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:162",{"_index":994,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:168",{"_index":992,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:175",{"_index":990,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:182",{"_index":991,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:189",{"_index":998,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:196",{"_index":996,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:203",{"_index":1019,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:206",{"_index":1012,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:207",{"_index":1011,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:208",{"_index":1020,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:210",{"_index":1010,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:211",{"_index":956,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:220",{"_index":1004,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:225",{"_index":1002,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:237",{"_index":1005,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:297",{"_index":1001,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:301",{"_index":1000,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:309",{"_index":999,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:372",{"_index":1003,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:377",{"_index":1007,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:382",{"_index":1006,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:77",{"_index":967,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:82",{"_index":968,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:87",{"_index":983,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:92",{"_index":964,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:98",{"_index":970,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/polygon.ts",{"_index":1108,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"coverage.html":{}}}],["src/lib/directives/polygon.ts:101",{"_index":1182,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:106",{"_index":1183,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:111",{"_index":1184,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:116",{"_index":1185,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:121",{"_index":1186,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:127",{"_index":1187,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:134",{"_index":1189,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:141",{"_index":1191,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:147",{"_index":1192,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:153",{"_index":1193,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:160",{"_index":1194,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:167",{"_index":1195,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:174",{"_index":1196,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:181",{"_index":1197,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:188",{"_index":1198,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:195",{"_index":1200,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:198",{"_index":1211,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:199",{"_index":1212,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:200",{"_index":1214,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:203",{"_index":1208,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:209",{"_index":1209,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:221",{"_index":1203,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:227",{"_index":1202,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:24",{"_index":1132,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:27",{"_index":1213,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:285",{"_index":1205,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:300",{"_index":1207,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:305",{"_index":1210,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:49",{"_index":1134,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:56",{"_index":1179,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:62",{"_index":1135,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:68",{"_index":1139,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:73",{"_index":1140,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:82",{"_index":1141,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:95",{"_index":1156,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polyline",{"_index":1352,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{},"coverage.html":{}}}],["src/lib/directives/polyline.ts",{"_index":1265,"title":{},"body":{"directives/NgMapsPolyline.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/directives/polyline.ts:103",{"_index":1297,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:110",{"_index":1298,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:117",{"_index":1299,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:123",{"_index":1300,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:129",{"_index":1301,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:136",{"_index":1302,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:143",{"_index":1303,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:150",{"_index":1304,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:157",{"_index":1305,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:164",{"_index":1306,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:171",{"_index":1307,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:178",{"_index":1319,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:180",{"_index":1315,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:181",{"_index":1316,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:182",{"_index":1320,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:185",{"_index":1312,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:205",{"_index":1313,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:219",{"_index":1310,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:225",{"_index":1308,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:27",{"_index":1284,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:284",{"_index":1309,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:293",{"_index":1311,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:298",{"_index":1314,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:32",{"_index":1317,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:46",{"_index":1286,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:53",{"_index":1291,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:59",{"_index":1287,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:67",{"_index":1288,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:72",{"_index":1292,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:77",{"_index":1293,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:82",{"_index":1294,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:87",{"_index":1289,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:92",{"_index":1295,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:97",{"_index":1296,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/rectangle.ts",{"_index":1363,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{},"coverage.html":{}}}],["src/lib/directives/rectangle.ts:103",{"_index":1383,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:108",{"_index":1384,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:113",{"_index":1386,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:119",{"_index":1387,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:126",{"_index":1397,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:133",{"_index":1398,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:140",{"_index":1389,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:146",{"_index":1390,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:152",{"_index":1391,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:158",{"_index":1392,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:164",{"_index":1393,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:170",{"_index":1394,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:176",{"_index":1395,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:182",{"_index":1396,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:188",{"_index":1399,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:190",{"_index":1408,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:192",{"_index":1409,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:195",{"_index":1406,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:202",{"_index":1404,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:221",{"_index":1402,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:23",{"_index":1371,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:236",{"_index":1400,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:26",{"_index":1407,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:274",{"_index":1405,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:282",{"_index":1403,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:40",{"_index":1377,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:45",{"_index":1373,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:50",{"_index":1379,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:55",{"_index":1385,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:60",{"_index":1372,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:66",{"_index":1378,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:72",{"_index":1374,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:77",{"_index":1375,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:82",{"_index":1376,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:87",{"_index":1380,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:92",{"_index":1381,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:98",{"_index":1382,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/interface/bounds.ts",{"_index":6,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"coverage.html":{}}}],["src/lib/interface/circle",{"_index":116,"title":{},"body":{"interfaces/CircleOptions.html":{},"coverage.html":{}}}],["src/lib/interface/geo",{"_index":204,"title":{},"body":{"interfaces/GeoPoint.html":{},"coverage.html":{}}}],["src/lib/interface/layers.ts",{"_index":1787,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/interface/map",{"_index":277,"title":{},"body":{"interfaces/MapOptions.html":{},"coverage.html":{}}}],["src/lib/interface/marker",{"_index":392,"title":{},"body":{"interfaces/MarkerIcon.html":{},"interfaces/MarkerOptions.html":{},"coverage.html":{}}}],["src/lib/interface/padding.ts",{"_index":1454,"title":{},"body":{"interfaces/Padding.html":{},"coverage.html":{}}}],["src/lib/interface/rectangle",{"_index":1788,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/interface/shape",{"_index":1599,"title":{},"body":{"interfaces/ShapeOptions.html":{},"coverage.html":{}}}],["src/lib/services/fit",{"_index":124,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/services/managers/circle",{"_index":22,"title":{},"body":{"injectables/CircleManager.html":{},"coverage.html":{}}}],["src/lib/services/managers/info",{"_index":236,"title":{},"body":{"injectables/InfoWindowManager.html":{},"coverage.html":{}}}],["src/lib/services/managers/marker.manager.ts",{"_index":404,"title":{},"body":{"injectables/MarkerManager.html":{},"coverage.html":{}}}],["src/lib/services/managers/marker.manager.ts:12",{"_index":420,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:19",{"_index":428,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:21",{"_index":444,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:23",{"_index":448,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:25",{"_index":442,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:27",{"_index":436,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:29",{"_index":440,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:30",{"_index":438,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:32",{"_index":446,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:34",{"_index":450,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:36",{"_index":452,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:38",{"_index":434,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:40",{"_index":432,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:42",{"_index":423,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:67",{"_index":430,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:71",{"_index":426,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:9",{"_index":453,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts",{"_index":1458,"title":{},"body":{"injectables/PolygonManager.html":{},"coverage.html":{}}}],["src/lib/services/managers/polygon.manager.ts:12",{"_index":1464,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:19",{"_index":1466,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:23",{"_index":1473,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:25",{"_index":1471,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:30",{"_index":1469,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:32",{"_index":1467,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:9",{"_index":1474,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polyline",{"_index":1475,"title":{},"body":{"injectables/PolylineManager.html":{},"coverage.html":{}}}],["src/lib/services/managers/rectangle",{"_index":1496,"title":{},"body":{"injectables/RectangleManager.html":{},"coverage.html":{}}}],["src/lib/services/maps",{"_index":290,"title":{},"body":{"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["src/lib/services/script",{"_index":1519,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["standalone",{"_index":803,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["started",{"_index":1601,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["starts",{"_index":590,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["state",{"_index":753,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["statements",{"_index":1646,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":497,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["status",{"_index":751,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["still",{"_index":792,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["stops",{"_index":588,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["straight",{"_index":1148,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["strict",{"_index":1610,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":60,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stroke",{"_index":564,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["strokecolor",{"_index":399,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["strokeopacity",{"_index":400,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["strokeposition",{"_index":614,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["strokeweight",{"_index":401,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["style",{"_index":1580,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["style.href",{"_index":1586,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["style.rel",{"_index":1582,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["style.type",{"_index":1584,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["styles",{"_index":805,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["stylesheet",{"_index":1583,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["subject",{"_index":762,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["submodules",{"_index":1756,"title":{},"body":{"index.html":{}}}],["subscribe",{"_index":775,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["subscribe((e",{"_index":1087,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["subscribe((value",{"_index":686,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["subscribe(obj.handler",{"_index":1255,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["subscribetomapevent",{"_index":325,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["subscribetomapevent(eventname",{"_index":375,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["subscription",{"_index":499,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["subscriptions",{"_index":1264,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["successhandler",{"_index":1570,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["successhandler(event",{"_index":1558,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["super",{"_index":1449,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["supported",{"_index":484,"title":{},"body":{"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["surface",{"_index":562,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["switch",{"_index":687,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["switchmap",{"_index":142,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["t",{"_index":385,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{}}}],["table",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1688,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1434,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["takeuntil",{"_index":764,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["template",{"_index":809,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"index.html":{}}}],["templateurl",{"_index":1021,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["terrain",{"_index":1745,"title":{},"body":{"index.html":{}}}],["text/css",{"_index":1585,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["text/javascript",{"_index":1577,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["then((bounds",{"_index":1427,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["then((radius",{"_index":691,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._addeventlisteners",{"_index":1051,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["this._api",{"_index":386,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["this._boundschangesampletime$.next(timems",{"_index":185,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._boundschangesampletime$.pipe(switchmap((time",{"_index":163,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._circleaddedtomanager",{"_index":631,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._createidentifier(latlng",{"_index":174,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._document",{"_index":1450,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["this._document.defaultview",{"_index":1452,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["this._fitboundsaccessor",{"_index":767,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._fitboundsdetails$.asobservable",{"_index":1070,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._fitboundsdetails$.next",{"_index":1071,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._fitboundsservice.addtobounds(this._latestfitboundsdetails.latlng",{"_index":796,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._fitboundsservice.removefrombounds",{"_index":787,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._id",{"_index":919,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["this._id.tostring",{"_index":920,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._includeinbounds",{"_index":162,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.next(bounds",{"_index":179,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.value",{"_index":177,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.value.has(id",{"_index":175,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._infowindowaddedtomanager",{"_index":899,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager",{"_index":908,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.addinfowindow(this).then",{"_index":898,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.close(this",{"_index":918,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.deleteinfowindow(this",{"_index":921,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.open(this",{"_index":917,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setoptions(this",{"_index":916,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setposition(this",{"_index":903,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setzindex(this",{"_index":905,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._init",{"_index":1229,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["this._latestfitboundsdetails",{"_index":786,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._latestfitboundsdetails.latlng",{"_index":788,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._manager",{"_index":685,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.addcircle(this",{"_index":630,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.addrectangle(this",{"_index":1412,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.getbounds(this",{"_index":700,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.getcenter(this",{"_index":701,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.getcenter(this).then((center",{"_index":695,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.removecircle(this",{"_index":699,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.removerectangle(this",{"_index":1429,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.setbounds(this",{"_index":1418,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.setcenter(this",{"_index":636,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.setdraggable(this",{"_index":640,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.seteditable(this",{"_index":638,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.setoptions(this",{"_index":656,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.setradius(this",{"_index":644,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.setvisible(this",{"_index":642,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._mapresolver",{"_index":388,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["this._mapswrapper.createmarker",{"_index":459,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._markeraddedtomanger",{"_index":1048,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._markers.get(marker",{"_index":482,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._markers.set(marker",{"_index":481,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._polygonaddedtomanager",{"_index":1228,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._polygonmanager",{"_index":1251,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._polygonmanager.addpolygon(this",{"_index":1232,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._polygonmanager.deletepolygon(this",{"_index":1263,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._polygonmanager.setpolygonoptions",{"_index":1230,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._polylineaddedtomanager",{"_index":1334,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager",{"_index":1349,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager.addpolyline(this",{"_index":1337,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager.deletepolyline(this",{"_index":1351,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager.setpolylineoptions(this",{"_index":1336,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager.updatepolylinepoints(this",{"_index":1329,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._rectangleaddedtomanager",{"_index":1413,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this._registereventlisteners",{"_index":632,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._setinfowindowoptions(changes",{"_index":907,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._updatebounds",{"_index":766,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._updatebounds(details",{"_index":778,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._updatecircleoptionschanges(changes",{"_index":645,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._updatefitboundsdetails",{"_index":1050,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._updateopenstate",{"_index":900,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._updatepolygonoptions(changes",{"_index":1231,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._updaterectangleoptionschanges(changes",{"_index":1419,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this._window",{"_index":1451,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["this.alreadyloaded.get(href",{"_index":1594,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.alreadyloaded.get(src",{"_index":1588,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.alreadyloaded.has(href",{"_index":1593,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.alreadyloaded.has(src",{"_index":1587,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.alreadyloaded.set(href",{"_index":1598,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.alreadyloaded.set(src",{"_index":1592,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.bounds",{"_index":160,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this.boundschange",{"_index":1422,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this.centerchange",{"_index":658,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this.circleclick",{"_index":660,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this.circledblclick",{"_index":662,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this.close",{"_index":913,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.createcsselement(href",{"_index":1595,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.createscriptelement(src",{"_index":1589,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.document",{"_index":1554,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.document.head",{"_index":1556,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.drag",{"_index":664,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.drag.emit(e",{"_index":1093,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.dragend",{"_index":666,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.dragend.emit(e",{"_index":1096,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.dragstart",{"_index":668,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.dragstart.emit(e",{"_index":1089,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.generatebounds(includeinbounds",{"_index":167,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this.handleinfowindowupdate",{"_index":1038,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.head",{"_index":1555,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.head.appendchild(script",{"_index":1591,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.head.appendchild(style",{"_index":1597,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.infowindow.changes.subscribe",{"_index":1039,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.foreach((infowindow",{"_index":1077,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.foreach((marker",{"_index":1044,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.length",{"_index":1040,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindowclose.emit",{"_index":911,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.isopen",{"_index":910,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.latitude",{"_index":901,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["this.lineclick.emit(ev",{"_index":1338,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linedblclick.emit(ev",{"_index":1339,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linedrag.emit(ev",{"_index":1340,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linedragend.emit(ev",{"_index":1341,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linedragstart.emit(ev",{"_index":1342,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemousedown.emit(ev",{"_index":1343,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemousemove.emit(ev",{"_index":1344,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemouseout.emit(ev",{"_index":1345,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemouseover.emit(ev",{"_index":1346,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemouseup.emit(ev",{"_index":1347,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linerightclick.emit(ev",{"_index":1348,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.longitude",{"_index":902,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["this.mapfitbounds",{"_index":795,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this.markerclick.emit(this",{"_index":1079,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager",{"_index":1073,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.addmarker(this).then",{"_index":1049,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.deletemarker(this",{"_index":1105,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateanimation(this",{"_index":1069,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateclickable(this",{"_index":1067,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatedraggable(this",{"_index":1057,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateicon(this",{"_index":1061,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateiconlegacy(this",{"_index":1059,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatelabel(this",{"_index":1056,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatemarkerposition(this",{"_index":1052,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateopacity(this",{"_index":1063,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatetitle(this",{"_index":1054,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatevisible(this",{"_index":1064,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatezindex(this",{"_index":1065,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markerrightclick.emit",{"_index":1083,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.mousedown",{"_index":670,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.mousemove",{"_index":672,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.mouseout",{"_index":674,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.mouseout.emit(e",{"_index":1102,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.mouseover",{"_index":676,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.mouseover.emit(e",{"_index":1099,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.mouseup",{"_index":678,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.observeload(script",{"_index":1590,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.observeload(style",{"_index":1596,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.open",{"_index":912,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.openinfowindow",{"_index":1076,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.points",{"_index":1326,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.points.changes.subscribe",{"_index":1332,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.points.foreach((point",{"_index":1327,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.points.toarray",{"_index":1350,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.polyclick.emit(ev",{"_index":1237,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polydblclick.emit(ev",{"_index":1238,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polydrag.emit(ev",{"_index":1240,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polydragend.emit(ev",{"_index":1241,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polydragstart.emit(ev",{"_index":1242,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polymousedown.emit(ev",{"_index":1243,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polymousemove.emit(ev",{"_index":1244,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polymouseout.emit(ev",{"_index":1245,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polymouseover.emit(ev",{"_index":1246,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polymouseup.emit(ev",{"_index":1247,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polyrightclick.emit(ev",{"_index":1248,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.positionchanged.emit(position",{"_index":1362,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["this.radiuschange",{"_index":680,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this.rectangleclick",{"_index":1423,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this.rectangledblclick",{"_index":1424,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this.rightclick",{"_index":682,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.subscription.add",{"_index":684,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.subscription.add(cs",{"_index":1080,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(d",{"_index":1094,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(dragend",{"_index":1097,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(ds",{"_index":1090,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(mouseout",{"_index":1103,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(mouseover",{"_index":1100,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(os",{"_index":1256,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["this.subscription.add(rc",{"_index":1084,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(s",{"_index":1333,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.subscription.add(subscription",{"_index":1330,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.subscription.unsubscribe",{"_index":698,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["throw",{"_index":1041,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["time",{"_index":165,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"index.html":{}}}],["timems",{"_index":195,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["timer",{"_index":137,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["timer(0",{"_index":164,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["title",{"_index":473,"title":{},"body":{"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"components/NgMapsMarkerComponent.html":{}}}],["todo",{"_index":111,"title":{},"body":{"injectables/CircleManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsApiWrapper.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["toggle",{"_index":791,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["token",{"_index":727,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"miscellaneous/functions.html":{}}}],["top",{"_index":1457,"title":{},"body":{"interfaces/Padding.html":{}}}],["tostring",{"_index":819,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["trafficlayer",{"_index":1747,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["transitlayer",{"_index":1748,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["tree",{"_index":798,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["triggermapevent",{"_index":326,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["triggermapevent(eventname",{"_index":377,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["true",{"_index":524,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["ts",{"_index":1253,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"injectables/ScriptLoaderService.html":{}}}],["tslib",{"_index":1691,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1781,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typechecking",{"_index":1611,"title":{},"body":{"changelog.html":{}}}],["typeof",{"_index":478,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["types",{"_index":1630,"title":{},"body":{"changelog.html":{}}}],["types/googlemaps",{"_index":1719,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":895,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["typically",{"_index":1738,"title":{},"body":{"index.html":{}}}],["typings",{"_index":390,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"components/NgMapsInfoWindowComponent.html":{},"index.html":{}}}],["uievent",{"_index":1559,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["undefined",{"_index":403,"title":{},"body":{"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["unlike",{"_index":1162,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["unsubscribe",{"_index":1106,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["up",{"_index":989,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["update",{"_index":847,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"changelog.html":{}}}],["updateanimation",{"_index":409,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateanimation(marker",{"_index":431,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateclickable",{"_index":410,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateclickable(marker",{"_index":433,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updated",{"_index":1628,"title":{},"body":{"changelog.html":{}}}],["updatedraggable",{"_index":411,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatedraggable(marker",{"_index":435,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateicon",{"_index":412,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateicon(marker",{"_index":437,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateiconlegacy",{"_index":413,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateiconlegacy(marker",{"_index":439,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatelabel",{"_index":414,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatelabel(marker",{"_index":441,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatemarkerposition",{"_index":415,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatemarkerposition(marker",{"_index":443,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateopacity",{"_index":416,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateopacity(marker",{"_index":445,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatepolygon",{"_index":1463,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["updatepolygon(polygon",{"_index":1472,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["updatepolylinepoints",{"_index":1481,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["updatepolylinepoints(line",{"_index":1490,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["updatetitle",{"_index":417,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatetitle(marker",{"_index":447,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatevisible",{"_index":418,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatevisible(marker",{"_index":449,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatezindex",{"_index":419,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatezindex(marker",{"_index":451,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["uppercase",{"_index":965,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["url",{"_index":402,"title":{},"body":{"interfaces/MarkerIcon.html":{},"components/NgMapsMarkerComponent.html":{},"injectables/ScriptLoaderService.html":{}}}],["usage",{"_index":1633,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["use",{"_index":837,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["used",{"_index":886,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["useexisting",{"_index":941,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["usefull",{"_index":836,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["user",{"_index":534,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["using",{"_index":1174,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"changelog.html":{}}}],["valid",{"_index":1735,"title":{},"body":{"index.html":{}}}],["value",{"_index":93,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":210,"title":{},"body":{"interfaces/GeoPoint.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["var",{"_index":924,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["variable",{"_index":1650,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1789,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1767,"title":{},"body":{"properties.html":{}}}],["vertex",{"_index":1170,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["vertical",{"_index":986,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["vertices",{"_index":1136,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["via",{"_index":1433,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["view",{"_index":806,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"index.html":{}}}],["viewchild",{"_index":891,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["viewchild('content",{"_index":882,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["visibility",{"_index":780,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["visible",{"_index":469,"title":{},"body":{"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["void",{"_index":58,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["west",{"_index":12,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["whe",{"_index":1199,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["whether",{"_index":527,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["width",{"_index":567,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["window",{"_index":274,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["window'},{'name",{"_index":926,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["window.manager",{"_index":893,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.manager.ts",{"_index":237,"title":{},"body":{"injectables/InfoWindowManager.html":{},"coverage.html":{}}}],["window.manager.ts:11",{"_index":248,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:19",{"_index":262,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:23",{"_index":270,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:25",{"_index":272,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:27",{"_index":264,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:32",{"_index":255,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:34",{"_index":268,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:39",{"_index":252,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:46",{"_index":256,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.ts",{"_index":800,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["window.ts:101",{"_index":888,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:107",{"_index":883,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:112",{"_index":832,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:118",{"_index":861,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:119",{"_index":879,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:120",{"_index":878,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:122",{"_index":873,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:131",{"_index":871,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:151",{"_index":864,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:160",{"_index":867,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:164",{"_index":866,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:178",{"_index":875,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:185",{"_index":868,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:191",{"_index":870,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:196",{"_index":876,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:201",{"_index":872,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:54",{"_index":825,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:58",{"_index":887,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:61",{"_index":880,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:69",{"_index":835,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:75",{"_index":839,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:81",{"_index":827,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:89",{"_index":848,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:96",{"_index":840,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["within",{"_index":224,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["work",{"_index":128,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["wrap",{"_index":232,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["wrapped",{"_index":222,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["wrapper",{"_index":107,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["wrapper.ts",{"_index":304,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"coverage.html":{}}}],["wrapper.ts:16",{"_index":379,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:17",{"_index":328,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:25",{"_index":341,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:31",{"_index":372,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:33",{"_index":345,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:39",{"_index":330,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:41",{"_index":362,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:45",{"_index":378,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:47",{"_index":360,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:49",{"_index":370,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:51",{"_index":365,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:53",{"_index":368,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:58",{"_index":358,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:63",{"_index":359,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:65",{"_index":363,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:67",{"_index":374,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:69",{"_index":361,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:73",{"_index":376,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:75",{"_index":338,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:78",{"_index":336,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:83",{"_index":332,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:88",{"_index":353,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:93",{"_index":350,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:95",{"_index":348,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["x",{"_index":769,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["x.latlng.lat",{"_index":771,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["x.latlng.lng",{"_index":773,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["y",{"_index":770,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["y.latlng.lat",{"_index":772,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["y.latlng.lng",{"_index":774,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["yarn",{"_index":1716,"title":{},"body":{"index.html":{}}}],["yes",{"_index":265,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"injectables/ScriptLoaderService.html":{}}}],["zindex",{"_index":471,"title":{},"body":{"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["zone.js",{"_index":1701,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":283,"title":{},"body":{"interfaces/MapOptions.html":{},"injectables/MapsApiWrapper.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"index.html":{},"overview.html":{}}}],["zoomcontrol",{"_index":284,"title":{},"body":{"interfaces/MapOptions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/BoundsLiteral.html":{"url":"interfaces/BoundsLiteral.html","title":"interface - BoundsLiteral","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BoundsLiteral\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/bounds.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            east\n                                        \n                                \n                                \n                                        \n                                            north\n                                        \n                                \n                                \n                                        \n                                            south\n                                        \n                                \n                                \n                                        \n                                            west\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        east\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        east:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        north\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        north:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        south\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        south:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        west\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        west:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BoundsLiteral {\n  east: number;\n  north: number;\n  south: number;\n  west: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CircleManager.html":{"url":"injectables/CircleManager.html","title":"injectable - CircleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CircleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/circle-manager.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _circles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                addCircle\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                getBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                getCenter\n                            \n                            \n                                    Public\n                                    Abstract\n                                getRadius\n                            \n                            \n                                    Public\n                                    Abstract\n                                removeCircle\n                            \n                            \n                                    Public\n                                    Abstract\n                                setCenter\n                            \n                            \n                                    Public\n                                    Abstract\n                                setDraggable\n                            \n                            \n                                    Public\n                                    Abstract\n                                setEditable\n                            \n                            \n                                    Public\n                                    Abstract\n                                setOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                setRadius\n                            \n                            \n                                    Public\n                                    Abstract\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_apiWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/circle-manager.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _apiWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        addCircle\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:62\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getRadius\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        removeCircle\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:29\n                \n            \n\n\n            \n                \n                    Removes the given circle from the map.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setDraggable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setEditable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(circle: NgMapsCircleDirective, options: CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of NgMapsCircleDirective\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        options for the circle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setRadius\n                        \n                    \n                \n            \n            \n                \n                    \n                    setRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setVisible\n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _circles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map\n  >()\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/managers/circle-manager.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { NgMapsCircleDirective } from '../../directives/circle';\nimport { BoundsLiteral } from '../../interface/bounds';\nimport { CircleOptions } from '../../interface/circle-options';\nimport { GeoPoint } from '../../interface/geo-point';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\n\n@Injectable()\nexport abstract class CircleManager {\n  protected _circles: Map> = new Map\n  >();\n\n  constructor(protected _apiWrapper: MapsApiWrapper, protected _zone: NgZone) {}\n\n  /**\n   * @param circle\n   */\n  public abstract addCircle(\n    circle: NgMapsCircleDirective,\n  ): Promise | void;\n\n  /**\n   * Removes the given circle from the map.\n   */\n  public abstract removeCircle(circle: NgMapsCircleDirective): Promise;\n  /**\n   * @todo check how to improve type casting\n   * @param circle instance of {@link NgMapsCircleDirective}\n   * @param options options for the circle\n   */\n  public abstract setOptions(\n    circle: NgMapsCircleDirective,\n    options: CircleOptions,\n  ): Promise;\n\n  public abstract getBounds(\n    circle: NgMapsCircleDirective,\n  ): Promise;\n\n  public abstract getCenter(\n    circle: NgMapsCircleDirective,\n  ): Promise;\n\n  public abstract getRadius(\n    circle: NgMapsCircleDirective,\n  ): Promise;\n\n  public abstract setCenter(circle: NgMapsCircleDirective): Promise;\n\n  public abstract setEditable(circle: NgMapsCircleDirective): Promise;\n\n  public abstract setDraggable(circle: NgMapsCircleDirective): Promise;\n\n  public abstract setVisible(circle: NgMapsCircleDirective): Promise;\n\n  public abstract setRadius(circle: NgMapsCircleDirective): Promise;\n\n  public abstract createEventObservable(\n    eventName: string,\n    circle: NgMapsCircleDirective,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CircleOptions.html":{"url":"interfaces/CircleOptions.html","title":"interface - CircleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CircleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/circle-options.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ShapeOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            radius\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        radius:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ShapeOptions } from './shape-options';\n\nexport interface CircleOptions extends ShapeOptions {\n  radius?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FitBoundsAccessor.html":{"url":"classes/FitBoundsAccessor.html","title":"class - FitBoundsAccessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FitBoundsAccessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/fit-bounds.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to implement when you what to be able to make it work with the auto fit bounds feature\nof AGM.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                getFitBoundsDetails$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getFitBoundsDetails$\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFitBoundsDetails$()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport {\n  flatMap,\n  map,\n  mergeMap,\n  sample,\n  shareReplay,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { BoundsLiteral } from '../interface/bounds';\nimport { GeoPoint } from '../interface/geo-point';\n\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: GeoPoint;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  public abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport abstract class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      mergeMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this.generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  protected abstract generateBounds(\n    includeInBounds: Map,\n  ): BoundsLiteral;\n\n  public addToBounds(latLng: GeoPoint) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  public removeFromBounds(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  public changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  public getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FitBoundsDetails.html":{"url":"interfaces/FitBoundsDetails.html","title":"interface - FitBoundsDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FitBoundsDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/fit-bounds.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            latLng\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latLng\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latLng:         GeoPoint\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GeoPoint\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport {\n  flatMap,\n  map,\n  mergeMap,\n  sample,\n  shareReplay,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { BoundsLiteral } from '../interface/bounds';\nimport { GeoPoint } from '../interface/geo-point';\n\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: GeoPoint;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  public abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport abstract class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      mergeMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this.generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  protected abstract generateBounds(\n    includeInBounds: Map,\n  ): BoundsLiteral;\n\n  public addToBounds(latLng: GeoPoint) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  public removeFromBounds(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  public changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  public getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FitBoundsService.html":{"url":"injectables/FitBoundsService.html","title":"injectable - FitBoundsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FitBoundsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/fit-bounds.ts\n        \n\n\n            \n                Description\n            \n            \n                The FitBoundsService is responsible for computing the bounds of the a single map.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                _boundsChangeSampleTime$\n                            \n                            \n                                    Protected\n                                    Readonly\n                                _includeInBounds$\n                            \n                            \n                                    Protected\n                                    Readonly\n                                bounds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _createIdentifier\n                            \n                            \n                                    Public\n                                addToBounds\n                            \n                            \n                                    Public\n                                changeFitBoundsChangeSampleTime\n                            \n                            \n                                    Protected\n                                    Abstract\n                                generateBounds\n                            \n                            \n                                    Public\n                                getBounds$\n                            \n                            \n                                    Public\n                                removeFromBounds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/fit-bounds.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _createIdentifier\n                        \n                    \n                \n            \n            \n                \n                    \n                    _createIdentifier(latLng: google.maps.LatLng | google.maps.LatLngLiteral)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                            google.maps.LatLng | google.maps.LatLngLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addToBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    addToBounds(latLng: GeoPoint)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeFitBoundsChangeSampleTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeFitBoundsChangeSampleTime(timeMs: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeMs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        generateBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateBounds(includeInBounds: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    includeInBounds\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BoundsLiteral\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getBounds$\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds$()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeFromBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFromBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                            google.maps.LatLng | google.maps.LatLngLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        _boundsChangeSampleTime$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    200,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/fit-bounds.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        _includeInBounds$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    new Map(),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/fit-bounds.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        bounds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/fit-bounds.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport {\n  flatMap,\n  map,\n  mergeMap,\n  sample,\n  shareReplay,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { BoundsLiteral } from '../interface/bounds';\nimport { GeoPoint } from '../interface/geo-point';\n\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: GeoPoint;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  public abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport abstract class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      mergeMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this.generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  protected abstract generateBounds(\n    includeInBounds: Map,\n  ): BoundsLiteral;\n\n  public addToBounds(latLng: GeoPoint) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  public removeFromBounds(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  public changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  public getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoPoint.html":{"url":"interfaces/GeoPoint.html","title":"interface - GeoPoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GeoPoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/geo-point.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            lat\n                                        \n                                \n                                \n                                        \n                                            lng\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Latitude in degrees. Values will be clamped to the range [-90, 90]. This\nmeans that if the value specified is less than -90, it will be set to\n-90. And if the value is greater than 90, it will be set to 90.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lng\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lng:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Longitude in degrees. Values outside the range [-180, 180] will be\nwrapped so that they fall within the range. For example, a value of -190\nwill be converted to 170. A value of 190 will be converted to -170. This\nreflects the fact that longitudes wrap around the globe.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface GeoPoint {\n  /**\n   * Latitude in degrees. Values will be clamped to the range [-90, 90]. This\n   * means that if the value specified is less than -90, it will be set to\n   * -90. And if the value is greater than 90, it will be set to 90.\n   */\n  lat: number;\n  /**\n   * Longitude in degrees. Values outside the range [-180, 180] will be\n   * wrapped so that they fall within the range. For example, a value of -190\n   * will be converted to 170. A value of 190 will be converted to -170. This\n   * reflects the fact that longitudes wrap around the globe.\n   */\n  lng: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InfoWindowManager.html":{"url":"injectables/InfoWindowManager.html","title":"injectable - InfoWindowManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InfoWindowManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/info-window.manager.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _infoWindows\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                addInfoWindow\n                            \n                            \n                                    Public\n                                    Abstract\n                                close\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                deleteInfoWindow\n                            \n                            \n                                    Public\n                                    Abstract\n                                open\n                            \n                            \n                                    Public\n                                    Abstract\n                                setOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                setPosition\n                            \n                            \n                                    Public\n                                    Abstract\n                                setZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone, _markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/info-window.manager.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _markerManager\n                                                  \n                                                        \n                                                                        MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        addInfoWindow\n                        \n                    \n                \n            \n            \n                \n                    \n                    addInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:46\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n                    Creates a Google Maps event listener for the given InfoWindow as an Observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        deleteInfoWindow\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open(infoWindow: NgMapsInfoWindowComponent, event?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(infoWindow: NgMapsInfoWindowComponent, options: google.maps.InfoWindowOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.InfoWindowOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPosition(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setZIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    setZIndex(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _infoWindows\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/managers/info-window.manager.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { NgMapsInfoWindowComponent } from '../../directives/info-window';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\n\nimport { MarkerManager } from './marker.manager';\n\n@Injectable()\nexport abstract class InfoWindowManager {\n  protected _infoWindows: Map = new Map();\n\n  constructor(\n    protected _mapsWrapper: MapsApiWrapper,\n    protected _zone: NgZone,\n    protected _markerManager: MarkerManager,\n  ) {}\n\n  public abstract deleteInfoWindow(\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Promise;\n\n  public abstract setPosition(infoWindow: NgMapsInfoWindowComponent): void;\n\n  public abstract setZIndex(infoWindow: NgMapsInfoWindowComponent): void;\n\n  public abstract open(\n    infoWindow: NgMapsInfoWindowComponent,\n    event?: any,\n  ): Promise;\n\n  public abstract close(infoWindow: NgMapsInfoWindowComponent): void;\n\n  public abstract setOptions(\n    infoWindow: NgMapsInfoWindowComponent,\n    options: google.maps.InfoWindowOptions,\n  ): Promise | void;\n\n  public abstract addInfoWindow(\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Promise;\n\n  /**\n   * Creates a Google Maps event listener for the given InfoWindow as an Observable\n   */\n  public abstract createEventObservable(\n    eventName: string,\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MapOptions.html":{"url":"interfaces/MapOptions.html","title":"interface - MapOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MapOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/map-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disableDoubleClickZoom\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            draggable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mapTypeControl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scaleControl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scrollwheel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoom\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomControl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [option: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/interface/map-options.ts:8\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableDoubleClickZoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDoubleClickZoom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        draggable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapTypeControl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mapTypeControl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaleControl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scaleControl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollwheel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scrollwheel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomControl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomControl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MapOptions {\n  draggable?: boolean;\n  scrollwheel?: boolean;\n  scaleControl?: boolean;\n  zoomControl?: boolean;\n  mapTypeControl?: boolean;\n  zoom?: number;\n  disableDoubleClickZoom?: boolean;\n\n  /**\n   * @todo fixme\n   */\n  [option: string]: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapsAPILoader.html":{"url":"injectables/MapsAPILoader.html","title":"injectable - MapsAPILoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MapsAPILoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/maps-api-loader/maps-api-loader.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Optional\n                                _document\n                            \n                            \n                                    Protected\n                                    Optional\n                                _window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                configure\n                            \n                            \n                                    Public\n                                    Abstract\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        configure\n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/maps-api-loader.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/maps-api-loader.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        _document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/maps-api-loader/maps-api-loader.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        _window\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Window | null\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/maps-api-loader/maps-api-loader.ts:5\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport abstract class MapsAPILoader {\n  protected _window?: Window | null;\n  protected _document?: Document;\n  public abstract load(): Promise;\n  public abstract configure(config: any): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapsApiWrapper.html":{"url":"injectables/MapsApiWrapper.html","title":"injectable - MapsApiWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MapsApiWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/maps-api-wrapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Optional\n                                _api\n                            \n                            \n                                    Protected\n                                    Optional\n                                _mapResolver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                clearInstanceListeners\n                            \n                            \n                                    Public\n                                    Abstract\n                                createCircle\n                            \n                            \n                                    Public\n                                    Abstract\n                                createDrawingManager\n                            \n                            \n                                    Public\n                                    Abstract\n                                createInfoWindow\n                            \n                            \n                                    Public\n                                    Abstract\n                                createMap\n                            \n                            \n                                    Public\n                                    Abstract\n                                createMarker\n                            \n                            \n                                    Public\n                                    Abstract\n                                createPolygon\n                            \n                            \n                                    Public\n                                    Abstract\n                                createPolyline\n                            \n                            \n                                    Public\n                                    Abstract\n                                createRectangle\n                            \n                            \n                                    Public\n                                    Abstract\n                                fitBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                getBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                getCenter\n                            \n                            \n                                    Public\n                                    Abstract\n                                getMapTypeId\n                            \n                            \n                                    Public\n                                    Async\n                                getNativeMap\n                            \n                            \n                                    Public\n                                    Abstract\n                                getZoom\n                            \n                            \n                                    Public\n                                    Abstract\n                                panTo\n                            \n                            \n                                    Public\n                                    Abstract\n                                panToBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                setCenter\n                            \n                            \n                                    Public\n                                    Abstract\n                                setMapOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                setZoom\n                            \n                            \n                                    Public\n                                    Abstract\n                                subscribeToMapEvent\n                            \n                            \n                                    Public\n                                    Abstract\n                                triggerMapEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_loader: MapsAPILoader, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/maps-api-wrapper.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _loader\n                                                  \n                                                        \n                                                                        MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        clearInstanceListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearInstanceListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createCircle\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCircle(center: GeoPoint, options: CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    center\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createDrawingManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDrawingManager(param: any, addToMap?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    addToMap\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createInfoWindow\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInfoWindow(center: GeoPoint, options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    center\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createMap\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMap(el: HTMLElement, center: GeoPoint, options: MapOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    center\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                MapOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createMarker\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMarker(position: GeoPoint, options?: MarkerOptions, addToMap?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                MarkerOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    addToMap\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createPolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPolygon(options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createPolyline\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPolyline(options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createRectangle\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRectangle(box: BoundsLiteral, options: RectangleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    box\n                                    \n                                                BoundsLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                RectangleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        fitBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    fitBounds(bounds: BoundsLiteral, boundsPadding?: number | Padding)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bounds\n                                    \n                                                BoundsLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    boundsPadding\n                                    \n                                                number | Padding\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCenter()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getMapTypeId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMapTypeId()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getNativeMap\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNativeMap()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getZoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    getZoom()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        panTo\n                        \n                    \n                \n            \n            \n                \n                    \n                    panTo(newCenter: GeoPoint)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newCenter\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        panToBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    panToBounds(bounds: BoundsLiteral, boundsPadding?: number | Padding)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bounds\n                                    \n                                                BoundsLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    boundsPadding\n                                    \n                                                number | Padding\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCenter(newCenter: GeoPoint)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newCenter\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setMapOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setMapOptions(options: MapOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MapOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setZoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    setZoom(zoom: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    zoom\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        subscribeToMapEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeToMapEvent(eventName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        triggerMapEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    triggerMapEvent(eventName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        _api\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/maps-api-wrapper.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        _mapResolver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/maps-api-wrapper.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { BoundsLiteral } from '../interface/bounds';\nimport { CircleOptions } from '../interface/circle-options';\nimport { GeoPoint } from '../interface/geo-point';\nimport { MapOptions } from '../interface/map-options';\nimport { MarkerOptions } from '../interface/marker-options';\nimport { Padding } from '../interface/padding';\nimport { RectangleOptions } from '../interface/rectangle-options';\n\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\n@Injectable()\nexport abstract class MapsApiWrapper {\n  protected _api?: Promise;\n  protected _mapResolver?: (value: T) => void;\n\n  constructor(protected _loader: MapsAPILoader, protected _zone: NgZone) {\n    this._api = new Promise((resolve) => {\n      this._mapResolver = resolve;\n    });\n  }\n\n  public abstract createMap(\n    el: HTMLElement,\n    center: GeoPoint,\n    options: MapOptions,\n  ): void | Promise;\n\n  public abstract setMapOptions(options: MapOptions): void | Promise;\n\n  public abstract createMarker(\n    position: GeoPoint,\n    options?: MarkerOptions,\n    addToMap?: boolean,\n  ): Promise;\n\n  public abstract clearInstanceListeners(): void;\n\n  public async getNativeMap(): Promise {\n    return this._api;\n  }\n\n  public abstract triggerMapEvent(eventName: string): Promise;\n\n  public abstract getCenter(): Promise;\n\n  public abstract setCenter(newCenter: GeoPoint): Promise;\n\n  public abstract panTo(newCenter: GeoPoint): Promise;\n\n  public abstract panToBounds(\n    bounds: BoundsLiteral,\n    boundsPadding?: number | Padding,\n  ): void | Promise;\n\n  public abstract fitBounds(\n    bounds: BoundsLiteral,\n    boundsPadding?: number | Padding,\n  ): void | Promise;\n\n  public abstract getBounds(): Promise;\n\n  public abstract getZoom(): Promise;\n\n  public abstract setZoom(zoom: number): Promise;\n\n  public abstract getMapTypeId(): Promise;\n\n  public abstract subscribeToMapEvent(eventName: string): Observable;\n\n  public abstract createInfoWindow(center: GeoPoint, options: any): Promise;\n\n  // TODO typings\n  public abstract createDrawingManager(\n    param: any,\n    addToMap?: boolean,\n  ): Promise;\n\n  public abstract createCircle(\n    center: GeoPoint,\n    options: CircleOptions,\n  ): Promise;\n\n  public abstract createRectangle(\n    box: BoundsLiteral,\n    options: RectangleOptions,\n  ): Promise;\n\n  public abstract createPolyline(options: any): Promise;\n\n  public abstract createPolygon(options: any): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkerIcon.html":{"url":"interfaces/MarkerIcon.html","title":"interface - MarkerIcon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MarkerIcon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/marker-icon.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fillColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fillOpacity\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rotation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scale\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strokeColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strokeOpacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strokeWeight\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fillColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillOpacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fillOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scale:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MarkerIcon {\n  url?: string;\n  fillColor?: string;\n  fillOpacity?: number;\n  path: string | undefined;\n  rotation?: number;\n  scale?: number;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarkerManager.html":{"url":"injectables/MarkerManager.html","title":"injectable - MarkerManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MarkerManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/marker.manager.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addMarker\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                deleteMarker\n                            \n                            \n                                    Public\n                                getNativeMarker\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateAnimation\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateClickable\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateDraggable\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateIcon\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateIconLegacy\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateLabel\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateMarkerPosition\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateOpacity\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateTitle\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateVisible\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/marker.manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        addMarker\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string | Array, marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:71\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                            string | Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        deleteMarker\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNativeMarker\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNativeMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateAnimation\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAnimation(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateClickable\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateClickable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateDraggable\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDraggable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateIcon\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIcon(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateIconLegacy\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIconLegacy(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateLabel\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLabel(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateMarkerPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMarkerPosition(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateOpacity\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOpacity(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTitle(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateVisible\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateVisible(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateZIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateZIndex(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _markers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/managers/marker.manager.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { NgMapsMarkerComponent } from '../../directives/marker';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\n\n@Injectable()\nexport abstract class MarkerManager {\n  protected _markers: Map = new Map();\n\n  constructor(\n    protected _mapsWrapper: MapsApiWrapper,\n    protected _zone: NgZone,\n  ) {}\n\n  public abstract deleteMarker(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateMarkerPosition(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateTitle(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateLabel(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateDraggable(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateIconLegacy(marker: NgMapsMarkerComponent): void;\n  public abstract updateIcon(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateOpacity(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateVisible(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateZIndex(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateClickable(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateAnimation(marker: NgMapsMarkerComponent): void;\n\n  public async addMarker(marker: NgMapsMarkerComponent): Promise {\n    if (!marker.latitude || !marker.longitude) {\n      return;\n    }\n    const m = await this._mapsWrapper.createMarker(\n      { lat: marker.latitude, lng: marker.longitude },\n      {\n        label: marker.label,\n        draggable: marker.draggable,\n        icon: marker.iconUrl,\n        opacity: marker.opacity,\n        optimized: marker.optimized,\n        visible: marker.visible,\n        zIndex: marker.zIndex,\n        title: marker.title,\n        clickable: marker.clickable,\n        animation:\n          typeof marker.animation === 'string'\n            ? google.maps.Animation[marker.animation]\n            : marker.animation,\n      } as any,\n    );\n    this._markers.set(marker, m);\n  }\n\n  public getNativeMarker(marker: NgMapsMarkerComponent): T | undefined {\n    return this._markers.get(marker);\n  }\n\n  public abstract createEventObservable(\n    eventName: string | Array,\n    marker: NgMapsMarkerComponent,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkerOptions.html":{"url":"interfaces/MarkerOptions.html","title":"interface - MarkerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MarkerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/marker-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            clickable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visible\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zIndex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clickable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:     string | google.maps.MarkerLabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | google.maps.MarkerLabel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    not supported by here maps\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    not supported by here maps\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MarkerOptions {\n  /**\n   * not supported by here maps\n   */\n  label?: string | google.maps.MarkerLabel;\n  /**\n   * not supported by here maps\n   */\n  title?: string;\n  visible?: boolean;\n  zIndex?: number;\n  clickable?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsCircleDirective.html":{"url":"directives/NgMapsCircleDirective.html","title":"directive - NgMapsCircleDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgMapsCircleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/circle.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnChanges\n                            OnDestroy\n                            CircleOptions\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map-circle\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _circleAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _mapOptions\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerEventListeners\n                            \n                            \n                                    Private\n                                _updateCircleOptionsChanges\n                            \n                            \n                                    Public\n                                    Async\n                                getBounds\n                            \n                            \n                                    Public\n                                    Async\n                                getCenter\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                draggable\n                            \n                            \n                                editable\n                            \n                            \n                                fillColor\n                            \n                            \n                                fillOpacity\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                radius\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                centerChange\n                            \n                            \n                                circleClick\n                            \n                            \n                                circleDblClick\n                            \n                            \n                                drag\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragStart\n                            \n                            \n                                mouseDown\n                            \n                            \n                                mouseMove\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                mouseUp\n                            \n                            \n                                radiusChange\n                            \n                            \n                                rightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_manager: CircleManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/circle.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _manager\n                                                  \n                                                        \n                                                                        CircleManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:50\n                            \n                        \n                \n                    \n                        Indicates whether this Circle handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        draggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:55\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this circle over the map. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:61\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this circle by dragging the control points shown at\nthe center and around the circumference of the circle. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:66\n                            \n                        \n                \n                    \n                        The fill color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:71\n                            \n                        \n                \n                    \n                        The fill opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:40\n                            \n                        \n                \n                    \n                        The latitude position of the circle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:45\n                            \n                        \n                \n                    \n                        The clickable position of the circle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:76\n                            \n                        \n                \n                    \n                        The radius in meters on the Earth's surface.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:81\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:86\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:100\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:105\n                            \n                        \n                \n                    \n                        Whether this circle is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:110\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        centerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:116\n                            \n                        \n                \n                    \n                        This event is fired when the circle's center is changed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        circleClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:122\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        circleDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:129\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        drag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:136\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:143\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:150\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:157\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:164\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:171\n                            \n                        \n                \n                    \n                        This event is fired on circle mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:178\n                            \n                        \n                \n                    \n                        This event is fired on circle mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:185\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mouseup event is fired on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:192\n                            \n                        \n                \n                    \n                        This event is fired when the circle's radius is changed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:198\n                            \n                        \n                \n                    \n                        This event is fired when the circle is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _registerEventListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    _registerEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _updateCircleOptionsChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateCircleOptionsChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:235\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:304\n                \n            \n\n\n            \n                \n                    Gets the LatLngBounds of this Circle.\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCenter()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:308\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:296\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _circleAddedToManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/circle.ts:201\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        _mapOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/circle.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/circle.ts:203\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { BoundsLiteral } from '../interface/bounds';\nimport { CircleOptions } from '../interface/circle-options';\nimport { GeoPoint } from '../interface/geo-point';\nimport { CircleManager } from '../services/managers/circle-manager';\n\n@Directive({\n  selector: 'map-circle',\n})\nexport class NgMapsCircleDirective\n  implements OnInit, OnChanges, OnDestroy, CircleOptions\n{\n  constructor(private _manager: CircleManager) {}\n\n  private static _mapOptions: Array = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ];\n  /**\n   * The latitude position of the circle (required).\n   */\n  @Input() public latitude?: number;\n\n  /**\n   * The clickable position of the circle (required).\n   */\n  @Input() public longitude?: number;\n\n  /**\n   * Indicates whether this Circle handles mouse events. Defaults to true.\n   */\n  @Input() public clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this circle over the map. Defaults to false.\n   */\n  @Input() public draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this circle by dragging the control points shown at\n   * the center and around the circumference of the circle. Defaults to false.\n   */\n  @Input() public editable: boolean = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() public fillColor?: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0.\n   */\n  @Input() public fillOpacity?: number;\n\n  /**\n   * The radius in meters on the Earth's surface.\n   */\n  @Input() public radius: number = 0;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() public strokeColor?: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() public strokeOpacity?: number;\n\n  /**\n   * The stroke position. Defaults to CENTER.\n   * This property is not supported on Internet Explorer 8 and earlier.\n   *\n   * @fixme\n   */\n  // @Input() strokePosition: google.maps.StrokePosition =\n  //   google.maps.StrokePosition.CENTER;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() public strokeWeight: number = 0;\n\n  /**\n   * Whether this circle is visible on the map. Defaults to true.\n   */\n  @Input() public visible: boolean = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() public zIndex?: number;\n\n  /**\n   * This event is fired when the circle's center is changed.\n   */\n  @Output()\n  public centerChange: EventEmitter = new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the circle.\n   */\n  @Output()\n  public circleClick: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the circle.\n   */\n  @Output()\n  public circleDblClick: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the circle.\n   */\n  @Output()\n  public drag: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the circle.\n   */\n  @Output()\n  public dragEnd: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the circle.\n   */\n  @Output()\n  public dragStart: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the circle.\n   */\n  @Output()\n  public mouseDown: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the circle.\n   */\n  @Output()\n  public mouseMove: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired on circle mouseout.\n   */\n  @Output()\n  public mouseOut: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired on circle mouseover.\n   */\n  @Output()\n  public mouseOver: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mouseup event is fired on the circle.\n   */\n  @Output()\n  public mouseUp: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired when the circle's radius is changed.\n   */\n  @Output()\n  public radiusChange: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the circle is right-clicked on.\n   */\n  @Output()\n  public rightClick: EventEmitter =\n    new EventEmitter();\n\n  private _circleAddedToManager: boolean = false;\n\n  private subscription: Subscription = new Subscription();\n\n  /** @internal */\n  public ngOnInit() {\n    this._manager.addCircle(this);\n    this._circleAddedToManager = true;\n    this._registerEventListeners();\n  }\n\n  /** @internal */\n  public ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (!this._circleAddedToManager) {\n      return;\n    }\n    if (changes.latitude || changes.longitude) {\n      this._manager.setCenter(this);\n    }\n    if (changes.editable) {\n      this._manager.setEditable(this);\n    }\n    if (changes.draggable) {\n      this._manager.setDraggable(this);\n    }\n    if (changes.visible) {\n      this._manager.setVisible(this);\n    }\n    if (changes.radius) {\n      this._manager.setRadius(this);\n    }\n    this._updateCircleOptionsChanges(changes);\n  }\n\n  private _updateCircleOptionsChanges(changes: {\n    [propName: string]: SimpleChange;\n  }) {\n    const options: { [propName: string]: any } = {};\n    const optionKeys = Object.keys(changes).filter(\n      (k) => NgMapsCircleDirective._mapOptions.indexOf(k) !== -1,\n    );\n    optionKeys.forEach((k) => {\n      options[k] = changes[k].currentValue;\n    });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  private _registerEventListeners() {\n    const events: Map> = new Map\n    >();\n    events.set('center_changed', this.centerChange);\n    events.set('click', this.circleClick);\n    events.set('dblclick', this.circleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragstart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('radius_changed', this.radiusChange);\n    events.set('rightclick', this.rightClick);\n\n    events.forEach((eventEmitter, eventName) => {\n      this.subscription.add(\n        this._manager\n          .createEventObservable(eventName, this)\n          .subscribe((value) => {\n            switch (eventName) {\n              case 'radius_changed':\n                this._manager\n                  .getRadius(this)\n                  .then((radius) => eventEmitter.emit(radius));\n                break;\n              case 'center_changed':\n                this._manager.getCenter(this).then((center) =>\n                  eventEmitter.emit({\n                    ...center,\n                  }),\n                );\n                break;\n              default:\n                eventEmitter.emit(value);\n            }\n          }),\n      );\n    });\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this._manager.removeCircle(this);\n  }\n\n  /**\n   * Gets the LatLngBounds of this Circle.\n   */\n  public async getBounds(): Promise {\n    return this._manager.getBounds(this);\n  }\n\n  public async getCenter(): Promise {\n    return this._manager.getCenter(this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgMapsCoreModule.html":{"url":"modules/NgMapsCoreModule.html","title":"module - NgMapsCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    NgMapsCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/core.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The ng-maps core module. Contains all Directives/Services/Pipes\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, NgModule } from '@angular/core';\n\nimport { NgMapsCircleDirective } from './directives/circle';\nimport { NgMapsFitBoundsDirective } from './directives/fit-bounds';\nimport { NgMapsInfoWindowComponent } from './directives/info-window';\nimport { NgMapsViewComponent } from './directives/map';\nimport { NgMapsMarkerComponent } from './directives/marker';\nimport { NgMapsPolygonDirective } from './directives/polygon';\nimport { NgMapsPolyline } from './directives/polyline';\nimport { NgMapsPolylinePoint } from './directives/polyline-point';\nimport { NgMapsRectangleDirective } from './directives/rectangle';\n\nexport const MAP_PROVIDER = new InjectionToken('Map Provider');\n\nexport function isGoogleMaps(token: string) {\n  return token === 'GoogleMaps';\n}\n\nexport function isHereMaps(token: string) {\n  return token === 'HereMaps';\n}\n\n/**\n * @internal\n */\nexport function coreDirectives() {\n  return [\n    NgMapsViewComponent,\n    NgMapsMarkerComponent,\n    NgMapsInfoWindowComponent,\n    NgMapsFitBoundsDirective,\n    NgMapsCircleDirective,\n    NgMapsPolygonDirective,\n    NgMapsPolyline,\n    NgMapsPolylinePoint,\n    NgMapsRectangleDirective,\n  ];\n}\n\n/**\n * The ng-maps core module. Contains all Directives/Services/Pipes\n */\n@NgModule({\n  declarations: coreDirectives(),\n  exports: coreDirectives(),\n})\nexport class NgMapsCoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsFitBoundsDirective.html":{"url":"directives/NgMapsFitBoundsDirective.html","title":"directive - NgMapsFitBoundsDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgMapsFitBoundsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/fit-bounds.ts\n        \n\n\n            \n                Description\n            \n            \n                Adds the given directive to the auto fit bounds feature when the value is true.\nTo make it work with you custom AGM component, you also have to implement the FitBoundsAccessor abstract class.\n\n            \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mapFitBounds]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _latestFitBoundsDetails\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _updateBounds\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapFitBounds\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_fitBoundsAccessor: FitBoundsAccessor, _fitBoundsService: FitBoundsService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/fit-bounds.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fitBoundsAccessor\n                                                  \n                                                        \n                                                                        FitBoundsAccessor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fitBoundsService\n                                                  \n                                                        \n                                                                        FitBoundsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapFitBounds\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/fit-bounds.ts:34\n                            \n                        \n                \n                    \n                        If the value is true, the element gets added to the bounds of the map.\nDefault: true.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _updateBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateBounds(newFitBoundsDetails?: FitBoundsDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:78\n                \n            \n\n\n            \n                \n                    Either the location changed, or visible status changed.\nPossible state changes are\ninvisible -> visible\nvisible -> invisible\nvisible -> visible (new location)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newFitBoundsDetails\n                                    \n                                                FitBoundsDetails\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _latestFitBoundsDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FitBoundsDetails | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/fit-bounds.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/fit-bounds.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Self,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport {\n  FitBoundsAccessor,\n  FitBoundsDetails,\n  FitBoundsService,\n} from '../services/fit-bounds';\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n *\n * @example\n * \n */\n@Directive({\n  selector: '[mapFitBounds]',\n})\nexport class NgMapsFitBoundsDirective implements OnInit, OnDestroy, OnChanges {\n  /**\n   * If the value is true, the element gets added to the bounds of the map.\n   * Default: true.\n   */\n  @Input() public mapFitBounds: boolean = true;\n\n  private _latestFitBoundsDetails: FitBoundsDetails | null = null;\n  private subscription: Subscription = new Subscription();\n\n  constructor(\n    @Self() private readonly _fitBoundsAccessor: FitBoundsAccessor,\n    private readonly _fitBoundsService: FitBoundsService,\n  ) {}\n\n  /**\n   * @internal\n   */\n  public ngOnChanges(changes: SimpleChanges) {\n    this._updateBounds();\n  }\n\n  /**\n   * @internal\n   */\n  public ngOnInit() {\n    this.subscription.add(\n      this._fitBoundsAccessor\n        .getFitBoundsDetails$()\n        .pipe(\n          distinctUntilChanged(\n            (x: FitBoundsDetails, y: FitBoundsDetails) =>\n              x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng,\n          ),\n        )\n        .subscribe({\n          next: (details) => this._updateBounds(details),\n          complete: () => this._updateBounds(),\n        }),\n    );\n  }\n\n  /**\n   * Either the location changed, or visible status changed.\n   * Possible state changes are\n   * invisible -> visible\n   * visible -> invisible\n   * visible -> visible (new location)\n   */\n  private _updateBounds(newFitBoundsDetails?: FitBoundsDetails) {\n    // either visibility will change, or location, so remove the old one anyway\n    if (this._latestFitBoundsDetails) {\n      this._fitBoundsService.removeFromBounds(\n        this._latestFitBoundsDetails.latLng,\n      );\n      // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n      // true -> false -> true, in which case we still need old value cached here\n    }\n\n    if (newFitBoundsDetails) {\n      this._latestFitBoundsDetails = newFitBoundsDetails;\n    }\n    if (this._latestFitBoundsDetails) {\n      if (this.mapFitBounds === true) {\n        this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n      } else {\n        this._fitBoundsService.removeFromBounds(\n          this._latestFitBoundsDetails.latLng,\n        );\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  public ngOnDestroy() {\n    this.subscription.unsubscribe();\n    if (this._latestFitBoundsDetails !== null) {\n      this._fitBoundsService.removeFromBounds(\n        this._latestFitBoundsDetails.latLng,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgMapsInfoWindowComponent.html":{"url":"components/NgMapsInfoWindowComponent.html","title":"component - NgMapsInfoWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NgMapsInfoWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/directives/info-window.ts\n\n\n\n    \n        Description\n    \n    \n        NgMapsInfoWindowComponent renders a info window inside a NgMapsMarkerComponent or standalone.\nExample\nimport { Component } from '@angular/core';\n\n@Component({\n selector: 'my-map-cmp',\n styles: [`\n   map-view {\n     height: 300px;\n   }\n`],\n template: `\n   \n     \n       \n         Hi, this is the content of the info window\n       \n     \n   \n `\n})\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                map-info-window\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _infoWindowAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _infoWindowOptionsInputs\n                            \n                            \n                                    Public\n                                    Optional\n                                content\n                            \n                            \n                                    Public\n                                    Readonly\n                                elementRef\n                            \n                            \n                                    Public\n                                    Optional\n                                hostMarker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerEventListeners\n                            \n                            \n                                    Private\n                                _setInfoWindowOptions\n                            \n                            \n                                    Private\n                                _updateOpenState\n                            \n                            \n                                    Public\n                                    Async\n                                close\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                toString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableAutoPan\n                            \n                            \n                                isOpen\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                maxWidth\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                infoWindowClose\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_infoWindowManager: InfoWindowManager, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/info-window.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _infoWindowManager\n                                                  \n                                                        \n                                                                        InfoWindowManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableAutoPan\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:81\n                            \n                        \n                \n                    \n                        Disable auto-pan on open. By default, the info window will pan the map so that it is fully\nvisible when it opens.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:112\n                            \n                        \n                \n                    \n                        Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:69\n                            \n                        \n                \n                    \n                        The latitude position of the info window (only usefull if you use it ouside of a NgMapsMarkerComponent).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:75\n                            \n                        \n                \n                    \n                        The longitude position of the info window (only usefull if you use it ouside of a NgMapsMarkerComponent).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxWidth\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:96\n                            \n                        \n                \n                    \n                        Maximum width of the infowindow, regardless of content's width. This value is only considered\nif it is set before a call to open. To change the maximum width when changing content, call\nclose, update maxWidth, and then open.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:89\n                            \n                        \n                \n                    \n                        All InfoWindows are displayed on the map in order of their zIndex, with higher values\ndisplaying in front of InfoWindows with lower values. By default, InfoWindows are displayed\naccording to their latitude, with InfoWindows of lower latitudes appearing in front of\nInfoWindows at higher latitudes. InfoWindows are always displayed in front of markers.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        infoWindowClose\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:118\n                            \n                        \n                \n                    \n                        Emits an event when the info window is closed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _registerEventListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    _registerEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _setInfoWindowOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    _setInfoWindowOptions(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _updateOpenState\n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateOpenState()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:185\n                \n            \n\n\n            \n                \n                    Closes the info window.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        id\n                        \n                    \n                \n            \n            \n                \n                    \n                    id()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open(event?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:178\n                \n            \n\n\n            \n                \n                    Opens the info window.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toString\n                        \n                    \n                \n            \n            \n                \n                    \n                    toString()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : (infoWindowId++).toString()\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/info-window.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _infoWindowAddedToManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/info-window.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        _infoWindowOptionsInputs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    'disableAutoPan',\n    'maxWidth',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/info-window.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('content', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/info-window.ts:107\n                        \n                    \n\n            \n                \n                    Holds the native element that is used for the info window content.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        elementRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/info-window.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        hostMarker\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgMapsMarkerComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/info-window.ts:101\n                        \n                    \n\n            \n                \n                    Holds the marker that is the host of the info window (if available)\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\n\nimport { InfoWindowManager } from '../services/managers/info-window.manager';\n\nimport { NgMapsMarkerComponent } from './marker';\n\nlet infoWindowId = 0;\n\n/**\n * NgMapsInfoWindowComponent renders a info window inside a {@link NgMapsMarkerComponent} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    map-view {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    \n *      \n *        \n *          Hi, this is the content of the info window\n *        \n *      \n *    \n *  `\n * })\n * ```\n */\n@Component({\n  selector: 'map-info-window',\n  template: `\n    \n      \n    \n  `,\n})\nexport class NgMapsInfoWindowComponent implements OnDestroy, OnChanges, OnInit {\n  // @todo how to add correct typings?\n  constructor(\n    protected _infoWindowManager: InfoWindowManager,\n    public readonly elementRef: ElementRef,\n  ) {}\n\n  private static _infoWindowOptionsInputs: Array = [\n    'disableAutoPan',\n    'maxWidth',\n  ];\n  /**\n   * The latitude position of the info window (only usefull if you use it ouside of a {@link\n   * NgMapsMarkerComponent}).\n   */\n  @Input() public latitude?: number;\n\n  /**\n   * The longitude position of the info window (only usefull if you use it ouside of a {@link\n   * NgMapsMarkerComponent}).\n   */\n  @Input() public longitude?: number;\n\n  /**\n   * Disable auto-pan on open. By default, the info window will pan the map so that it is fully\n   * visible when it opens.\n   */\n  @Input() public disableAutoPan?: boolean;\n\n  /**\n   * All InfoWindows are displayed on the map in order of their zIndex, with higher values\n   * displaying in front of InfoWindows with lower values. By default, InfoWindows are displayed\n   * according to their latitude, with InfoWindows of lower latitudes appearing in front of\n   * InfoWindows at higher latitudes. InfoWindows are always displayed in front of markers.\n   */\n  @Input() public zIndex?: number;\n\n  /**\n   * Maximum width of the infowindow, regardless of content's width. This value is only considered\n   * if it is set before a call to open. To change the maximum width when changing content, call\n   * close, update maxWidth, and then open.\n   */\n  @Input() public maxWidth?: number;\n\n  /**\n   * Holds the marker that is the host of the info window (if available)\n   */\n  public hostMarker?: NgMapsMarkerComponent;\n\n  /**\n   * Holds the native element that is used for the info window content.\n   */\n  @ViewChild('content', { static: true })\n  public content?: ElementRef;\n\n  /**\n   * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n   */\n  @Input() public isOpen: boolean = false;\n\n  /**\n   * Emits an event when the info window is closed.\n   */\n  @Output()\n  public infoWindowClose: EventEmitter = new EventEmitter();\n  private _infoWindowAddedToManager: boolean = false;\n  private _id: string = (infoWindowId++).toString();\n\n  public ngOnInit() {\n    this._infoWindowManager.addInfoWindow(this).then(() => {\n      this._infoWindowAddedToManager = true;\n      this._updateOpenState();\n      this._registerEventListeners();\n    });\n  }\n\n  /** @internal */\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this._infoWindowAddedToManager) {\n      return;\n    }\n    if (\n      (changes.latitude || changes.longitude) &&\n      typeof this.latitude === 'number' &&\n      typeof this.longitude === 'number'\n    ) {\n      this._infoWindowManager.setPosition(this);\n    }\n    if (changes.zIndex) {\n      this._infoWindowManager.setZIndex(this);\n    }\n    if (changes.isOpen) {\n      this._updateOpenState();\n    }\n    this._setInfoWindowOptions(changes);\n  }\n\n  private _registerEventListeners() {\n    this._infoWindowManager\n      .createEventObservable('closeclick', this)\n      .subscribe(() => {\n        this.isOpen = false;\n        this.infoWindowClose.emit();\n      });\n  }\n\n  private _updateOpenState() {\n    this.isOpen ? this.open() : this.close();\n  }\n\n  private _setInfoWindowOptions(changes: SimpleChanges) {\n    const options: SimpleChanges = {};\n    const optionKeys = Object.keys(changes).filter((k) =>\n      NgMapsInfoWindowComponent._infoWindowOptionsInputs.includes(k),\n    );\n    optionKeys.forEach((k) => {\n      options[k] = changes[k].currentValue;\n    });\n    this._infoWindowManager.setOptions(this, options);\n  }\n\n  /**\n   * Opens the info window.\n   */\n  public open(event?: any): Promise {\n    return this._infoWindowManager.open(this, event);\n  }\n\n  /**\n   * Closes the info window.\n   */\n  public async close(): Promise {\n    await this._infoWindowManager.close(this);\n    return this.infoWindowClose.emit();\n  }\n\n  /** @internal */\n  public id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  public toString(): string {\n    return `NgMapsInfoWindowComponent-${this._id.toString()}`;\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this._infoWindowManager.deleteInfoWindow(this);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'NgMapsInfoWindowComponent', 'selector': 'map-info-window'},{'name': 'NgMapsMarkerComponent', 'selector': 'map-marker'},{'name': 'NgMapsViewComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'NgMapsCircleDirective', 'selector': 'map-circle'},{'name': 'NgMapsFitBoundsDirective', 'selector': '[mapFitBounds]'},{'name': 'NgMapsPolygonDirective', 'selector': 'map-polygon'},{'name': 'NgMapsPolyline', 'selector': 'map-polyline'},{'name': 'NgMapsPolylinePoint', 'selector': 'map-polyline-point'},{'name': 'NgMapsRectangleDirective', 'selector': 'map-rectangle'}];\n    var ACTUAL_COMPONENT = {'name': 'NgMapsInfoWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgMapsMarkerComponent.html":{"url":"components/NgMapsMarkerComponent.html","title":"component - NgMapsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NgMapsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/directives/marker.ts\n\n\n\n    \n        Description\n    \n    \n        NgMapsMarkerComponent renders a map marker inside a NgMapsViewComponent.\n\n              \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n                    AfterContentInit\n                    FitBoundsAccessor\n                    MarkerOptions\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: FitBoundsAccessor, useExisting: forwardRef(() => NgMapsMarkerComponent),\n}\n                \n            \n\n\n            \n                selector\n                map-marker\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                _fitBoundsDetails$\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _markerAddedToManger\n                            \n                            \n                                    Public\n                                    Optional\n                                animation\n                            \n                            \n                                    Public\n                                infoWindow\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _addEventListeners\n                            \n                            \n                                    Protected\n                                _updateFitBoundsDetails\n                            \n                            \n                                    Public\n                                getFitBoundsDetails$\n                            \n                            \n                                    Private\n                                handleInfoWindowUpdate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                toString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                iconUrl\n                            \n                            \n                                label\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                markerClickable\n                            \n                            \n                                markerDraggable\n                            \n                            \n                                opacity\n                            \n                            \n                                openInfoWindow\n                            \n                            \n                                optimized\n                            \n                            \n                                title\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                drag\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragStart\n                            \n                            \n                                markerClick\n                            \n                            \n                                markerRightClick\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/marker.ts:211\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        markerManager\n                                                  \n                                                        \n                                                                        MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         MarkerIcon\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:108\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconUrl\n                    \n                \n                \n                    \n                        Type :     string | google.maps.Icon\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:106\n                            \n                        \n                \n                    \n                        Icon (the URL of the image) for the foreground.\nCan also be a MarkerIcon (google.maps.Icon in Google Maps Javascript api)\nSee google.maps.Icon\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     string | google.maps.MarkerLabel\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:92\n                            \n                        \n                \n                    \n                        The label (a single uppercase character) for the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:77\n                            \n                        \n                \n                    \n                        The latitude position of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:82\n                            \n                        \n                \n                    \n                        The longitude position of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerClickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:143\n                            \n                        \n                \n                    \n                        If true, the marker can be clicked. Default value is true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:98\n                            \n                        \n                \n                    \n                        If true, the marker can be dragged. Default value is false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:123\n                            \n                        \n                \n                    \n                        The marker's opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        openInfoWindow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:118\n                            \n                        \n                \n                    \n                        Whether to automatically open the child info window when the marker is clicked.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        optimized\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:129\n                            \n                        \n                \n                    \n                        Marker optimize flag. If it is false then it prevent duplicate rendering.\nDefault it is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:87\n                            \n                        \n                \n                    \n                        The title of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:113\n                            \n                        \n                \n                    \n                        If true, the marker is visible\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:137\n                            \n                        \n                \n                    \n                        All markers are displayed on the map in order of their zIndex, with higher values displaying in\nfront of markers with lower values. By default, markers are displayed according to their\nvertical position on screen, with lower markers appearing in front of markers further up the\nscreen.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        drag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:175\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:182\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:168\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:155\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerRightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:162\n                            \n                        \n                \n                    \n                        This event is fired when the user rightclicks on the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:196\n                            \n                        \n                \n                    \n                        This event is fired when the user mouses outside the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:189\n                            \n                        \n                \n                    \n                        This event is fired when the user mouses over the marker.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _addEventListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:309\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _updateFitBoundsDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateFitBoundsDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:301\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFitBoundsDetails$\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFitBoundsDetails$()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:297\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleInfoWindowUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleInfoWindowUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:225\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        id\n                        \n                    \n                \n            \n            \n                \n                    \n                    id()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:372\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:220\n                \n            \n\n\n            \n                \n                     @internal\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:237\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:382\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toString\n                        \n                    \n                \n            \n            \n                \n                    \n                    toString()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:377\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        _fitBoundsDetails$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/marker.ts:210\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/marker.ts:207\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _markerAddedToManger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/marker.ts:206\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        animation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"BOUNCE\" | \"DROP\" | null\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/marker.ts:149\n                        \n                    \n\n            \n                \n                    Which animation to play when marker is added to a map.\nThis can be 'BOUNCE' or 'DROP'\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        infoWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Default value : new QueryList()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(NgMapsInfoWindowComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/marker.ts:203\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/marker.ts:208\n                        \n                    \n\n\n        \n    \n\n\n\n\n    \n        Component\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-map',\n  styles: [\n    `\n      map-view {\n        height: 300px;\n      }\n    `,\n  ],\n  templateUrl: './my-map.component.html',\n})\nexport class MyComponent {\n  lat: number = 51.678418;\n  lng: number = 7.809007;\n  zoom: number = 10;\n}Template\n\n  \n\n    \n\n    \n        import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  QueryList,\n  SimpleChange,\n} from '@angular/core';\nimport { Observable, ReplaySubject, Subscription } from 'rxjs';\n\nimport { MarkerIcon } from '../interface/marker-icon';\nimport { MarkerOptions } from '../interface/marker-options';\nimport { FitBoundsAccessor, FitBoundsDetails } from '../services/fit-bounds';\nimport { MarkerManager } from '../services/managers/marker.manager';\n\nimport { NgMapsInfoWindowComponent } from './info-window';\n\nlet markerId = 0;\n\n/**\n * NgMapsMarkerComponent renders a map marker inside a {@link NgMapsViewComponent}.\n *\n * @example\n * \n *               \n * \n */\n@Component({\n  selector: 'map-marker',\n  providers: [\n    {\n      provide: FitBoundsAccessor,\n      useExisting: forwardRef(() => NgMapsMarkerComponent),\n    },\n  ],\n  inputs: [\n    'latitude',\n    'longitude',\n    'title',\n    'label',\n    'draggable: markerDraggable',\n    'iconUrl',\n    'icon',\n    'openInfoWindow',\n    'opacity',\n    'optimized',\n    'visible',\n    'zIndex',\n    'animation',\n  ],\n  outputs: [\n    'markerClick',\n    'dragStart',\n    'drag',\n    'dragEnd',\n    'mouseOver',\n    'mouseOut',\n  ],\n  template: '',\n})\nexport class NgMapsMarkerComponent\n  implements\n    OnDestroy,\n    OnChanges,\n    AfterContentInit,\n    FitBoundsAccessor,\n    MarkerOptions\n{\n  /**\n   * The latitude position of the marker.\n   */\n  @Input() public latitude?: number;\n\n  /**\n   * The longitude position of the marker.\n   */\n  @Input() public longitude?: number;\n\n  /**\n   * The title of the marker.\n   */\n  @Input() public title?: string;\n\n  /**\n   * The label (a single uppercase character) for the marker.\n   */\n  @Input() public label?: string | google.maps.MarkerLabel;\n\n  /**\n   * If true, the marker can be dragged. Default value is false.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('markerDraggable') public draggable: boolean = false;\n\n  /**\n   * Icon (the URL of the image) for the foreground.\n   * Can also be a MarkerIcon (google.maps.Icon in Google Maps Javascript api)\n   *\n   * @see google.maps.Icon\n   */\n  @Input() public iconUrl?: string | google.maps.Icon;\n\n  @Input() public icon?: MarkerIcon;\n\n  /**\n   * If true, the marker is visible\n   */\n  @Input() public visible: boolean = true;\n\n  /**\n   * Whether to automatically open the child info window when the marker is clicked.\n   */\n  @Input() public openInfoWindow: boolean = true;\n\n  /**\n   * The marker's opacity between 0.0 and 1.0.\n   */\n  @Input() public opacity: number = 1;\n\n  /**\n   * Marker optimize flag. If it is false then it prevent duplicate rendering.\n   * Default it is true\n   */\n  @Input() public optimized: boolean = true;\n\n  /**\n   * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n   * front of markers with lower values. By default, markers are displayed according to their\n   * vertical position on screen, with lower markers appearing in front of markers further up the\n   * screen.\n   */\n  @Input() public zIndex: number = 1;\n\n  /**\n   * If true, the marker can be clicked. Default value is true.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('markerClickable') public clickable: boolean = true;\n\n  /**\n   * Which animation to play when marker is added to a map.\n   * This can be 'BOUNCE' or 'DROP'\n   */\n  public animation?: 'BOUNCE' | 'DROP' | null;\n\n  /**\n   * This event emitter gets emitted when the user clicks on the marker.\n   */\n  @Output()\n  public markerClick: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired when the user rightclicks on the marker.\n   */\n  @Output()\n  public markerRightClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the marker.\n   */\n  @Output()\n  public dragStart: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the marker.\n   */\n  @Output()\n  public drag: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the marker.\n   */\n  @Output()\n  public dragEnd: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired when the user mouses over the marker.\n   */\n  @Output()\n  public mouseOver: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired when the user mouses outside the marker.\n   */\n  @Output()\n  public mouseOut: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * @internal\n   */\n  @ContentChildren(NgMapsInfoWindowComponent)\n  public infoWindow: QueryList =\n    new QueryList();\n\n  private _markerAddedToManger: boolean = false;\n  private _id: string;\n  private subscription: Subscription = new Subscription();\n\n  protected readonly _fitBoundsDetails$: ReplaySubject =\n    new ReplaySubject(1);\n\n  constructor(private markerManager: MarkerManager) {\n    this._id = (markerId++).toString();\n  }\n\n  /**\n   *  @internal\n   */\n  public ngAfterContentInit() {\n    this.handleInfoWindowUpdate();\n    this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n  }\n\n  private handleInfoWindowUpdate() {\n    if (this.infoWindow.length > 1) {\n      throw new Error('Expected no more than one info window.');\n    }\n    this.infoWindow.forEach((marker) => {\n      marker.hostMarker = this;\n    });\n  }\n\n  /**\n   * @internal\n   */\n  public ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (typeof this.latitude === 'string') {\n      this.latitude = Number(this.latitude);\n    }\n    if (typeof this.longitude === 'string') {\n      this.longitude = Number(this.longitude);\n    }\n    if (\n      typeof this.latitude !== 'number' ||\n      typeof this.longitude !== 'number'\n    ) {\n      return;\n    }\n    if (!this._markerAddedToManger) {\n      this.markerManager.addMarker(this).then(() => {\n        this._updateFitBoundsDetails();\n        this._markerAddedToManger = true;\n        this._addEventListeners();\n      });\n      return;\n    }\n    if (changes.latitude || changes.longitude) {\n      this.markerManager.updateMarkerPosition(this);\n      this._updateFitBoundsDetails();\n    }\n    if (changes.title) {\n      this.markerManager.updateTitle(this);\n    }\n    if (changes.label) {\n      this.markerManager.updateLabel(this);\n    }\n    if (changes.draggable) {\n      this.markerManager.updateDraggable(this);\n    }\n    if (changes.iconUrl) {\n      this.markerManager.updateIconLegacy(this);\n    }\n    if (changes.icon) {\n      this.markerManager.updateIcon(this);\n    }\n    if (changes.opacity) {\n      this.markerManager.updateOpacity(this);\n    }\n    if (changes.visible) {\n      this.markerManager.updateVisible(this);\n    }\n    if (changes.zIndex) {\n      this.markerManager.updateZIndex(this);\n    }\n    if (changes.clickable) {\n      this.markerManager.updateClickable(this);\n    }\n    if (changes.animation) {\n      this.markerManager.updateAnimation(this);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  public getFitBoundsDetails$(): Observable {\n    return this._fitBoundsDetails$.asObservable();\n  }\n\n  protected _updateFitBoundsDetails() {\n    if (this.latitude && this.longitude) {\n      this._fitBoundsDetails$.next({\n        latLng: { lat: this.latitude, lng: this.longitude },\n      });\n    }\n  }\n\n  protected _addEventListeners() {\n    const cs = this.markerManager\n      .createEventObservable(['click', 'pointerdown'], this)\n      .subscribe({\n        next: (event) => {\n          if (this.openInfoWindow) {\n            this.infoWindow.forEach((infoWindow) => infoWindow.open(event));\n          }\n          this.markerClick.emit(this);\n        },\n      });\n    this.subscription.add(cs);\n\n    const rc = this.markerManager\n      .createEventObservable('rightclick', this)\n      .subscribe(() => {\n        this.markerRightClick.emit();\n      });\n    this.subscription.add(rc);\n\n    const ds = this.markerManager\n      .createEventObservable('dragstart', this)\n      .subscribe((e: google.maps.MapMouseEvent) => {\n        this.dragStart.emit(e);\n      });\n    this.subscription.add(ds);\n\n    const d = this.markerManager\n      .createEventObservable('drag', this)\n      .subscribe((e: google.maps.MapMouseEvent) => {\n        this.drag.emit(e);\n      });\n    this.subscription.add(d);\n\n    const dragend = this.markerManager\n      .createEventObservable('dragend', this)\n      .subscribe((e: google.maps.MapMouseEvent) => {\n        this.dragEnd.emit(e);\n      });\n    this.subscription.add(dragend);\n\n    const mouseover = this.markerManager\n      .createEventObservable(\n        ['mouseover', 'pointerenter'],\n        this,\n      )\n      .subscribe((e: google.maps.MapMouseEvent) => {\n        this.mouseOver.emit(e);\n      });\n    this.subscription.add(mouseover);\n\n    const mouseout = this.markerManager\n      .createEventObservable(\n        ['mouseout', 'pointerleave'],\n        this,\n      )\n      .subscribe((e: google.maps.MapMouseEvent) => {\n        this.mouseOut.emit(e);\n      });\n    this.subscription.add(mouseout);\n  }\n\n  /** @internal */\n  public id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  public toString(): string {\n    return `NgMapsMarker-${this._id}`;\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this.markerManager.deleteMarker(this);\n    // unsubscribe all registered observable subscription\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgMapsInfoWindowComponent', 'selector': 'map-info-window'},{'name': 'NgMapsMarkerComponent', 'selector': 'map-marker'},{'name': 'NgMapsViewComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'NgMapsCircleDirective', 'selector': 'map-circle'},{'name': 'NgMapsFitBoundsDirective', 'selector': '[mapFitBounds]'},{'name': 'NgMapsPolygonDirective', 'selector': 'map-polygon'},{'name': 'NgMapsPolyline', 'selector': 'map-polyline'},{'name': 'NgMapsPolylinePoint', 'selector': 'map-polyline-point'},{'name': 'NgMapsRectangleDirective', 'selector': 'map-rectangle'}];\n    var ACTUAL_COMPONENT = {'name': 'NgMapsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsPolygonDirective.html":{"url":"directives/NgMapsPolygonDirective.html","title":"directive - NgMapsPolygonDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgMapsPolygonDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/polygon.ts\n        \n\n\n            \n                Description\n            \n            \n                NgMapsPolygon renders a polygon on a NgMapsView\n\n            \n\n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map-polygon\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _id\n                            \n                            \n                                    Private\n                                _polygonAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _polygonOptionsAttributes\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addEventListeners\n                            \n                            \n                                    Private\n                                _init\n                            \n                            \n                                    Private\n                                _updatePolygonOptions\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                editable\n                            \n                            \n                                fillColor\n                            \n                            \n                                fillOpacity\n                            \n                            \n                                geodesic\n                            \n                            \n                                paths\n                            \n                            \n                                polyDraggable\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                polyClick\n                            \n                            \n                                polyDblClick\n                            \n                            \n                                polyDrag\n                            \n                            \n                                polyDragEnd\n                            \n                            \n                                polyDragStart\n                            \n                            \n                                polyMouseDown\n                            \n                            \n                                polyMouseMove\n                            \n                            \n                                polyMouseOut\n                            \n                            \n                                polyMouseOver\n                            \n                            \n                                polyMouseUp\n                            \n                            \n                                polyRightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_polygonManager: PolygonManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/polygon.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _polygonManager\n                                                  \n                                                        \n                                                                        PolygonManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:49\n                            \n                        \n                \n                    \n                        Indicates whether this Polygon handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:62\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this shape by dragging the control\npoints shown at the vertices and on each segment. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:68\n                            \n                        \n                \n                    \n                        The fill color. All CSS3 colors are supported except for extended\nnamed colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:73\n                            \n                        \n                \n                    \n                        The fill opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        geodesic\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:82\n                            \n                        \n                \n                    \n                        When true, edges of the polygon are interpreted as geodesic and will\nfollow the curvature of the Earth. When false, edges of the polygon are\nrendered as straight lines in screen space. Note that the shape of a\ngeodesic polygon may appear to change when dragged, as the dimensions\nare maintained relative to the surface of the earth. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        paths\n                    \n                \n                \n                    \n                        Type :         Array | Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:95\n                            \n                        \n                \n                    \n                        The ordered sequence of coordinates that designates a closed loop.\nUnlike polylines, a polygon may consist of one or more paths.\n As a result, the paths property may specify one or more arrays of\nLatLng coordinates. Paths are closed automatically; do not repeat the\nfirst vertex of the path as the last vertex. Simple polygons may be\ndefined using a single array of LatLngs. More complex polygons may\nspecify an array of arrays. Any simple arrays are converted into Arrays.\nInserting or removing LatLngs from the Array will automatically update\nthe polygon on the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:56\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this shape over the map. The geodesic\nproperty defines the mode of dragging. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:101\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended\nnamed colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:106\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:111\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:116\n                            \n                        \n                \n                    \n                        Whether this polygon is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:121\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        polyClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:127\n                            \n                        \n                \n                    \n                        This event is fired when the DOM click event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:134\n                            \n                        \n                \n                    \n                        This event is fired when the DOM dblclick event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDrag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:141\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:147\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:153\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:160\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:167\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:174\n                            \n                        \n                \n                    \n                        This event is fired on Polygon mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:181\n                            \n                        \n                \n                    \n                        This event is fired on Polygon mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:188\n                            \n                        \n                \n                    \n                        This event is fired whe the DOM mouseup event is fired on the Polygon\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyRightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:195\n                            \n                        \n                \n                    \n                        This even is fired when the Polygon is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _addEventListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _init\n                        \n                    \n                \n            \n            \n                \n                    \n                    _init()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _updatePolygonOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    _updatePolygonOptions(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:285\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     google.maps.PolygonOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        id\n                        \n                    \n                \n            \n            \n                \n                    \n                    id()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:300\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:305\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polygon.ts:198\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _polygonAddedToManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polygon.ts:199\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        _polygonOptionsAttributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    'clickable',\n    'draggable',\n    'editable',\n    'fillColor',\n    'fillOpacity',\n    'geodesic',\n    'icon',\n    'map',\n    'paths',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'draggable',\n    'editable',\n    'visible',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polygon.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polygon.ts:200\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n    \n        Component\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-map',\n  styles: [\n    `\n      map-view {\n        height: 300px;\n      }\n    `,\n  ],\n  templateUrl: './my-map.component.html',\n})\nexport class MyMapComponent {\n  lat: number = 0;\n  lng: number = 0;\n  zoom: number = 10;\n  paths: Array = [\n    { lat: 0, lng: 10 },\n    { lat: 0, lng: 20 },\n    { lat: 10, lng: 20 },\n    { lat: 10, lng: 10 },\n    { lat: 0, lng: 10 },\n  ];\n  // Nesting paths will create a hole where they overlap;\n  nestedPaths: Array> = [\n    [\n      { lat: 0, lng: 10 },\n      { lat: 0, lng: 20 },\n      { lat: 10, lng: 20 },\n      { lat: 10, lng: 10 },\n      { lat: 0, lng: 10 },\n    ],\n    [\n      { lat: 0, lng: 15 },\n      { lat: 0, lng: 20 },\n      { lat: 5, lng: 20 },\n      { lat: 5, lng: 15 },\n      { lat: 0, lng: 15 },\n    ],\n  ];\n}Template\n\n  \n\n    \n\n    \n        import {\n  AfterContentInit,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { GeoPoint } from '../interface/geo-point';\nimport { PolygonManager } from '../services/managers/polygon.manager';\n\n/**\n * NgMapsPolygon renders a polygon on a {@link https://ng-maps.github.io/core/components/NgMapsViewComponent.html|NgMapsView}\n */\n@Directive({\n  selector: 'map-polygon',\n})\nexport class NgMapsPolygonDirective\n  implements OnDestroy, OnChanges, AfterContentInit\n{\n  constructor(private _polygonManager: PolygonManager) {}\n\n  private static _polygonOptionsAttributes: Array = [\n    'clickable',\n    'draggable',\n    'editable',\n    'fillColor',\n    'fillOpacity',\n    'geodesic',\n    'icon',\n    'map',\n    'paths',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'draggable',\n    'editable',\n    'visible',\n  ];\n  /**\n   * Indicates whether this Polygon handles mouse events. Defaults to true.\n   */\n  @Input() public clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this shape over the map. The geodesic\n   * property defines the mode of dragging. Defaults to false.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('polyDraggable') public draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this shape by dragging the control\n   * points shown at the vertices and on each segment. Defaults to false.\n   */\n  @Input() public editable: boolean = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended\n   * named colors.\n   */\n  @Input() public fillColor?: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0\n   */\n  @Input() public fillOpacity?: number;\n\n  /**\n   * When true, edges of the polygon are interpreted as geodesic and will\n   * follow the curvature of the Earth. When false, edges of the polygon are\n   * rendered as straight lines in screen space. Note that the shape of a\n   * geodesic polygon may appear to change when dragged, as the dimensions\n   * are maintained relative to the surface of the earth. Defaults to false.\n   */\n  @Input() public geodesic: boolean = false;\n\n  /**\n   * The ordered sequence of coordinates that designates a closed loop.\n   * Unlike polylines, a polygon may consist of one or more paths.\n   *  As a result, the paths property may specify one or more arrays of\n   * LatLng coordinates. Paths are closed automatically; do not repeat the\n   * first vertex of the path as the last vertex. Simple polygons may be\n   * defined using a single array of LatLngs. More complex polygons may\n   * specify an array of arrays. Any simple arrays are converted into Arrays.\n   * Inserting or removing LatLngs from the Array will automatically update\n   * the polygon on the map.\n   */\n  @Input() public paths: Array | Array> = [];\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended\n   * named colors.\n   */\n  @Input() public strokeColor?: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() public strokeOpacity?: number;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() public strokeWeight?: number;\n\n  /**\n   * Whether this polygon is visible on the map. Defaults to true.\n   */\n  @Input() public visible?: boolean;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() public zIndex?: number;\n\n  /**\n   * This event is fired when the DOM click event is fired on the Polygon.\n   */\n  @Output()\n  public polyClick: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired when the DOM dblclick event is fired on the Polygon.\n   */\n  @Output()\n  public polyDblClick: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the polygon.\n   */\n  @Output()\n  public polyDrag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the polygon.\n   */\n  @Output()\n  public polyDragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the polygon.\n   */\n  @Output()\n  public polyDragStart: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the Polygon.\n   */\n  @Output()\n  public polyMouseDown: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the Polygon.\n   */\n  @Output()\n  public polyMouseMove: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired on Polygon mouseout.\n   */\n  @Output()\n  public polyMouseOut: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired on Polygon mouseover.\n   */\n  @Output()\n  public polyMouseOver: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired whe the DOM mouseup event is fired on the Polygon\n   */\n  @Output()\n  public polyMouseUp: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This even is fired when the Polygon is right-clicked on.\n   */\n  @Output()\n  public polyRightClick: EventEmitter =\n    new EventEmitter();\n\n  private _id?: string;\n  private _polygonAddedToManager: boolean = false;\n  private subscription: Subscription = new Subscription();\n\n  /** @internal */\n  public ngAfterContentInit() {\n    if (!this._polygonAddedToManager) {\n      this._init();\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): any {\n    if (!this._polygonAddedToManager) {\n      this._init();\n      return;\n    }\n\n    this._polygonManager.setPolygonOptions(\n      this,\n      this._updatePolygonOptions(changes),\n    );\n  }\n\n  private _init() {\n    this._polygonManager.addPolygon(this);\n    this._polygonAddedToManager = true;\n    this._addEventListeners();\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      {\n        name: 'click',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyClick.emit(ev),\n      },\n      {\n        name: 'dblclick',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyDblClick.emit(ev),\n      },\n      { name: 'drag', handler: (ev: MouseEvent) => this.polyDrag.emit(ev) },\n      {\n        name: 'dragend',\n        handler: (ev: MouseEvent) => this.polyDragEnd.emit(ev),\n      },\n      {\n        name: 'dragstart',\n        handler: (ev: MouseEvent) => this.polyDragStart.emit(ev),\n      },\n      {\n        name: 'mousedown',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyMouseDown.emit(ev),\n      },\n      {\n        name: 'mousemove',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyMouseMove.emit(ev),\n      },\n      {\n        name: 'mouseout',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyMouseOut.emit(ev),\n      },\n      {\n        name: 'mouseover',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyMouseOver.emit(ev),\n      },\n      {\n        name: 'mouseup',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyMouseUp.emit(ev),\n      },\n      {\n        name: 'rightclick',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyRightClick.emit(ev),\n      },\n    ];\n    handlers.forEach((obj) => {\n      const os = this._polygonManager\n        .createEventObservable(obj.name, this)\n        // FIXME\n        // @ts-ignore\n        .subscribe(obj.handler);\n      this.subscription.add(os);\n    });\n  }\n\n  private _updatePolygonOptions(\n    changes: SimpleChanges,\n  ): google.maps.PolygonOptions {\n    return Object.keys(changes)\n      .filter(\n        (k) =>\n          NgMapsPolygonDirective._polygonOptionsAttributes.indexOf(k) !== -1,\n      )\n      .reduce((obj: any, k: string) => {\n        obj[k] = changes[k].currentValue;\n        return obj;\n      }, {});\n  }\n\n  /** @internal */\n  public id(): string | undefined {\n    return this._id;\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this._polygonManager.deletePolygon(this);\n    // unsubscribe all registered observable subscriptions\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsPolyline.html":{"url":"directives/NgMapsPolyline.html","title":"directive - NgMapsPolyline","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgMapsPolyline\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/polyline.ts\n        \n\n\n            \n                Description\n            \n            \n                NgMapsPolyline renders a polyline on a NgMapsView\n\n            \n\n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map-polyline\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _polylineAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _polylineOptionsAttributes\n                            \n                            \n                                    Public\n                                    Optional\n                                points\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addEventListeners\n                            \n                            \n                                    Public\n                                _getPoints\n                            \n                            \n                                    Private\n                                _init\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                editable\n                            \n                            \n                                geodesic\n                            \n                            \n                                icons\n                            \n                            \n                                polylineDraggable\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                lineClick\n                            \n                            \n                                lineDblClick\n                            \n                            \n                                lineDrag\n                            \n                            \n                                lineDragEnd\n                            \n                            \n                                lineDragStart\n                            \n                            \n                                lineMouseDown\n                            \n                            \n                                lineMouseMove\n                            \n                            \n                                lineMouseOut\n                            \n                            \n                                lineMouseOver\n                            \n                            \n                                lineMouseUp\n                            \n                            \n                                lineRightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_polylineManager: PolylineManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/polyline.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _polylineManager\n                                                  \n                                                        \n                                                                        PolylineManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:46\n                            \n                        \n                \n                    \n                        Indicates whether this Polyline handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:59\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this shape by dragging the control points shown at the\nvertices and on each segment. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        geodesic\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:67\n                            \n                        \n                \n                    \n                        When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\nthe Earth. When false, edges of the polygon are rendered as straight lines in screen space.\nNote that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\nare maintained relative to the surface of the earth. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        icons\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:87\n                            \n                        \n                \n                    \n                        The icons to be rendered along the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polylineDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:53\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this shape over the map. The geodesic property defines the\nmode of dragging. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:72\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:77\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:82\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:92\n                            \n                        \n                \n                    \n                        Whether this polyline is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:97\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        lineClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:103\n                            \n                        \n                \n                    \n                        This event is fired when the DOM click event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:110\n                            \n                        \n                \n                    \n                        This event is fired when the DOM dblclick event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDrag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:117\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:123\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:129\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:136\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:143\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:150\n                            \n                        \n                \n                    \n                        This event is fired on Polyline mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:157\n                            \n                        \n                \n                    \n                        This event is fired on Polyline mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:164\n                            \n                        \n                \n                    \n                        This event is fired whe the DOM mouseup event is fired on the Polyline\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineRightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:171\n                            \n                        \n                \n                    \n                        This even is fired when the Polyline is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _addEventListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:225\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        _getPoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    _getPoints()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _init\n                        \n                    \n                \n            \n            \n                \n                    \n                    _init()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        id\n                        \n                    \n                \n            \n            \n                \n                    \n                    id()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:298\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polyline.ts:180\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _polylineAddedToManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polyline.ts:181\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        _polylineOptionsAttributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    'draggable',\n    'editable',\n    'visible',\n    'geodesic',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'zIndex',\n    'icons',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polyline.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        points\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(NgMapsPolylinePoint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polyline.ts:178\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polyline.ts:182\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n    \n        Polyline\nExample\nComponent\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-map',\n  styles: [\n    `\n      .agm-map-container {\n        height: 300px;\n      }\n    `,\n  ],\n  templateUrl: './my-map.component.html',\n})\nexport class MyMapComponent {}Template\n\n  \n    \n    \n    \n    \n  \n\n    \n\n    \n        import {\n  AfterContentInit,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  QueryList,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { PolylineManager } from '../services/managers/polyline-manager';\n\nimport { NgMapsPolylinePoint } from './polyline-point';\n\nlet polylineId = 0;\n\n/**\n * NgMapsPolyline renders a polyline on a {@link https://ng-maps.github.io/core/components/NgMapsViewComponent.html|NgMapsView}\n */\n@Directive({\n  selector: 'map-polyline',\n})\nexport class NgMapsPolyline implements OnDestroy, OnChanges, AfterContentInit {\n  constructor(private _polylineManager: PolylineManager) {\n    this._id = (polylineId++).toString();\n  }\n\n  private static _polylineOptionsAttributes: Array = [\n    'draggable',\n    'editable',\n    'visible',\n    'geodesic',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'zIndex',\n    'icons',\n  ];\n  /**\n   * Indicates whether this Polyline handles mouse events. Defaults to true.\n   */\n  @Input() public clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this shape over the map. The geodesic property defines the\n   * mode of dragging. Defaults to false.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('polylineDraggable') public draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this shape by dragging the control points shown at the\n   * vertices and on each segment. Defaults to false.\n   */\n  @Input() public editable: boolean = false;\n\n  /**\n   * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n   * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n   * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n   * are maintained relative to the surface of the earth. Defaults to false.\n   */\n  @Input() public geodesic: boolean = false;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() public strokeColor?: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0.\n   */\n  @Input() public strokeOpacity?: number;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() public strokeWeight?: number;\n\n  /**\n   * The icons to be rendered along the polyline.\n   */\n  @Input() public icons?: Array;\n\n  /**\n   * Whether this polyline is visible on the map. Defaults to true.\n   */\n  @Input() public visible: boolean = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() public zIndex?: number;\n\n  /**\n   * This event is fired when the DOM click event is fired on the Polyline.\n   */\n  @Output()\n  public lineClick: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired when the DOM dblclick event is fired on the Polyline.\n   */\n  @Output()\n  public lineDblClick: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the polyline.\n   */\n  @Output()\n  public lineDrag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the polyline.\n   */\n  @Output()\n  public lineDragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the polyline.\n   */\n  @Output()\n  public lineDragStart: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the Polyline.\n   */\n  @Output()\n  public lineMouseDown: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the Polyline.\n   */\n  @Output()\n  public lineMouseMove: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired on Polyline mouseout.\n   */\n  @Output()\n  public lineMouseOut: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired on Polyline mouseover.\n   */\n  @Output()\n  public lineMouseOver: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is fired whe the DOM mouseup event is fired on the Polyline\n   */\n  @Output()\n  public lineMouseUp: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This even is fired when the Polyline is right-clicked on.\n   */\n  @Output()\n  public lineRightClick: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * @internal\n   */\n  @ContentChildren(NgMapsPolylinePoint)\n  public points?: QueryList;\n\n  private _id: string;\n  private _polylineAddedToManager: boolean = false;\n  private subscription: Subscription = new Subscription();\n\n  /** @internal */\n  public ngAfterContentInit() {\n    if (this.points) {\n      this.points.forEach((point: NgMapsPolylinePoint) => {\n        const subscription = point.positionChanged.subscribe(() => {\n          this._polylineManager.updatePolylinePoints(this);\n        });\n        this.subscription.add(subscription);\n      });\n\n      const s = this.points.changes.subscribe(() =>\n        this._polylineManager.updatePolylinePoints(this),\n      );\n      this.subscription.add(s);\n    }\n    if (!this._polylineAddedToManager) {\n      this._init();\n    }\n    this._polylineManager.updatePolylinePoints(this);\n  }\n\n  public ngOnChanges(changes: SimpleChanges): any {\n    if (!this._polylineAddedToManager) {\n      this._init();\n      return;\n    }\n\n    const options: { [propName: string]: any } = {};\n    const optionKeys = Object.keys(changes).filter(\n      (k) => NgMapsPolyline._polylineOptionsAttributes.indexOf(k) !== -1,\n    );\n    optionKeys.forEach((k) => (options[k] = changes[k].currentValue));\n    this._polylineManager.setPolylineOptions(this, options);\n  }\n\n  private _init() {\n    this._polylineManager.addPolyline(this);\n    this._polylineAddedToManager = true;\n    this._addEventListeners();\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      {\n        name: 'click',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineClick.emit(ev),\n      },\n      {\n        name: 'dblclick',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineDblClick.emit(ev),\n      },\n      { name: 'drag', handler: (ev: MouseEvent) => this.lineDrag.emit(ev) },\n      {\n        name: 'dragend',\n        handler: (ev: MouseEvent) => this.lineDragEnd.emit(ev),\n      },\n      {\n        name: 'dragstart',\n        handler: (ev: MouseEvent) => this.lineDragStart.emit(ev),\n      },\n      {\n        name: 'mousedown',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineMouseDown.emit(ev),\n      },\n      {\n        name: 'mousemove',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineMouseMove.emit(ev),\n      },\n      {\n        name: 'mouseout',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineMouseOut.emit(ev),\n      },\n      {\n        name: 'mouseover',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineMouseOver.emit(ev),\n      },\n      {\n        name: 'mouseup',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineMouseUp.emit(ev),\n      },\n      {\n        name: 'rightclick',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineRightClick.emit(ev),\n      },\n    ];\n    handlers.forEach((obj) => {\n      const os = this._polylineManager\n        .createEventObservable(obj.name, this)\n        // FIXME\n        // @ts-ignore\n        .subscribe(obj.handler);\n      this.subscription.add(os);\n    });\n  }\n\n  /** @internal */\n  public _getPoints(): Array {\n    if (this.points) {\n      return this.points.toArray();\n    } else {\n      return [];\n    }\n  }\n\n  /** @internal */\n  public id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this._polylineManager.deletePolyline(this);\n    // unsubscribe all registered observable subscriptions\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsPolylinePoint.html":{"url":"directives/NgMapsPolylinePoint.html","title":"directive - NgMapsPolylinePoint","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgMapsPolylinePoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/polyline-point.ts\n        \n\n\n            \n                Description\n            \n            \n                NgMapsPolylinePoint represents one element of a polyline within a  NgMapsPolyline\n\n            \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map-polyline-point\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                positionChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/polyline-point.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline-point.ts:21\n                            \n                        \n                \n                    \n                        The latitude position of the point.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline-point.ts:26\n                            \n                        \n                \n                    \n                        The longitude position of the point;\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        positionChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline-point.ts:32\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the position of the point changed.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline-point.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\n\n/**\n * NgMapsPolylinePoint represents one element of a polyline within a  {@link\n * NgMapsPolyline}\n */\n@Directive({\n  selector: 'map-polyline-point',\n})\nexport class NgMapsPolylinePoint implements OnChanges {\n  /**\n   * The latitude position of the point.\n   */\n  @Input() public latitude?: number;\n\n  /**\n   * The longitude position of the point;\n   */\n  @Input() public longitude?: number;\n\n  /**\n   * This event emitter gets emitted when the position of the point changed.\n   */\n  @Output()\n  public positionChanged: EventEmitter =\n    new EventEmitter();\n\n  constructor() {}\n\n  public ngOnChanges(changes: SimpleChanges): any {\n    if (changes.latitude || changes.longitude) {\n      const position: google.maps.LatLngLiteral = {\n        lat: changes.latitude ? changes.latitude.currentValue : this.latitude,\n        lng: changes.longitude\n          ? changes.longitude.currentValue\n          : this.longitude,\n      } as google.maps.LatLngLiteral;\n      this.positionChanged.emit(position);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsRectangleDirective.html":{"url":"directives/NgMapsRectangleDirective.html","title":"directive - NgMapsRectangleDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgMapsRectangleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/rectangle.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnChanges\n                            OnDestroy\n                            RectangleOptions\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map-rectangle\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _mapOptions\n                            \n                            \n                                    Private\n                                _rectangleAddedToManager\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerEventListeners\n                            \n                            \n                                    Private\n                                _updateRectangleOptionsChanges\n                            \n                            \n                                    Public\n                                getBounds\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                east\n                            \n                            \n                                editable\n                            \n                            \n                                fillColor\n                            \n                            \n                                fillOpacity\n                            \n                            \n                                north\n                            \n                            \n                                rectangleDraggable\n                            \n                            \n                                south\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokePosition\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                west\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                boundsChange\n                            \n                            \n                                drag\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragStart\n                            \n                            \n                                mouseDown\n                            \n                            \n                                mouseMove\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                mouseUp\n                            \n                            \n                                rectangleClick\n                            \n                            \n                                rectangleDblClick\n                            \n                            \n                                rightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_manager: RectangleManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/rectangle.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _manager\n                                                  \n                                                        \n                                                                        RectangleManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:60\n                            \n                        \n                \n                    \n                        Indicates whether this Rectangle handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        east\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:45\n                            \n                        \n                \n                    \n                        The east position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:72\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this rectangle by dragging the control points shown at\nthe center and around the circumference of the rectangle. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:77\n                            \n                        \n                \n                    \n                        The fill color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:82\n                            \n                        \n                \n                    \n                        The fill opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        north\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:40\n                            \n                        \n                \n                    \n                        The north position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:66\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this rectangle over the map. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        south\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:50\n                            \n                        \n                \n                    \n                        The south position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:87\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:92\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokePosition\n                    \n                \n                \n                    \n                        Type :     \"CENTER\" | \"INSIDE\" | \"OUTSIDE\"\n\n                    \n                \n                \n                    \n                        Default value : 'CENTER'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:98\n                            \n                        \n                \n                    \n                        The stroke position. Defaults to CENTER.\nThis property is not supported on Internet Explorer 8 and earlier.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:103\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:108\n                            \n                        \n                \n                    \n                        Whether this rectangle is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        west\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:55\n                            \n                        \n                \n                    \n                        The west position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:113\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        boundsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:119\n                            \n                        \n                \n                    \n                        This event is fired when the rectangle's is changed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        drag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:140\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:146\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:152\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:158\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:164\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:170\n                            \n                        \n                \n                    \n                        This event is fired on rectangle mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:176\n                            \n                        \n                \n                    \n                        This event is fired on rectangle mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:182\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mouseup event is fired on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:126\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:133\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:188\n                            \n                        \n                \n                    \n                        This event is fired when the rectangle is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _registerEventListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    _registerEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:236\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _updateRectangleOptionsChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateRectangleOptionsChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:282\n                \n            \n\n\n            \n                \n                    Gets the LatLngBounds of this Rectangle.\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        _mapOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/rectangle.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _rectangleAddedToManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/rectangle.ts:190\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/rectangle.ts:192\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { BoundsLiteral } from '../interface/bounds';\nimport { RectangleOptions } from '../interface/rectangle-options';\nimport { RectangleManager } from '../services/managers/rectangle-manager';\n\n@Directive({\n  selector: 'map-rectangle',\n})\nexport class NgMapsRectangleDirective\n  implements OnInit, OnChanges, OnDestroy, RectangleOptions\n{\n  constructor(private _manager: RectangleManager) {}\n\n  private static _mapOptions: Array = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ];\n  /**\n   * The north position of the rectangle (required).\n   */\n  @Input() public north?: number;\n\n  /**\n   * The east position of the rectangle (required).\n   */\n  @Input() public east?: number;\n\n  /**\n   * The south position of the rectangle (required).\n   */\n  @Input() public south?: number;\n\n  /**\n   * The west position of the rectangle (required).\n   */\n  @Input() public west?: number;\n\n  /**\n   * Indicates whether this Rectangle handles mouse events. Defaults to true.\n   */\n  @Input() public clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this rectangle over the map. Defaults to false.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('rectangleDraggable') public draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this rectangle by dragging the control points shown at\n   * the center and around the circumference of the rectangle. Defaults to false.\n   */\n  @Input() public editable: boolean = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() public fillColor?: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0.\n   */\n  @Input() public fillOpacity?: number;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() public strokeColor?: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() public strokeOpacity?: number;\n\n  /**\n   * The stroke position. Defaults to CENTER.\n   * This property is not supported on Internet Explorer 8 and earlier.\n   */\n  @Input() public strokePosition: 'CENTER' | 'INSIDE' | 'OUTSIDE' = 'CENTER';\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() public strokeWeight: number = 0;\n\n  /**\n   * Whether this rectangle is visible on the map. Defaults to true.\n   */\n  @Input() public visible: boolean = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() public zIndex?: number;\n\n  /**\n   * This event is fired when the rectangle's is changed.\n   */\n  @Output()\n  public boundsChange: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the rectangle.\n   */\n  @Output()\n  public rectangleClick: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the rectangle.\n   */\n  @Output()\n  public rectangleDblClick: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the rectangle.\n   */\n  @Output()\n  public drag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the rectangle.\n   */\n  @Output()\n  public dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the rectangle.\n   */\n  @Output()\n  public dragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the rectangle.\n   */\n  @Output()\n  public mouseDown: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the rectangle.\n   */\n  @Output()\n  public mouseMove: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on rectangle mouseout.\n   */\n  @Output()\n  public mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on rectangle mouseover.\n   */\n  @Output()\n  public mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mouseup event is fired on the rectangle.\n   */\n  @Output()\n  public mouseUp: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the rectangle is right-clicked on.\n   */\n  @Output()\n  public rightClick: EventEmitter = new EventEmitter();\n\n  private _rectangleAddedToManager: boolean = false;\n\n  private subscription: Subscription = new Subscription();\n\n  /** @internal */\n  public ngOnInit() {\n    this._manager.addRectangle(this);\n    this._rectangleAddedToManager = true;\n    this._registerEventListeners();\n  }\n\n  /** @internal */\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this._rectangleAddedToManager) {\n      return;\n    }\n    if (changes.north || changes.east || changes.south || changes.west) {\n      this._manager.setBounds(this);\n    }\n    if (changes.editable) {\n      this._manager.setEditable(this);\n    }\n    if (changes.draggable) {\n      this._manager.setDraggable(this);\n    }\n    if (changes.visible) {\n      this._manager.setVisible(this);\n    }\n    this._updateRectangleOptionsChanges(changes);\n  }\n\n  private _updateRectangleOptionsChanges(changes: {\n    [propName: string]: SimpleChange;\n  }) {\n    const options: { [propName: string]: any } = {};\n    const optionKeys = Object.keys(changes).filter(\n      (k) => NgMapsRectangleDirective._mapOptions.indexOf(k) !== -1,\n    );\n    optionKeys.forEach((k) => {\n      options[k] = changes[k].currentValue;\n    });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  private _registerEventListeners() {\n    const events: Map> = new Map\n    >();\n    events.set('bounds_changed', this.boundsChange);\n    events.set('click', this.rectangleClick);\n    events.set('dblclick', this.rectangleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragStart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('rightclick', this.rightClick);\n\n    events.forEach((eventEmitter, eventName) => {\n      this.subscription.add(\n        this._manager\n          .createEventObservable(eventName, this)\n          .subscribe((value) => {\n            switch (eventName) {\n              case 'bounds_changed':\n                this._manager\n                  .getBounds(this)\n                  .then((bounds) => eventEmitter.emit(bounds));\n                break;\n              default:\n                eventEmitter.emit(value);\n            }\n          }),\n      );\n    });\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this._manager.removeRectangle(this);\n  }\n\n  /**\n   * Gets the LatLngBounds of this Rectangle.\n   */\n  public getBounds(): Promise {\n    return this._manager.getBounds(this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoOpMapsAPILoader.html":{"url":"classes/NoOpMapsAPILoader.html","title":"class - NoOpMapsAPILoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoOpMapsAPILoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/maps-api-loader/noop-maps-api-loader.ts\n        \n\n\n            \n                Description\n            \n            \n                When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a \nTag.\nIt's important that the Google Maps API script gets loaded first on the page.\n\n            \n\n            \n                Extends\n            \n            \n                        MapsAPILoader\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Optional\n                                _document\n                            \n                            \n                                    Protected\n                                    Optional\n                                _window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configure\n                            \n                            \n                                    Public\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/maps-api-loader/noop-maps-api-loader.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        _document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                        \n                            \n                                Inherited from         MapsAPILoader\n\n                            \n                        \n                    \n                        \n                                Defined in         MapsAPILoader:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        _window\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Window | null\n\n                    \n                \n                        \n                            \n                                Inherited from         MapsAPILoader\n\n                            \n                        \n                    \n                        \n                                Defined in         MapsAPILoader:5\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        configure\n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MapsAPILoader\n\n                \n            \n            \n                \n                        Defined in         MapsAPILoader:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Inherited from         MapsAPILoader\n\n                \n            \n            \n                \n                        Defined in         MapsAPILoader:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject } from '@angular/core';\n\nimport { MapsAPILoader } from './maps-api-loader';\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a ``\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nexport class NoOpMapsAPILoader extends MapsAPILoader {\n  constructor(@Inject(DOCUMENT) document: any) {\n    super();\n    this._document = document as Document;\n    this._window = this._document.defaultView;\n  }\n\n  public load(): Promise {\n    return Promise.resolve();\n  }\n\n  public configure(config: any): void {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Padding.html":{"url":"interfaces/Padding.html","title":"interface - Padding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Padding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/padding.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bottom\n                                        \n                                \n                                \n                                        \n                                            left\n                                        \n                                \n                                \n                                        \n                                            right\n                                        \n                                \n                                \n                                        \n                                            top\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bottom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        right:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        top:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Padding {\n  bottom: number;\n  left: number;\n  right: number;\n  top: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PolygonManager.html":{"url":"injectables/PolygonManager.html","title":"injectable - PolygonManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PolygonManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/polygon.manager.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _polygons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                addPolygon\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                deletePolygon\n                            \n                            \n                                    Public\n                                    Abstract\n                                setPolygonOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                updatePolygon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/polygon.manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        addPolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPolygon(path: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polygon.manager.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, path: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polygon.manager.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        deletePolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolygon(paths: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polygon.manager.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                                NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setPolygonOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolygonOptions(path: NgMapsPolygonDirective, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polygon.manager.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updatePolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolygon(polygon: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polygon.manager.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    polygon\n                                    \n                                                NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _polygons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map\n  >()\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/managers/polygon.manager.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { NgMapsPolygonDirective } from '../../directives/polygon';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\n\n@Injectable()\nexport abstract class PolygonManager {\n  protected _polygons: Map> = new Map\n  >();\n\n  constructor(\n    protected _mapsWrapper: MapsApiWrapper,\n    protected _zone: NgZone,\n  ) {}\n\n  public abstract addPolygon(\n    path: NgMapsPolygonDirective,\n  ): Promise | void;\n\n  public abstract updatePolygon(polygon: NgMapsPolygonDirective): Promise;\n\n  public abstract setPolygonOptions(\n    path: NgMapsPolygonDirective,\n    options: { [propName: string]: any },\n  ): Promise;\n\n  public abstract deletePolygon(paths: NgMapsPolygonDirective): Promise;\n\n  public abstract createEventObservable(\n    eventName: string,\n    path: NgMapsPolygonDirective,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PolylineManager.html":{"url":"injectables/PolylineManager.html","title":"injectable - PolylineManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PolylineManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/polyline-manager.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _polylines\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _convertPoints\n                            \n                            \n                                    Public\n                                    Abstract\n                                addPolyline\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                deletePolyline\n                            \n                            \n                                    Public\n                                    Abstract\n                                setPolylineOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                updatePolylinePoints\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/polyline-manager.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _convertPoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    _convertPoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        addPolyline\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:42\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        deletePolyline\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setPolylineOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolylineOptions(line: NgMapsPolyline, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updatePolylinePoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolylinePoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _polylines\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map\n  >()\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/managers/polyline-manager.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { NgMapsPolyline } from '../../directives/polyline';\nimport { NgMapsPolylinePoint } from '../../directives/polyline-point';\nimport { GeoPoint } from '../../interface/geo-point';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\n\n@Injectable()\nexport abstract class PolylineManager {\n  protected _polylines: Map> = new Map\n  >();\n\n  constructor(\n    protected _mapsWrapper: MapsApiWrapper,\n    protected _zone: NgZone,\n  ) {}\n\n  protected _convertPoints(line: NgMapsPolyline): Array {\n    return line._getPoints().map(\n      (point: NgMapsPolylinePoint) =>\n        ({\n          lat: point.latitude,\n          lng: point.longitude,\n        } as google.maps.LatLngLiteral),\n    );\n  }\n\n  public abstract addPolyline(line: NgMapsPolyline): Promise | void;\n\n  public abstract updatePolylinePoints(line: NgMapsPolyline): Promise;\n\n  public abstract setPolylineOptions(\n    line: NgMapsPolyline,\n    options: { [propName: string]: any },\n  ): Promise;\n\n  public abstract deletePolyline(line: NgMapsPolyline): Promise;\n\n  public abstract createEventObservable(\n    eventName: string,\n    line: NgMapsPolyline,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RectangleManager.html":{"url":"injectables/RectangleManager.html","title":"injectable - RectangleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RectangleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/rectangle-manager.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _rectangles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                addRectangle\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                getBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                removeRectangle\n                            \n                            \n                                    Public\n                                    Abstract\n                                setBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                setDraggable\n                            \n                            \n                                    Public\n                                    Abstract\n                                setEditable\n                            \n                            \n                                    Public\n                                    Abstract\n                                setOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_apiWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/rectangle-manager.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _apiWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        addRectangle\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:49\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        removeRectangle\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:22\n                \n            \n\n\n            \n                \n                    Removes the given rectangle from the map.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    setBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setDraggable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setEditable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(rectangle: NgMapsRectangleDirective, options: google.maps.RectangleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                google.maps.RectangleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setVisible\n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _rectangles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map\n  >()\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/managers/rectangle-manager.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { NgMapsRectangleDirective } from '../../directives/rectangle';\nimport { BoundsLiteral } from '../../interface/bounds';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\n\n@Injectable()\nexport abstract class RectangleManager {\n  protected _rectangles: Map> = new Map\n  >();\n\n  constructor(protected _apiWrapper: MapsApiWrapper, protected _zone: NgZone) {}\n\n  public abstract addRectangle(rectangle: NgMapsRectangleDirective): void;\n\n  /**\n   * Removes the given rectangle from the map.\n   */\n  public abstract removeRectangle(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise;\n\n  public abstract setOptions(\n    rectangle: NgMapsRectangleDirective,\n    options: google.maps.RectangleOptions,\n  ): Promise;\n\n  public abstract getBounds(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise;\n\n  public abstract setBounds(rectangle: NgMapsRectangleDirective): Promise;\n\n  public abstract setEditable(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise;\n\n  public abstract setDraggable(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise;\n\n  public abstract setVisible(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise;\n\n  public abstract createEventObservable(\n    eventName: string,\n    rectangle: NgMapsRectangleDirective,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScriptLoaderService.html":{"url":"injectables/ScriptLoaderService.html","title":"injectable - ScriptLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScriptLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/script-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alreadyLoaded\n                            \n                            \n                                    Public\n                                document\n                            \n                            \n                                    Private\n                                head\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createCSSElement\n                            \n                            \n                                    Private\n                                createScriptElement\n                            \n                            \n                                    Public\n                                loadCSS\n                            \n                            \n                                    Public\n                                loadScript\n                            \n                            \n                                    Private\n                                observeLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/script-loader.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createCSSElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCSSElement(href: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/script-loader.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    href\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLLinkElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createScriptElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    createScriptElement(src: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/script-loader.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    src\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLScriptElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadCSS\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadCSS(href: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/script-loader.service.ts:91\n                \n            \n\n\n            \n                \n                    Dynamically loads the given CSS file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    href\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The url of the CSS to load dynamically\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Observable Promise that will be resolved once the CSS file has been loaded.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadScript\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadScript(src: string, integrity?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/script-loader.service.ts:73\n                \n            \n\n\n            \n                \n                    Dynamically loads the given script\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    src\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The url of the script to load dynamically\n\n                                    \n                                \n                                \n                                    integrity\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        set integrity check value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Observable Observable that will be resolved once the script has been loaded.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        observeLoad\n                        \n                    \n                \n            \n            \n                \n                    \n                    observeLoad(element: HTMLScriptElement | HTMLLinkElement)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/script-loader.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLScriptElement | HTMLLinkElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alreadyLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/script-loader.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/script-loader.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        head\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLHeadElement\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/script-loader.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScriptLoaderService {\n  public document: Document;\n  private head: HTMLHeadElement;\n  private alreadyLoaded: Map> = new Map();\n\n  constructor(@Inject(DOCUMENT) document: any) {\n    this.document = document as Document;\n    this.head = this.document.head;\n  }\n\n  private observeLoad(\n    element: HTMLScriptElement | HTMLLinkElement,\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      function successHandler(event: UIEvent) {\n        const readyState: string = (element as any).readyState;\n        // For IE we have readyState, other browsers just call the load event and we proccede\n        if (\n          readyState === 'complete' ||\n          readyState === 'loaded' ||\n          event.type === 'load'\n        ) {\n          resolve(event);\n        }\n      }\n\n      function errorHandler(event: UIEvent) {\n        reject(event);\n      }\n\n      // @ts-ignore\n      element.addEventListener('readystatechange', successHandler);\n      // @ts-ignore\n      element.addEventListener('load', successHandler);\n      // @ts-ignore\n      element.addEventListener('error', errorHandler);\n    });\n  }\n\n  private createScriptElement(src: string): HTMLScriptElement {\n    const script = document.createElement('script');\n    script.src = src;\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    return script;\n  }\n\n  // eslint-disable-next-line\n  private createCSSElement(href: string): HTMLLinkElement {\n    const style = document.createElement('link');\n\n    style.rel = 'stylesheet';\n    style.type = 'text/css';\n    style.href = href;\n\n    return style;\n  }\n\n  /**\n   * Dynamically loads the given script\n   *\n   * @param src The url of the script to load dynamically\n   * @param integrity set integrity check value\n   * @returns Observable Observable that will be resolved once the script has been loaded.\n   */\n  public loadScript(src: string, integrity?: string): Promise {\n    if (this.alreadyLoaded.has(src)) {\n      return this.alreadyLoaded.get(src)!;\n    } else {\n      const script = this.createScriptElement(src);\n      const promise = this.observeLoad(script);\n      this.head.appendChild(script);\n      this.alreadyLoaded.set(src, promise);\n      return promise;\n    }\n  }\n\n  /**\n   * Dynamically loads the given CSS file\n   *\n   * @param href The url of the CSS to load dynamically\n   * @returns Observable Promise that will be resolved once the CSS file has been loaded.\n   */\n  public loadCSS(href: string): Promise {\n    // eslint-disable-line\n    if (this.alreadyLoaded.has(href)) {\n      return this.alreadyLoaded.get(href)!;\n    } else {\n      const style = this.createCSSElement(href);\n      const promise = this.observeLoad(style);\n      this.head.appendChild(style);\n      this.alreadyLoaded.set(href, promise);\n      return promise;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShapeOptions.html":{"url":"interfaces/ShapeOptions.html","title":"interface - ShapeOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShapeOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/shape-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fillColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fillOpacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strokeColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strokeOpacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strokeWeight\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visible\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zIndex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fillColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillOpacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fillOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ShapeOptions {\n  fillColor?: string;\n  fillOpacity?: number;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  visible?: boolean;\n  zIndex?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nThis file was generated using @jscutlery/semver.\n5.0.0 (2023-05-22)\n⚠ BREAKING CHANGES\n\nupdate to strict typechecking\n\nCode Refactoring\n\nupdate to strict typechecking (69d7cbc)\n\n4.0.3 (2023-05-18)\n4.0.2 (2023-05-18)\nBug Fixes\n\ncore: export all interfaces (8c27283)\nmarker icon implementation (14b3c93)\n\n4.0.1 (2022-12-30)\n4.0.0 (2022-12-30)\n⚠ BREAKING CHANGES\n\nUpdated google.maps types which might change API\n\nCode Refactoring\n\nupdate dependencies and adjust types usage (8d70d41)\n\n3.0.2 (2022-10-06)\n3.0.1 (2022-09-02)\nBug Fixes\n\nbuild issues (1d7c3d7)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/core.module.ts\n            \n            function\n            coreDirectives\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/core.module.ts\n            \n            function\n            isGoogleMaps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/core.module.ts\n            \n            function\n            isHereMaps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/core.module.ts\n            \n            variable\n            MAP_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/directives/circle.ts\n            \n            directive\n            NgMapsCircleDirective\n            \n                71 %\n                (27/38)\n            \n        \n        \n            \n                \n                src/lib/directives/fit-bounds.ts\n            \n            directive\n            NgMapsFitBoundsDirective\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/lib/directives/info-window.ts\n            \n            component\n            NgMapsInfoWindowComponent\n            \n                48 %\n                (12/25)\n            \n        \n        \n            \n                \n                src/lib/directives/info-window.ts\n            \n            variable\n            infoWindowId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/directives/map.ts\n            \n            component\n            NgMapsViewComponent\n            \n                68 %\n                (49/72)\n            \n        \n        \n            \n                \n                src/lib/directives/marker.ts\n            \n            component\n            NgMapsMarkerComponent\n            \n                59 %\n                (22/37)\n            \n        \n        \n            \n                \n                src/lib/directives/marker.ts\n            \n            variable\n            markerId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/directives/polygon.ts\n            \n            directive\n            NgMapsPolygonDirective\n            \n                66 %\n                (24/36)\n            \n        \n        \n            \n                \n                src/lib/directives/polyline-point.ts\n            \n            directive\n            NgMapsPolylinePoint\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/lib/directives/polyline.ts\n            \n            directive\n            NgMapsPolyline\n            \n                62 %\n                (22/35)\n            \n        \n        \n            \n                \n                src/lib/directives/polyline.ts\n            \n            variable\n            polylineId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/directives/rectangle.ts\n            \n            directive\n            NgMapsRectangleDirective\n            \n                73 %\n                (28/38)\n            \n        \n        \n            \n                \n                src/lib/interface/bounds.ts\n            \n            interface\n            BoundsLiteral\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/interface/circle-options.ts\n            \n            interface\n            CircleOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/interface/geo-point.ts\n            \n            interface\n            GeoPoint\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/lib/interface/map-options.ts\n            \n            interface\n            MapOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/interface/marker-icon.ts\n            \n            interface\n            MarkerIcon\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/lib/interface/marker-options.ts\n            \n            interface\n            MarkerOptions\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/lib/interface/padding.ts\n            \n            interface\n            Padding\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/interface/shape-options.ts\n            \n            interface\n            ShapeOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/services/fit-bounds.ts\n            \n            class\n            FitBoundsAccessor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/services/fit-bounds.ts\n            \n            injectable\n            FitBoundsService\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/lib/services/fit-bounds.ts\n            \n            interface\n            FitBoundsDetails\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/services/managers/circle-manager.ts\n            \n            injectable\n            CircleManager\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/lib/services/managers/info-window.manager.ts\n            \n            injectable\n            InfoWindowManager\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/lib/services/managers/marker.manager.ts\n            \n            injectable\n            MarkerManager\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/lib/services/managers/polygon.manager.ts\n            \n            injectable\n            PolygonManager\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/services/managers/polyline-manager.ts\n            \n            injectable\n            PolylineManager\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lib/services/managers/rectangle-manager.ts\n            \n            injectable\n            RectangleManager\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-loader/maps-api-loader.ts\n            \n            injectable\n            MapsAPILoader\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-loader/noop-maps-api-loader.ts\n            \n            class\n            NoOpMapsAPILoader\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-wrapper.ts\n            \n            injectable\n            MapsApiWrapper\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/lib/services/script-loader.service.ts\n            \n            injectable\n            ScriptLoaderService\n            \n                20 %\n                (2/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.0.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^14.0.0 || ^15.0.0 || ^16.0.0\n        \n            @angular/core : ^14.0.0 || ^15.0.0 || ^16.0.0\n        \n            @angular/platform-browser-dynamic : ^14.0.0 || ^15.0.0 || ^16.0.0\n        \n            rxjs : ^7.0.0\n        \n            zone.js : ~0.11.4 || ~0.12.0 || ~0.13.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            coreDirectives   (src/.../core.module.ts)\n                        \n                        \n                            isGoogleMaps   (src/.../core.module.ts)\n                        \n                        \n                            isHereMaps   (src/.../core.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/core.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        coreDirectives\n                        \n                    \n                \n            \n            \n                \ncoreDirectives()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGoogleMaps\n                        \n                    \n                \n            \n            \n                \nisGoogleMaps(token: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHereMaps\n                        \n                    \n                \n            \n            \n                \nisHereMaps(token: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ng-maps/core\n@ng-maps/core is a simple, modular and tree-shakable library for displaying google-maps inside an angular application\nInstallation\n\nNpm: npm install @ng-maps/core\nYarn: yarn add @ng-maps/core\n\nThen you will need to install typings for google maps as a dev dependency\n\nNpm: npm install -D @types/googlemaps\nYarn: yarn add -D @types/googlemaps\n\nAdd NgMapsCoreModule to your AppModule.\nAdditionally, you will need to add the @ng-maps/google module and follow the instruction there. As alternative there is a here maps module which isn't ready for production yet.\nLazy loading configuration\nIf you can not provide configuration at module import level you can load it at a later time.\nYou just need to inject MapsAPILoader into a component or service and call the method configure(config) with a valid configuration.\nUsage\nSimple Map\nAdd the map to your components template\nAdd a height to your components CSS, for example\nmap-view {\n  height: 300px;\n}Input options\n\n\n\nName\nType\nValues\nDescription\n\n\n\n\nlongitude\nNumber\n\n\n\n\nlatitude\nNumber\n\n\n\n\nminZoom\nNumber\n\n\n\n\nmaxZoom\nNumber\n\n\n\n\nzoom\nNumber\nBetween 0 and MaxZoom, typically 18\n\n\n\nfitBounds\nLatLngBoundsLiteral, LatLngBounds or Boolean\nIf set to true attaches to mapFitBounds directives on \n\n\n\nmapTypeId\nroadmap, hybrid, satellite, terrain\n\n\n\n\nlayers\nArray or String\nTrafficLayer or TransitLayer or BicyclingLayer\nActivates layer as described in TrafficLayer Documentation\n\n\n\nMarker\nAdditionally you can add markers\n\n  \nInput options\n\n\n\nName\nType\nValues\nDescription\n\n\n\n\nlongitude\nNumber\n\n\n\n\nlatitude\nNumber\n\n\n\n\n\nOutputs\n\n\n\nName\nValue\nDescription\n\n\n\n\nmarkerClick\nComponent\n\n\n\n\nAdditional features\nOther features are provided in submodules. Find out more on the project page at github\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgMapsCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 5.0.0\n        \n            Keywords : angular, ng, maps, map, ng2, angular2, agm\n        \n            Homepage : https://ng-maps.github.io/core\n        \n            Bugs : https://github.com/ng-maps/ng-maps/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/ng-maps/ng-maps.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BoundsMap   (src/.../fit-bounds.ts)\n                        \n                        \n                            LayerTypes   (src/.../layers.ts)\n                        \n                        \n                            RectangleOptions   (src/.../rectangle-options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/services/fit-bounds.ts\n    \n    \n        \n            \n                \n                    \n                    BoundsMap\n                \n            \n            \n                \n                            Map\n\n                \n            \n        \n    \n    src/lib/interface/layers.ts\n    \n    \n        \n            \n                \n                    \n                    LayerTypes\n                \n            \n            \n                \n                        \"TrafficLayer\" | \"TransitLayer\" | \"BicyclingLayer\"\n\n                \n            \n        \n    \n    src/lib/interface/rectangle-options.ts\n    \n    \n        \n            \n                \n                    \n                    RectangleOptions\n                \n            \n            \n                \n                            ShapeOptions\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            infoWindowId   (src/.../info-window.ts)\n                        \n                        \n                            MAP_PROVIDER   (src/.../core.module.ts)\n                        \n                        \n                            markerId   (src/.../marker.ts)\n                        \n                        \n                            polylineId   (src/.../polyline.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/directives/info-window.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        infoWindowId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n\n    src/lib/core.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MAP_PROVIDER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Map Provider')\n                    \n                \n\n\n        \n    \n\n    src/lib/directives/marker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        markerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n\n    src/lib/directives/polyline.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        polylineId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
