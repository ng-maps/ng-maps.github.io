var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/FitBoundsAccessor.html",[0,0.415,1,1.178]],["body/classes/FitBoundsAccessor.html",[0,0.69,1,1.625,2,2.035,3,0.576,4,0.576,5,0.499,6,2.074,7,1.366,8,0.956,9,2.365,10,2.074,11,2.365,12,1.625,13,2.365,14,2.462,15,2.365,16,1.832,17,0.295,18,1.005,19,2.209,20,2.501,21,0.749,22,2.951,23,0.749,24,0.048,25,2.303,26,0.931,27,0.772,28,0.576,29,3.08,30,2.035,31,1.211,32,2.73,33,1.263,34,2.73,35,2.035,36,2.035,37,1.764,38,1.282,39,0.499,40,0.669,41,1.366,42,0.848,43,0.931,44,1.211,45,1.211,46,2.669,47,3.291,48,3.291,49,1.211,50,0.427,51,1.764,52,1.832,53,2.035,54,2.035,55,1.764,56,2.209,57,2.067,58,2.035,59,0.931,60,2.035,61,2.035,62,2.035,63,2.73,64,2.035,65,2.035,66,2.035,67,2.035,68,2.035,69,2.035,70,2.035,71,2.035,72,1.076,73,2.035,74,2.035,75,1.545,76,2.035,77,2.035,78,2.035,79,1.37,80,2.035,81,1.366,82,2.035,83,2.035,84,2.73,85,2.035,86,2.73,87,2.035,88,2.035,89,2.035,90,1.076,91,2.035,92,2.035,93,2.035,94,0.848,95,2.035,96,0.024,97,0.032,98,0.024]],["title/interfaces/FitBoundsDetails.html",[44,1.178,45,1.178]],["body/interfaces/FitBoundsDetails.html",[0,0.651,1,1.23,3,0.585,4,0.585,5,0.506,6,1.571,7,1.387,9,1.791,10,1.571,11,1.791,12,1.23,13,1.791,14,2.431,15,1.791,16,1.387,17,0.3,19,1.851,20,1.571,24,0.048,25,2.222,26,0.937,27,0.78,28,0.585,29,3.103,30,2.067,31,1.23,32,2.758,33,1.27,34,2.758,35,2.067,36,2.067,37,1.791,38,1.295,39,0.506,40,0.676,41,1.387,42,0.861,43,0.937,44,1.23,45,1.641,46,3.075,47,3.548,48,3.548,49,1.23,50,0.578,51,1.791,52,1.851,53,2.067,54,2.067,55,1.791,56,2.222,57,2.083,58,2.067,59,0.937,60,2.067,61,2.067,62,2.067,63,2.758,64,2.067,65,2.067,66,2.067,67,2.067,68,2.067,69,2.067,70,2.067,71,2.067,72,1.093,73,2.067,74,2.067,75,1.555,76,2.067,77,2.067,78,2.067,79,1.379,80,2.067,81,1.387,82,2.067,83,2.067,84,2.758,85,2.067,86,2.758,87,2.067,88,2.067,89,2.067,90,1.093,91,2.067,92,2.067,93,2.067,94,0.861,95,2.067,96,0.024,97,0.032,98,0.024,99,2.067,100,1.295]],["title/injectables/FitBoundsService.html",[27,0.56,52,1.329]],["body/injectables/FitBoundsService.html",[0,0.577,1,0.98,3,0.466,4,0.466,5,0.403,6,2.766,7,1.105,8,0.773,9,1.427,10,1.251,11,1.427,12,0.98,13,1.427,14,2.414,15,1.427,16,1.105,17,0.239,18,0.868,19,1.582,20,1.251,21,1.324,23,1.217,24,0.048,25,2.219,26,0.85,27,0.667,28,0.466,29,3.179,30,1.647,31,0.98,32,2.356,33,1.305,34,2.356,35,1.647,36,1.647,37,1.427,38,1.411,39,0.403,40,0.577,41,1.105,42,0.981,43,0.85,44,0.98,45,0.98,46,2.865,47,3.597,48,3.597,49,0.98,50,0.73,51,1.427,52,2.016,53,2.356,54,2.356,55,2.042,56,2.468,57,2.379,58,2.752,59,0.964,60,2.356,61,2.752,62,2.356,63,2.356,64,1.647,65,1.647,66,1.647,67,1.647,68,1.647,69,1.647,70,1.647,71,1.647,72,1.455,73,2.752,74,2.356,75,1.411,76,1.647,77,1.647,78,1.647,79,1.251,80,2.356,81,1.105,82,1.647,83,1.647,84,2.356,85,1.647,86,2.356,87,2.356,88,1.647,89,2.356,90,1.455,91,1.647,92,3.004,93,2.752,94,0.981,95,1.647,96,0.019,97,0.028,98,0.019,100,1.107,101,1.105,102,3.417,103,3.417,104,3.417,105,0.98,106,2.388,107,1.748,108,1.377,109,1.553,110,2.388,111,2.388,112,2.388,113,2.388,114,2.388,115,1.638,116,2.388,117,2.388,118,2.388,119,2.388,120,1.107,121,0.981,122,1.941,123,1.941,124,2.388]],["title/injectables/InfoWindowManager.html",[27,0.56,125,1.716]],["body/injectables/InfoWindowManager.html",[0,0.31,3,0.617,4,0.419,5,0.363,17,0.215,18,0.803,21,1.293,23,1.245,24,0.048,25,2.045,26,0.902,27,0.617,28,0.419,31,0.881,33,1.122,39,0.635,40,0.363,43,0.419,50,0.746,59,0.733,72,1.685,75,1.672,79,1.079,90,1.153,94,1.079,96,0.017,97,0.025,98,0.017,100,1.024,101,0.994,105,1.298,107,1.856,108,1.438,109,1.621,115,1.962,120,0.695,121,0.617,125,1.89,126,4.196,127,2.442,128,1.48,129,3.756,130,3.452,131,3.163,132,2.571,133,3.053,134,3.163,135,2.181,136,3.756,137,3.163,138,3.163,139,1.745,140,2.858,141,3.053,142,3.368,143,3.756,144,2.172,145,2.147,146,2.571,147,3.163,148,2.594,149,2.147,150,3.639,151,3.163,152,1.745,153,1.745,154,2.147,155,2.571,156,3.163,157,1.216,158,1.89,159,3.163,160,2.181,161,2.571,162,3.163,163,2.147,164,1.918,165,3.163,166,2.147,167,2.147,168,2.858,169,4.144,170,1.745,171,3.163,172,2.147,173,3.163,174,2.147,175,1.745,176,2.571,177,1.745,178,1.464,179,1.48,180,1.745,181,1.968,182,1.48,183,2.147,184,3.163,185,2.858,186,4.779,187,1.658,188,1.48,189,1.745,190,2.571,191,2.147,192,2.147,193,2.147,194,2.181,195,3.756,196,2.181,197,3.756,198,2.147,199,3.163,200,2.147,201,3.163,202,2.147,203,3.163,204,2.147,205,2.147,206,1.745,207,2.147,208,1.745,209,2.147,210,1.283,211,2.147,212,1.745,213,2.147,214,1.89,215,2.147,216,3.163,217,2.147,218,2.147,219,1.745,220,2.147,221,1.745,222,1.745]],["title/injectables/LazyMapsAPILoader.html",[27,0.56,223,1.329]],["body/injectables/LazyMapsAPILoader.html",[0,0.298,3,0.402,4,0.402,5,0.348,17,0.206,18,0.78,19,1.421,21,1.28,23,1.032,24,0.048,26,0.793,27,0.599,28,0.402,38,1.316,39,0.885,40,0.934,42,0.882,43,0.402,50,0.701,56,2.513,57,2.108,59,0.402,72,1.337,75,1.528,79,1.423,94,1.567,96,0.017,97,0.025,98,0.017,100,0.994,101,0.955,105,1.26,107,1.337,108,1.053,109,1.407,115,0.846,120,0.994,121,1.248,127,1.421,157,0.668,158,1.232,164,2.011,187,1.609,188,1.422,223,1.881,224,2.07,225,2.334,226,1.232,227,3.07,228,3.668,229,3.668,230,3.668,231,3.668,232,4.344,233,3.07,234,3.07,235,2.819,236,2.062,237,2.387,238,4.847,239,3.07,240,2.428,241,3.07,242,3.668,243,2.062,244,2.062,245,3.07,246,2.062,247,2.062,248,2.062,249,2.062,250,2.062,251,2.062,252,3.07,253,2.062,254,2.062,255,1.676,256,2.062,257,2.117,258,1.081,259,2.062,260,2.062,261,2.062,262,2.062,263,3.07,264,2.062,265,2.062,266,2.062,267,1.422,268,1.422,269,1.676,270,4.344,271,2.062,272,2.062,273,2.062,274,2.062,275,2.062,276,3.07,277,2.062,278,2.062,279,1.676,280,2.062,281,2.062,282,2.062,283,2.062,284,1.609,285,2.062,286,2.062,287,2.062,288,2.062,289,2.062,290,2.062,291,2.062,292,2.062,293,2.062,294,2.062,295,2.062,296,2.062,297,1.676,298,2.062,299,3.07,300,2.062,301,3.07,302,3.303,303,2.062,304,3.668,305,2.062,306,3.668,307,2.062,308,1.422,309,1.422,310,1.676,311,2.062,312,2.062,313,2.062,314,2.996,315,1.676,316,2.062,317,2.062,318,2.062,319,2.062,320,2.062,321,1.676,322,2.062,323,1.676,324,2.062,325,1.676,326,2.062,327,1.676,328,2.062,329,1.676,330,2.062,331,2.062,332,2.062,333,3.07,334,3.668,335,2.062,336,2.062,337,3.07,338,3.07,339,2.062,340,0.955,341,2.062,342,3.07,343,2.062,344,2.062,345,2.062,346,2.062,347,3.07,348,2.062,349,2.062,350,2.062,351,2.062]],["title/interfaces/LazyMapsAPILoaderConfigLiteral.html",[44,1.178,237,1.505]],["body/interfaces/LazyMapsAPILoaderConfigLiteral.html",[3,0.432,4,0.432,5,0.374,8,0.717,12,0.908,17,0.222,24,0.047,26,0.432,28,0.432,33,1.067,39,0.927,40,0.927,42,0.636,43,0.746,44,0.908,50,0.741,59,0.432,75,0.717,81,2.29,94,1.61,96,0.018,97,0.026,98,0.018,99,1.526,100,1.048,108,0.929,109,1.792,120,1.362,157,1.767,160,2.23,223,1.769,224,0.908,225,1.024,235,1.933,237,1.695,240,1.322,257,2.9,258,1.695,267,2.23,302,3.797,308,1.526,309,1.526,310,3.418,314,3.411,321,4.021,323,4.168,325,4.021,327,3.797,329,4.021,352,1.322,353,2.629,354,4.204,355,4.204,356,4.204,357,4.021,358,3.234,359,3.234,360,4.672,361,4.204,362,4.204,363,3.234,364,3.234,365,2.629,366,3.234,367,3.234,368,3.234,369,3.234,370,3.234,371,3.234,372,3.234,373,3.234,374,3.234,375,3.797,376,3.234,377,3.234,378,3.234,379,2.629,380,3.234,381,3.418,382,3.418,383,3.234,384,3.234,385,3.234,386,1.933,387,3.234,388,3.234,389,4.204,390,4.204,391,4.672,392,3.234,393,2.9,394,3.234,395,3.234,396,3.234,397,1.933,398,3.234,399,4.204,400,3.234,401,3.234,402,3.234,403,3.234,404,3.234,405,3.234,406,2.213,407,2.213,408,1.322,409,1.526,410,1.526,411,1.799,412,1.526,413,1.322,414,1.799,415,1.695,416,1.526,417,1.799]],["title/injectables/MapsAPILoader.html",[27,0.56,38,0.93]],["body/injectables/MapsAPILoader.html",[0,0.599,3,0.809,4,0.809,5,0.701,17,0.415,18,1.245,19,2.5,21,1.053,23,1.053,24,0.045,26,0.809,27,0.957,28,0.809,38,1.589,40,0.913,41,2.271,43,0.809,96,0.033,97,0.039,98,0.033,101,1.919,164,2.271,224,2.013,226,2.477,235,3.227,418,4.145]],["title/injectables/MarkerManager.html",[27,0.56,144,1.505]],["body/injectables/MarkerManager.html",[0,0.28,3,0.379,4,0.379,5,0.328,17,0.194,18,0.745,21,1.348,23,1.326,24,0.048,25,1.637,26,0.826,27,0.572,28,0.379,31,0.796,33,1.001,39,0.328,40,0.328,43,0.379,50,0.773,56,1.959,59,0.69,75,1.675,79,1.132,94,0.842,96,0.016,97,0.024,98,0.016,100,0.95,101,0.898,105,1.204,107,1.936,108,1.514,109,1.707,115,2.251,120,0.628,121,0.557,128,1.338,130,2.439,133,2.874,139,1.577,140,2.718,141,2.874,142,3.204,144,1.537,146,2.384,152,1.577,153,1.577,155,2.384,157,0.628,161,2.384,164,1.358,170,1.577,175,1.577,176,2.384,178,0.898,179,1.338,180,1.577,181,2.802,185,1.338,187,1.017,188,1.338,189,1.577,190,2.384,194,2.023,196,2.023,210,1.159,214,1.753,219,1.577,221,1.577,222,1.577,419,4.346,420,3.536,421,2.933,422,2.933,423,2.933,424,2.933,425,2.933,426,2.933,427,2.933,428,2.933,429,2.933,430,2.933,431,2.933,432,2.933,433,2.933,434,2.933,435,2.651,436,1.94,437,3.536,438,3.536,439,1.94,440,2.933,441,1.94,442,2.933,443,1.94,444,2.933,445,2.933,446,1.94,447,2.933,448,1.94,449,2.933,450,1.94,451,2.933,452,1.94,453,2.933,454,1.94,455,2.933,456,1.94,457,2.933,458,1.94,459,2.933,460,1.94,461,2.933,462,2.933,463,1.94,464,1.577,465,5.27,466,5.172,467,1.94,468,1.94,469,1.94,470,2.933,471,2.933,472,1.94,473,1.94,474,1.94,475,1.94,476,1.94,477,1.94,478,1.94,479,1.94,480,3.536,481,1.94,482,1.94,483,1.94,484,1.338,485,1.577,486,1.94,487,1.577,488,1.94,489,1.577,490,1.94,491,1.577,492,1.94,493,1.338,494,1.94,495,1.94,496,1.577,497,1.94,498,1.577,499,1.94,500,1.577,501,1.94,502,1.94,503,1.94]],["title/modules/NgMapsCoreModule.html",[504,1.98,505,1.98]],["body/modules/NgMapsCoreModule.html",[0,0.447,3,0.604,4,0.604,5,0.523,8,1.002,14,1.432,18,0.785,21,1.161,23,0.785,24,0.047,26,1.049,28,0.604,38,1.322,39,0.822,40,0.877,41,1.432,42,1.313,43,0.797,49,1.27,50,0.447,79,1.173,96,0.025,97,0.033,98,0.025,107,1.128,108,0.888,109,1.002,127,1.432,148,1.89,157,1.322,177,2.514,178,1.89,179,2.133,223,1.89,225,1.89,237,2.721,240,1.848,258,2.14,353,3.319,393,3.353,412,3.353,413,2.905,415,1.621,416,3.152,435,1.89,464,2.514,504,3.706,505,3.152,506,2.133,507,2.133,508,3.319,509,4.861,510,4.083,511,4.083,512,4.083,513,4.083,514,2.44,515,3.319,516,4.083,517,3.093,518,3.093,519,4.083,520,4.083,521,4.083,522,4.083,523,2.514,524,4.571,525,4.571,526,1.89,527,3.093,528,4.571,529,2.514,530,3.152,531,2.514,532,2.514,533,1.848,534,3.093,535,3.093]],["title/directives/NgMapsFitBounds.html",[526,1.329,536,1.329]],["body/directives/NgMapsFitBounds.html",[0,0.589,1,1.994,3,0.484,4,0.484,5,0.419,7,1.149,8,0.804,9,2.099,10,1.841,11,2.099,12,1.442,13,2.099,14,2.165,15,2.099,16,1.626,17,0.249,18,0.892,19,1.626,20,1.301,21,1.295,23,1.126,24,0.048,26,0.865,28,0.484,31,1.019,33,0.892,37,1.483,43,0.484,45,2.094,49,1.673,50,0.702,52,2.052,57,1.626,59,0.686,72,1.94,96,0.02,97,0.028,98,0.02,100,1.138,105,1.442,107,1.487,108,1.171,109,1.32,115,1.82,120,1.515,121,1.434,122,2.018,123,2.856,160,2.423,187,2.452,284,2.673,415,1.301,523,2.018,526,1.626,536,2.052,537,1.483,538,4.217,539,3.513,540,3.513,541,1.442,542,2.099,543,3.314,544,2.812,545,2.812,546,2.099,547,1.712,548,2.423,549,2.795,550,4.077,551,4.077,552,3.513,553,2.423,554,3.057,555,3.603,556,2.423,557,2.482,558,4.077,559,3.513,560,2.099,561,2.423,562,2.423,563,2.423,564,3.513,565,2.482,566,4.077,567,2.423,568,3.603,569,2.482,570,1.712,571,2.482,572,2.482,573,4.678,574,2.482,575,2.099,576,3.513,577,3.513,578,2.482,579,2.018,580,2.482,581,2.482,582,2.482,583,2.482,584,2.482,585,2.482,586,2.482,587,2.482,588,2.482,589,2.482,590,2.482,591,2.482,592,4.077,593,2.482,594,2.482,595,3.513,596,3.513,597,2.482,598,2.482]],["title/components/NgMapsInfoWindowComponent.html",[148,1.329,541,1.178]],["body/components/NgMapsInfoWindowComponent.html",[0,0.203,3,1.046,4,0.274,5,0.238,8,0.455,12,0.935,16,1.681,17,0.141,18,0.839,21,1.335,23,1.149,24,0.048,26,0.709,28,0.561,33,1.236,43,0.274,49,1.356,50,0.713,59,0.274,72,1.853,75,0.738,79,1.043,81,1.529,90,1.65,94,1.224,96,0.011,97,0.018,98,0.011,100,0.738,105,0.577,107,1.048,108,1.116,109,0.931,115,1.596,120,1.381,121,1.116,125,2.323,127,2.469,130,1.982,132,3.465,135,3.358,148,1.895,150,2.279,158,1.362,164,1.529,168,1.572,178,0.651,181,1.732,182,0.97,185,0.97,206,3.581,208,3.327,210,2.17,212,2.952,214,1.362,284,1.506,340,0.651,379,1.853,381,1.853,386,1.362,393,2.279,397,1.362,415,1.506,435,2.095,484,2.279,493,1.572,514,1.975,515,2.952,526,0.651,533,1.362,536,0.651,537,0.84,541,1.68,542,1.362,543,2.336,544,1.982,545,1.982,546,1.362,547,0.97,548,2.94,549,0.84,553,1.572,554,2.279,555,2.686,556,1.572,560,2.323,561,2.279,567,1.572,568,3.465,570,1.572,575,2.446,599,1.362,600,1.143,601,0.97,602,3.645,603,0.97,604,1.853,605,1.572,606,2.279,607,2.279,608,2.279,609,1.853,610,1.982,611,1.572,612,1.572,613,2.279,614,2.279,615,2.336,616,2.873,617,2.873,618,2.873,619,3.304,620,2.279,621,3.304,622,2.686,623,2.873,624,2.823,625,2.504,626,1.572,627,2.873,628,1.406,629,1.406,630,2.279,631,1.406,632,2.279,633,3.304,634,2.279,635,3.304,636,2.952,637,1.406,638,2.279,639,2.279,640,3.887,641,1.406,642,3.304,643,3.304,644,1.406,645,1.406,646,3.304,647,3.887,648,2.279,649,2.279,650,2.279,651,1.853,652,2.279,653,2.279,654,2.279,655,2.279,656,1.406,657,4.72,658,3.16,659,1.853,660,2.686,661,3.16,662,2.686,663,1.853,664,3.304,665,1.853,666,2.279,667,1.572,668,2.686,669,1.406,670,2.279,671,2.279,672,1.406,673,2.279,674,1.406,675,1.406,676,1.406,677,2.279,678,1.406,679,1.406,680,1.406,681,1.406,682,1.406,683,1.406,684,2.279,685,1.406,686,1.406,687,1.406,688,2.873,689,1.143,690,2.279,691,1.406,692,3.304,693,2.279,694,1.406,695,1.853,696,1.406,697,1.406,698,0.97,699,1.143,700,1.406,701,2.279,702,2.279,703,1.406,704,1.143,705,1.143,706,1.143,707,1.143,708,1.406,709,1.143,710,1.406,711,1.406,712,1.406,713,1.406,714,1.406,715,1.143,716,2.279,717,2.279,718,1.406,719,1.406,720,1.406,721,1.406,722,1.406,723,1.406,724,1.406,725,1.406,726,1.406,727,1.406,728,1.406,729,1.143,730,1.406,731,1.406,732,0.97,733,1.853,734,2.686,735,1.143,736,1.143,737,1.143,738,1.143]],["title/components/NgMapsMarkerComponent.html",[435,1.329,541,1.178]],["body/components/NgMapsMarkerComponent.html",[0,0.161,1,1.314,3,0.721,4,0.218,5,0.189,8,0.362,14,0.517,16,1.607,17,0.112,18,0.478,20,1.503,21,1.351,23,1.026,24,0.048,25,1.327,26,0.678,28,0.368,31,0.458,33,1.162,39,0.318,40,0.318,43,0.218,45,0.458,46,0.667,49,1.517,50,0.751,55,1.125,56,1.607,57,1.13,59,0.859,72,1.695,75,1.197,79,0.92,81,1.327,90,1.523,94,1.335,96,0.009,97,0.015,98,0.009,100,0.61,105,0.458,107,0.687,108,0.92,109,0.61,115,1.425,120,1.527,121,1.314,127,1.482,135,1.299,144,1.82,148,0.872,150,1.684,157,0.61,158,2.734,178,1.13,181,2.83,182,0.77,187,0.987,194,0.77,196,0.77,210,2.075,214,1.714,284,2.437,314,0.77,340,0.517,357,0.908,386,1.125,408,1.914,413,1.125,415,0.585,435,1.797,484,2.395,485,2.823,487,1.531,489,1.531,491,2.823,493,2.395,496,2.823,498,0.908,500,2.823,514,1.714,526,0.517,533,1.125,536,0.517,537,0.667,541,1.425,542,1.125,544,1.684,545,1.684,546,1.125,547,0.77,548,2.548,549,0.667,553,1.299,554,1.978,556,1.684,560,2.496,561,1.299,562,1.299,563,1.299,567,1.299,570,0.77,575,2.63,579,0.908,599,1.125,600,0.908,601,0.77,604,1.531,605,1.299,609,0.908,610,0.77,611,0.77,612,0.77,613,1.684,615,1.985,622,2.331,624,2.395,625,2.395,626,1.684,636,2.823,658,2.331,659,1.531,660,1.531,661,2.331,662,2.331,663,1.531,665,1.531,667,2.881,668,4.072,689,0.908,695,3.155,699,0.908,704,0.908,705,0.908,706,2.331,707,2.331,709,0.908,715,1.531,729,1.985,732,0.77,733,1.531,734,2.331,735,0.908,736,0.908,737,0.908,738,0.908,739,1.117,740,0.77,741,2.442,742,1.883,743,2.442,744,2.442,745,2.442,746,2.442,747,2.868,748,2.868,749,2.868,750,2.868,751,2.868,752,1.883,753,2.442,754,2.868,755,2.868,756,3.202,757,2.868,758,2.331,759,2.442,760,3.202,761,3.202,762,1.117,763,1.117,764,3.202,765,1.117,766,1.883,767,1.883,768,1.883,769,1.883,770,1.883,771,1.883,772,1.117,773,1.883,774,1.883,775,1.117,776,1.117,777,1.117,778,2.868,779,1.117,780,1.883,781,1.117,782,1.883,783,1.531,784,1.883,785,1.883,786,1.117,787,1.883,788,1.883,789,1.883,790,1.117,791,1.117,792,1.117,793,1.883,794,2.868,795,1.883,796,1.883,797,1.117,798,1.883,799,4.401,800,4.575,801,1.883,802,1.117,803,1.883,804,2.868,805,1.117,806,1.883,807,1.117,808,1.883,809,1.883,810,1.883,811,1.117,812,1.883,813,1.117,814,2.868,815,1.883,816,1.117,817,1.883,818,1.117,819,1.117,820,1.117,821,1.117,822,1.117,823,1.117,824,1.883,825,1.117,826,1.117,827,1.117,828,2.442,829,1.883,830,1.117,831,1.117,832,1.117,833,2.442,834,1.117,835,2.868,836,2.868,837,1.117,838,1.883,839,3.202,840,1.883,841,1.117,842,1.117,843,1.117,844,1.117,845,1.117,846,1.883,847,1.117,848,0.77,849,1.883,850,1.883,851,1.883,852,1.883,853,1.117,854,1.117,855,1.117,856,1.883,857,1.117,858,1.117,859,0.908,860,1.117,861,0.908,862,1.117,863,1.117,864,1.117,865,1.117,866,1.117,867,1.883,868,1.117,869,1.883,870,1.117,871,1.117,872,1.117,873,1.117,874,1.117,875,1.117,876,1.117,877,1.117,878,1.117,879,1.117,880,1.117,881,1.117,882,1.117,883,1.117,884,1.117,885,1.117,886,1.117,887,1.117,888,1.117,889,1.117,890,1.117,891,1.117,892,3.695,893,1.117,894,1.117,895,1.117,896,1.117,897,1.117,898,1.117,899,1.117,900,1.117,901,1.117,902,1.117,903,1.117,904,1.117,905,3.202,906,3.202,907,1.117,908,1.117,909,1.117,910,1.117,911,1.117,912,1.117,913,1.117,914,1.117,915,1.117,916,1.117,917,1.117,918,1.117,919,1.117,920,1.117,921,1.117,922,1.117,923,1.117,924,1.117,925,1.117,926,1.117,927,1.117,928,1.117]],["title/classes/NoOpMapsAPILoader.html",[0,0.415,929,1.98]],["body/classes/NoOpMapsAPILoader.html",[0,0.521,2,2.486,3,0.704,4,0.704,5,0.609,8,1.168,10,1.889,17,0.361,18,1.144,21,0.915,23,0.915,24,0.047,26,0.704,38,1.592,39,0.937,40,0.952,42,1.036,43,0.704,59,0.704,79,1.036,96,0.029,97,0.036,98,0.029,157,1.717,164,2.086,224,1.849,226,2.154,235,3.077,267,3.39,268,3.655,269,2.931,279,3.663,297,2.931,382,3.663,397,2.154,542,2.693,562,3.107,563,3.107,859,2.931,929,3.551,930,3.663,931,4.506,932,4.506,933,4.506,934,4.506,935,4.506,936,3.605,937,3.605,938,3.605,939,3.605,940,3.605]],["title/coverage.html",[941,3.158]],["body/coverage.html",[0,0.62,1,1.37,5,0.564,6,2.485,7,2.317,24,0.046,27,1.034,38,1.081,39,0.875,40,0.946,41,1.545,42,1.233,44,1.761,45,1.37,50,0.483,52,1.545,59,0.651,96,0.027,97,0.035,98,0.027,125,1.995,126,2.713,127,1.545,128,2.959,140,2.302,144,1.749,148,1.545,178,1.545,223,1.545,224,2.126,225,2.195,226,2.834,237,1.749,258,1.749,340,2.495,352,2.564,419,2.713,435,1.545,507,2.302,526,1.545,529,2.713,530,2.302,536,1.545,538,2.713,541,1.947,602,2.959,603,2.959,698,2.302,740,2.959,848,2.302,929,2.302,930,2.713,941,2.713,942,2.713,943,3.338,944,3.338,945,4.743,946,3.338,947,3.338,948,4.743,949,3.338,950,4.743,951,3.338,952,3.338,953,3.338,954,3.338,955,3.338,956,4.291,957,4.291,958,4.291,959,4.291,960,3.338,961,3.338,962,3.338,963,3.338,964,3.338,965,4.291,966,3.338,967,3.338,968,3.338,969,3.338,970,3.338]],["title/dependencies.html",[971,2.414,972,2.375]],["body/dependencies.html",[24,0.045,28,0.873,96,0.036,97,0.041,98,0.036,255,3.634,972,3.083,973,4.471,974,5.126]],["title/miscellaneous/enumerations.html",[975,0.88,976,2.799]],["body/miscellaneous/enumerations.html",[12,1.75,17,0.427,24,0.045,39,0.843,40,0.893,42,1.432,96,0.034,97,0.04,98,0.034,121,1.518,224,1.75,225,1.974,257,3.439,308,2.941,309,2.941,352,2.98,408,2.548,409,2.941,410,2.941,975,1.555,976,3.466,977,3.466]],["title/miscellaneous/functions.html",[975,0.88,978,2.799]],["body/miscellaneous/functions.html",[17,0.448,24,0.041,96,0.036,97,0.041,98,0.036,507,3.083,530,3.717,975,1.63,978,3.634,979,4.471]],["title/index.html",[17,0.242,980,2.414,981,2.414]],["body/index.html",[8,1.576,24,0.039,33,1.235,39,0.596,50,0.642,90,1.99,94,1.013,96,0.028,97,0.036,98,0.028,108,1.398,121,1.013,157,1.142,168,3.065,181,1.848,268,2.432,284,1.848,315,2.867,340,1.632,365,2.867,375,2.867,386,2.107,508,2.867,514,2.656,537,2.107,541,1.448,546,2.107,549,2.107,560,2.107,575,2.656,599,2.656,601,2.432,605,2.432,610,2.432,611,3.065,612,2.432,613,2.432,624,3.065,625,3.065,626,2.432,651,2.867,667,2.432,758,2.867,783,2.867,861,2.867,942,2.867,982,5.108,983,5.108,984,4.444,985,3.526,986,3.526,987,3.526,988,3.526,989,4.444,990,3.526,991,4.444,992,5.266,993,3.526,994,3.526,995,3.526,996,3.526,997,3.526,998,4.444,999,2.867,1000,3.526,1001,3.526,1002,3.526,1003,3.526,1004,3.526,1005,3.526,1006,3.526,1007,3.526,1008,3.526,1009,3.526,1010,3.526,1011,3.526,1012,3.612,1013,2.867,1014,2.867,1015,3.526,1016,3.526,1017,3.526,1018,3.526,1019,3.526,1020,4.444,1021,3.526,1022,3.526,1023,3.526,1024,2.867,1025,3.526,1026,3.526]],["title/modules.html",[506,2.679]],["body/modules.html",[24,0.041,96,0.036,97,0.041,98,0.036,397,2.69,505,3.105,506,3.105,1027,4.502,1028,4.502]],["title/overview.html",[1029,3.158]],["body/overview.html",[2,2.973,24,0.04,96,0.035,97,0.04,98,0.035,99,2.973,101,1.996,408,3,409,3.462,410,2.973,504,3.462,531,3.505,532,3.505,533,2.576,536,1.996,599,2.576,732,2.973,972,2.973,999,4.08,1024,3.505,1029,3.505,1030,4.312,1031,4.312,1032,4.312]],["title/miscellaneous/typealiases.html",[975,0.88,1033,3.444]],["body/miscellaneous/typealiases.html",[6,2.28,7,2.336,17,0.435,24,0.044,33,1.105,50,0.629,51,3.015,96,0.035,97,0.041,98,0.035,975,1.586,1012,3.536,1013,3.536,1014,3.536,1034,4.35,1035,4.35,1036,5.046,1037,4.35,1038,4.35]],["title/miscellaneous/variables.html",[975,0.88,1039,2.799]],["body/miscellaneous/variables.html",[17,0.402,24,0.045,39,0.871,40,0.871,42,1.383,50,0.745,59,0.784,90,1.755,96,0.032,97,0.039,98,0.032,120,1.67,121,1.481,157,1.301,223,1.859,224,1.649,225,1.859,240,2.4,258,2.702,340,2.228,352,2.877,411,3.265,412,2.77,413,2.4,414,3.265,416,2.77,417,3.265,602,2.77,603,3.32,698,3.32,740,2.77,848,3.32,975,1.464,977,3.265,1039,3.265,1040,4.016,1041,4.016]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":340,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":784,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["0/1",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":408,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsMarkerComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0",{"_index":785,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["1/1",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["12/24",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1001,"title":{},"body":{"index.html":{}}}],["2",{"_index":409,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["2/9",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["20/35",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":60,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["22",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":410,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["300px",{"_index":612,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["31",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["48/71",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1032,"title":{},"body":{"overview.html":{}}}],["67",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["8.0.0",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["9/29",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["_addeventlisteners",{"_index":747,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_assignscriptloadingpromise",{"_index":233,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_assignscriptloadingpromise(scriptelem",{"_index":241,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_boundschangesampletime",{"_index":58,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_config",{"_index":228,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_createidentifier",{"_index":93,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_createidentifier(latlng",{"_index":110,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["_destroyed",{"_index":550,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_document",{"_index":229,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_fitboundsaccessor",{"_index":559,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_fitboundsdetails",{"_index":744,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_fitboundsservice",{"_index":558,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_generatebounds",{"_index":73,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_generatebounds(includeinbounds",{"_index":112,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["_getscriptsrc",{"_index":234,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_getscriptsrc(callbackname",{"_index":245,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_id",{"_index":615,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["_includeinbounds",{"_index":61,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_infowindowaddedtomanager",{"_index":616,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindowmanager",{"_index":630,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindowoptionsinputs",{"_index":617,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindows",{"_index":129,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["_latestfitboundsdetails",{"_index":551,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_mapswrapper",{"_index":146,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["_markeraddedtomanger",{"_index":745,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_markermanager",{"_index":143,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["_markers",{"_index":420,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["_observablesubscriptions",{"_index":746,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_registereventlisteners",{"_index":619,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_script_id",{"_index":230,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_scriptloadingpromise",{"_index":231,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_setinfowindowoptions",{"_index":620,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_setinfowindowoptions(changes",{"_index":673,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_updatebounds",{"_index":552,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_updatebounds(newfitboundsdetails",{"_index":564,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_updatefitboundsdetails",{"_index":748,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_updateopenstate",{"_index":621,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_zone",{"_index":141,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["abstract",{"_index":19,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"directives/NgMapsFitBounds.html":{}}}],["according",{"_index":663,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["activates",{"_index":1015,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":738,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["add",{"_index":992,"title":{},"body":{"index.html":{}}}],["added",{"_index":563,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["addinfowindow",{"_index":131,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["addinfowindow(infowindow",{"_index":147,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["additional",{"_index":1019,"title":{},"body":{"index.html":{}}}],["additionally",{"_index":1018,"title":{},"body":{"index.html":{}}}],["addmarker",{"_index":421,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["addmarker(marker",{"_index":434,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["adds",{"_index":539,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["addtobounds",{"_index":102,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["addtobounds(latlng",{"_index":80,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["aftercontentinit",{"_index":741,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["agm",{"_index":16,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["aliases",{"_index":1034,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":363,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["already",{"_index":188,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{}}}],["alter",{"_index":400,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["always",{"_index":666,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["angular",{"_index":508,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"index.html":{}}}],["angular/common",{"_index":255,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"dependencies.html":{}}}],["angular/core",{"_index":28,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":500,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["any).google",{"_index":265,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["any).google.maps",{"_index":266,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["api",{"_index":40,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":354,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["apis",{"_index":371,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["apiversion",{"_index":355,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["app",{"_index":513,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["appearing",{"_index":665,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["application",{"_index":375,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"index.html":{}}}],["applications",{"_index":370,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["appmodule",{"_index":995,"title":{},"body":{"index.html":{}}}],["array",{"_index":315,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"index.html":{}}}],["array.isarray(i",{"_index":346,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["array.isarray(queryparams[k",{"_index":338,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["arrays",{"_index":337,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["assigning",{"_index":367,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["async",{"_index":130,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["attaches",{"_index":1005,"title":{},"body":{"index.html":{}}}],["authenticate",{"_index":374,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["auto",{"_index":12,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"miscellaneous/enumerations.html":{}}}],["automatically",{"_index":788,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["available",{"_index":397,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsInfoWindowComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"modules.html":{}}}],["await",{"_index":185,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["before",{"_index":652,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["behavior",{"_index":391,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["behaviorsubject",{"_index":29,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["between",{"_index":783,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["bias",{"_index":399,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["bicyclinglayer",{"_index":1014,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["boolean",{"_index":560,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["bootstrap",{"_index":1030,"title":{},"body":{"overview.html":{}}}],["both",{"_index":377,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["bounce",{"_index":835,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["bounds",{"_index":14,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["bounds.delete(this._createidentifier(latlng",{"_index":88,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["bounds.extend(b",{"_index":78,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["bounds.set(id",{"_index":85,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["bounds.ts",{"_index":7,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["bounds.ts:23",{"_index":22,"title":{},"body":{"classes/FitBoundsAccessor.html":{}}}],["bounds.ts:31",{"_index":124,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:32",{"_index":122,"title":{},"body":{"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:34",{"_index":574,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:35",{"_index":123,"title":{},"body":{"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:37",{"_index":106,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:45",{"_index":569,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:50",{"_index":113,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:52",{"_index":572,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:61",{"_index":114,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:65",{"_index":565,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:71",{"_index":119,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:77",{"_index":116,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:81",{"_index":118,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:83",{"_index":571,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:85",{"_index":111,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["boundsmap",{"_index":51,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"miscellaneous/typealiases.html":{}}}],["break",{"_index":306,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["browse",{"_index":1028,"title":{},"body":{"modules.html":{}}}],["browser's",{"_index":384,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["call",{"_index":640,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["callback",{"_index":319,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["callbackname",{"_index":232,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["case",{"_index":304,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["change",{"_index":653,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["changefitboundschangesampletime",{"_index":103,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["changefitboundschangesampletime(timems",{"_index":89,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["changes",{"_index":570,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["changes.animation",{"_index":887,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.clickable",{"_index":885,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.draggable",{"_index":876,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.iconurl",{"_index":878,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.isopen",{"_index":711,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["changes.label",{"_index":874,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.latitude",{"_index":704,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["changes.longitude",{"_index":705,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["changes.opacity",{"_index":880,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.title",{"_index":872,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.visible",{"_index":882,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.zindex",{"_index":709,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["changes[k].currentvalue",{"_index":725,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["changing",{"_index":654,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["channel",{"_index":323,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["character",{"_index":774,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["child",{"_index":789,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["class",{"_index":0,"title":{"classes/FitBoundsAccessor.html":{},"classes/NoOpMapsAPILoader.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"classes/NoOpMapsAPILoader.html":{},"overview.html":{}}}],["clickable",{"_index":498,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["clicked",{"_index":778,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["clicks",{"_index":810,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["client",{"_index":321,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["clientid",{"_index":356,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["close",{"_index":132,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["close(infowindow",{"_index":151,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["closed",{"_index":671,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["closes",{"_index":677,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["cmp",{"_index":608,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["comma",{"_index":343,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["component",{"_index":541,"title":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":735,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["components",{"_index":599,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{},"overview.html":{}}}],["computing",{"_index":54,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["config",{"_index":240,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"miscellaneous/variables.html":{}}}],["config.ts",{"_index":352,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":353,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{}}}],["considered",{"_index":650,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["const",{"_index":75,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["constructor",{"_index":105,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["constructor(_fitboundsaccessor",{"_index":557,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["constructor(_infowindowmanager",{"_index":628,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["constructor(_mapswrapper",{"_index":139,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["constructor(config",{"_index":236,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["constructor(loader",{"_index":62,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["constructor(markermanager",{"_index":762,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["constructor(private",{"_index":699,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["container",{"_index":842,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["contains",{"_index":510,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["content",{"_index":206,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["content's",{"_index":649,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["contentchildren",{"_index":845,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["contentchildren(ngmapsinfowindowcomponent",{"_index":840,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["core",{"_index":509,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["coredirectives",{"_index":530,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["coverage",{"_index":941,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createeventobservable",{"_index":133,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["createeventobservable('click",{"_index":893,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('closeclick",{"_index":714,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["createeventobservable('drag",{"_index":910,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('dragend",{"_index":913,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('dragstart",{"_index":904,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('mouseout",{"_index":919,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('mouseover",{"_index":916,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('rightclick",{"_index":900,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable(eventname",{"_index":153,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["creates",{"_index":156,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["cs",{"_index":891,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["css",{"_index":996,"title":{},"body":{"index.html":{}}}],["custom",{"_index":540,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["d",{"_index":909,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["declarations",{"_index":531,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"overview.html":{}}}],["decorators",{"_index":689,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["default",{"_index":120,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["defines",{"_index":396,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["defining",{"_index":404,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["deleted",{"_index":189,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["deleteinfowindow",{"_index":134,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["deleteinfowindow(infowindow",{"_index":162,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["deletemarker",{"_index":422,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["deletemarker(marker",{"_index":440,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["dependencies",{"_index":972,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["described",{"_index":1017,"title":{},"body":{"index.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"index.html":{}}}],["different",{"_index":402,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["directive",{"_index":536,"title":{"directives/NgMapsFitBounds.html":{}},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":537,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["directives/fit",{"_index":527,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["directives/info",{"_index":177,"title":{},"body":{"injectables/InfoWindowManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/map",{"_index":179,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/marker",{"_index":464,"title":{},"body":{"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/services/pipes",{"_index":511,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["disable",{"_index":632,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["disableautopan",{"_index":212,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["displayed",{"_index":658,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["displaying",{"_index":386,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["distinct",{"_index":368,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["distinctuntilchanged",{"_index":577,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["document",{"_index":238,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["documentation",{"_index":942,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":600,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["drag",{"_index":755,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["dragend",{"_index":756,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["draggable",{"_index":487,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["dragged",{"_index":780,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["dragging",{"_index":804,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["drags",{"_index":801,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["dragstart",{"_index":757,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["drop",{"_index":836,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ds",{"_index":903,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["e",{"_index":221,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["each",{"_index":369,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["editors",{"_index":275,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["element",{"_index":561,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["elementref",{"_index":688,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["emits",{"_index":670,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["emitted",{"_index":809,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["emitter",{"_index":808,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["empty",{"_index":336,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["entry.key}=${entry.value",{"_index":350,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["enum",{"_index":407,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["enumerations",{"_index":976,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":297,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["error('expected",{"_index":860,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["event",{"_index":158,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["eventemitter",{"_index":668,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["eventname",{"_index":161,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["example",{"_index":546,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["exports",{"_index":532,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"overview.html":{}}}],["extends",{"_index":227,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["fail",{"_index":376,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["false",{"_index":636,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["feature",{"_index":15,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["features",{"_index":1020,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["filter((k",{"_index":333,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["find",{"_index":1023,"title":{},"body":{"index.html":{}}}],["fired",{"_index":799,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["first",{"_index":935,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["fit",{"_index":13,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["fitbounds",{"_index":1002,"title":{},"body":{"index.html":{}}}],["fitboundsaccessor",{"_index":1,"title":{"classes/FitBoundsAccessor.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["fitboundsdetails",{"_index":45,"title":{"interfaces/FitBoundsDetails.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["fitboundsservice",{"_index":52,"title":{"injectables/FitBoundsService.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"coverage.html":{}}}],["flatmap",{"_index":32,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["force",{"_index":392,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["foreground",{"_index":768,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["forroot",{"_index":516,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["forroot(lazymapsapiloaderconfig",{"_index":517,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["forwardref",{"_index":743,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["from(loader.load()).pipe",{"_index":64,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["front",{"_index":661,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["fully",{"_index":634,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["function",{"_index":529,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{}}}],["functions",{"_index":978,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":795,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["getbounds",{"_index":92,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["getfitboundsdetails",{"_index":20,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["getnativemarker",{"_index":423,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["getnativemarker(marker",{"_index":442,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["gets",{"_index":562,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["getting",{"_index":980,"title":{"index.html":{}},"body":{}}],["github",{"_index":1026,"title":{},"body":{"index.html":{}}}],["given",{"_index":160,"title":{},"body":{"injectables/InfoWindowManager.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"directives/NgMapsFitBounds.html":{}}}],["google",{"_index":157,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["google.maps.animation[marker.animation",{"_index":501,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["google.maps.icon",{"_index":764,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["google.maps.infowindowoptions",{"_index":169,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["google.maps.latlng",{"_index":47,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["google.maps.latlngbounds",{"_index":76,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["google.maps.latlngliteral",{"_index":48,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["google.maps.marker",{"_index":444,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["google.maps.markerchangeoptioneventnames",{"_index":437,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["google.maps.markerlabel",{"_index":771,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["google.maps.markermouseeventnames",{"_index":438,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["google.maps.mouseevent",{"_index":906,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["googlemapsapiscript",{"_index":252,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["googlemapsapiwrapper",{"_index":140,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"coverage.html":{}}}],["googlemapsscriptprotocol",{"_index":257,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/enumerations.html":{}}}],["googlemapsscriptprotocol.auto",{"_index":305,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["googlemapsscriptprotocol.http",{"_index":307,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["googlemapsscriptprotocol.https",{"_index":301,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["graph",{"_index":1027,"title":{},"body":{"modules.html":{}}}],["handleinfowindowupdate",{"_index":749,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["happen",{"_index":271,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["height",{"_index":611,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["hi",{"_index":614,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["higher",{"_index":660,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["hmr",{"_index":272,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["holds",{"_index":692,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["host",{"_index":379,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["hostandpath",{"_index":310,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["hostmarker",{"_index":618,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["html",{"_index":733,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["htmlelement",{"_index":242,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["http",{"_index":308,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/enumerations.html":{}}}],["https",{"_index":309,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/enumerations.html":{}}}],["https://developers.google.com/maps/documentation/javascript/basics#language",{"_index":395,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["https://developers.google.com/maps/documentation/javascript/basics#region",{"_index":405,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["https://developers.google.com/maps/documentation/javascript/get",{"_index":358,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["https://developers.google.com/maps/documentation/javascript/libraries",{"_index":398,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["hybrid",{"_index":1008,"title":{},"body":{"index.html":{}}}],["i.addlistener(eventname",{"_index":220,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["i.join",{"_index":348,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["i.setoptions(options",{"_index":205,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["i.setposition",{"_index":193,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["i.setzindex(infowindow.zindex",{"_index":198,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["icon",{"_index":489,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["iconurl",{"_index":751,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["id",{"_index":81,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["identifier",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":767,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["implement",{"_index":9,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["implements",{"_index":542,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["import",{"_index":26,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["important",{"_index":934,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["included",{"_index":378,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["includeinbounds",{"_index":74,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["includeinbounds.foreach((b",{"_index":77,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["information",{"_index":388,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["infowindow",{"_index":150,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["infowindow.content.nativeelement",{"_index":207,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.disableautopan",{"_index":213,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.hostmarker",{"_index":201,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.latitude",{"_index":195,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.longitude",{"_index":197,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.maxwidth",{"_index":209,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.open",{"_index":896,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["infowindow.zindex",{"_index":211,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindowclose",{"_index":627,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["infowindowid",{"_index":698,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["infowindowid++).tostring",{"_index":684,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["infowindowmanager",{"_index":125,"title":{"injectables/InfoWindowManager.html":{}},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{}}}],["infowindows",{"_index":657,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["inherited",{"_index":248,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["inject",{"_index":256,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["inject(document",{"_index":261,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["inject(lazy_maps_api_config",{"_index":260,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["injectable",{"_index":27,"title":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"coverage.html":{}}}],["injectables",{"_index":101,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"overview.html":{}}}],["injectiontoken",{"_index":406,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["injectiontoken('angular",{"_index":417,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":575,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["input('markerclickable",{"_index":854,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["input('markerdraggable",{"_index":853,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["inputs",{"_index":556,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["inside",{"_index":605,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["install",{"_index":990,"title":{},"body":{"index.html":{}}}],["installation",{"_index":988,"title":{},"body":{"index.html":{}}}],["instance",{"_index":216,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["interface",{"_index":44,"title":{"interfaces/FitBoundsDetails.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"coverage.html":{}}}],["interfaces",{"_index":99,"title":{},"body":{"interfaces/FitBoundsDetails.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"overview.html":{}}}],["internal",{"_index":49,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["isopen",{"_index":623,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["it's",{"_index":933,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["iwindow",{"_index":184,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["iwindow.close",{"_index":191,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["javascript",{"_index":770,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["join",{"_index":342,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["k",{"_index":347,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["key",{"_index":314,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsMarkerComponent.html":{}}}],["label",{"_index":485,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["language",{"_index":329,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["lat",{"_index":194,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["latitude",{"_index":624,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["latitudes",{"_index":664,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["latlng",{"_index":46,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"components/NgMapsMarkerComponent.html":{}}}],["latlng.lat}+${latlng.lng",{"_index":95,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["latlngbounds",{"_index":1004,"title":{},"body":{"index.html":{}}}],["latlngboundsliteral",{"_index":1003,"title":{},"body":{"index.html":{}}}],["layer",{"_index":1016,"title":{},"body":{"index.html":{}}}],["layers",{"_index":1011,"title":{},"body":{"index.html":{}}}],["layertypes",{"_index":1036,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lazy",{"_index":259,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["lazy_maps_api_config",{"_index":258,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lazymapsapiloader",{"_index":223,"title":{"injectables/LazyMapsAPILoader.html":{}},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lazymapsapiloaderconfig",{"_index":416,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"miscellaneous/variables.html":{}}}],["lazymapsapiloaderconfigliteral",{"_index":237,"title":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"coverage.html":{}}}],["legend",{"_index":732,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"overview.html":{}}}],["level",{"_index":522,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["libraries",{"_index":325,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["library",{"_index":987,"title":{},"body":{"index.html":{}}}],["license",{"_index":373,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["line:no",{"_index":851,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["link",{"_index":415,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["listener",{"_index":159,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["literal",{"_index":824,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["lng",{"_index":196,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["load",{"_index":235,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["loaded",{"_index":267,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["loader",{"_index":42,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["loader.ts",{"_index":226,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["loader.ts:13",{"_index":254,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:14",{"_index":250,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:15",{"_index":251,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:16",{"_index":253,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:17",{"_index":239,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:30",{"_index":247,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:5",{"_index":418,"title":{},"body":{"injectables/MapsAPILoader.html":{}}}],["loader.ts:58",{"_index":243,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:70",{"_index":246,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:9",{"_index":936,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["loader/lazy",{"_index":225,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["loader/maps",{"_index":41,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsAPILoader.html":{},"modules/NgMapsCoreModule.html":{},"coverage.html":{}}}],["loader/noop",{"_index":930,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["longitude",{"_index":625,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["lower",{"_index":662,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["m",{"_index":465,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.addlistener(eventname",{"_index":503,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setanimation(google.maps.animation[marker.animation",{"_index":481,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setanimation(marker.animation",{"_index":482,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setclickable(marker.clickable",{"_index":479,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setdraggable(marker.draggable",{"_index":474,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.seticon(marker.iconurl",{"_index":475,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setlabel(marker.label",{"_index":473,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setmap(null",{"_index":467,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setopacity(marker.opacity",{"_index":476,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setposition",{"_index":469,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.settitle(marker.title",{"_index":472,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setvisible(marker.visible",{"_index":477,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setzindex(marker.zindex",{"_index":478,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["make",{"_index":10,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["manager",{"_index":182,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["manager.ts",{"_index":128,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"coverage.html":{}}}],["manager.ts:100",{"_index":154,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:107",{"_index":443,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:11",{"_index":463,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:111",{"_index":439,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:14",{"_index":175,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["manager.ts:17",{"_index":145,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:21",{"_index":441,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:25",{"_index":163,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:34",{"_index":456,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:38",{"_index":172,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:39",{"_index":460,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:44",{"_index":454,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:46",{"_index":174,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:49",{"_index":450,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:51",{"_index":166,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:54",{"_index":452,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:59",{"_index":458,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:64",{"_index":152,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["manager.ts:69",{"_index":170,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["manager.ts:74",{"_index":448,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:77",{"_index":149,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:79",{"_index":446,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:88",{"_index":436,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["map",{"_index":33,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["map((entry",{"_index":349,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["map((includeinbounds",{"_index":69,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["map((k",{"_index":341,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["map.component.html",{"_index":844,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["mapfitbounds",{"_index":549,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["maps",{"_index":39,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["maps.googleapis.com/maps/api/js",{"_index":312,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["maps/core",{"_index":983,"title":{},"body":{"index.html":{}}}],["mapsapiloader",{"_index":38,"title":{"injectables/MapsAPILoader.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"modules/NgMapsCoreModule.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["mapsapiloader:5",{"_index":249,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["maptypeid",{"_index":1006,"title":{},"body":{"index.html":{}}}],["marker",{"_index":181,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["marker's",{"_index":782,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["marker'},{'name",{"_index":737,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["marker.animation",{"_index":480,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.clickable",{"_index":499,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.draggable",{"_index":488,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.hostmarker",{"_index":864,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["marker.iconurl",{"_index":490,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.label",{"_index":486,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.latitude",{"_index":470,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.longitude",{"_index":471,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.opacity",{"_index":492,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.title",{"_index":497,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.visible",{"_index":494,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.zindex",{"_index":495,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["markerclick",{"_index":758,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["markerclickable",{"_index":752,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markerdraggable",{"_index":753,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markericon",{"_index":769,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markerid",{"_index":848,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["markerid++).tostring",{"_index":855,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markermanager",{"_index":144,"title":{"injectables/MarkerManager.html":{}},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["markerrightclick",{"_index":759,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markers",{"_index":667,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["matching",{"_index":97,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":646,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["maxwidth",{"_index":208,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["maxzoom",{"_index":998,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":547,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["method",{"_index":519,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["methods",{"_index":18,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["minzoom",{"_index":997,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":975,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modular",{"_index":985,"title":{},"body":{"index.html":{}}}],["module",{"_index":504,"title":{"modules/NgMapsCoreModule.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"overview.html":{}}}],["modules",{"_index":506,"title":{"modules.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":524,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["more",{"_index":861,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["mouseout",{"_index":760,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["mouseover",{"_index":761,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["mouses",{"_index":814,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["name",{"_index":108,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["native",{"_index":693,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["new",{"_index":59,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newfitboundsdetails",{"_index":566,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["next",{"_index":850,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ng",{"_index":982,"title":{},"body":{"index.html":{}}}],["ngaftercontentinit",{"_index":750,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ngmapscoremodule",{"_index":505,"title":{"modules/NgMapsCoreModule.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"modules.html":{}}}],["ngmapscoremodule.forroot",{"_index":512,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["ngmapscoremodule.forroot({apikey",{"_index":993,"title":{},"body":{"index.html":{}}}],["ngmapsfitbounds",{"_index":526,"title":{"directives/NgMapsFitBounds.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapsinfowindowcomponent",{"_index":148,"title":{"components/NgMapsInfoWindowComponent.html":{}},"body":{"injectables/InfoWindowManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapsinfowindowcomponent._infowindowoptionsinputs.includes(k",{"_index":722,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["ngmapsmarker",{"_index":922,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ngmapsmarkercomponent",{"_index":435,"title":{"components/NgMapsMarkerComponent.html":{}},"body":{"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapsviewcomponent",{"_index":178,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmodule",{"_index":525,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["ngonchanges",{"_index":553,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ngonchanges(changes",{"_index":567,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ngondestroy",{"_index":554,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ngoninit",{"_index":555,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["ngzone",{"_index":142,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["noopmapsapiloader",{"_index":929,"title":{"classes/NoOpMapsAPILoader.html":{}},"body":{"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["npm",{"_index":989,"title":{},"body":{"index.html":{}}}],["null",{"_index":187,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["number",{"_index":90,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["number(this.latitude",{"_index":865,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["number(this.longitude",{"_index":866,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["object",{"_index":414,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/variables.html":{}}}],["object.keys(changes).filter((k",{"_index":721,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["object.keys(queryparams",{"_index":332,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["observable",{"_index":25,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["observable((observer",{"_index":219,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["observer",{"_index":176,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["observer.next(e",{"_index":222,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["onchanges",{"_index":545,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ondestroy",{"_index":544,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["one",{"_index":862,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["oninit",{"_index":543,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["opacity",{"_index":491,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["open",{"_index":135,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["open(infowindow",{"_index":165,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["openinfowindow",{"_index":754,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["opens",{"_index":635,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["optional",{"_index":109,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["optionkeys",{"_index":720,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["optionkeys.foreach((k",{"_index":723,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["options",{"_index":168,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"index.html":{}}}],["options.position",{"_index":215,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["options[k",{"_index":724,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["order",{"_index":659,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ouside",{"_index":643,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["out",{"_index":1024,"title":{},"body":{"index.html":{},"overview.html":{}}}],["output",{"_index":695,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["outputs",{"_index":626,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["outside",{"_index":815,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["over",{"_index":817,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["overview",{"_index":1029,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":390,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["package",{"_index":971,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":268,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"index.html":{}}}],["pan",{"_index":633,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["parameter",{"_index":362,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["parameters",{"_index":107,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["params",{"_index":331,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["path",{"_index":380,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["peer",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":582,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["plan",{"_index":372,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["plans",{"_index":361,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["play",{"_index":838,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["please",{"_index":412,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"miscellaneous/variables.html":{}}}],["position",{"_index":484,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["preferred",{"_index":385,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["premium",{"_index":360,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["private",{"_index":72,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["project",{"_index":1025,"title":{},"body":{"index.html":{}}}],["promise",{"_index":164,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["promise((resolve",{"_index":292,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["promise.resolve",{"_index":269,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["properties",{"_index":100,"title":{},"body":{"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["protected",{"_index":56,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["protocol",{"_index":302,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["protocoltype",{"_index":299,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["protocol}//${hostandpath}?${params",{"_index":351,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["provide",{"_index":413,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsMarkerComponent.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1021,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":183,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["providers",{"_index":533,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"overview.html":{}}}],["quarterly",{"_index":318,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["querylist",{"_index":839,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["queryparams",{"_index":313,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["queryparams[k",{"_index":334,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["queryparams[k].length",{"_index":339,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["rc",{"_index":899,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["readme",{"_index":739,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["readonly",{"_index":57,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/LazyMapsAPILoader.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["regardless",{"_index":648,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["region",{"_index":327,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["register",{"_index":520,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["registered",{"_index":925,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["reject",{"_index":293,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["reject(error",{"_index":298,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["remove",{"_index":335,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["removefrombounds",{"_index":104,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["removefrombounds(latlng",{"_index":87,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["rename",{"_index":852,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["renders",{"_index":604,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["repeatedly",{"_index":798,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["replaysubject",{"_index":828,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["replaysubject(1",{"_index":829,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["reset",{"_index":1031,"title":{},"body":{"overview.html":{}}}],["resolve",{"_index":295,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["responsible",{"_index":53,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["result",{"_index":96,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":98,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":79,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["returns",{"_index":23,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["rightclicks",{"_index":812,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["roadmap",{"_index":1007,"title":{},"body":{"index.html":{}}}],["root",{"_index":521,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["rxjs",{"_index":31,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["rxjs/operators",{"_index":37,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["s.unsubscribe",{"_index":928,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["sample",{"_index":34,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["satellite",{"_index":1009,"title":{},"body":{"index.html":{}}}],["screen",{"_index":794,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["script",{"_index":279,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["script.async",{"_index":283,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["script.defer",{"_index":285,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["script.id",{"_index":286,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["script.src",{"_index":288,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["script.type",{"_index":281,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["scriptelem",{"_index":244,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["scriptelem.onerror",{"_index":296,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["scriptonpage",{"_index":276,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["see",{"_index":357,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsMarkerComponent.html":{}}}],["selector",{"_index":548,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["self",{"_index":576,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["seperated",{"_index":344,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["serve",{"_index":401,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["services/fit",{"_index":579,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["services/managers/info",{"_index":697,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["services/managers/marker",{"_index":847,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["services/maps",{"_index":528,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["set",{"_index":651,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"index.html":{}}}],["setoptions",{"_index":136,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setoptions(infowindow",{"_index":167,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setposition",{"_index":137,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setposition(infowindow",{"_index":171,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["sets",{"_index":638,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["setting",{"_index":394,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["setzindex",{"_index":138,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setzindex(infowindow",{"_index":173,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["shakable",{"_index":986,"title":{},"body":{"index.html":{}}}],["sharereplay",{"_index":35,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["sharereplay(1",{"_index":71,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["simple",{"_index":984,"title":{},"body":{"index.html":{}}}],["simplechange",{"_index":846,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["simplechanges",{"_index":568,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["single",{"_index":55,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"components/NgMapsMarkerComponent.html":{}}}],["situations",{"_index":273,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["src/.../core.module.ts",{"_index":979,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../fit",{"_index":1035,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../info",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../layers.ts",{"_index":1037,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../lazy",{"_index":977,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../marker.ts",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/core.module.ts",{"_index":507,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/core.module.ts:39",{"_index":518,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["src/lib/directives/fit",{"_index":538,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"coverage.html":{}}}],["src/lib/directives/info",{"_index":602,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/directives/map.ts",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["src/lib/directives/marker.ts",{"_index":740,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/directives/marker.ts:103",{"_index":786,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:108",{"_index":781,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:116",{"_index":792,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:122",{"_index":777,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:128",{"_index":837,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:133",{"_index":807,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:140",{"_index":811,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:145",{"_index":805,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:152",{"_index":797,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:159",{"_index":802,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:166",{"_index":816,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:173",{"_index":813,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:180",{"_index":841,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:184",{"_index":832,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:185",{"_index":831,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:186",{"_index":834,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:188",{"_index":830,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:190",{"_index":763,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:199",{"_index":823,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:204",{"_index":821,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:216",{"_index":825,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:273",{"_index":820,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:277",{"_index":819,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:283",{"_index":818,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:338",{"_index":822,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:343",{"_index":827,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:348",{"_index":826,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:65",{"_index":775,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:70",{"_index":776,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:75",{"_index":790,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:80",{"_index":772,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:86",{"_index":779,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:93",{"_index":765,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:98",{"_index":791,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/interface/layers.ts",{"_index":1038,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/services/fit",{"_index":6,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/services/google",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["src/lib/services/managers/info",{"_index":126,"title":{},"body":{"injectables/InfoWindowManager.html":{},"coverage.html":{}}}],["src/lib/services/managers/marker",{"_index":419,"title":{},"body":{"injectables/MarkerManager.html":{},"coverage.html":{}}}],["src/lib/services/maps",{"_index":224,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["stackblitz.io",{"_index":274,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["standalone",{"_index":606,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["started",{"_index":981,"title":{"index.html":{}},"body":{}}],["starts",{"_index":806,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["state",{"_index":639,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["statements",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":515,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["stops",{"_index":803,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["string",{"_index":94,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["strings",{"_index":345,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["styles",{"_index":609,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["subject",{"_index":573,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["submodules",{"_index":1022,"title":{},"body":{"index.html":{}}}],["subscribe",{"_index":715,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["subscribe((details",{"_index":590,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["subscribe((e",{"_index":905,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["subscription",{"_index":833,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["subscriptions",{"_index":926,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["super",{"_index":262,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["sure",{"_index":939,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["switch",{"_index":303,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["switchmap",{"_index":36,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["t",{"_index":155,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["table",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":969,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":382,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["takeuntil",{"_index":578,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["takeuntil(this._destroyed",{"_index":589,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["template",{"_index":613,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["templateurl",{"_index":843,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["terrain",{"_index":1010,"title":{},"body":{"index.html":{}}}],["text/javascript",{"_index":282,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["textual",{"_index":387,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["this._addeventlisteners",{"_index":870,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._assignscriptloadingpromise(script",{"_index":290,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._assignscriptloadingpromise(scriptonpage",{"_index":278,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._boundschangesampletime$.next(timems",{"_index":91,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._boundschangesampletime$.pipe(switchmap((time",{"_index":66,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._config",{"_index":263,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.apikey",{"_index":320,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.apiversion",{"_index":317,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.channel",{"_index":324,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.clientid",{"_index":322,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.hostandpath",{"_index":311,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.language",{"_index":330,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.libraries",{"_index":326,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.protocol",{"_index":300,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.region",{"_index":328,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._createidentifier(latlng",{"_index":82,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._destroyed$.complete",{"_index":598,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._destroyed$.next",{"_index":597,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._document",{"_index":264,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._document.body.appendchild(script",{"_index":291,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._document.createelement('script",{"_index":280,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._document.getelementbyid(this._script_id",{"_index":277,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._fitboundsaccessor",{"_index":581,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._fitboundsdetails$.asobservable",{"_index":889,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._fitboundsdetails$.next",{"_index":890,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._fitboundsservice.addtobounds(this._latestfitboundsdetails.latlng",{"_index":594,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._fitboundsservice.removefrombounds",{"_index":595,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._generatebounds(includeinbounds",{"_index":70,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._getscriptsrc(this.callbackname",{"_index":289,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._id",{"_index":729,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["this._id.tostring",{"_index":730,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._includeinbounds",{"_index":65,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.next(bounds",{"_index":86,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.value",{"_index":84,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.value.has(id",{"_index":83,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._infowindowaddedtomanager",{"_index":701,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager",{"_index":713,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.addinfowindow(this).then",{"_index":700,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.close(this",{"_index":728,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.deleteinfowindow(this",{"_index":731,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.open(this",{"_index":727,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setoptions(this",{"_index":726,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setposition(this",{"_index":708,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setzindex(this",{"_index":710,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindows.delete(infowindow",{"_index":192,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._infowindows.get(infowindow",{"_index":186,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._infowindows.set(infowindow",{"_index":218,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._latestfitboundsdetails",{"_index":592,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._latestfitboundsdetails.latlng",{"_index":596,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._mapswrapper.createinfowindow(options",{"_index":217,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._mapswrapper.createmarker",{"_index":483,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._mapswrapper.getnativemap",{"_index":200,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._markeraddedtomanger",{"_index":867,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._markermanager.getnativemarker",{"_index":202,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._markers.delete(marker",{"_index":468,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._markers.get(marker",{"_index":466,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._markers.set(marker",{"_index":502,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._observablesubscriptions.foreach((s",{"_index":927,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(cs",{"_index":898,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(d",{"_index":912,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(dragend",{"_index":915,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(ds",{"_index":908,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(mouseout",{"_index":921,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(mouseover",{"_index":918,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(rc",{"_index":902,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._registereventlisteners",{"_index":703,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._script_id",{"_index":287,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._scriptloadingpromise",{"_index":270,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._setinfowindowoptions(changes",{"_index":712,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._updatebounds",{"_index":580,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._updatebounds(details",{"_index":591,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._updatefitboundsdetails",{"_index":869,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._updateopenstate",{"_index":702,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._zone.run",{"_index":190,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["this.bounds",{"_index":63,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this.close",{"_index":719,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.drag.emit(e",{"_index":911,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.dragend.emit(e",{"_index":914,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.dragstart.emit(e",{"_index":907,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.handleinfowindowupdate",{"_index":856,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.changes.subscribe",{"_index":857,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.foreach((infowindow",{"_index":895,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.foreach((marker",{"_index":863,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.length",{"_index":858,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindowclose.emit",{"_index":717,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.isopen",{"_index":716,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.latitude",{"_index":706,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["this.longitude",{"_index":707,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["this.mapfitbounds",{"_index":593,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this.markerclick.emit(this",{"_index":897,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager",{"_index":892,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.addmarker(this).then",{"_index":868,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.deletemarker(this",{"_index":923,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateanimation(this",{"_index":888,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateclickable(this",{"_index":886,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatedraggable(this",{"_index":877,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateicon(this",{"_index":879,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatelabel(this",{"_index":875,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatemarkerposition(this",{"_index":871,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateopacity(this",{"_index":881,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatetitle(this",{"_index":873,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatevisible(this",{"_index":883,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatezindex(this",{"_index":884,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markerrightclick.emit(null",{"_index":901,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.mouseout.emit(e",{"_index":920,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.mouseover.emit(e",{"_index":917,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.open",{"_index":718,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.openinfowindow",{"_index":894,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["throw",{"_index":859,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["tiles",{"_index":403,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["time",{"_index":68,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["timems",{"_index":117,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["timer",{"_index":30,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["timer(0",{"_index":67,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["title",{"_index":496,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["token",{"_index":411,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/variables.html":{}}}],["tostring",{"_index":622,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["track",{"_index":364,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["trafficlayer",{"_index":1012,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["transitlayer",{"_index":1013,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["tree",{"_index":601,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["true",{"_index":284,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["tslint:disable",{"_index":849,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["type",{"_index":50,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1033,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":214,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["typescript",{"_index":607,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["typically",{"_index":1000,"title":{},"body":{"index.html":{}}}],["under",{"_index":366,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["unsubscribe",{"_index":924,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["up",{"_index":796,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["update",{"_index":655,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["updateanimation",{"_index":424,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateanimation(marker",{"_index":445,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateclickable",{"_index":425,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateclickable(marker",{"_index":447,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatedraggable",{"_index":426,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatedraggable(marker",{"_index":449,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateicon",{"_index":427,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateicon(marker",{"_index":451,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatelabel",{"_index":428,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatelabel(marker",{"_index":453,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatemarkerposition",{"_index":429,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatemarkerposition(marker",{"_index":455,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateopacity",{"_index":430,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateopacity(marker",{"_index":457,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatetitle",{"_index":431,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatetitle(marker",{"_index":459,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatevisible",{"_index":432,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatevisible(marker",{"_index":461,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatezindex",{"_index":433,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatezindex(marker",{"_index":462,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["uppercase",{"_index":773,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["url",{"_index":766,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["usage",{"_index":365,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"index.html":{}}}],["use",{"_index":393,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["useclass",{"_index":534,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["used",{"_index":381,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["useexisting",{"_index":742,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["usefull",{"_index":642,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["user",{"_index":800,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["uses",{"_index":383,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["usevalue",{"_index":535,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["using",{"_index":931,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["v",{"_index":316,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["value",{"_index":121,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":514,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["var",{"_index":734,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["variable",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1039,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":359,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["vertical",{"_index":793,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["via",{"_index":932,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["view",{"_index":610,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["viewchild",{"_index":696,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["viewchild('content",{"_index":690,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["visible",{"_index":493,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["void",{"_index":115,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["w",{"_index":199,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["w.close",{"_index":204,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["w.open(map",{"_index":203,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["whether",{"_index":787,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["width",{"_index":647,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window",{"_index":127,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["window'},{'name",{"_index":736,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["window).google",{"_index":937,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["window).google.maps",{"_index":938,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["window.google.maps",{"_index":940,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["window.ts",{"_index":603,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["window.ts:104",{"_index":691,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:109",{"_index":637,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:114",{"_index":669,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:115",{"_index":686,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:116",{"_index":685,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:118",{"_index":681,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:127",{"_index":679,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:147",{"_index":672,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:156",{"_index":675,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:160",{"_index":674,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:174",{"_index":682,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:181",{"_index":676,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:187",{"_index":678,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:192",{"_index":683,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:197",{"_index":680,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:55",{"_index":629,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:58",{"_index":687,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:66",{"_index":641,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:72",{"_index":644,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:78",{"_index":631,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:86",{"_index":656,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:93",{"_index":645,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:98",{"_index":694,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window[this.callbackname",{"_index":294,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["wish",{"_index":389,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["work",{"_index":11,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["wrapper",{"_index":180,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["wrapper.ts",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["x",{"_index":583,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["x.latlng.lat",{"_index":585,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["x.latlng.lng",{"_index":587,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["y",{"_index":584,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["y.latlng.lat",{"_index":586,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["y.latlng.lng",{"_index":588,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["yarn",{"_index":991,"title":{},"body":{"index.html":{}}}],["yes",{"_index":523,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{}}}],["your_api_key",{"_index":994,"title":{},"body":{"index.html":{}}}],["zindex",{"_index":210,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["zoom",{"_index":999,"title":{},"body":{"index.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/FitBoundsAccessor.html":{"url":"classes/FitBoundsAccessor.html","title":"class - FitBoundsAccessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FitBoundsAccessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/fit-bounds.ts\n        \n\n            \n                Description\n            \n            \n                Class to implement when you what to be able to make it work with the auto fit bounds feature\nof AGM.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getFitBoundsDetails$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getFitBoundsDetails$\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFitBoundsDetails$()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport { flatMap, map, sample, shareReplay, switchMap } from 'rxjs/operators';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: google.maps.LatLng | google.maps.LatLngLiteral;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      flatMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this._generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  private _generateBounds(\n    includeInBounds: Map,\n  ) {\n    const bounds = new google.maps.LatLngBounds();\n    includeInBounds.forEach((b) => bounds.extend(b));\n    return bounds;\n  }\n\n  addToBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  removeFromBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FitBoundsDetails.html":{"url":"interfaces/FitBoundsDetails.html","title":"interface - FitBoundsDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FitBoundsDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/fit-bounds.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        latLng\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latLng\n                                    \n                                \n                                \n                                    \n                                        latLng:     google.maps.LatLng | google.maps.LatLngLiteral\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     google.maps.LatLng | google.maps.LatLngLiteral\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport { flatMap, map, sample, shareReplay, switchMap } from 'rxjs/operators';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: google.maps.LatLng | google.maps.LatLngLiteral;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      flatMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this._generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  private _generateBounds(\n    includeInBounds: Map,\n  ) {\n    const bounds = new google.maps.LatLngBounds();\n    includeInBounds.forEach((b) => bounds.extend(b));\n    return bounds;\n  }\n\n  addToBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  removeFromBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FitBoundsService.html":{"url":"injectables/FitBoundsService.html","title":"injectable - FitBoundsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FitBoundsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/fit-bounds.ts\n        \n\n            \n                Description\n            \n            \n                The FitBoundsService is responsible for computing the bounds of the a single map.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                _boundsChangeSampleTime$\n                            \n                            \n                                    Protected\n                                    Readonly\n                                _includeInBounds$\n                            \n                            \n                                    Protected\n                                    Readonly\n                                bounds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _createIdentifier\n                            \n                            \n                                    Private\n                                _generateBounds\n                            \n                            \n                                addToBounds\n                            \n                            \n                                changeFitBoundsChangeSampleTime\n                            \n                            \n                                getBounds$\n                            \n                            \n                                removeFromBounds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/fit-bounds.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _createIdentifier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _createIdentifier(latLng: google.maps.LatLng | google.maps.LatLngLiteral)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                            google.maps.LatLng | google.maps.LatLngLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _generateBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _generateBounds(includeInBounds: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    includeInBounds\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addToBounds\n                        \n                        \n                    \n                \n            \n            \n                \naddToBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                            google.maps.LatLng | google.maps.LatLngLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeFitBoundsChangeSampleTime\n                        \n                        \n                    \n                \n            \n            \n                \nchangeFitBoundsChangeSampleTime(timeMs: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeMs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds$\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds$()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeFromBounds\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFromBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                            google.maps.LatLng | google.maps.LatLngLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            _boundsChangeSampleTime$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(\n    200,\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/fit-bounds.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            _includeInBounds$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(\n    new Map(),\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/fit-bounds.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            bounds$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/fit-bounds.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport { flatMap, map, sample, shareReplay, switchMap } from 'rxjs/operators';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: google.maps.LatLng | google.maps.LatLngLiteral;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      flatMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this._generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  private _generateBounds(\n    includeInBounds: Map,\n  ) {\n    const bounds = new google.maps.LatLngBounds();\n    includeInBounds.forEach((b) => bounds.extend(b));\n    return bounds;\n  }\n\n  addToBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  removeFromBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InfoWindowManager.html":{"url":"injectables/InfoWindowManager.html","title":"injectable - InfoWindowManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InfoWindowManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/info-window-manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _infoWindows\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addInfoWindow\n                            \n                            \n                                close\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                    Async\n                                deleteInfoWindow\n                            \n                            \n                                    Async\n                                open\n                            \n                            \n                                setOptions\n                            \n                            \n                                setPosition\n                            \n                            \n                                setZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: GoogleMapsAPIWrapper, _zone: NgZone, _markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/info-window-manager.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        GoogleMapsAPIWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _markerManager\n                                                  \n                                                        \n                                                                        MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addInfoWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window-manager.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window-manager.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window-manager.ts:100\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Creates a Google Maps event listener for the given InfoWindow as an Observable\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteInfoWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window-manager.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            open\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    open(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window-manager.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(infoWindow: NgMapsInfoWindowComponent, options: google.maps.InfoWindowOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window-manager.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.InfoWindowOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window-manager.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setZIndex\n                        \n                        \n                    \n                \n            \n            \n                \nsetZIndex(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window-manager.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _infoWindows\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/managers/info-window-manager.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable, Observer } from 'rxjs';\nimport { Injectable, NgZone } from '@angular/core';\n\nimport { NgMapsInfoWindowComponent } from '../../directives/info-window';\nimport { NgMapsViewComponent } from '../../directives/map';\n\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport { MarkerManager } from './marker-manager';\n\n@Injectable({\n  providedIn: NgMapsViewComponent,\n})\nexport class InfoWindowManager {\n  private _infoWindows: Map = new Map();\n\n  constructor(\n    private _mapsWrapper: GoogleMapsAPIWrapper,\n    private _zone: NgZone,\n    private _markerManager: MarkerManager,\n  ) {}\n\n  async deleteInfoWindow(infoWindow: NgMapsInfoWindowComponent): Promise {\n    const iWindow = await this._infoWindows.get(infoWindow);\n    if (iWindow == null) {\n      // info window already deleted\n      return;\n    } else {\n      return this._zone.run(() => {\n        iWindow.close();\n        this._infoWindows.delete(infoWindow);\n      });\n    }\n  }\n\n  setPosition(infoWindow: NgMapsInfoWindowComponent): void {\n    const i = this._infoWindows.get(infoWindow);\n    i.setPosition({\n      lat: infoWindow.latitude,\n      lng: infoWindow.longitude,\n    });\n  }\n\n  setZIndex(infoWindow: NgMapsInfoWindowComponent): void {\n    const i = this._infoWindows.get(infoWindow);\n    i.setZIndex(infoWindow.zIndex);\n  }\n\n  async open(infoWindow: NgMapsInfoWindowComponent): Promise {\n    const w = this._infoWindows.get(infoWindow);\n    const map = await this._mapsWrapper.getNativeMap();\n    if (infoWindow.hostMarker != null) {\n      const marker = await this._markerManager.getNativeMarker(\n        infoWindow.hostMarker,\n      );\n      w.open(map, marker);\n    } else {\n      w.open(map);\n    }\n  }\n\n  close(infoWindow: NgMapsInfoWindowComponent): void {\n    const w = this._infoWindows.get(infoWindow);\n    w.close();\n  }\n\n  setOptions(\n    infoWindow: NgMapsInfoWindowComponent,\n    options: google.maps.InfoWindowOptions,\n  ) {\n    const i = this._infoWindows.get(infoWindow);\n    i.setOptions(options);\n  }\n\n  async addInfoWindow(infoWindow: NgMapsInfoWindowComponent) {\n    const options: google.maps.InfoWindowOptions = {\n      content: infoWindow.content.nativeElement,\n      maxWidth: infoWindow.maxWidth,\n      zIndex: infoWindow.zIndex,\n      disableAutoPan: infoWindow.disableAutoPan,\n    };\n    if (\n      typeof infoWindow.latitude === 'number' &&\n      typeof infoWindow.longitude === 'number'\n    ) {\n      options.position = {\n        lat: infoWindow.latitude,\n        lng: infoWindow.longitude,\n      };\n    }\n    const instance = await this._mapsWrapper.createInfoWindow(options);\n    this._infoWindows.set(infoWindow, instance);\n  }\n\n  /**\n   * Creates a Google Maps event listener for the given InfoWindow as an Observable\n   */\n  createEventObservable(\n    eventName: string,\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Observable {\n    const i = this._infoWindows.get(infoWindow);\n    return new Observable((observer: Observer) => {\n      i.addListener(eventName, (e: T) =>\n        this._zone.run(() => observer.next(e)),\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LazyMapsAPILoader.html":{"url":"injectables/LazyMapsAPILoader.html","title":"injectable - LazyMapsAPILoader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LazyMapsAPILoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/maps-api-loader/lazy-maps-api-loader.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MapsAPILoader\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                    Protected\n                                _document\n                            \n                            \n                                    Protected\n                                    Readonly\n                                _SCRIPT_ID\n                            \n                            \n                                    Protected\n                                _scriptLoadingPromise\n                            \n                            \n                                    Protected\n                                    Readonly\n                                callbackName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _assignScriptLoadingPromise\n                            \n                            \n                                    Protected\n                                _getScriptSrc\n                            \n                            \n                                load\n                            \n                            \n                                    Abstract\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: LazyMapsAPILoaderConfigLiteral, document: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        LazyMapsAPILoaderConfigLiteral\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _assignScriptLoadingPromise\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _assignScriptLoadingPromise(scriptElem: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scriptElem\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _getScriptSrc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getScriptSrc(callbackName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    callbackName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Inherited from         MapsAPILoader\n\n                \n            \n            \n                \n                        Defined in         MapsAPILoader:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LazyMapsAPILoaderConfigLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Document\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            _SCRIPT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'GoogleMapsApiScript'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _scriptLoadingPromise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            callbackName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : `LazyMapsAPILoader`\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GoogleMapsScriptProtocol,\n  LAZY_MAPS_API_CONFIG,\n  LazyMapsAPILoaderConfigLiteral,\n} from './lazy-maps-api-loader-config';\n\nimport { MapsAPILoader } from './maps-api-loader';\n\n@Injectable()\nexport class LazyMapsAPILoader extends MapsAPILoader {\n  protected _scriptLoadingPromise: Promise;\n  protected _config: LazyMapsAPILoaderConfigLiteral;\n  protected _document: Document;\n  protected readonly _SCRIPT_ID: string = 'GoogleMapsApiScript';\n  protected readonly callbackName: string = `LazyMapsAPILoader`;\n\n  constructor(\n    @Optional()\n    @Inject(LAZY_MAPS_API_CONFIG)\n    config: LazyMapsAPILoaderConfigLiteral = null,\n    @Inject(DOCUMENT) document: any,\n  ) {\n    super();\n    this._config = config || {};\n    this._document = document as Document;\n  }\n\n  load(): Promise {\n    if ((window as any).google && (window as any).google.maps) {\n      // Google maps already loaded on the page.\n      return Promise.resolve();\n    }\n\n    if (this._scriptLoadingPromise) {\n      return this._scriptLoadingPromise;\n    }\n\n    // this can happen in HMR situations or Stackblitz.io editors.\n    const scriptOnPage = this._document.getElementById(this._SCRIPT_ID);\n    if (scriptOnPage) {\n      this._assignScriptLoadingPromise(scriptOnPage);\n      return this._scriptLoadingPromise;\n    }\n\n    const script = this._document.createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.id = this._SCRIPT_ID;\n    script.src = this._getScriptSrc(this.callbackName);\n    this._assignScriptLoadingPromise(script);\n    this._document.body.appendChild(script);\n    return this._scriptLoadingPromise;\n  }\n\n  private _assignScriptLoadingPromise(scriptElem: HTMLElement) {\n    this._scriptLoadingPromise = new Promise((resolve, reject) => {\n      window[this.callbackName] = () => {\n        resolve();\n      };\n\n      scriptElem.onerror = (error: Event) => {\n        reject(error);\n      };\n    });\n  }\n\n  protected _getScriptSrc(callbackName: string): string {\n    const protocolType: GoogleMapsScriptProtocol =\n      (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n    let protocol: string;\n\n    switch (protocolType) {\n      case GoogleMapsScriptProtocol.AUTO:\n        protocol = '';\n        break;\n      case GoogleMapsScriptProtocol.HTTP:\n        protocol = 'http:';\n        break;\n      case GoogleMapsScriptProtocol.HTTPS:\n        protocol = 'https:';\n        break;\n    }\n\n    const hostAndPath: string =\n      this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n    const queryParams: { [key: string]: string | Array } = {\n      v: this._config.apiVersion || 'quarterly',\n      callback: callbackName,\n      key: this._config.apiKey,\n      client: this._config.clientId,\n      channel: this._config.channel,\n      libraries: this._config.libraries,\n      region: this._config.region,\n      language: this._config.language,\n    };\n    const params: string = Object.keys(queryParams)\n      .filter((k: string) => queryParams[k] != null)\n      .filter((k: string) => {\n        // remove empty arrays\n        return (\n          !Array.isArray(queryParams[k]) ||\n          (Array.isArray(queryParams[k]) && queryParams[k].length > 0)\n        );\n      })\n      .map((k: string) => {\n        // join arrays as comma seperated strings\n        const i = queryParams[k];\n        if (Array.isArray(i)) {\n          return { key: k, value: i.join(',') };\n        }\n        return { key: k, value: queryParams[k] };\n      })\n      .map((entry: { key: string; value: string }) => {\n        return `${entry.key}=${entry.value}`;\n      })\n      .join('&');\n    return `${protocol}//${hostAndPath}?${params}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{"url":"interfaces/LazyMapsAPILoaderConfigLiteral.html","title":"interface - LazyMapsAPILoaderConfigLiteral","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LazyMapsAPILoaderConfigLiteral\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/maps-api-loader/lazy-maps-api-loader-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the LazyMapsAPILoader.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        apiKey\n                                \n                                \n                                            Optional\n                                        apiVersion\n                                \n                                \n                                            Optional\n                                        channel\n                                \n                                \n                                            Optional\n                                        clientId\n                                \n                                \n                                            Optional\n                                        hostAndPath\n                                \n                                \n                                            Optional\n                                        language\n                                \n                                \n                                            Optional\n                                        libraries\n                                \n                                \n                                            Optional\n                                        protocol\n                                \n                                \n                                            Optional\n                                        region\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps API Key (see:\nhttps://developers.google.com/maps/documentation/javascript/get-api-key)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiVersion\n                                    \n                                \n                                \n                                    \n                                        apiVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Google Maps API version.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channel\n                                    \n                                \n                                \n                                    \n                                        channel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps channel name (for premium plans).\nA channel parameter is an optional parameter that allows you to track usage under your client\nID by assigning a distinct channel to each of your applications.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps client ID (for premium plans).\nWhen you have a Google Maps APIs Premium Plan license, you must authenticate\nyour application with either an API key or a client ID.\nThe Google Maps API will fail to load if both a client ID and an API key are included.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hostAndPath\n                                    \n                                \n                                \n                                    \n                                        hostAndPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Host and Path used for the  tag.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps API uses the browser's preferred language when displaying\ntextual information. If you wish to overwrite this behavior and force the API\nto use a given language, you can use this setting.\nSee https://developers.google.com/maps/documentation/javascript/basics#Language\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        libraries\n                                    \n                                \n                                \n                                    \n                                        libraries:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines which Google Maps libraries should get loaded.\nFor available libraries see: https://developers.google.com/maps/documentation/javascript/libraries\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        protocol\n                                    \n                                \n                                \n                                    \n                                        protocol:         GoogleMapsScriptProtocol\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GoogleMapsScriptProtocol\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Protocol used for the  tag.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                    \n                                \n                                \n                                    \n                                        region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The default bias for the map behavior is US.\nIf you wish to alter your application to serve different map tiles or bias the\napplication, you can overwrite the default behavior (US) by defining a region.\nSee https://developers.google.com/maps/documentation/javascript/basics#Region\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nexport enum GoogleMapsScriptProtocol {\n  HTTP = 1,\n  HTTPS = 2,\n  AUTO = 3,\n}\n\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link LazyMapsAPILoaderConfig}.\n */\nexport const LAZY_MAPS_API_CONFIG = new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\n\n/**\n * Configuration for the {@link LazyMapsAPILoader}.\n */\nexport interface LazyMapsAPILoaderConfigLiteral {\n  /**\n   * The Google Maps API Key (see:\n   * https://developers.google.com/maps/documentation/javascript/get-api-key)\n   */\n  apiKey?: string;\n\n  /**\n   * The Google Maps client ID (for premium plans).\n   * When you have a Google Maps APIs Premium Plan license, you must authenticate\n   * your application with either an API key or a client ID.\n   * The Google Maps API will fail to load if both a client ID and an API key are included.\n   */\n  clientId?: string;\n\n  /**\n   * The Google Maps channel name (for premium plans).\n   * A channel parameter is an optional parameter that allows you to track usage under your client\n   * ID by assigning a distinct channel to each of your applications.\n   */\n  channel?: string;\n\n  /**\n   * Google Maps API version.\n   */\n  apiVersion?: string;\n\n  /**\n   * Host and Path used for the `` tag.\n   */\n  hostAndPath?: string;\n\n  /**\n   * Protocol used for the `` tag.\n   */\n  protocol?: GoogleMapsScriptProtocol;\n\n  /**\n   * Defines which Google Maps libraries should get loaded.\n   * For available libraries see: https://developers.google.com/maps/documentation/javascript/libraries\n   */\n  libraries?: string[];\n\n  /**\n   * The default bias for the map behavior is US.\n   * If you wish to alter your application to serve different map tiles or bias the\n   * application, you can overwrite the default behavior (US) by defining a `region`.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Region\n   */\n  region?: string;\n\n  /**\n   * The Google Maps API uses the browser's preferred language when displaying\n   * textual information. If you wish to overwrite this behavior and force the API\n   * to use a given language, you can use this setting.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Language\n   */\n  language?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapsAPILoader.html":{"url":"injectables/MapsAPILoader.html","title":"injectable - MapsAPILoader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapsAPILoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/maps-api-loader/maps-api-loader.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/maps-api-loader.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport abstract class MapsAPILoader {\n  abstract load(): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarkerManager.html":{"url":"injectables/MarkerManager.html","title":"injectable - MarkerManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MarkerManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/marker-manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMarker\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                deleteMarker\n                            \n                            \n                                getNativeMarker\n                            \n                            \n                                updateAnimation\n                            \n                            \n                                updateClickable\n                            \n                            \n                                updateDraggable\n                            \n                            \n                                updateIcon\n                            \n                            \n                                updateLabel\n                            \n                            \n                                updateMarkerPosition\n                            \n                            \n                                updateOpacity\n                            \n                            \n                                updateTitle\n                            \n                            \n                                updateVisible\n                            \n                            \n                                updateZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: GoogleMapsAPIWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/marker-manager.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        GoogleMapsAPIWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addMarker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: google.maps.MarkerChangeOptionEventNames | google.maps.MarkerMouseEventNames, marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:111\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                            google.maps.MarkerChangeOptionEventNames | google.maps.MarkerMouseEventNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteMarker\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNativeMarker\n                        \n                        \n                    \n                \n            \n            \n                \ngetNativeMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     google.maps.Marker\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAnimation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAnimation(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateClickable\n                        \n                        \n                    \n                \n            \n            \n                \nupdateClickable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateDraggable\n                        \n                        \n                    \n                \n            \n            \n                \nupdateDraggable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateIcon\n                        \n                        \n                    \n                \n            \n            \n                \nupdateIcon(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLabel\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLabel(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateMarkerPosition\n                        \n                        \n                    \n                \n            \n            \n                \nupdateMarkerPosition(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOpacity\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOpacity(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTitle\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTitle(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateVisible\n                        \n                        \n                    \n                \n            \n            \n                \nupdateVisible(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateZIndex\n                        \n                        \n                    \n                \n            \n            \n                \nupdateZIndex(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _markers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/managers/marker-manager.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { NgMapsViewComponent } from '../../directives/map';\n\nimport { NgMapsMarkerComponent } from '../../directives/marker';\n\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\n\n@Injectable()\nexport class MarkerManager {\n  protected _markers: Map = new Map();\n\n  constructor(\n    protected _mapsWrapper: GoogleMapsAPIWrapper,\n    protected _zone: NgZone,\n  ) {}\n\n  deleteMarker(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    if (m == null) {\n      // marker already deleted\n      return;\n    } else {\n      return this._zone.run(() => {\n        m.setMap(null);\n        this._markers.delete(marker);\n      });\n    }\n  }\n\n  updateMarkerPosition(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setPosition({ lat: marker.latitude, lng: marker.longitude });\n  }\n\n  updateTitle(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setTitle(marker.title);\n  }\n\n  updateLabel(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setLabel(marker.label);\n  }\n\n  updateDraggable(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setDraggable(marker.draggable);\n  }\n\n  updateIcon(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setIcon(marker.iconUrl);\n  }\n\n  updateOpacity(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setOpacity(marker.opacity);\n  }\n\n  updateVisible(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setVisible(marker.visible);\n  }\n\n  updateZIndex(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setZIndex(marker.zIndex);\n  }\n\n  updateClickable(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setClickable(marker.clickable);\n  }\n\n  updateAnimation(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    if (typeof marker.animation === 'string') {\n      m.setAnimation(google.maps.Animation[marker.animation]);\n    } else {\n      m.setAnimation(marker.animation);\n    }\n  }\n\n  async addMarker(marker: NgMapsMarkerComponent): Promise {\n    const m = await this._mapsWrapper.createMarker({\n      position: { lat: marker.latitude, lng: marker.longitude },\n      label: marker.label,\n      draggable: marker.draggable,\n      icon: marker.iconUrl,\n      opacity: marker.opacity,\n      visible: marker.visible,\n      zIndex: marker.zIndex,\n      title: marker.title,\n      clickable: marker.clickable,\n      animation:\n        typeof marker.animation === 'string'\n          ? google.maps.Animation[marker.animation]\n          : marker.animation,\n    });\n    this._markers.set(marker, m);\n  }\n\n  getNativeMarker(marker: NgMapsMarkerComponent): google.maps.Marker {\n    return this._markers.get(marker);\n  }\n\n  createEventObservable(\n    eventName:\n      | google.maps.MarkerChangeOptionEventNames\n      | google.maps.MarkerMouseEventNames,\n    marker: NgMapsMarkerComponent,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      const m = this._markers.get(marker);\n      m.addListener(eventName, (e: T) =>\n        this._zone.run(() => observer.next(e)),\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgMapsCoreModule.html":{"url":"modules/NgMapsCoreModule.html","title":"module - NgMapsCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    NgMapsCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The angular-google-maps core module. Contains all Directives/Services/Pipes\nof the core module. Please use NgMapsCoreModule.forRoot() in your app module.\nProvide configuration with values defined by LazyMapsAPILoaderConfigLiteral\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(lazyMapsAPILoaderConfig?: LazyMapsAPILoaderConfigLiteral)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/core.module.ts:39\n                \n            \n\n\n            \n                \n                    Please use this method when you register the module at the root level.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lazyMapsAPILoaderConfig\n                                    \n                                                LazyMapsAPILoaderConfigLiteral\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NgMapsFitBounds } from './directives/fit-bounds';\nimport { NgMapsInfoWindowComponent } from './directives/info-window';\nimport { NgMapsViewComponent } from './directives/map';\nimport { NgMapsMarkerComponent } from './directives/marker';\nimport { LazyMapsAPILoader } from './services/maps-api-loader/lazy-maps-api-loader';\nimport {\n  LAZY_MAPS_API_CONFIG,\n  LazyMapsAPILoaderConfigLiteral,\n} from './services/maps-api-loader/lazy-maps-api-loader-config';\nimport { MapsAPILoader } from './services/maps-api-loader/maps-api-loader';\n\n/**\n * @internal\n */\nexport function coreDirectives() {\n  return [\n    NgMapsViewComponent,\n    NgMapsMarkerComponent,\n    NgMapsInfoWindowComponent,\n    NgMapsFitBounds,\n  ];\n}\n\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `NgMapsCoreModule.forRoot()` in your app module.\n *\n * Provide configuration with values defined by {@link LazyMapsAPILoaderConfigLiteral}\n */\n@NgModule({\n  declarations: coreDirectives(),\n  exports: coreDirectives(),\n})\nexport class NgMapsCoreModule {\n  /**\n   * Please use this method when you register the module at the root level.\n   */\n  static forRoot(\n    lazyMapsAPILoaderConfig?: LazyMapsAPILoaderConfigLiteral,\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgMapsCoreModule,\n      providers: [\n        { provide: MapsAPILoader, useClass: LazyMapsAPILoader },\n        { provide: LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsFitBounds.html":{"url":"directives/NgMapsFitBounds.html","title":"directive - NgMapsFitBounds","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsFitBounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/fit-bounds.ts\n        \n\n            \n                Description\n            \n            \n                Adds the given directive to the auto fit bounds feature when the value is true.\nTo make it work with you custom AGM component, you also have to implement the FitBoundsAccessor abstract class.\n\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n                            OnChanges\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mapFitBounds]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _destroyed$\n                            \n                            \n                                    Private\n                                _latestFitBoundsDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _updateBounds\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapFitBounds\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_fitBoundsAccessor: FitBoundsAccessor, _fitBoundsService: FitBoundsService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/fit-bounds.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fitBoundsAccessor\n                                                  \n                                                        \n                                                                        FitBoundsAccessor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fitBoundsService\n                                                  \n                                                        \n                                                                        FitBoundsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapFitBounds\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/fit-bounds.ts:32\n                            \n                        \n                \n                    \n                        If the value is true, the element gets added to the bounds of the map.\nDefault: true.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _updateBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateBounds(newFitBoundsDetails?: FitBoundsDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newFitBoundsDetails\n                                    \n                                                FitBoundsDetails\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _destroyed$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/fit-bounds.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _latestFitBoundsDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FitBoundsDetails | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/fit-bounds.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Self,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport {\n  FitBoundsAccessor,\n  FitBoundsDetails,\n  FitBoundsService,\n} from '../services/fit-bounds';\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * \n */\n@Directive({\n  selector: '[mapFitBounds]',\n})\nexport class NgMapsFitBounds implements OnInit, OnDestroy, OnChanges {\n  /**\n   * If the value is true, the element gets added to the bounds of the map.\n   * Default: true.\n   */\n  @Input() mapFitBounds: boolean = true;\n\n  private _destroyed$: Subject = new Subject();\n  private _latestFitBoundsDetails: FitBoundsDetails | null = null;\n\n  constructor(\n    @Self() private readonly _fitBoundsAccessor: FitBoundsAccessor,\n    private readonly _fitBoundsService: FitBoundsService,\n  ) {}\n\n  /**\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    this._updateBounds();\n  }\n\n  /**\n   * @internal\n   */\n  ngOnInit() {\n    this._fitBoundsAccessor\n      .getFitBoundsDetails$()\n      .pipe(\n        distinctUntilChanged(\n          (x: FitBoundsDetails, y: FitBoundsDetails) =>\n            x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng,\n        ),\n        takeUntil(this._destroyed$),\n      )\n      .subscribe((details) => this._updateBounds(details));\n  }\n\n  private _updateBounds(newFitBoundsDetails?: FitBoundsDetails) {\n    if (newFitBoundsDetails) {\n      this._latestFitBoundsDetails = newFitBoundsDetails;\n    }\n    if (this._latestFitBoundsDetails) {\n      if (this.mapFitBounds) {\n        this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n      } else {\n        this._fitBoundsService.removeFromBounds(\n          this._latestFitBoundsDetails.latLng,\n        );\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy() {\n    this._destroyed$.next();\n    this._destroyed$.complete();\n    if (this._latestFitBoundsDetails !== null) {\n      this._fitBoundsService.removeFromBounds(\n        this._latestFitBoundsDetails.latLng,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgMapsInfoWindowComponent.html":{"url":"components/NgMapsInfoWindowComponent.html","title":"component - NgMapsInfoWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgMapsInfoWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/directives/info-window.ts\n\n\n    \n        Description\n    \n    \n        NgMapsInfoWindowComponent renders a info window inside a NgMapsMarkerComponent or standalone.\nExample\n```typescript\n\nimport { Component } from '@angular/core';\n\n@Component({\nselector: 'my-map-cmp',\nstyles: [map-view {\n  height: 300px;\n}],\ntemplate: `\n\n  \n  Hi, this is the content of the info window\n  \n\n`\n})\n```\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                InfoWindowManager\n                \n            \n\n\n            \n                selector\n                agm-info-window, map-info-window\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _infoWindowAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _infoWindowOptionsInputs\n                            \n                            \n                                content\n                            \n                            \n                                hostMarker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerEventListeners\n                            \n                            \n                                    Private\n                                _setInfoWindowOptions\n                            \n                            \n                                    Private\n                                _updateOpenState\n                            \n                            \n                                    Async\n                                close\n                            \n                            \n                                id\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableAutoPan\n                            \n                            \n                                isOpen\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                maxWidth\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                infoWindowClose\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_infoWindowManager: InfoWindowManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/info-window.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _infoWindowManager\n                                                  \n                                                        \n                                                                        InfoWindowManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableAutoPan\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:78\n                            \n                        \n                \n                    \n                        Disable auto-pan on open. By default, the info window will pan the map so that it is fully\nvisible when it opens.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:109\n                            \n                        \n                \n                    \n                        Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:66\n                            \n                        \n                \n                    \n                        The latitude position of the info window (only usefull if you use it ouside of a NgMapsMarkerComponent).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:72\n                            \n                        \n                \n                    \n                        The longitude position of the info window (only usefull if you use it ouside of a NgMapsMarkerComponent).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxWidth\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:93\n                            \n                        \n                \n                    \n                        Maximum width of the infowindow, regardless of content's width. This value is only considered\nif it is set before a call to open. To change the maximum width when changing content, call\nclose, update maxWidth, and then open.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:86\n                            \n                        \n                \n                    \n                        All InfoWindows are displayed on the map in order of their zIndex, with higher values\ndisplaying in front of InfoWindows with lower values. By default, InfoWindows are displayed\naccording to their latitude, with InfoWindows of lower latitudes appearing in front of\nInfoWindows at higher latitudes. InfoWindows are always displayed in front of markers.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        infoWindowClose\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:114\n                            \n                        \n                \n                    \n                        Emits an event when the info window is closed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _registerEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _registerEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _setInfoWindowOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _setInfoWindowOptions(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _updateOpenState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateOpenState()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:181\n                \n            \n\n\n            \n                \n                    Closes the info window.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            id\n                        \n                        \n                    \n                \n            \n            \n                \nid()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:174\n                \n            \n\n\n            \n                \n                    Opens the info window.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : (infoWindowId++).toString()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _infoWindowAddedToManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _infoWindowOptionsInputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'disableAutoPan',\n    'maxWidth',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('content', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:104\n                            \n                        \n\n                \n                    \n                        Holds the native element that is used for the info window content.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hostMarker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgMapsMarkerComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:98\n                            \n                        \n\n                \n                    \n                        Holds the marker that is the host of the info window (if available)\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\n\nimport { InfoWindowManager } from '../services/managers/info-window-manager';\n\nimport { NgMapsMarkerComponent } from './marker';\n\nlet infoWindowId = 0;\n\n/**\n * NgMapsInfoWindowComponent renders a info window inside a {@link NgMapsMarkerComponent} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    map-view {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    \n *      \n *        \n *          Hi, this is the content of the info window\n *        \n *      \n *    \n *  `\n * })\n * ```\n */\n@Component({\n  selector: 'agm-info-window, map-info-window',\n  template: `\n    \n      \n    \n  `,\n  providers: [InfoWindowManager],\n})\nexport class NgMapsInfoWindowComponent implements OnDestroy, OnChanges, OnInit {\n  constructor(private _infoWindowManager: InfoWindowManager) {}\n\n  private static _infoWindowOptionsInputs: string[] = [\n    'disableAutoPan',\n    'maxWidth',\n  ];\n  /**\n   * The latitude position of the info window (only usefull if you use it ouside of a {@link\n   * NgMapsMarkerComponent}).\n   */\n  @Input() latitude: number;\n\n  /**\n   * The longitude position of the info window (only usefull if you use it ouside of a {@link\n   * NgMapsMarkerComponent}).\n   */\n  @Input() longitude: number;\n\n  /**\n   * Disable auto-pan on open. By default, the info window will pan the map so that it is fully\n   * visible when it opens.\n   */\n  @Input() disableAutoPan: boolean;\n\n  /**\n   * All InfoWindows are displayed on the map in order of their zIndex, with higher values\n   * displaying in front of InfoWindows with lower values. By default, InfoWindows are displayed\n   * according to their latitude, with InfoWindows of lower latitudes appearing in front of\n   * InfoWindows at higher latitudes. InfoWindows are always displayed in front of markers.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * Maximum width of the infowindow, regardless of content's width. This value is only considered\n   * if it is set before a call to open. To change the maximum width when changing content, call\n   * close, update maxWidth, and then open.\n   */\n  @Input() maxWidth: number;\n\n  /**\n   * Holds the marker that is the host of the info window (if available)\n   */\n  hostMarker: NgMapsMarkerComponent;\n\n  /**\n   * Holds the native element that is used for the info window content.\n   */\n  @ViewChild('content', { static: true })\n  content: ElementRef;\n\n  /**\n   * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n   */\n  @Input() isOpen: boolean = false;\n\n  /**\n   * Emits an event when the info window is closed.\n   */\n  @Output() infoWindowClose: EventEmitter = new EventEmitter();\n  private _infoWindowAddedToManager: boolean = false;\n  private _id: string = (infoWindowId++).toString();\n\n  ngOnInit() {\n    this._infoWindowManager.addInfoWindow(this).then(() => {\n      this._infoWindowAddedToManager = true;\n      this._updateOpenState();\n      this._registerEventListeners();\n    });\n  }\n\n  /** @internal */\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this._infoWindowAddedToManager) {\n      return;\n    }\n    if (\n      (changes.latitude || changes.longitude) &&\n      typeof this.latitude === 'number' &&\n      typeof this.longitude === 'number'\n    ) {\n      this._infoWindowManager.setPosition(this);\n    }\n    if (changes.zIndex) {\n      this._infoWindowManager.setZIndex(this);\n    }\n    if (changes.isOpen) {\n      this._updateOpenState();\n    }\n    this._setInfoWindowOptions(changes);\n  }\n\n  private _registerEventListeners() {\n    this._infoWindowManager\n      .createEventObservable('closeclick', this)\n      .subscribe(() => {\n        this.isOpen = false;\n        this.infoWindowClose.emit();\n      });\n  }\n\n  private _updateOpenState() {\n    this.isOpen ? this.open() : this.close();\n  }\n\n  private _setInfoWindowOptions(changes: SimpleChanges) {\n    const options: SimpleChanges = {};\n    const optionKeys = Object.keys(changes).filter((k) =>\n      NgMapsInfoWindowComponent._infoWindowOptionsInputs.includes(k),\n    );\n    optionKeys.forEach((k) => {\n      options[k] = changes[k].currentValue;\n    });\n    this._infoWindowManager.setOptions(this, options);\n  }\n\n  /**\n   * Opens the info window.\n   */\n  open(): Promise {\n    return this._infoWindowManager.open(this);\n  }\n\n  /**\n   * Closes the info window.\n   */\n  async close(): Promise {\n    await this._infoWindowManager.close(this);\n    return this.infoWindowClose.emit();\n  }\n\n  /** @internal */\n  id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  toString(): string {\n    return `NgMapsInfoWindowComponent-${this._id.toString()}`;\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._infoWindowManager.deleteInfoWindow(this);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'NgMapsInfoWindowComponent', 'selector': 'agm-info-window, map-info-window'},{'name': 'NgMapsMarkerComponent', 'selector': 'agm-marker, map-marker'},{'name': 'NgMapsViewComponent', 'selector': 'agm-map, map-view'}];\n    var DIRECTIVES = [{'name': 'NgMapsFitBounds', 'selector': '[mapFitBounds]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgMapsInfoWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgMapsMarkerComponent.html":{"url":"components/NgMapsMarkerComponent.html","title":"component - NgMapsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgMapsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/directives/marker.ts\n\n\n    \n        Description\n    \n    \n        NgMapsMarkerComponent renders a map marker inside a NgMapsViewComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n                    AfterContentInit\n                    FitBoundsAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n   \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: FitBoundsAccessor, useExisting: forwardRef(() => NgMapsMarkerComponent),\n}\n                \n            \n\n\n            \n                selector\n                agm-marker, map-marker\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                _fitBoundsDetails$\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _markerAddedToManger\n                            \n                            \n                                    Private\n                                _observableSubscriptions\n                            \n                            \n                                animation\n                            \n                            \n                                infoWindow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addEventListeners\n                            \n                            \n                                    Protected\n                                _updateFitBoundsDetails\n                            \n                            \n                                getFitBoundsDetails$\n                            \n                            \n                                    Private\n                                handleInfoWindowUpdate\n                            \n                            \n                                id\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iconUrl\n                            \n                            \n                                label\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                markerClickable\n                            \n                            \n                                markerDraggable\n                            \n                            \n                                opacity\n                            \n                            \n                                openInfoWindow\n                            \n                            \n                                title\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                drag\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragStart\n                            \n                            \n                                markerClick\n                            \n                            \n                                markerRightClick\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/marker.ts:190\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        markerManager\n                                                  \n                                                        \n                                                                        MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iconUrl\n                    \n                \n                \n                    \n                        Type :     string | google.maps.Icon\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:93\n                            \n                        \n                \n                    \n                        Icon (the URL of the image) for the foreground.\nCan also be a MarkerIcon (google.maps.Icon in Google Maps Javascript api)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     string | google.maps.MarkerLabel\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:80\n                            \n                        \n                \n                    \n                        The label (a single uppercase character) for the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:65\n                            \n                        \n                \n                    \n                        The latitude position of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:70\n                            \n                        \n                \n                    \n                        The longitude position of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerClickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:122\n                            \n                        \n                \n                    \n                        If true, the marker can be clicked. Default value is true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:86\n                            \n                        \n                \n                    \n                        If true, the marker can be dragged. Default value is false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:108\n                            \n                        \n                \n                    \n                        The marker's opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        openInfoWindow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:103\n                            \n                        \n                \n                    \n                        Whether to automatically open the child info window when the marker is clicked.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:75\n                            \n                        \n                \n                    \n                        The title of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:98\n                            \n                        \n                \n                    \n                        If true, the marker is visible\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:116\n                            \n                        \n                \n                    \n                        All markers are displayed on the map in order of their zIndex, with higher values displaying in\nfront of markers with lower values. By default, markers are displayed according to their\nvertical position on screen, with lower markers appearing in front of markers further up the\nscreen.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        drag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:152\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:159\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:145\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:133\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerRightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:140\n                            \n                        \n                \n                    \n                        This event is fired when the user rightclicks on the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:173\n                            \n                        \n                \n                    \n                        This event is fired when the user mouses outside the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:166\n                            \n                        \n                \n                    \n                        This event is fired when the user mouses over the marker.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _addEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _updateFitBoundsDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateFitBoundsDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFitBoundsDetails$\n                        \n                        \n                    \n                \n            \n            \n                \ngetFitBoundsDetails$()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:273\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleInfoWindowUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleInfoWindowUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            id\n                        \n                        \n                    \n                \n            \n            \n                \nid()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:338\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:348\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:343\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            _fitBoundsDetails$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:188\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:185\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _markerAddedToManger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:184\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _observableSubscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:186\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"BOUNCE\" | \"DROP\" | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:128\n                            \n                        \n\n                \n                    \n                        Which animation to play when marker is added to a map.\nThis can be 'BOUNCE' or 'DROP'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            infoWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Default value : new QueryList()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(NgMapsInfoWindowComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:180\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Component\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-map',\n  styles: [`\n    .agm-map-container {\n      height: 300px;\n    }\n  `],\n  templateUrl: './my-map.component.html'\n})Template\n\n  \n\n    \n\n    \n        import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  QueryList,\n  SimpleChange,\n} from '@angular/core';\nimport { Observable, ReplaySubject, Subscription } from 'rxjs';\nimport { FitBoundsAccessor, FitBoundsDetails } from '../services/fit-bounds';\nimport { MarkerManager } from '../services/managers/marker-manager';\nimport { NgMapsInfoWindowComponent } from './info-window';\n\nlet markerId = 0;\n\n/**\n * NgMapsMarkerComponent renders a map marker inside a {@link NgMapsViewComponent}.\n *\n * @example\n * \n *               \n * \n */\n@Component({\n  selector: 'agm-marker, map-marker',\n  providers: [\n    {\n      provide: FitBoundsAccessor,\n      useExisting: forwardRef(() => NgMapsMarkerComponent),\n    },\n  ],\n  inputs: [\n    'latitude',\n    'longitude',\n    'title',\n    'label',\n    'draggable: markerDraggable',\n    'iconUrl',\n    'openInfoWindow',\n    'opacity',\n    'visible',\n    'zIndex',\n    'animation',\n  ],\n  outputs: [\n    'markerClick',\n    'dragStart',\n    'drag',\n    'dragEnd',\n    'mouseOver',\n    'mouseOut',\n  ],\n  template: '',\n})\nexport class NgMapsMarkerComponent\n  implements OnDestroy, OnChanges, AfterContentInit, FitBoundsAccessor {\n  /**\n   * The latitude position of the marker.\n   */\n  @Input() latitude: number;\n\n  /**\n   * The longitude position of the marker.\n   */\n  @Input() longitude: number;\n\n  /**\n   * The title of the marker.\n   */\n  @Input() title: string;\n\n  /**\n   * The label (a single uppercase character) for the marker.\n   */\n  @Input() label: string | google.maps.MarkerLabel;\n\n  /**\n   * If true, the marker can be dragged. Default value is false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('markerDraggable') draggable: boolean = false;\n\n  /**\n   * Icon (the URL of the image) for the foreground.\n   * Can also be a MarkerIcon (google.maps.Icon in Google Maps Javascript api)\n   * @see google.maps.Icon\n   */\n  @Input() iconUrl: string | google.maps.Icon;\n\n  /**\n   * If true, the marker is visible\n   */\n  @Input() visible: boolean = true;\n\n  /**\n   * Whether to automatically open the child info window when the marker is clicked.\n   */\n  @Input() openInfoWindow: boolean = true;\n\n  /**\n   * The marker's opacity between 0.0 and 1.0.\n   */\n  @Input() opacity: number = 1;\n\n  /**\n   * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n   * front of markers with lower values. By default, markers are displayed according to their\n   * vertical position on screen, with lower markers appearing in front of markers further up the\n   * screen.\n   */\n  @Input() zIndex: number = 1;\n\n  /**\n   * If true, the marker can be clicked. Default value is true.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('markerClickable') clickable: boolean = true;\n\n  /**\n   * Which animation to play when marker is added to a map.\n   * This can be 'BOUNCE' or 'DROP'\n   */\n  animation: 'BOUNCE' | 'DROP' | null;\n\n  /**\n   * This event emitter gets emitted when the user clicks on the marker.\n   */\n  @Output() markerClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user rightclicks on the marker.\n   */\n  @Output() markerRightClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the marker.\n   */\n  @Output() dragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the marker.\n   */\n  @Output() drag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the marker.\n   */\n  @Output() dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user mouses over the marker.\n   */\n  @Output() mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user mouses outside the marker.\n   */\n  @Output() mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * @internal\n   */\n  @ContentChildren(NgMapsInfoWindowComponent) infoWindow: QueryList = new QueryList();\n\n  private _markerAddedToManger: boolean = false;\n  private _id: string;\n  private _observableSubscriptions: Subscription[] = [];\n\n  protected readonly _fitBoundsDetails$: ReplaySubject = new ReplaySubject(1);\n\n  constructor(private markerManager: MarkerManager) {\n    this._id = (markerId++).toString();\n  }\n\n  /**\n   *  @internal\n   */\n  ngAfterContentInit() {\n    this.handleInfoWindowUpdate();\n    this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n  }\n\n  private handleInfoWindowUpdate() {\n    if (this.infoWindow.length > 1) {\n      throw new Error('Expected no more than one info window.');\n    }\n    this.infoWindow.forEach((marker) => {\n      marker.hostMarker = this;\n    });\n  }\n\n  /**\n   * @internal\n   */\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (typeof this.latitude === 'string') {\n      this.latitude = Number(this.latitude);\n    }\n    if (typeof this.longitude === 'string') {\n      this.longitude = Number(this.longitude);\n    }\n    if (\n      typeof this.latitude !== 'number' ||\n      typeof this.longitude !== 'number'\n    ) {\n      return;\n    }\n    if (!this._markerAddedToManger) {\n      this.markerManager.addMarker(this).then(() => {\n        this._updateFitBoundsDetails();\n        this._markerAddedToManger = true;\n        this._addEventListeners();\n      });\n      return;\n    }\n    if (changes.latitude || changes.longitude) {\n      this.markerManager.updateMarkerPosition(this);\n      this._updateFitBoundsDetails();\n    }\n    if (changes.title) {\n      this.markerManager.updateTitle(this);\n    }\n    if (changes.label) {\n      this.markerManager.updateLabel(this);\n    }\n    if (changes.draggable) {\n      this.markerManager.updateDraggable(this);\n    }\n    if (changes.iconUrl) {\n      this.markerManager.updateIcon(this);\n    }\n    if (changes.opacity) {\n      this.markerManager.updateOpacity(this);\n    }\n    if (changes.visible) {\n      this.markerManager.updateVisible(this);\n    }\n    if (changes.zIndex) {\n      this.markerManager.updateZIndex(this);\n    }\n    if (changes.clickable) {\n      this.markerManager.updateClickable(this);\n    }\n    if (changes.animation) {\n      this.markerManager.updateAnimation(this);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  getFitBoundsDetails$(): Observable {\n    return this._fitBoundsDetails$.asObservable();\n  }\n\n  protected _updateFitBoundsDetails() {\n    this._fitBoundsDetails$.next({\n      latLng: { lat: this.latitude, lng: this.longitude },\n    });\n  }\n\n  private _addEventListeners() {\n    const cs = this.markerManager\n      .createEventObservable('click', this)\n      .subscribe(() => {\n        if (this.openInfoWindow) {\n          this.infoWindow.forEach((infoWindow) => infoWindow.open());\n        }\n        this.markerClick.emit(this);\n      });\n    this._observableSubscriptions.push(cs);\n\n    const rc = this.markerManager\n      .createEventObservable('rightclick', this)\n      .subscribe(() => {\n        this.markerRightClick.emit(null);\n      });\n    this._observableSubscriptions.push(rc);\n\n    const ds = this.markerManager\n      .createEventObservable('dragstart', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.dragStart.emit(e);\n      });\n    this._observableSubscriptions.push(ds);\n\n    const d = this.markerManager\n      .createEventObservable('drag', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.drag.emit(e);\n      });\n    this._observableSubscriptions.push(d);\n\n    const dragend = this.markerManager\n      .createEventObservable('dragend', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.dragEnd.emit(e);\n      });\n    this._observableSubscriptions.push(dragend);\n\n    const mouseover = this.markerManager\n      .createEventObservable('mouseover', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.mouseOver.emit(e);\n      });\n    this._observableSubscriptions.push(mouseover);\n\n    const mouseout = this.markerManager\n      .createEventObservable('mouseout', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.mouseOut.emit(e);\n      });\n    this._observableSubscriptions.push(mouseout);\n  }\n\n  /** @internal */\n  id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  toString(): string {\n    return `NgMapsMarker-${this._id}`;\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this.markerManager.deleteMarker(this);\n    // unsubscribe all registered observable subscriptions\n    this._observableSubscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgMapsInfoWindowComponent', 'selector': 'agm-info-window, map-info-window'},{'name': 'NgMapsMarkerComponent', 'selector': 'agm-marker, map-marker'},{'name': 'NgMapsViewComponent', 'selector': 'agm-map, map-view'}];\n    var DIRECTIVES = [{'name': 'NgMapsFitBounds', 'selector': '[mapFitBounds]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgMapsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoOpMapsAPILoader.html":{"url":"classes/NoOpMapsAPILoader.html","title":"class - NoOpMapsAPILoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoOpMapsAPILoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/maps-api-loader/noop-maps-api-loader.ts\n        \n\n            \n                Description\n            \n            \n                When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a \nTag.\nIt's important that the Google Maps API script gets loaded first on the page.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MapsAPILoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/noop-maps-api-loader.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MapsAPILoader } from './maps-api-loader';\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a ``\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nexport class NoOpMapsAPILoader implements MapsAPILoader {\n  load(): Promise {\n    if (!(window).google || !(window).google.maps) {\n      throw new Error(\n        'Google Maps API not loaded on page. Make sure window.google.maps is available!',\n      );\n    }\n    return Promise.resolve();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/core.module.ts\n            \n            function\n            coreDirectives\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/directives/fit-bounds.ts\n            \n            directive\n            NgMapsFitBounds\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/lib/directives/info-window.ts\n            \n            component\n            NgMapsInfoWindowComponent\n            \n                50 %\n                (12/24)\n            \n        \n        \n            \n                \n                src/lib/directives/info-window.ts\n            \n            variable\n            infoWindowId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/directives/map.ts\n            \n            component\n            NgMapsViewComponent\n            \n                67 %\n                (48/71)\n            \n        \n        \n            \n                \n                src/lib/directives/marker.ts\n            \n            component\n            NgMapsMarkerComponent\n            \n                57 %\n                (20/35)\n            \n        \n        \n            \n                \n                src/lib/directives/marker.ts\n            \n            variable\n            markerId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/services/fit-bounds.ts\n            \n            class\n            FitBoundsAccessor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/services/fit-bounds.ts\n            \n            injectable\n            FitBoundsService\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/lib/services/fit-bounds.ts\n            \n            interface\n            FitBoundsDetails\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/services/google-maps-api-wrapper.ts\n            \n            injectable\n            GoogleMapsAPIWrapper\n            \n                31 %\n                (9/29)\n            \n        \n        \n            \n                \n                src/lib/services/managers/info-window-manager.ts\n            \n            injectable\n            InfoWindowManager\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/lib/services/managers/marker-manager.ts\n            \n            injectable\n            MarkerManager\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-loader/lazy-maps-api-loader-config.ts\n            \n            interface\n            LazyMapsAPILoaderConfigLiteral\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-loader/lazy-maps-api-loader-config.ts\n            \n            variable\n            LAZY_MAPS_API_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-loader/lazy-maps-api-loader.ts\n            \n            injectable\n            LazyMapsAPILoader\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-loader/maps-api-loader.ts\n            \n            injectable\n            MapsAPILoader\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-loader/noop-maps-api-loader.ts\n            \n            class\n            NoOpMapsAPILoader\n            \n                50 %\n                (1/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^8.0.0\n        \n            @angular/core : ^8.0.0\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GoogleMapsScriptProtocol   (src/.../lazy-maps-api-loader-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/services/maps-api-loader/lazy-maps-api-loader-config.ts\n    \n        \n            \n                \n                    \n                        \n                        GoogleMapsScriptProtocol\n                    \n                \n                        \n                            \n                                 HTTP\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 HTTPS\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 AUTO\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            coreDirectives   (src/.../core.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/core.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            coreDirectives\n                        \n                        \n                    \n                \n            \n            \n                \ncoreDirectives()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ng-maps/core\n@ng-maps/core is a simple, modular and tree-shakable library for displaying google-maps inside an angular application\nInstallation\n\nNpm: npm install @ng-maps/core\nYarn: yarn add @ng-maps/core\n\nAdd NgMapsCoreModule.forRoot({apiKey: 'YOUR_API_KEY'}) to your AppModule\nUsage\nSimple Map\nAdd the map to your components template\nAdd a height to your components CSS, for example\nmap-view {\n  height: 300px;\n}Input options\n\n\n\nName\nType\nValues\nDescription\n\n\n\n\nlongitude\nNumber\n\n\n\n\nlatitude\nNumber\n\n\n\n\nminZoom\nNumber\n\n\n\n\nmaxZoom\nNumber\n\n\n\n\nzoom\nNumber\nBetween 0 and MaxZoom, typically 18\n\n\n\nfitBounds\nLatLngBoundsLiteral, LatLngBounds or Boolean\nIf set to true attaches to mapFitBounds directives on \n\n\n\nmapTypeId\nroadmap, hybrid, satellite, terrain\n\n\n\n\nlayers\nArray or String\nTrafficLayer or TransitLayer or BicyclingLayer\nActivates layer as described in TrafficLayer Documentation\n\n\n\nMarker\nAdditionally you can add markers\n\n  \nInput options\n\n\n\nName\nType\nValues\nDescription\n\n\n\n\nlongitude\nNumber\n\n\n\n\nlatitude\nNumber\n\n\n\n\n\nOutputs\n\n\n\nName\nValue\nDescription\n\n\n\n\nmarkerClick\nComponent\n\n\n\n\nAdditional features\nOther features are provided in submodules. Find out more on the project page at github\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgMapsCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BoundsMap   (src/.../fit-bounds.ts)\n                        \n                        \n                            LayerTypes   (src/.../layers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/services/fit-bounds.ts\n    \n    \n        \n            \n                \n                    \n                    BoundsMap\n                \n            \n            \n                \n                        Map\n\n                \n            \n        \n    \n    src/lib/interface/layers.ts\n    \n    \n        \n            \n                \n                    \n                    LayerTypes\n                \n            \n            \n                \n                        \"TrafficLayer\" | \"TransitLayer\" | \"BicyclingLayer\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            infoWindowId   (src/.../info-window.ts)\n                        \n                        \n                            LAZY_MAPS_API_CONFIG   (src/.../lazy-maps-api-loader-config.ts)\n                        \n                        \n                            markerId   (src/.../marker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/directives/info-window.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            infoWindowId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n    src/lib/services/maps-api-loader/lazy-maps-api-loader-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LAZY_MAPS_API_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG')\n                        \n                    \n\n                \n                    \n                        Token for the config of the LazyMapsAPILoader. Please provide an object of type LazyMapsAPILoaderConfig.\n\n                    \n                \n\n            \n        \n\n    src/lib/directives/marker.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            markerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
