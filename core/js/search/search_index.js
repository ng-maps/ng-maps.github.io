var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/BoundsLiteral.html",[0,0.545,1,1.278]],["body/interfaces/BoundsLiteral.html",[0,0.816,1,2.254,2,1.913,3,0.367,4,0.367,5,0.319,6,4.256,7,0.272,8,0.678,9,5.504,10,5.504,11,5.504,12,5.504,13,1.318,14,0.352,15,0.026,16,0.367,17,0.019,18,0.023,19,0.019]],["title/injectables/CircleManager.html",[20,0.545,21,2.24]],["body/injectables/CircleManager.html",[1,1.118,3,0.214,4,0.214,5,0.186,7,0.159,8,0.478,14,0.358,15,0.027,16,0.214,17,0.011,18,0.016,19,0.011,20,0.678,21,2.785,22,1.118,23,5.561,24,1.96,25,1.638,26,4.867,27,0.852,28,1.313,29,2.299,30,4.185,31,2.482,32,2.296,33,3.105,34,4.185,35,4.185,36,3.534,37,3.534,38,3.534,39,3.611,40,4.185,41,3.534,42,0.692,43,2.487,44,2.32,45,2.482,46,2.702,47,1.237,48,2.487,49,1.332,50,1.229,51,0.891,52,3.534,53,4.185,54,3.547,55,2.186,56,5.722,57,1.312,58,1.39,59,0.788,60,2.946,61,1.63,62,1.832,63,1.504,64,2.946,65,2.946,66,2.228,67,4.185,68,2.487,69,4.185,70,2.946,71,4.185,72,2.946,73,3.534,74,2.529,75,1.184,76,4.185,77,2.946,78,4.185,79,2.946,80,4.185,81,2.946,82,2.946,83,1.849,84,2.933,85,2.487,86,0.974,87,4.185,88,4.185,89,2.946,90,4.185,91,2.946,92,0.794,93,0.645,94,0.733,95,2.487,96,0.82,97,0.477,98,0.794,99,2.487,100,1.39,101,2.186,102,1.118,103,1.39,104,1.118,105,0.794,106,0.91,107,1.63,108,0.404,109,2.186,110,3.611,111,2.186,112,2.487,113,2.946,114,2.946,115,1.502]],["title/interfaces/CircleOptions.html",[0,0.545,84,1.863]],["body/interfaces/CircleOptions.html",[0,0.836,2,1.959,3,0.375,4,0.375,5,0.326,7,0.279,8,0.687,13,1.205,14,0.279,15,0.026,16,0.375,17,0.02,18,0.023,19,0.02,51,0.825,83,1.595,84,3.331,96,0.707,116,4.357,117,2.855,118,4.466,119,3.852,120,5.545,121,3.433]],["title/classes/FitBoundsAccessor.html",[108,0.462,122,1.716]],["body/classes/FitBoundsAccessor.html",[0,0.621,1,1.902,3,0.279,4,0.279,5,0.243,7,0.207,13,0.725,14,0.207,15,0.027,16,0.431,17,0.015,18,0.019,19,0.015,20,0.812,25,1.897,27,1.02,28,1.213,29,2.083,32,1.809,47,0.725,57,0.781,59,0.621,63,1.897,75,1.25,86,1.269,94,0.978,96,0.863,97,0.621,98,1.034,100,1.809,102,2.119,103,1.809,104,1.456,105,1.034,106,1.549,108,0.811,122,2.555,123,2.846,124,3.028,125,2.123,126,3.334,127,3.334,128,3.334,129,3.028,130,3.334,131,3.21,132,3.334,133,3.028,134,3.576,135,3.836,136,4.14,137,2.846,138,2.846,139,3.718,140,3.718,141,2.846,142,2.846,143,2.552,144,2.194,145,2.123,146,2.318,147,1.956,148,3.576,149,1.456,150,2.552,151,2.773,152,2.846,153,2.846,154,2.318,155,3.088,156,2.846,157,2.846,158,2.846,159,2.846,160,3.718,161,2.846,162,2.846,163,2.846,164,2.846,165,2.552,166,2.846,167,2.846,168,2.846,169,2.846,170,2.846,171,2.846,172,1.846,173,1.956,174,2.846,175,2.846,176,1.611,177,3.718,178,2.846,179,3.718,180,2.846,181,3.718,182,3.028,183,2.846,184,2.846,185,2.846,186,2.846,187,2.846]],["title/interfaces/FitBoundsDetails.html",[0,0.545,147,1.716]],["body/interfaces/FitBoundsDetails.html",[0,0.634,1,1.928,2,1.486,3,0.285,4,0.285,5,0.248,7,0.211,8,0.579,13,0.74,14,0.274,15,0.027,16,0.434,17,0.015,18,0.019,19,0.015,20,0.823,25,1.91,28,1.168,29,1.973,32,1.847,59,0.634,63,1.843,75,1.258,94,0.988,96,0.868,97,0.634,98,1.056,100,1.847,102,2.346,103,1.847,104,1.486,105,1.056,106,1.569,108,0.773,122,1.996,124,2.366,125,2.167,126,2.605,127,2.605,128,2.605,129,2.366,130,2.605,131,3.15,132,2.605,133,2.366,134,2.366,136,4.181,137,2.905,138,2.905,139,3.767,140,3.767,141,2.905,142,2.905,143,2.605,144,2.223,145,2.167,146,2.366,147,2.589,148,3.895,149,1.486,150,2.605,151,2.81,152,2.905,153,2.905,154,2.366,155,3.119,156,2.905,157,2.905,158,2.905,159,2.905,160,3.767,161,2.905,162,2.905,163,2.905,164,2.905,165,2.605,166,2.905,167,2.905,168,2.905,169,2.905,170,2.905,171,2.905,172,1.864,173,1.996,174,2.905,175,2.905,176,1.627,177,3.767,178,2.905,179,3.767,180,2.905,181,3.767,182,3.068,183,2.905,184,2.905,185,2.905,186,2.905,187,2.905]],["title/injectables/FitBoundsService.html",[20,0.545,151,1.863]],["body/injectables/FitBoundsService.html",[0,0.517,1,1.929,3,0.232,4,0.232,5,0.202,7,0.172,8,0.505,13,0.961,14,0.337,15,0.027,16,0.399,17,0.012,18,0.017,19,0.012,20,0.717,22,1.211,25,2.059,27,0.901,28,1.245,29,1.974,32,2.589,42,0.749,47,1.213,49,1.215,50,1.128,51,0.818,57,1.215,59,0.717,63,1.844,75,1.289,86,1.055,92,1.194,93,0.968,94,1.046,96,0.818,97,0.517,98,0.86,100,1.505,102,2.189,103,1.505,104,1.211,105,0.86,106,1.368,108,0.697,122,1.627,124,3.915,125,1.766,126,2.123,127,2.123,128,2.123,129,1.928,130,2.123,131,3.18,132,2.123,133,1.928,134,1.928,136,4.278,137,2.367,138,2.367,139,3.284,140,3.284,141,2.367,142,2.367,143,2.123,144,2.403,145,1.766,146,2.675,147,1.627,148,3.697,149,1.211,150,2.123,151,3.038,152,3.284,153,3.284,154,2.675,155,3.505,156,3.771,157,3.284,158,3.771,159,3.284,160,3.284,161,2.367,162,2.367,163,2.367,164,2.367,165,2.123,166,2.367,167,2.367,168,2.367,169,3.771,170,3.284,171,3.284,172,1.681,173,1.627,174,2.367,175,2.367,176,1.467,177,3.284,178,2.367,179,3.284,180,3.771,181,4.427,182,3.605,183,2.367,184,3.284,185,2.367,186,3.771,187,2.367,188,4.426,189,4.426,190,3.19,191,3.19,192,3.19,193,3.19,194,1.571,195,3.19,196,3.19,197,3.19,198,3.19,199,3.19,200,3.19,201,3.19,202,3.19,203,3.19,204,3.19]],["title/interfaces/GeoPoint.html",[0,0.545,102,1.278]],["body/interfaces/GeoPoint.html",[0,0.712,2,1.669,3,0.32,4,0.32,5,0.278,7,0.237,8,0.624,13,1.234,14,0.295,15,0.027,16,0.32,17,0.017,18,0.021,19,0.017,93,1.463,102,2.075,205,3.713,206,3.262,207,3.444,208,3.444,209,3.025,210,6.223,211,4.141,212,5.467,213,6.525,214,6.856,215,5.467,216,5.467,217,5.467,218,2.725,219,5.467,220,3.025,221,4.056,222,6.223,223,5.467,224,5.467,225,4.616,226,3.025,227,6.223,228,5.255,229,6.223,230,5.467,231,5.467,232,5.467,233,5.467,234,4.056,235,5.467]],["title/injectables/InfoWindowManager.html",[20,0.545,236,2.24]],["body/injectables/InfoWindowManager.html",[3,0.243,4,0.243,5,0.211,7,0.18,8,0.521,14,0.353,15,0.027,16,0.243,17,0.013,18,0.017,19,0.013,20,0.74,22,1.267,25,1.87,27,0.93,28,1.303,29,2.283,31,2.653,39,3.861,42,1.072,44,2.45,45,2.653,46,2.853,47,1.223,49,1.317,50,1.209,51,0.877,57,1.284,58,1.574,59,0.843,61,1.847,62,1.999,63,1.811,66,2.001,74,2.759,75,1.139,83,1.608,92,0.9,93,0.73,94,0.8,96,0.803,97,0.541,98,0.9,105,1.404,106,1.032,107,1.847,108,0.458,194,1.87,236,3.038,237,5.516,238,2.818,239,5.204,240,5.204,241,3.855,242,5.204,243,3.861,244,4.566,245,4.566,246,2.221,247,5.204,248,3.381,249,4.566,250,3.038,251,3.338,252,3.82,253,3.338,254,4.996,255,4.566,256,3.338,257,3.338,258,4.566,259,3.038,260,2.565,261,4.566,262,3.338,263,3.338,264,3.338,265,3.338,266,2.017,267,3.338,268,5.204,269,3.338,270,4.566,271,3.338,272,4.566,273,3.338,274,2.818,275,1.847,276,3.338]],["title/interfaces/MapOptions.html",[0,0.545,277,2.24]],["body/interfaces/MapOptions.html",[0,0.748,2,1.753,3,0.336,4,0.336,5,0.292,7,0.249,8,0.643,13,1.15,14,0.361,15,0.027,16,0.336,17,0.018,18,0.022,19,0.018,47,0.873,51,0.952,59,0.913,111,3.426,117,2.556,277,3.749,278,4.757,279,6.331,280,3.227,281,6.331,282,6.331,283,6.331,284,3.503,285,6.331,286,4.618,287,5.634,288,4.618,289,2.481,290,3.899]],["title/injectables/MapsAPILoader.html",[20,0.545,144,1.474]],["body/injectables/MapsAPILoader.html",[3,0.336,4,0.336,5,0.292,7,0.249,8,0.643,14,0.328,15,0.026,16,0.336,17,0.018,18,0.022,19,0.018,20,0.913,22,1.753,25,2.041,27,1.147,28,1.248,29,2.211,47,1.197,49,0.94,50,0.873,51,0.633,57,1.147,66,1.864,96,0.633,97,0.748,106,2.113,108,0.633,144,2.467,145,3.592,194,1.741,275,3.118,291,4.319,292,3.426,293,5.134,294,5.134,295,4.757,296,4.212,297,4.18,298,4.618,299,3.899,300,4.618,301,4.18,302,4.618,303,4.618]],["title/injectables/MapsApiWrapper.html",[20,0.545,44,1.474]],["body/injectables/MapsApiWrapper.html",[1,2.263,3,0.169,4,0.169,5,0.146,7,0.125,8,0.4,13,1.106,14,0.351,15,0.027,16,0.169,17,0.009,18,0.013,19,0.009,20,0.568,22,0.879,25,1.714,27,0.714,28,1.323,29,2.313,32,2.227,33,3.504,36,2.962,42,0.544,44,1.536,45,2.158,46,2.407,47,1.259,49,1.308,50,1.214,51,0.881,57,1.341,59,0.865,62,1.536,63,1.308,66,2.241,83,2.036,84,2.613,93,0.507,94,0.406,96,0.817,97,0.375,98,0.625,100,1.093,101,1.718,102,2.467,103,1.093,104,0.879,105,0.625,106,2.075,108,0.318,109,1.718,110,1.718,131,2.407,144,2.068,145,1.282,146,1.4,176,0.669,194,1.308,266,3.066,277,3.69,284,1.282,289,1.891,291,4.444,304,1.956,305,4.234,306,4.234,307,4.722,308,4.234,309,3.508,310,3.508,311,4.234,312,4.234,313,3.508,314,3.508,315,4.234,316,3.575,317,4.722,318,3.141,319,4.722,320,4.722,321,3.508,322,4.234,323,3.508,324,3.508,325,3.508,326,3.508,327,2.316,328,3.508,329,3.508,330,2.316,331,2.316,332,2.316,333,3.961,334,3.508,335,5.338,336,2.316,337,3.508,338,2.316,339,2.316,340,4.234,341,2.316,342,3.508,343,2.316,344,2.854,345,2.316,346,1.941,347,3.508,348,2.316,349,3.508,350,2.316,351,2.316,352,2.854,353,2.316,354,3.508,355,2.316,356,5.338,357,3.69,358,2.316,359,2.316,360,2.316,361,2.316,362,2.316,363,2.316,364,3.508,365,2.316,366,3.508,367,2.316,368,2.316,369,3.508,370,2.316,371,3.508,372,2.316,373,3.508,374,2.316,375,3.508,376,2.316,377,3.508,378,2.316,379,2.316,380,1.541,381,2.316,382,1.956,383,2.316,384,1.956,385,1.956,386,3.508,387,1.956,388,2.316,389,2.316]],["title/interfaces/MarkerIcon.html",[0,0.545,390,2.24]],["body/interfaces/MarkerIcon.html",[0,0.738,2,1.729,3,0.331,4,0.331,5,0.288,7,0.246,8,0.638,13,1.314,14,0.366,15,0.026,16,0.331,17,0.017,18,0.021,19,0.017,51,0.959,59,1.116,390,3.718,391,3.38,392,3.847,393,3.808,394,3.808,395,4.675,396,6.301,397,6.301,398,3.487,399,3.487,400,3.487,401,4.675]],["title/injectables/MarkerManager.html",[20,0.545,248,2.034]],["body/injectables/MarkerManager.html",[3,0.205,4,0.205,5,0.178,7,0.152,8,0.463,14,0.359,15,0.027,16,0.205,17,0.011,18,0.016,19,0.011,20,0.657,22,1.07,25,1.7,27,0.825,28,1.32,29,2.3,31,2.421,42,0.952,44,2.274,45,2.421,46,2.648,47,1.251,49,1.347,50,1.244,51,0.902,57,1.332,58,1.329,59,0.841,61,1.559,62,1.775,63,1.467,66,1.341,75,1.057,92,0.76,93,0.616,94,0.71,96,0.712,97,0.456,98,0.76,105,0.76,106,0.871,107,1.559,108,0.386,172,0.932,176,0.813,194,2.096,207,1.559,208,1.559,246,1.875,248,2.449,250,2.697,280,1.436,318,3.523,385,3.423,402,2.379,403,4.748,404,4.053,405,4.053,406,4.053,407,4.053,408,4.053,409,4.053,410,4.053,411,4.053,412,4.053,413,4.053,414,4.053,415,4.053,416,4.053,417,4.053,418,2.817,419,4.053,420,3.866,421,2.817,422,4.402,423,2.24,424,2.817,425,4.053,426,2.817,427,4.053,428,2.817,429,4.053,430,2.817,431,4.053,432,2.817,433,4.053,434,2.817,435,4.053,436,2.817,437,4.053,438,2.817,439,4.053,440,2.817,441,4.053,442,2.817,443,4.053,444,2.817,445,4.053,446,2.817,447,4.053,448,2.817,449,4.053,450,2.817,451,2.817,452,2.379,453,4.053,454,2.379,455,2.817,456,2.817,457,2.817,458,2.09,459,2.817,460,2.817,461,2.09,462,2.817,463,1.559,464,2.817,465,2.379,466,2.817,467,1.148,468,2.817,469,1.233,470,2.817,471,2.09,472,2.817,473,1.436,474,2.817,475,2.379,476,2.09,477,4.053,478,2.817,479,2.817,480,2.817]],["title/interfaces/MarkerOptions.html",[0,0.545,344,2.034]],["body/interfaces/MarkerOptions.html",[0,0.761,2,1.783,3,0.342,4,0.342,5,0.297,7,0.254,8,0.65,13,1.158,14,0.352,15,0.027,16,0.342,17,0.018,18,0.022,19,0.018,51,0.94,59,1.074,105,1.717,117,2.599,289,2.348,344,3.44,391,3.485,458,4.724,467,2.594,469,2.788,471,4.724,473,3.246,481,5.172,482,3.848,483,4.724]],["title/directives/NgMapsCircleDirective.html",[54,1.716,484,0.972]],["body/directives/NgMapsCircleDirective.html",[1,0.639,3,0.122,4,0.122,5,0.106,7,0.091,8,0.312,13,1.106,14,0.357,15,0.027,16,0.122,17,0.006,18,0.01,19,0.006,21,2.636,27,0.556,28,1.264,32,1.869,33,2.94,42,0.395,47,1.254,49,0.701,50,0.651,51,0.472,54,1.392,56,5.636,57,1,58,0.794,59,0.796,62,1.195,66,1.311,75,1.042,83,1.064,84,1.906,92,1.466,93,1.157,94,1.05,96,0.64,97,0.273,98,0.454,100,0.794,101,1.249,102,0.639,103,0.794,104,0.639,108,0.231,120,4.148,149,1.307,172,1.139,176,0.994,194,1.346,209,2.41,218,1.735,220,1.906,234,2.025,260,2.868,280,1.756,289,1.925,290,1.421,333,3.645,346,2.581,393,2.632,394,2.632,398,2.41,399,2.41,400,2.41,423,1.288,463,2.193,467,2.001,469,2.151,473,2.505,482,2.818,484,0.788,485,0.686,486,1.421,487,1.288,488,2.292,489,1.625,490,1.756,491,0.794,492,1.288,493,2.794,494,3.444,495,2.081,496,2.908,497,2.832,498,2.94,499,2.73,500,1.288,501,2.02,502,2.636,503,1.288,504,2.292,505,1.288,506,3.444,507,3.444,508,3.444,509,2.632,510,2.081,511,2.081,512,2.898,513,2.898,514,2.632,515,2.632,516,2.898,517,3.444,518,2.292,519,1.421,520,1.683,521,2.305,522,2.524,523,1.683,524,1.816,525,2.394,526,1.816,527,1.816,528,2.292,529,3.616,530,2.771,531,1.683,532,3.534,533,1.65,534,1.683,535,1.816,536,2.818,537,1.816,538,1.816,539,1.816,540,2.305,541,1.683,542,2.94,543,2.636,544,2.636,545,3.405,546,2.636,547,2.636,548,2.636,549,1.683,550,2.193,551,2.394,552,2.394,553,1.683,554,3.346,555,1.683,556,1.907,557,1.683,558,2.73,559,2.73,560,2.025,561,1.683,562,3.269,563,1.683,564,1.683,565,1.816,566,2.305,567,2.305,568,2.025,569,2.305,570,1.683,571,1.683,572,1.816,573,1.816,574,3.403,575,1.683,576,3.906,577,3.962,578,2.636,579,1.683,580,2.636,581,2.581,582,2.636,583,2.94,584,1.683,585,1.683,586,1.65,587,1.65,588,1.683,589,1.65,590,1.683,591,1.65,592,1.683,593,2.581,594,1.683,595,1.683,596,1.683,597,1.683,598,1.683,599,1.683,600,1.65,601,1.65,602,1.683,603,2.73,604,2.394,605,1.683,606,1.288,607,1.683,608,2.025,609,1.683,610,1.288,611,1.683,612,1.683,613,1.683,614,1.683,615,2.908,616,1.683,617,1.683,618,2.593,619,2.982,620,2.555,621,1.683,622,1.249,623,1.017,624,1.683,625,1.683,626,1.017,627,1.12,628,1.683,629,2.73,630,1.249,631,1.249,632,1.12,633,1.12,634,1.683,635,1.421,636,1.421,637,1.249,638,1.421,639,1.249,640,1.421,641,1.683,642,1.683,643,1.683,644,1.65,645,1.12,646,1.249,647,1.12,648,1.683,649,0.931,650,1.12,651,1.12,652,1.017,653,1.421,654,1.421,655,1.683,656,1.683,657,1.421,658,1.683,659,1.421,660,1.683,661,1.421,662,1.421,663,1.421,664,1.421,665,1.421,666,1.421,667,1.421,668,1.421,669,1.421,670,1.421,671,1.421,672,1.421,673,1.421,674,1.421,675,1.421,676,1.421,677,1.683,678,1.683,679,1.421,680,1.421,681,1.421,682,1.249,683,2.305,684,1.421,685,1.421,686,2.025,687,1.683,688,1.683,689,1.683,690,1.683,691,2.305,692,1.683,693,1.683,694,1.683,695,1.421,696,0.931,697,1.683,698,1.421,699,1.683]],["title/modules/NgMapsCoreModule.html",[700,2.24,701,2.24]],["body/modules/NgMapsCoreModule.html",[3,0.322,4,0.322,5,0.28,15,0.027,16,0.466,17,0.017,18,0.021,19,0.017,54,2.797,59,0.889,86,1.463,94,0.775,96,0.931,97,0.716,99,3.735,104,1.679,105,1.48,108,0.606,131,2.255,149,1.679,172,1.463,176,1.722,252,3.036,274,3.735,275,2.448,380,3.969,420,3.036,452,3.735,700,3.651,701,3.651,702,3.281,703,2.943,704,4.633,705,5.486,706,5.486,707,5.486,708,4.423,709,5.486,710,3.036,711,4.423,712,3.651,713,4.423,714,2.797,715,3.735,716,2.588,717,4.633,718,2.588,719,2.797,720,3.735,721,3.281,722,3.735,723,3.735,724,3.735,725,4.633,726,4.423,727,3.735,728,4.423,729,4.425,730,3.735,731,3.735]],["title/directives/NgMapsFitBoundsDirective.html",[484,0.972,710,1.863]],["body/directives/NgMapsFitBoundsDirective.html",[3,0.219,4,0.219,5,0.191,7,0.163,8,0.486,14,0.317,15,0.027,16,0.219,17,0.012,18,0.016,19,0.012,27,0.866,28,1.199,29,1.408,42,0.999,47,1.163,49,1.004,50,0.932,51,0.676,57,1.09,74,2.571,75,0.866,86,0.998,92,1.523,93,1.346,94,0.938,96,0.734,97,0.489,98,0.813,108,0.676,115,1.538,122,2.988,125,1.669,126,2.831,127,2.831,128,2.831,129,2.571,130,2.831,131,2.879,132,2.831,133,2.571,134,1.823,143,2.007,147,3.136,149,1.872,151,2.964,155,2.355,194,1.655,218,1.32,226,2.355,266,1.823,289,1.507,467,2.582,483,2.238,484,1.546,485,1.229,487,2.007,488,3.281,489,2.326,490,2.514,491,1.423,492,2.007,493,3.024,497,3.404,500,2.007,501,2.73,502,3.564,503,2.007,522,2.807,530,1.538,578,3.564,581,2.355,606,2.326,610,2.007,618,1.863,682,2.238,686,2.238,696,1.669,710,2.355,732,5.281,733,4.255,734,4.255,735,1.863,736,4.769,737,4.931,738,4.255,739,3.016,740,4.931,741,4.255,742,4.255,743,3.016,744,2.571,745,3.157,746,4.255,747,3.016,748,5.648,749,4.255,750,4.255,751,3.593,752,5.356,753,4.931,754,3.236,755,3.016,756,3.016,757,3.016,758,4.949,759,3.016,760,4.255,761,3.016,762,4.255,763,3.016,764,2.547,765,4.255,766,3.016,767,3.016,768,3.016,769,3.016,770,3.016,771,3.016,772,3.016,773,3.016,774,2.238,775,1.669,776,3.016,777,3.016,778,2.547,779,4.255,780,2.007,781,3.016,782,4.255,783,2.007,784,3.016,785,5.356,786,4.931,787,4.931,788,3.016,789,3.016,790,3.016,791,3.016,792,2.547,793,3.016,794,3.016,795,3.016]],["title/components/NgMapsInfoWindowComponent.html",[252,1.863,735,1.474]],["body/components/NgMapsInfoWindowComponent.html",[3,0.472,4,0.14,5,0.122,7,0.104,8,0.347,13,1.071,14,0.336,15,0.027,16,0.14,17,0.007,18,0.012,19,0.007,25,0.595,27,0.872,28,1.271,42,0.714,47,1.225,49,0.872,50,0.981,51,0.587,54,0.982,57,1.153,59,0.802,66,1.416,75,1.266,83,0.94,86,0.637,92,1.45,93,1.084,94,0.338,96,0.639,97,0.611,108,0.264,111,1.429,115,1.922,129,1.838,149,1.625,155,2.086,172,1.006,173,2.182,176,1.346,194,1.531,209,2.87,211,2.848,218,1.332,220,2.579,226,1.683,236,2.848,241,4.539,243,4.36,252,2.87,254,3.176,260,1.874,266,1.164,275,3.553,289,1.755,318,2.796,346,2.369,420,3.135,422,2.508,423,1.435,454,1.627,467,1.239,469,2.041,476,2.257,484,0.556,485,0.785,487,1.435,488,2.508,489,1.778,490,1.922,491,0.909,492,2.813,493,2.956,495,2.816,498,3.176,500,1.435,501,2.182,502,2.848,503,1.435,505,1.435,522,1.65,530,2.376,556,0.843,574,2.182,593,1.066,606,1.435,610,1.435,618,2.271,619,1.551,626,2.993,630,1.429,632,1.282,633,1.282,645,1.282,650,1.282,651,1.282,652,1.164,710,1.066,712,1.282,714,0.982,716,0.909,718,0.909,719,0.982,735,2.271,744,2.587,751,2.568,754,3.249,774,1.429,780,2.024,796,2.024,797,1.429,798,4.828,799,1.429,800,2.024,801,2.024,802,3.042,803,3.042,804,3.042,805,2.024,806,2.024,807,1.838,808,1.838,809,2.587,810,3.042,811,5.533,812,2.508,813,3.769,814,3.769,815,5.877,816,3.769,817,3.042,818,4.281,819,3.615,820,4.661,821,3.769,822,5.186,823,3.769,824,1.926,825,1.926,826,3.042,827,1.926,828,1.683,829,4.281,830,3.042,831,4.281,832,1.926,833,3.042,834,3.675,835,1.926,836,4.281,837,4.281,838,4.281,839,1.926,840,1.926,841,4.281,842,3.042,843,3.042,844,3.042,845,3.042,846,3.042,847,2.568,848,1.926,849,5.877,850,4.183,851,2.568,852,3.615,853,2.257,854,4.183,855,3.615,856,2.568,857,4.281,858,2.568,859,3.042,860,2.257,861,1.926,862,3.042,863,2.568,864,1.926,865,3.042,866,1.926,867,1.926,868,1.926,869,3.042,870,1.926,871,1.926,872,1.926,873,1.926,874,3.042,875,1.926,876,1.926,877,3.042,878,1.926,879,1.926,880,1.926,881,1.429,882,3.042,883,1.926,884,4.281,885,3.042,886,3.042,887,1.926,888,1.926,889,3.042,890,2.568,891,1.926,892,1.926,893,1.926,894,1.429,895,1.627,896,1.926,897,1.627,898,1.926,899,3.042,900,3.042,901,1.429,902,1.429,903,1.926,904,1.627,905,1.926,906,1.926,907,1.926,908,1.926,909,1.926,910,3.042,911,3.042,912,1.926,913,1.926,914,1.926,915,1.926,916,1.926,917,1.926,918,1.926,919,1.282,920,1.926,921,1.926,922,1.429,923,2.568,924,3.615,925,1.627,926,1.627,927,1.627,928,1.627,929,1.627,930,1.627,931,1.627,932,1.282,933,1.627,934,1.282,935,1.627]],["title/components/NgMapsMarkerComponent.html",[420,1.863,735,1.474]],["body/components/NgMapsMarkerComponent.html",[3,0.322,4,0.109,5,0.095,7,0.081,8,0.284,13,1.056,14,0.346,15,0.027,16,0.181,17,0.006,18,0.01,19,0.006,25,1.569,27,0.507,28,1.257,31,1.268,42,0.353,47,1.235,49,0.507,50,0.775,51,0.341,54,0.766,57,1.033,59,0.933,63,1.144,75,1.202,83,0.464,86,0.497,92,1.623,93,1.261,94,0.995,96,0.671,97,0.403,98,0.405,105,0.671,106,0.769,108,0.341,115,0.766,122,2.091,131,0.766,134,2.237,147,0.766,148,0.908,149,1.776,154,1.503,155,1.762,172,1.548,173,1.887,176,1.184,194,1.366,207,1.377,208,1.377,209,2.446,211,2.463,220,2.446,221,1.846,226,1.377,243,1.846,248,2.671,252,1.377,254,2.362,259,1.656,260,2.523,275,2.048,280,1.268,284,0.832,289,1.943,344,1.924,346,2.446,382,2.101,390,2.729,401,1.846,420,2.709,422,4.369,458,3.279,461,3.472,463,2.446,465,3.125,467,1.8,469,1.935,471,3.279,473,0.766,475,3.732,476,2.746,481,2.101,484,0.434,485,0.612,487,1.174,489,1.502,490,1.623,491,0.709,492,2.587,493,2.587,497,2.809,500,1.174,501,1.887,503,1.502,505,1.502,509,2.237,510,2.478,511,2.237,514,2.671,515,2.671,522,2.635,525,1.503,530,2.495,532,3.432,533,1.503,536,2.237,550,1.377,551,1.503,552,1.503,556,0.658,574,3.14,576,3.314,580,1.656,581,1.377,582,1.656,583,1.846,586,1.503,587,1.503,589,1.503,591,1.503,593,0.832,601,2.237,604,1.503,606,0.709,610,1.174,618,2.487,619,2.495,620,1.846,623,0.908,631,1.115,632,1,633,1,637,1.115,639,1.115,649,2.589,696,0.832,710,0.832,712,2.118,714,0.766,716,0.709,718,0.709,719,0.766,735,1.935,744,1.503,745,1.846,758,2.101,764,1.269,774,1.846,775,1.762,783,1,796,1.656,797,1.115,800,1.656,801,1.656,805,1,806,1,807,0.908,808,0.908,809,1.924,812,2.118,819,3.125,828,1.377,850,3.125,851,2.101,852,2.101,853,1.846,854,3.125,855,3.125,856,2.101,858,2.101,860,3.882,881,1.115,901,2.746,902,2.746,904,1.269,919,2.118,922,1.115,923,2.101,924,3.125,925,1.269,926,1.269,927,1.269,928,1.269,929,1.269,930,1.269,931,1.269,932,1,933,1.269,934,1,935,1.269,936,1.115,937,1.115,938,2.362,939,2.101,940,2.101,941,2.488,942,3.184,943,3.184,944,3.184,945,2.746,946,3.701,947,3.701,948,2.746,949,3.701,950,2.488,951,3.184,952,3.701,953,3.125,954,3.184,955,1.503,956,1.503,957,1.503,958,4.101,959,1.503,960,2.488,961,2.488,962,2.488,963,1.503,964,2.488,965,2.488,966,1.503,967,1.503,968,1.503,969,1.503,970,1.846,971,1.503,972,2.488,973,1.503,974,2.101,975,2.488,976,1.503,977,2.488,978,2.488,979,2.488,980,2.488,981,2.488,982,1.503,983,1.503,984,1.503,985,2.488,986,2.746,987,2.488,988,2.488,989,1.503,990,1.503,991,1.503,992,1.503,993,1.503,994,2.488,995,1.503,996,3.701,997,1.503,998,1.503,999,1.503,1000,1.503,1001,1.503,1002,1.503,1003,1.503,1004,1.503,1005,1.503,1006,1.503,1007,4.101,1008,1.503,1009,1.503,1010,1.503,1011,3.701,1012,3.701,1013,1.503,1014,2.488,1015,3.463,1016,2.488,1017,1.503,1018,1.503,1019,1.115,1020,1.115,1021,1.503,1022,1.503,1023,1.503,1024,1,1025,1.269,1026,1.503,1027,1.115,1028,1.503,1029,1.377,1030,1.503,1031,1.656,1032,1.656,1033,1.503,1034,1.503,1035,1.503,1036,1.503,1037,2.488,1038,1.503,1039,1.503,1040,1.503,1041,1.503,1042,1.115,1043,1.503,1044,1.503,1045,1.503,1046,1.503,1047,2.488,1048,1.503,1049,2.488,1050,1.115,1051,1.503,1052,1.503,1053,1.503,1054,1.503,1055,1.503,1056,1.503,1057,1.503,1058,1.503,1059,1.503,1060,1.503,1061,1.503,1062,1.503,1063,1.503,1064,1.503,1065,1.503,1066,1.503,1067,1.503,1068,1.503,1069,1.503,1070,1.503,1071,1.503,1072,4.679,1073,1.503,1074,1.503,1075,1.503,1076,1.503,1077,1.503,1078,1.503,1079,1.503,1080,1.503,1081,1.503,1082,1.503,1083,1.503,1084,1.503,1085,1.503,1086,4.101,1087,4.101,1088,1.503,1089,1.503,1090,1.269,1091,1.503,1092,1.503,1093,1.503,1094,1.503,1095,1.503,1096,1.503,1097,1.503,1098,1.503,1099,1.503,1100,1.503,1101,1.503,1102,1.503,1103,1.503,1104,1.503,1105,1.115,1106,1.115]],["title/directives/NgMapsPolygonDirective.html",[484,0.972,714,1.716]],["body/directives/NgMapsPolygonDirective.html",[3,0.107,4,0.107,5,0.093,7,0.079,8,0.278,13,1.007,14,0.345,15,0.027,16,0.178,17,0.012,18,0.009,19,0.006,27,0.497,28,1.228,42,0.345,47,1.235,49,0.637,50,1.067,51,0.429,57,0.943,59,0.815,63,0.454,75,1.108,86,0.486,92,1.307,93,1.061,94,0.972,96,0.555,97,0.395,98,0.396,102,0.557,103,0.692,104,0.557,108,0.335,115,0.748,121,2.907,148,1.474,149,1.189,154,1.474,172,0.807,173,1.86,176,1.053,194,1.127,207,3.211,208,3.211,218,1.597,228,2.06,260,2.797,280,2.064,284,0.812,289,1.929,393,2.447,394,2.447,395,1.81,398,2.241,399,2.241,400,2.241,423,2.662,461,1.81,463,2.019,467,2.05,469,2.027,473,2.064,482,2.204,484,0.705,485,0.598,487,1.151,489,1.477,490,1.596,491,0.692,492,1.477,493,2.871,495,1.892,497,2.683,500,1.151,501,1.86,503,1.151,504,3.081,505,1.151,509,1.892,510,0.887,511,0.887,512,2.083,513,2.083,514,1.892,515,1.892,516,2.083,518,0.977,522,2.43,524,1.624,525,2.204,526,1.624,527,1.624,528,1.624,529,3.453,530,2.958,532,3.136,533,1.474,535,1.624,536,2.929,537,1.624,538,1.624,539,1.624,542,2.706,543,2.427,544,2.427,545,3.226,546,2.427,547,2.427,548,2.427,550,2.019,551,2.204,552,2.204,556,2.332,560,1.81,562,2.907,565,2.427,572,1.624,573,1.624,574,3.302,576,3.889,586,1.474,587,1.474,589,1.474,591,1.474,593,2.872,600,1.474,601,1.474,606,1.477,610,1.151,618,2.43,619,2.776,623,0.887,626,1.474,627,1.624,647,1.624,649,0.812,652,0.887,696,0.812,714,1.244,735,1.371,754,2.798,775,0.812,780,1.624,783,2.427,800,1.624,805,0.977,806,0.977,807,0.887,808,0.887,809,0.887,812,2.083,828,0.812,847,2.06,863,3.08,919,0.977,936,1.089,938,2.323,945,2.706,948,2.706,970,1.81,974,3.08,986,1.81,1019,1.089,1020,1.089,1024,3.543,1028,0.887,1029,0.812,1030,0.887,1031,0.977,1032,0.977,1042,3.241,1050,1.089,1105,1.089,1106,1.089,1107,1.24,1108,2.44,1109,4.881,1110,1.24,1111,3.131,1112,3.131,1113,3.08,1114,3.131,1115,4.497,1116,4.686,1117,2.44,1118,3.131,1119,3.131,1120,3.131,1121,3.131,1122,3.131,1123,3.131,1124,3.131,1125,3.131,1126,3.131,1127,3.131,1128,3.131,1129,1.468,1130,2.427,1131,1.468,1132,2.44,1133,1.468,1134,1.468,1135,2.06,1136,2.06,1137,2.06,1138,1.468,1139,1.468,1140,1.468,1141,3.08,1142,2.06,1143,1.81,1144,2.06,1145,3.08,1146,2.06,1147,2.06,1148,2.06,1149,2.06,1150,2.06,1151,2.06,1152,2.06,1153,2.06,1154,2.06,1155,1.468,1156,2.44,1157,2.44,1158,3.648,1159,2.44,1160,2.44,1161,2.44,1162,2.44,1163,2.44,1164,3.648,1165,4.848,1166,2.44,1167,2.06,1168,3.648,1169,2.44,1170,3.08,1171,3.648,1172,2.06,1173,3.648,1174,2.44,1175,2.44,1176,2.44,1177,1.468,1178,2.06,1179,2.06,1180,1.468,1181,1.468,1182,1.468,1183,1.468,1184,1.468,1185,1.468,1186,2.644,1187,1.468,1188,2.644,1189,1.468,1190,1.468,1191,1.468,1192,1.468,1193,1.468,1194,1.468,1195,1.468,1196,1.468,1197,2.06,1198,1.468,1199,2.06,1200,1.468,1201,1.468,1202,1.468,1203,1.468,1204,2.44,1205,1.468,1206,1.468,1207,1.468,1208,1.468,1209,1.468,1210,1.468,1211,1.468,1212,1.468,1213,1.24,1214,3.689,1215,1.468,1216,1.468,1217,1.468,1218,1.468,1219,1.468,1220,3.131,1221,2.44,1222,1.468,1223,1.24,1224,1.24,1225,1.468,1226,3.131,1227,2.06,1228,1.468,1229,1.468,1230,1.468,1231,1.24,1232,4.497,1233,4.497,1234,4.093,1235,1.468,1236,1.468,1237,2.644,1238,1.468,1239,1.468,1240,1.468,1241,1.468,1242,1.468,1243,1.468,1244,1.468,1245,1.468,1246,1.468,1247,1.24,1248,1.24,1249,1.468,1250,1.24,1251,1.24,1252,1.24,1253,1.468,1254,1.468,1255,1.468,1256,1.468,1257,1.468,1258,1.468,1259,1.468,1260,1.24]],["title/directives/NgMapsPolyline.html",[484,0.972,716,1.588]],["body/directives/NgMapsPolyline.html",[3,0.122,4,0.122,5,0.106,7,0.09,8,0.31,13,0.879,14,0.349,15,0.027,16,0.198,17,0.006,18,0.01,19,0.006,27,0.553,28,1.259,42,0.393,47,1.244,49,0.553,50,1.088,51,0.372,57,0.998,59,0.794,63,0.517,75,1.039,83,0.839,86,0.553,92,1.377,93,1.117,94,1.008,96,0.595,97,0.44,98,0.451,104,0.635,108,0.372,115,0.853,121,3.095,133,1.011,149,1.648,172,1.539,173,2.013,176,1.14,194,1.22,218,1.729,226,0.926,260,2.848,280,1.749,289,2.005,398,2.403,399,2.403,400,2.403,423,2.194,463,1.503,467,1.996,469,2.146,473,1.749,482,1.641,484,0.784,485,0.681,487,1.281,489,1.618,490,1.749,491,0.789,492,1.618,493,2.877,495,2.072,497,2.921,500,1.281,501,2.013,503,1.281,504,2.889,505,1.281,509,2.072,510,1.011,511,1.011,512,2.282,513,2.282,514,2.072,515,2.072,516,2.282,518,1.113,522,2.59,524,1.807,525,2.386,526,1.807,527,1.807,528,1.807,529,3.609,530,3.05,532,3.277,533,1.641,535,1.807,536,3.085,537,1.807,538,2.889,539,1.807,543,1.807,544,1.807,545,2.627,546,1.807,547,1.807,548,1.807,550,1.503,551,1.641,552,1.641,556,0.732,560,2.015,562,3.095,565,1.807,572,1.807,573,1.807,574,3.355,576,3.955,586,1.641,587,1.641,589,1.641,591,1.641,593,3.001,600,1.641,601,1.641,606,0.789,610,1.281,618,2.43,619,2.885,622,1.241,623,1.011,626,1.641,627,1.807,644,1.011,645,1.113,646,1.241,647,1.113,649,0.926,650,1.113,651,1.113,652,1.011,696,0.926,716,1.862,718,1.281,735,1.502,754,2.386,775,0.926,780,1.807,800,1.807,805,1.113,807,1.011,808,1.011,809,1.011,812,2.282,828,0.926,881,1.241,919,1.807,932,4.379,936,1.241,938,2.545,945,2.929,948,2.929,970,2.015,986,2.015,1015,2.896,1019,1.241,1020,1.241,1025,1.412,1028,1.011,1029,0.926,1030,1.011,1031,1.113,1032,1.113,1050,1.241,1105,1.241,1106,1.241,1109,3.451,1110,1.412,1113,3.334,1115,4.686,1135,2.294,1136,2.294,1137,2.294,1141,3.334,1142,2.294,1143,2.015,1144,2.294,1145,3.334,1146,3.334,1147,2.294,1148,2.294,1149,2.294,1150,2.294,1151,2.294,1152,2.294,1153,2.294,1154,2.294,1178,2.294,1179,2.294,1186,2.896,1188,2.896,1197,2.294,1199,2.294,1213,1.412,1223,1.412,1224,1.412,1227,2.294,1231,1.412,1232,4.686,1233,4.686,1234,4.311,1237,2.896,1247,1.412,1248,1.412,1250,1.412,1251,1.412,1252,1.412,1260,1.412,1261,1.241,1262,3.43,1263,3.43,1264,3.948,1265,4.9,1266,2.716,1267,3.43,1268,3.43,1269,3.43,1270,3.43,1271,3.43,1272,3.43,1273,3.43,1274,3.43,1275,3.43,1276,3.43,1277,3.43,1278,1.673,1279,2.627,1280,1.673,1281,2.716,1282,1.673,1283,1.673,1284,1.673,1285,1.673,1286,2.716,1287,1.673,1288,1.673,1289,1.673,1290,1.673,1291,1.673,1292,1.673,1293,1.673,1294,1.673,1295,1.673,1296,1.673,1297,1.673,1298,1.673,1299,1.673,1300,1.673,1301,1.673,1302,1.673,1303,1.673,1304,1.673,1305,1.673,1306,1.673,1307,1.673,1308,1.673,1309,1.673,1310,1.673,1311,1.673,1312,1.673,1313,1.673,1314,2.716,1315,1.673,1316,1.673,1317,1.673,1318,1.673,1319,1.241,1320,1.673,1321,1.673,1322,1.673,1323,1.673,1324,1.673,1325,3.43,1326,1.673,1327,3.43,1328,1.673,1329,1.673,1330,1.673,1331,1.673,1332,1.673,1333,1.673,1334,1.673,1335,1.673,1336,1.673,1337,1.673,1338,1.673,1339,1.673,1340,1.673,1341,1.673,1342,1.673,1343,1.673,1344,1.673,1345,1.673,1346,1.673,1347,1.673,1348,1.673]],["title/directives/NgMapsPolylinePoint.html",[484,0.972,718,1.588]],["body/directives/NgMapsPolylinePoint.html",[3,0.296,4,0.296,5,0.258,7,0.22,13,1.144,14,0.327,15,0.027,16,0.296,17,0.016,18,0.02,19,0.016,27,1.06,28,1.21,42,1.349,47,1.183,49,0.829,50,0.77,51,0.558,57,0.829,75,1.06,86,1.347,94,0.714,96,0.558,97,0.66,104,2.501,108,0.558,115,2.076,172,1.347,182,3.147,206,3.022,207,2.254,208,2.254,209,3.462,220,3.462,225,4.398,260,2.28,346,3.6,484,1.504,485,1.659,487,2.457,489,2.709,491,1.921,492,2.457,500,2.457,503,2.457,505,2.457,574,3.086,578,3.466,580,3.466,581,2.882,582,3.466,606,1.921,610,2.457,618,2.514,619,2.655,632,3.466,633,3.466,716,2.457,718,2.855,744,3.147,754,3.658,783,3.466,901,3.022,902,3.022,932,4.027,1349,5.403,1350,5.208,1351,5.742,1352,5.208,1353,4.072,1354,4.072,1355,4.072,1356,4.072,1357,4.072,1358,4.072]],["title/directives/NgMapsRectangleDirective.html",[484,0.972,719,1.716]],["body/directives/NgMapsRectangleDirective.html",[1,0.646,3,0.124,4,0.124,5,0.108,7,0.092,8,0.314,9,3.698,10,3.698,11,3.698,12,3.698,13,1.135,14,0.359,15,0.027,16,0.124,17,0.007,18,0.011,19,0.007,27,0.561,28,1.261,32,1.881,42,0.399,47,1.256,49,0.706,50,0.656,51,0.476,57,0.954,58,0.802,59,0.799,62,1.205,66,0.911,75,1.046,83,1.072,92,1.471,93,1.162,94,1.041,96,0.6,97,0.276,98,0.459,100,0.802,108,0.233,149,1.317,172,1.148,176,0.795,194,1.353,218,1.746,221,2.043,234,2.043,260,2.854,280,0.867,289,1.932,333,3.812,346,3.018,352,2.096,384,1.436,393,2.646,394,2.646,398,2.424,399,2.424,400,2.424,423,1.299,463,2.206,467,2.01,469,2.16,473,2.233,482,2.832,484,0.795,485,0.693,487,1.299,488,2.308,489,1.636,490,1.769,491,0.802,492,1.299,493,2.801,495,2.096,496,2.929,497,2.843,498,2.958,500,1.299,501,2.033,502,2.653,503,1.299,504,2.308,505,1.299,509,2.646,510,2.096,511,2.096,512,2.914,513,2.914,514,2.646,515,2.646,516,2.914,518,2.308,519,1.436,521,2.325,522,2.531,524,1.832,525,2.409,526,1.832,527,1.832,528,2.308,529,3.628,530,2.78,532,3.543,533,1.664,535,1.832,536,2.832,537,1.832,538,1.832,539,1.832,540,2.325,542,2.958,543,2.653,544,2.653,545,3.419,546,2.653,547,2.653,548,2.653,550,2.206,551,2.409,552,2.409,554,4.339,556,1.519,562,3.419,565,1.832,566,2.325,567,2.325,568,2.043,569,2.325,572,1.832,573,1.832,574,3.386,576,3.88,578,1.832,580,2.653,581,2.594,582,2.653,583,2.958,586,1.664,587,1.664,589,1.664,591,1.664,593,2.594,600,1.664,601,1.664,604,2.409,606,1.299,608,2.043,610,1.299,615,3.698,618,2.629,619,2.947,620,2.574,622,1.262,623,1.028,626,1.664,627,1.832,630,1.262,631,1.262,635,1.436,636,1.436,637,1.262,638,1.436,639,1.262,640,1.436,644,1.664,645,1.132,646,1.262,647,1.132,649,0.941,650,1.132,651,1.132,652,1.028,653,1.436,654,1.436,657,1.436,659,1.436,661,1.436,662,1.436,663,1.436,664,1.436,665,1.436,666,1.436,667,1.436,668,1.436,669,1.436,670,1.436,671,1.436,672,1.436,673,1.436,674,1.436,675,1.436,676,1.436,679,1.436,680,1.436,681,1.436,682,1.262,683,2.325,684,1.436,685,1.436,686,1.262,691,1.436,695,1.436,696,0.941,698,1.436,719,1.404,775,0.941,801,1.832,828,0.941,934,4.476,1028,1.028,1029,0.941,1030,1.028,1031,1.132,1032,1.132,1359,1.436,1360,3.469,1361,2.753,1362,2.753,1363,3.469,1364,3.469,1365,3.469,1366,2.653,1367,1.701,1368,1.701,1369,1.701,1370,1.701,1371,1.701,1372,1.701,1373,1.701,1374,1.701,1375,1.701,1376,1.701,1377,1.701,1378,1.701,1379,1.701,1380,1.701,1381,1.701,1382,1.701,1383,1.701,1384,2.753,1385,1.701,1386,1.701,1387,1.701,1388,1.701,1389,1.701,1390,1.701,1391,1.701,1392,1.701,1393,1.701,1394,1.701,1395,1.701,1396,1.701,1397,2.753,1398,1.701,1399,1.701,1400,1.701,1401,1.701,1402,1.701,1403,1.701,1404,1.701,1405,1.701,1406,1.701,1407,1.701,1408,1.701,1409,2.753,1410,1.701,1411,1.701,1412,1.701,1413,1.701,1414,1.701,1415,1.701,1416,1.701,1417,1.701,1418,1.701,1419,1.701,1420,1.701,1421,1.701,1422,1.701,1423,1.701,1424,1.701,1425,1.701]],["title/classes/NoOpMapsAPILoader.html",[108,0.462,1426,2.498]],["body/classes/NoOpMapsAPILoader.html",[3,0.275,4,0.275,5,0.239,7,0.204,8,0.566,14,0.345,15,0.027,16,0.275,17,0.014,18,0.019,19,0.014,25,2.046,27,1.01,28,1.252,29,1.946,42,0.887,47,1.24,49,1.128,50,1.047,51,0.76,57,1.198,66,1.833,86,1.25,96,0.76,97,0.612,105,1.799,106,2.119,108,0.518,118,3.681,123,2.803,144,2.798,146,2.283,176,1.091,194,1.712,259,3.914,275,3.066,291,4.172,292,2.803,293,5.159,294,5.159,295,4.967,296,4.253,297,4.11,299,4.19,301,4.811,581,2.746,745,3.681,1167,4.19,1172,4.19,1426,4.365,1427,5.295,1428,4.967,1429,4.962,1430,4.962,1431,4.962,1432,4.962,1433,4.19,1434,4.19,1435,3.191,1436,4.962,1437,3.778,1438,5.883,1439,3.778,1440,3.778,1441,3.778,1442,3.778,1443,3.778,1444,3.778,1445,2.803,1446,2.803,1447,3.191,1448,3.778,1449,3.778,1450,3.778,1451,3.778,1452,3.778]],["title/interfaces/Padding.html",[0,0.545,357,2.24]],["body/interfaces/Padding.html",[0,0.816,2,1.913,3,0.367,4,0.367,5,0.319,7,0.272,8,0.678,13,1.318,14,0.352,15,0.026,16,0.367,17,0.019,18,0.023,19,0.019,357,3.951,600,3.938,1453,4.256,1454,6.517,1455,6.517,1456,6.517]],["title/injectables/PolygonManager.html",[20,0.545,1130,2.24]],["body/injectables/PolygonManager.html",[3,0.28,4,0.28,5,0.243,7,0.208,8,0.573,14,0.359,15,0.027,16,0.28,17,0.015,18,0.019,19,0.015,20,0.814,22,1.462,25,1.9,27,1.023,28,1.29,29,2.266,31,2.85,42,1.18,44,2.594,45,2.85,46,3.021,47,1.214,49,1.307,50,1.192,51,0.864,57,1.251,58,1.816,59,0.96,61,2.131,62,2.199,63,1.728,66,2.085,75,1.206,83,1.728,92,1.038,93,0.842,94,0.88,96,0.812,97,0.624,98,1.038,105,1.038,106,1.19,107,2.131,108,0.528,246,2.562,250,3.342,395,4.677,604,3.035,644,2.327,714,3.492,715,3.251,1109,2.857,1116,3.251,1130,3.342,1457,3.251,1458,5.591,1459,5.023,1460,5.023,1461,5.591,1462,5.023,1463,3.85,1464,5.023,1465,3.85,1466,3.85,1467,5.023,1468,3.85,1469,3.85,1470,3.85,1471,5.023,1472,3.85,1473,3.85]],["title/injectables/PolylineManager.html",[20,0.545,1279,2.24]],["body/injectables/PolylineManager.html",[3,0.261,4,0.261,5,0.227,7,0.193,8,0.547,14,0.357,15,0.027,16,0.261,17,0.014,18,0.018,19,0.014,20,0.776,22,1.36,24,2.384,25,1.981,27,0.975,28,1.279,29,2.247,31,2.751,42,1.125,44,2.522,45,2.751,46,2.936,47,1.212,48,3.025,49,1.305,50,1.193,51,0.865,55,2.658,57,1.258,58,1.69,59,0.933,61,1.982,62,2.097,63,1.667,66,2.043,68,3.025,75,1.173,83,1.667,85,3.025,92,0.966,93,0.784,94,0.839,95,3.025,96,0.847,97,0.58,98,0.966,102,1.36,103,1.69,104,1.818,105,0.966,106,1.107,107,1.982,108,0.491,176,1.383,182,2.165,207,1.982,208,1.982,246,2.384,250,3.187,423,2.259,604,2.894,644,2.165,716,3.234,717,4.044,718,2.259,1029,3.592,1279,3.187,1474,5.481,1475,5.395,1476,4.789,1477,4.789,1478,4.789,1479,5.395,1480,4.789,1481,4.789,1482,4.789,1483,3.025,1484,4.789,1485,3.582,1486,3.582,1487,3.025,1488,4.789,1489,3.582,1490,3.582,1491,3.582]],["title/injectables/RectangleManager.html",[20,0.545,1366,2.24]],["body/injectables/RectangleManager.html",[1,1.251,3,0.24,4,0.24,5,0.208,7,0.178,8,0.516,14,0.355,15,0.027,16,0.24,17,0.013,18,0.017,19,0.013,20,0.733,22,1.251,24,2.192,25,1.72,27,0.921,28,1.308,29,2.292,31,2.635,32,2.438,37,4.364,38,4.364,39,3.835,41,4.364,42,0.774,43,2.782,44,2.436,45,2.635,46,2.837,47,1.232,49,1.327,50,1.22,51,0.885,52,3.821,55,2.444,57,1.299,58,1.554,59,0.837,61,1.823,62,1.981,63,1.597,66,2.202,73,3.821,74,2.734,75,1.227,83,1.597,92,0.888,93,0.721,94,0.793,96,0.8,97,0.534,98,0.888,100,1.554,105,0.888,106,1.018,107,1.823,108,0.452,109,2.444,194,1.398,719,3.532,720,2.782,934,4.523,1366,3.011,1483,2.782,1487,2.782,1492,5.548,1493,5.169,1494,4.525,1495,5.169,1496,4.525,1497,3.294,1498,4.525,1499,3.294,1500,3.294,1501,3.294,1502,3.294,1503,4.525,1504,3.294,1505,3.294,1506,3.294,1507,3.294,1508,3.294,1509,5.169,1510,3.294,1511,3.294,1512,3.294,1513,3.294]],["title/interfaces/RectangleOptions.html",[0,0.545,352,2.034]],["body/interfaces/RectangleOptions.html",[0,0.858,2,2.01,3,0.385,4,0.385,5,0.335,15,0.026,16,0.385,17,0.02,18,0.023,19,0.02,83,1.636,96,0.726,117,2.93,118,4.534,119,3.892,121,3.523,352,3.693,1514,4.471]],["title/injectables/ScriptLoaderService.html",[20,0.545,1515,2.498]],["body/injectables/ScriptLoaderService.html",[3,0.217,4,0.217,5,0.356,7,0.161,8,0.482,14,0.337,15,0.027,16,0.217,17,0.011,18,0.016,19,0.011,20,0.684,22,1.132,27,0.859,28,1.179,42,0.7,47,1.179,49,1.189,50,1.104,51,0.801,57,1.222,59,1.075,63,1.804,66,2.169,74,3.219,75,1.085,86,1.396,92,0.804,93,1.072,94,0.858,96,0.579,97,0.483,108,0.409,110,3.635,112,3.563,172,1.986,176,1.733,218,1.848,260,1.305,266,1.801,296,3.885,301,4.692,380,2.808,387,2.517,401,3.953,493,3.112,522,1.848,744,2.96,775,1.649,778,2.517,828,2.335,834,2.211,1028,2.55,1029,2.335,1433,5.267,1434,4.748,1435,2.517,1445,2.211,1446,2.211,1447,2.517,1515,3.131,1516,5.34,1517,2.517,1518,4.899,1519,4.899,1520,4.22,1521,4.22,1522,4.22,1523,4.22,1524,4.899,1525,4.22,1526,4.22,1527,2.98,1528,5.327,1529,5.623,1530,4.22,1531,2.98,1532,5.327,1533,5.623,1534,4.22,1535,2.98,1536,6.132,1537,5.327,1538,4.93,1539,5.327,1540,5.327,1541,4.22,1542,5.838,1543,2.98,1544,2.98,1545,2.98,1546,2.98,1547,4.22,1548,2.98,1549,2.98,1550,2.98,1551,2.98,1552,2.98,1553,2.98,1554,2.98,1555,2.98,1556,4.22,1557,5.327,1558,2.98,1559,2.98,1560,2.98,1561,2.98,1562,2.98,1563,2.98,1564,2.98,1565,2.98,1566,2.98,1567,4.22,1568,2.98,1569,2.98,1570,2.98,1571,2.98,1572,2.98,1573,2.98,1574,2.98,1575,2.98,1576,2.98,1577,4.899,1578,2.98,1579,2.98,1580,2.98,1581,2.98,1582,2.98,1583,2.98,1584,2.98,1585,2.98,1586,2.98,1587,2.98,1588,2.98,1589,2.98,1590,2.98,1591,2.98,1592,2.98,1593,2.98,1594,2.98,1595,2.98]],["title/interfaces/ShapeOptions.html",[0,0.545,119,2.034]],["body/interfaces/ShapeOptions.html",[0,0.763,2,1.789,3,0.343,4,0.343,5,0.298,7,0.254,8,0.651,13,1.308,14,0.363,15,0.026,16,0.343,17,0.018,18,0.022,19,0.018,51,0.954,59,1.075,117,2.607,119,3.446,289,2.173,393,3.852,394,3.852,398,3.527,399,3.527,400,3.527,467,2.596,469,2.791,1596,3.978]],["title/coverage.html",[1597,3.878]],["body/coverage.html",[0,1.069,1,1.406,5,0.234,6,3.128,14,0.2,15,0.027,17,0.014,18,0.019,19,0.014,20,1.069,21,2.465,23,3.128,24,3.651,44,1.622,54,1.889,84,2.05,94,0.649,102,1.406,105,0.999,106,1.876,108,0.672,116,3.128,117,3.359,119,2.239,122,1.889,124,3.315,125,3.23,144,1.622,145,2.05,147,1.889,151,2.05,205,3.128,206,3.634,236,2.465,237,3.128,238,3.128,248,2.239,252,2.05,277,2.465,278,3.128,291,3.651,292,3.634,304,3.128,344,2.239,352,2.239,357,2.465,380,3.651,390,2.465,391,3.634,392,3.128,402,3.128,420,2.05,484,1.801,486,3.128,556,3.019,568,2.749,703,3.884,710,2.05,712,2.465,714,1.889,716,1.747,718,1.747,719,1.889,721,2.749,729,2.749,732,3.128,735,2.402,798,3.634,799,3.634,894,2.749,937,3.634,1024,2.465,1027,2.749,1107,3.128,1130,2.465,1214,3.128,1261,3.634,1279,2.465,1319,2.749,1349,3.128,1359,3.128,1366,2.465,1426,2.749,1427,3.128,1453,3.128,1457,3.128,1474,3.128,1492,3.128,1514,3.128,1515,2.749,1516,3.128,1517,3.128,1596,3.128,1597,3.128,1598,3.128,1599,3.705,1600,3.705,1601,6.457,1602,3.128,1603,3.128,1604,5.837,1605,3.705,1606,3.705,1607,4.897,1608,3.705,1609,3.705,1610,3.705,1611,3.705,1612,3.705,1613,3.705,1614,3.705,1615,3.705,1616,5.486,1617,3.705,1618,3.705,1619,3.705,1620,3.705,1621,3.705,1622,3.705,1623,5.486,1624,4.897,1625,3.705,1626,5.486,1627,3.705,1628,3.705,1629,3.705,1630,3.705,1631,4.897,1632,4.897,1633,3.128,1634,3.705,1635,3.705,1636,3.705,1637,3.705,1638,3.705,1639,3.705,1640,3.705,1641,3.705,1642,3.705]],["title/dependencies.html",[1643,2.812,1644,3.004]],["body/dependencies.html",[15,0.026,17,0.021,18,0.024,19,0.021,97,0.871,1445,3.991,1644,4.575,1645,5.379,1646,5.379,1647,5.379,1648,6.166]],["title/miscellaneous/functions.html",[1649,1.556,1650,3.418]],["body/miscellaneous/functions.html",[7,0.283,15,0.025,17,0.02,18,0.023,19,0.02,49,1.238,50,1.15,51,0.834,703,3.493,724,4.432,725,5.134,727,4.432,729,4.762,1602,5.134,1603,5.134,1649,2.905,1650,4.432,1651,5.42]],["title/index.html",[7,0.152,1652,2.812,1653,2.812]],["body/index.html",[13,1.236,14,0.285,15,0.022,17,0.016,18,0.02,19,0.016,50,1.098,59,0.675,75,1.182,83,1.634,86,1.92,93,0.912,96,0.571,105,1.565,144,1.825,165,2.773,209,2.925,211,3.517,218,1.825,220,2.925,226,2.306,259,3.517,284,2.306,289,1.476,296,2.773,297,3.092,316,3.519,422,2.773,423,1.966,483,3.092,485,1.698,505,1.966,522,1.825,550,2.306,556,1.825,608,3.092,618,2.314,700,3.862,701,2.773,704,5.32,735,2.314,736,3.519,792,4.902,796,3.517,797,3.092,801,2.773,806,2.773,807,3.194,808,2.518,809,2.518,834,3.092,853,3.092,860,3.092,895,5.521,897,3.519,940,3.519,953,3.519,1030,2.518,1042,3.092,1090,4.463,1143,3.092,1170,4.463,1428,3.519,1446,3.092,1538,3.519,1598,3.519,1654,6.104,1655,4.168,1656,4.168,1657,4.168,1658,4.168,1659,4.168,1660,6.104,1661,5.805,1662,6.104,1663,4.168,1664,4.168,1665,5.286,1666,4.168,1667,5.286,1668,4.168,1669,4.168,1670,4.168,1671,4.168,1672,4.168,1673,4.168,1674,4.168,1675,4.168,1676,5.805,1677,4.168,1678,4.168,1679,4.168,1680,4.168,1681,4.168,1682,4.168,1683,4.168,1684,5.286,1685,4.168,1686,4.168,1687,4.168,1688,4.168,1689,4.168,1690,4.168,1691,4.168,1692,4.168,1693,4.168,1694,4.168,1695,4.463,1696,3.519,1697,3.519,1698,4.168,1699,4.168,1700,4.168,1701,4.168,1702,5.286,1703,4.168,1704,4.168,1705,4.168,1706,3.519,1707,4.168,1708,4.168]],["title/modules.html",[702,3.407]],["body/modules.html",[15,0.024,17,0.021,18,0.024,19,0.021,701,3.624,702,4.041,890,4.599,1709,5.447,1710,5.447]],["title/overview.html",[1711,3.878]],["body/overview.html",[2,2,15,0.023,17,0.02,18,0.023,19,0.02,22,2,123,3.908,284,3.371,485,2.146,649,2.915,700,4.054,730,4.448,731,4.448,796,3.505,922,3.908,939,4.448,1024,4.054,1633,4.448,1644,3.908,1706,4.448,1711,4.448,1712,5.267,1713,5.267,1714,5.267,1715,5.267]],["title/miscellaneous/typealiases.html",[1649,1.556,1716,4.048]],["body/miscellaneous/typealiases.html",[7,0.286,14,0.286,15,0.025,17,0.02,18,0.023,19,0.02,75,1.08,124,3.205,125,3.385,150,4.07,1649,2.935,1695,4.479,1696,4.479,1697,4.479,1717,5.304,1718,5.304,1719,6.117,1720,5.304,1721,5.304]],["title/miscellaneous/variables.html",[1649,1.556,1722,3.418]],["body/miscellaneous/variables.html",[7,0.273,13,1.195,14,0.341,15,0.026,17,0.019,18,0.023,19,0.019,92,1.76,93,1.428,94,0.886,556,2.767,703,3.365,721,4.414,722,4.27,723,4.27,798,3.752,799,4.414,894,4.414,937,3.752,1027,4.414,1261,3.752,1319,4.414,1649,2.798,1651,4.27,1722,4.27,1723,5.057,1724,5.057,1725,5.057]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"interfaces/RectangleOptions.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":556,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":551,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["0/1",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1627,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1635,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1624,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1639,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1623,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1626,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1636,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":649,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"overview.html":{}}}],["1.0",{"_index":552,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["1/10",{"_index":1638,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1632,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":1637,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":1634,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1630,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1024,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"coverage.html":{},"overview.html":{}}}],["12/25",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["13.0.0",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1220,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["170",{"_index":229,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["18",{"_index":1686,"title":{},"body":{"index.html":{}}}],["180",{"_index":222,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["190",{"_index":227,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["2",{"_index":1715,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["2/10",{"_index":1640,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1625,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1628,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1214,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"coverage.html":{}}}],["200",{"_index":157,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["21/37",{"_index":1615,"title":{},"body":{"coverage.html":{}}}],["22/35",{"_index":1620,"title":{},"body":{"coverage.html":{}}}],["24/36",{"_index":1617,"title":{},"body":{"coverage.html":{}}}],["27/38",{"_index":1606,"title":{},"body":{"coverage.html":{}}}],["28/38",{"_index":1622,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1714,"title":{},"body":{"overview.html":{}}}],["3/9",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":808,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"index.html":{}}}],["33",{"_index":1607,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1618,"title":{},"body":{"coverage.html":{}}}],["48",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["49/72",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1221,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["50",{"_index":1629,"title":{},"body":{"coverage.html":{}}}],["51.678418",{"_index":1022,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["56",{"_index":1614,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1633,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["62",{"_index":1619,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1616,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":1612,"title":{},"body":{"coverage.html":{}}}],["7.809007",{"_index":1023,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["71",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":1621,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":568,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"coverage.html":{}}}],["9",{"_index":1631,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":214,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["_addeventlisteners",{"_index":945,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["_api",{"_index":305,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["_apiwrapper",{"_index":52,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["_boundschangesampletime",{"_index":156,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_circleaddedtomanager",{"_index":494,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["_circles",{"_index":26,"title":{},"body":{"injectables/CircleManager.html":{}}}],["_convertpoints",{"_index":1476,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["_convertpoints(line",{"_index":1481,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["_createidentifier",{"_index":186,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_createidentifier(latlng",{"_index":191,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["_document",{"_index":293,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["_fitboundsaccessor",{"_index":742,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["_fitboundsdetails",{"_index":943,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_fitboundsservice",{"_index":740,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["_getpoints",{"_index":1264,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["_id",{"_index":812,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["_includeinbounds",{"_index":158,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_infowindowaddedtomanager",{"_index":813,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindowmanager",{"_index":826,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindowoptionsinputs",{"_index":814,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindows",{"_index":239,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["_init",{"_index":1113,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["_latestfitboundsdetails",{"_index":737,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["_loader",{"_index":329,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["_manager",{"_index":521,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["_mapoptions",{"_index":496,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["_mapresolver",{"_index":306,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["_mapswrapper",{"_index":250,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["_markeraddedtomanger",{"_index":944,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_markermanager",{"_index":247,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["_markers",{"_index":403,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["_polygonaddedtomanager",{"_index":1111,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["_polygonmanager",{"_index":1132,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["_polygonoptionsattributes",{"_index":1112,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["_polygons",{"_index":1458,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["_polylineaddedtomanager",{"_index":1262,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["_polylinemanager",{"_index":1281,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["_polylineoptionsattributes",{"_index":1263,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["_polylines",{"_index":1475,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["_rectangleaddedtomanager",{"_index":1360,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["_rectangles",{"_index":1493,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["_registereventlisteners",{"_index":498,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["_setinfowindowoptions",{"_index":817,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_setinfowindowoptions(changes",{"_index":865,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_updatebounds",{"_index":738,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["_updatebounds(newfitboundsdetails",{"_index":746,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["_updatecircleoptionschanges",{"_index":499,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["_updatecircleoptionschanges(changes",{"_index":603,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["_updatefitboundsdetails",{"_index":946,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_updateopenstate",{"_index":818,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_updatepolygonoptions",{"_index":1114,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["_updatepolygonoptions(changes",{"_index":1202,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["_updaterectangleoptionschanges",{"_index":1361,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["_updaterectangleoptionschanges(changes",{"_index":1397,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["_window",{"_index":294,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["_zone",{"_index":45,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["abstract",{"_index":29,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBoundsDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["according",{"_index":856,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["activates",{"_index":1698,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":935,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["add",{"_index":895,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"index.html":{}}}],["addcircle",{"_index":30,"title":{},"body":{"injectables/CircleManager.html":{}}}],["addcircle(circle",{"_index":53,"title":{},"body":{"injectables/CircleManager.html":{}}}],["added",{"_index":745,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["addinfowindow",{"_index":240,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["addinfowindow(infowindow",{"_index":251,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["additional",{"_index":1701,"title":{},"body":{"index.html":{}}}],["additionally",{"_index":1667,"title":{},"body":{"index.html":{}}}],["addmarker",{"_index":404,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["addmarker(marker",{"_index":419,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["addpolygon",{"_index":1459,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["addpolygon(path",{"_index":1464,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["addpolyline",{"_index":1477,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["addpolyline(line",{"_index":1482,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["addrectangle",{"_index":1494,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["addrectangle(rectangle",{"_index":1498,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["adds",{"_index":733,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["addtobounds",{"_index":188,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["addtobounds(latlng",{"_index":171,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["addtomap",{"_index":335,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["aftercontentinit",{"_index":938,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["agm",{"_index":133,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["aliases",{"_index":1717,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["along",{"_index":1286,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["alreadyloaded",{"_index":1518,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["alternative",{"_index":1670,"title":{},"body":{"index.html":{}}}],["always",{"_index":859,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["angular",{"_index":1030,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{}}}],["angular/common",{"_index":1445,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["angular/core",{"_index":97,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["animation",{"_index":475,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["any).readystate",{"_index":1558,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["anyway",{"_index":784,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["api",{"_index":106,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["appear",{"_index":1151,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["appearing",{"_index":858,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["application",{"_index":1658,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1666,"title":{},"body":{"index.html":{}}}],["around",{"_index":234,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["array",{"_index":423,"title":{},"body":{"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolylineManager.html":{},"index.html":{}}}],["arrays",{"_index":1165,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["async",{"_index":318,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["attaches",{"_index":1688,"title":{},"body":{"index.html":{}}}],["auto",{"_index":129,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["automatically",{"_index":974,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["available",{"_index":890,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"modules.html":{}}}],["await",{"_index":454,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["before",{"_index":845,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["behaviorsubject",{"_index":136,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["between",{"_index":550,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{}}}],["bicyclinglayer",{"_index":1697,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["boolean",{"_index":289,"title":{},"body":{"interfaces/MapOptions.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{},"index.html":{}}}],["bootstrap",{"_index":1712,"title":{},"body":{"overview.html":{}}}],["bottom",{"_index":1454,"title":{},"body":{"interfaces/Padding.html":{}}}],["bounce",{"_index":1011,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["bounds",{"_index":131,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{}}}],["bounds.delete(this._createidentifier(latlng",{"_index":183,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["bounds.set(id",{"_index":178,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["bounds.ts",{"_index":125,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["bounds.ts:103",{"_index":756,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:29",{"_index":135,"title":{},"body":{"classes/FitBoundsAccessor.html":{}}}],["bounds.ts:32",{"_index":743,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:34",{"_index":759,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:35",{"_index":741,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:37",{"_index":204,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:38",{"_index":202,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:41",{"_index":203,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:43",{"_index":190,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:45",{"_index":755,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:52",{"_index":757,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:56",{"_index":198,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:60",{"_index":193,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:70",{"_index":201,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:76",{"_index":747,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:78",{"_index":195,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:82",{"_index":199,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:86",{"_index":192,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds_changed",{"_index":1421,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["boundschange",{"_index":1363,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["boundsliteral",{"_index":1,"title":{"interfaces/BoundsLiteral.html":{}},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["boundsmap",{"_index":150,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"miscellaneous/typealiases.html":{}}}],["boundspadding",{"_index":356,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["box",{"_index":354,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["break",{"_index":691,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["browse",{"_index":1710,"title":{},"body":{"modules.html":{}}}],["browsers",{"_index":1560,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["cached",{"_index":793,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["call",{"_index":834,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["case",{"_index":686,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["casting",{"_index":114,"title":{},"body":{"injectables/CircleManager.html":{}}}],["center",{"_index":333,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["center_changed",{"_index":692,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["centerchange",{"_index":506,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["change",{"_index":780,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["changed",{"_index":578,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["changefitboundschangesampletime",{"_index":189,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["changefitboundschangesampletime(timems",{"_index":184,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["changes",{"_index":606,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["changes.animation",{"_index":1067,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.clickable",{"_index":1065,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.draggable",{"_index":637,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["changes.east",{"_index":1411,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["changes.editable",{"_index":635,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["changes.icon",{"_index":1059,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.iconurl",{"_index":1057,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.isopen",{"_index":906,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["changes.label",{"_index":1054,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.latitude",{"_index":632,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["changes.latitude.currentvalue",{"_index":1356,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["changes.longitude",{"_index":633,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["changes.longitude.currentvalue",{"_index":1357,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["changes.north",{"_index":1410,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["changes.opacity",{"_index":1061,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.radius",{"_index":641,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["changes.south",{"_index":1412,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["changes.title",{"_index":1052,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.visible",{"_index":639,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["changes.west",{"_index":1413,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["changes.zindex",{"_index":904,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["changes[k].currentvalue",{"_index":652,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["changing",{"_index":846,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["character",{"_index":965,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["check",{"_index":112,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["child",{"_index":975,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["circle",{"_index":56,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircleDirective.html":{}}}],["circle's",{"_index":577,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["circle'},{'name",{"_index":928,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["circleclick",{"_index":507,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["circledblclick",{"_index":508,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["circlemanager",{"_index":21,"title":{"injectables/CircleManager.html":{}},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircleDirective.html":{},"coverage.html":{}}}],["circleoptions",{"_index":84,"title":{"interfaces/CircleOptions.html":{}},"body":{"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"coverage.html":{}}}],["circumference",{"_index":540,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["clamped",{"_index":212,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["class",{"_index":108,"title":{"classes/FitBoundsAccessor.html":{},"classes/NoOpMapsAPILoader.html":{}},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["classes",{"_index":123,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"classes/NoOpMapsAPILoader.html":{},"overview.html":{}}}],["clearinstancelisteners",{"_index":307,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["click",{"_index":1186,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["clickable",{"_index":473,"title":{},"body":{"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["clicked",{"_index":601,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["clicks",{"_index":583,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["close",{"_index":241,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["close(infowindow",{"_index":255,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["closed",{"_index":863,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["closes",{"_index":869,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["cmp",{"_index":804,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["color",{"_index":543,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["colors",{"_index":545,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["compared",{"_index":572,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["complete",{"_index":778,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["complex",{"_index":1174,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["component",{"_index":735,"title":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":925,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["components",{"_index":796,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{},"overview.html":{}}}],["computing",{"_index":153,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["config",{"_index":299,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["configuration",{"_index":1676,"title":{},"body":{"index.html":{}}}],["configure",{"_index":295,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["configure(config",{"_index":297,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"index.html":{}}}],["considered",{"_index":844,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["consist",{"_index":1163,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["const",{"_index":172,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["constructor(@inject(document",{"_index":1447,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{}}}],["constructor(_apiwrapper",{"_index":43,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["constructor(_fitboundsaccessor",{"_index":739,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["constructor(_infowindowmanager",{"_index":824,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["constructor(_loader",{"_index":327,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["constructor(_manager",{"_index":519,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["constructor(_mapswrapper",{"_index":246,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["constructor(_polygonmanager",{"_index":1129,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["constructor(_polylinemanager",{"_index":1278,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["constructor(document",{"_index":1435,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{}}}],["constructor(loader",{"_index":159,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["constructor(markermanager",{"_index":955,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["constructor(private",{"_index":623,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["constructor(protected",{"_index":109,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/RectangleManager.html":{}}}],["container",{"_index":1317,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["contains",{"_index":706,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["content",{"_index":811,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["content's",{"_index":843,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["contentchildren",{"_index":1025,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{}}}],["contentchildren(ngmapsinfowindowcomponent",{"_index":1016,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["contentchildren(ngmapspolylinepoint",{"_index":1314,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["control",{"_index":537,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["converted",{"_index":228,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["coordinates",{"_index":1158,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["core",{"_index":705,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["coredirectives",{"_index":729,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["correct",{"_index":896,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["coverage",{"_index":1597,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1216,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["createcircle",{"_index":308,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createcircle(center",{"_index":331,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createcsselement",{"_index":1520,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["createcsselement(href",{"_index":1526,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["createdrawingmanager",{"_index":309,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createdrawingmanager(param",{"_index":334,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createeventobservable",{"_index":31,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["createeventobservable('closeclick",{"_index":909,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["createeventobservable('drag",{"_index":1091,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('dragend",{"_index":1094,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('dragstart",{"_index":1085,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('rightclick",{"_index":1081,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable(['click",{"_index":1073,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable(eventname",{"_index":58,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["createeventobservable(obj.name",{"_index":1250,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["createinfowindow",{"_index":310,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createinfowindow(center",{"_index":337,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createmap",{"_index":311,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createmap(el",{"_index":339,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createmarker",{"_index":312,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createmarker(position",{"_index":343,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createpolygon",{"_index":313,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createpolygon(options",{"_index":347,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createpolyline",{"_index":314,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createpolyline(options",{"_index":349,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createrectangle",{"_index":315,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createrectangle(box",{"_index":351,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["creates",{"_index":258,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["createscriptelement",{"_index":1521,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["createscriptelement(src",{"_index":1530,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["cs",{"_index":1071,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["css",{"_index":1538,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["css3",{"_index":544,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["curvature",{"_index":1144,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["custom",{"_index":734,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["d",{"_index":1090,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["dblclick",{"_index":1188,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["declarations",{"_index":730,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"overview.html":{}}}],["decorators",{"_index":881,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{}}}],["default",{"_index":92,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":529,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["defined",{"_index":47,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["defines",{"_index":1178,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["degrees",{"_index":210,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["deleteinfowindow",{"_index":242,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["deleteinfowindow(infowindow",{"_index":262,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["deletemarker",{"_index":405,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["deletemarker(marker",{"_index":425,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["deletepolygon",{"_index":1460,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["deletepolygon(paths",{"_index":1467,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["deletepolyline",{"_index":1478,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["deletepolyline(line",{"_index":1484,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["dependencies",{"_index":1644,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":1664,"title":{},"body":{"index.html":{}}}],["described",{"_index":1700,"title":{},"body":{"index.html":{}}}],["description",{"_index":86,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["designates",{"_index":1159,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["details",{"_index":776,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["dev",{"_index":1663,"title":{},"body":{"index.html":{}}}],["dimensions",{"_index":1152,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["directive",{"_index":484,"title":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"coverage.html":{}}}],["directives",{"_index":485,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{},"overview.html":{}}}],["directives/circle",{"_index":99,"title":{},"body":{"injectables/CircleManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/fit",{"_index":711,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["directives/info",{"_index":274,"title":{},"body":{"injectables/InfoWindowManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/map",{"_index":713,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["directives/marker",{"_index":452,"title":{},"body":{"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/polygon",{"_index":715,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"injectables/PolygonManager.html":{}}}],["directives/polyline",{"_index":717,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"injectables/PolylineManager.html":{}}}],["directives/rectangle",{"_index":720,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"injectables/RectangleManager.html":{}}}],["directives/services/pipes",{"_index":707,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["disable",{"_index":828,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["disableautopan",{"_index":820,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["disabledoubleclickzoom",{"_index":279,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["displayed",{"_index":850,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["displaying",{"_index":853,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["distinctuntilchanged",{"_index":762,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["document",{"_index":301,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{}}}],["document.createelement('link",{"_index":1578,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["document.createelement('script",{"_index":1571,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["documentation",{"_index":1598,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":593,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["don't",{"_index":788,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["drag",{"_index":509,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["dragend",{"_index":510,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["draggable",{"_index":280,"title":{},"body":{"interfaces/MapOptions.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["dragged",{"_index":970,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["dragging",{"_index":536,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["drags",{"_index":587,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["dragstart",{"_index":511,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["drop",{"_index":1012,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ds",{"_index":1084,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["duplicate",{"_index":980,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["dynamically",{"_index":1536,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["e",{"_index":61,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["each",{"_index":1136,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["earlier",{"_index":569,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["earth",{"_index":1145,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["earth's",{"_index":559,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["east",{"_index":9,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["edges",{"_index":1141,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["edit",{"_index":535,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["editable",{"_index":504,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["el",{"_index":342,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["element",{"_index":744,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/ScriptLoaderService.html":{}}}],["element.addeventlistener('error",{"_index":1569,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["element.addeventlistener('load",{"_index":1568,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["element.addeventlistener('readystatechange",{"_index":1566,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["elementref",{"_index":815,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["emits",{"_index":862,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["emitted",{"_index":582,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["emitter",{"_index":580,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["error('expected",{"_index":1041,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["errorhandler",{"_index":1570,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["errorhandler(event",{"_index":1564,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["eslint",{"_index":1028,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["eslint/no",{"_index":1031,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ev",{"_index":1233,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["even",{"_index":1199,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["event",{"_index":260,"title":{},"body":{"injectables/InfoWindowManager.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["event.type",{"_index":1562,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["eventemitter",{"_index":574,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["eventemitter.emit",{"_index":694,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["eventemitter.emit(bounds",{"_index":1424,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["eventemitter.emit(radius",{"_index":690,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["eventemitter.emit(value",{"_index":695,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["eventname",{"_index":62,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["events",{"_index":528,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.foreach((eventemitter",{"_index":681,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('bounds_changed",{"_index":1417,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["events.set('center_changed",{"_index":655,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["events.set('click",{"_index":657,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('dblclick",{"_index":659,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('drag",{"_index":661,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('dragend",{"_index":663,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('dragstart",{"_index":665,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('mousedown",{"_index":667,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('mousemove",{"_index":669,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('mouseout",{"_index":671,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('mouseover",{"_index":673,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('mouseup",{"_index":675,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('radius_changed",{"_index":677,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["events.set('rightclick",{"_index":679,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["example",{"_index":226,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{},"index.html":{}}}],["except",{"_index":546,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["explorer",{"_index":567,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["export",{"_index":16,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"interfaces/RectangleOptions.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{}}}],["exports",{"_index":731,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"overview.html":{}}}],["extended",{"_index":547,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["extends",{"_index":118,"title":{},"body":{"interfaces/CircleOptions.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/RectangleOptions.html":{}}}],["fact",{"_index":231,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["fall",{"_index":224,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["false",{"_index":530,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["feature",{"_index":132,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["features",{"_index":1702,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"interfaces/RectangleOptions.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{}}}],["fill",{"_index":542,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["fillcolor",{"_index":393,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["fillopacity",{"_index":394,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["filter",{"_index":1254,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["find",{"_index":1705,"title":{},"body":{"index.html":{}}}],["fired",{"_index":576,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["first",{"_index":1167,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["fit",{"_index":130,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["fitbounds",{"_index":316,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"index.html":{}}}],["fitbounds(bounds",{"_index":355,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["fitboundsaccessor",{"_index":122,"title":{"classes/FitBoundsAccessor.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["fitboundsdetails",{"_index":147,"title":{"interfaces/FitBoundsDetails.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["fitboundsservice",{"_index":151,"title":{"injectables/FitBoundsService.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"coverage.html":{}}}],["fixme",{"_index":290,"title":{},"body":{"interfaces/MapOptions.html":{},"directives/NgMapsCircleDirective.html":{}}}],["flag",{"_index":978,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["flatmap",{"_index":138,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["follow",{"_index":1143,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"index.html":{}}}],["foreground",{"_index":961,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["forwardref",{"_index":942,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["from(loader.load()).pipe",{"_index":161,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["front",{"_index":854,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["fully",{"_index":830,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["function",{"_index":380,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"modules/NgMapsCoreModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["functions",{"_index":1650,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":987,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["generatebounds",{"_index":169,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["generatebounds(includeinbounds",{"_index":197,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["geodesic",{"_index":1115,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["geopoint",{"_index":102,"title":{"interfaces/GeoPoint.html":{}},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["getbounds",{"_index":32,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{}}}],["getbounds(circle",{"_index":64,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getbounds(rectangle",{"_index":1501,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["getbounds(this",{"_index":1422,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["getcenter",{"_index":33,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{}}}],["getcenter(circle",{"_index":67,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getfitboundsdetails",{"_index":134,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{}}}],["getmaptypeid",{"_index":317,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["getnativemap",{"_index":319,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["getnativemarker",{"_index":406,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["getnativemarker(marker",{"_index":427,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["getradius",{"_index":34,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getradius(circle",{"_index":69,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getradius(this",{"_index":688,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["gets",{"_index":581,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["getting",{"_index":1652,"title":{"index.html":{}},"body":{}}],["getzoom",{"_index":320,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["github",{"_index":1708,"title":{},"body":{"index.html":{}}}],["given",{"_index":74,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"directives/NgMapsFitBoundsDirective.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["globe",{"_index":235,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["google",{"_index":259,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"index.html":{}}}],["google.maps.animation[marker.animation",{"_index":478,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["google.maps.icon",{"_index":958,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["google.maps.infowindowoptions",{"_index":268,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["google.maps.latlng",{"_index":181,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["google.maps.latlngliteral",{"_index":182,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["google.maps.markerlabel",{"_index":481,"title":{},"body":{"interfaces/MarkerOptions.html":{},"components/NgMapsMarkerComponent.html":{}}}],["google.maps.mouseevent",{"_index":1087,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["google.maps.polygonoptions",{"_index":1204,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["google.maps.polymouseevent",{"_index":1234,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["google.maps.rectangleoptions",{"_index":1509,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["google.maps.strokeposition",{"_index":624,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["google.maps.strokeposition.center",{"_index":625,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["googlemaps",{"_index":726,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["graph",{"_index":1709,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":219,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["handleinfowindowupdate",{"_index":947,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["handler",{"_index":1232,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["handlers",{"_index":1231,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["handlers.foreach((obj",{"_index":1247,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["handles",{"_index":526,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["head",{"_index":1519,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["height",{"_index":807,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"index.html":{}}}],["here",{"_index":483,"title":{},"body":{"interfaces/MarkerOptions.html":{},"directives/NgMapsFitBoundsDirective.html":{},"index.html":{}}}],["heremaps",{"_index":728,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["hi",{"_index":810,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["higher",{"_index":852,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["holds",{"_index":884,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["hole",{"_index":1217,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["host",{"_index":889,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["hostmarker",{"_index":816,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["href",{"_index":1528,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["html",{"_index":923,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["htmlelement",{"_index":340,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["htmlheadelement",{"_index":1547,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["htmllinkelement",{"_index":1529,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["htmlscriptelement",{"_index":1533,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["https://ng",{"_index":1223,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["hybrid",{"_index":1691,"title":{},"body":{"index.html":{}}}],["icon",{"_index":461,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["icon.ts",{"_index":392,"title":{},"body":{"interfaces/MarkerIcon.html":{},"coverage.html":{}}}],["icons",{"_index":1265,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["iconurl",{"_index":949,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["id",{"_index":173,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["identifier",{"_index":1599,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":1559,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["image",{"_index":960,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["implement",{"_index":126,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["implements",{"_index":487,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["import",{"_index":96,"title":{},"body":{"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"interfaces/RectangleOptions.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["important",{"_index":1432,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["improve",{"_index":113,"title":{},"body":{"injectables/CircleManager.html":{}}}],["includeinbounds",{"_index":170,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":286,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["indicates",{"_index":524,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"interfaces/RectangleOptions.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{}}}],["infowindow",{"_index":254,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["infowindow.open(event",{"_index":1077,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["infowindowclose",{"_index":823,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["infowindowid",{"_index":894,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["infowindowid++).tostring",{"_index":877,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["infowindowmanager",{"_index":236,"title":{"injectables/InfoWindowManager.html":{}},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{}}}],["infowindows",{"_index":849,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["inherited",{"_index":1438,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["inject",{"_index":1446,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["injectable",{"_index":20,"title":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":22,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":708,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["injectiontoken('map",{"_index":722,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":618,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{}}}],["input('markerclickable",{"_index":1035,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["input('markerdraggable",{"_index":1033,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["input('polydraggable",{"_index":1225,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["input('polylinedraggable",{"_index":1321,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["input('rectangledraggable",{"_index":1407,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["inputs",{"_index":503,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["inserting",{"_index":1175,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["inside",{"_index":801,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{}}}],["install",{"_index":1661,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1659,"title":{},"body":{"index.html":{}}}],["instance",{"_index":87,"title":{},"body":{"injectables/CircleManager.html":{}}}],["instruction",{"_index":1669,"title":{},"body":{"index.html":{}}}],["integrity",{"_index":1542,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/BoundsLiteral.html":{},"interfaces/CircleOptions.html":{},"interfaces/FitBoundsDetails.html":{},"interfaces/GeoPoint.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerIcon.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Padding.html":{},"interfaces/RectangleOptions.html":{},"interfaces/ShapeOptions.html":{}},"body":{"interfaces/BoundsLiteral.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerIcon.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Padding.html":{},"interfaces/RectangleOptions.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{}}}],["interface/bounds",{"_index":100,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{}}}],["interface/circle",{"_index":101,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{}}}],["interface/geo",{"_index":103,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"injectables/PolylineManager.html":{}}}],["interface/map",{"_index":381,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["interface/marker",{"_index":382,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"components/NgMapsMarkerComponent.html":{}}}],["interface/padding",{"_index":383,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["interface/rectangle",{"_index":384,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"interfaces/CircleOptions.html":{},"interfaces/FitBoundsDetails.html":{},"interfaces/GeoPoint.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerIcon.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Padding.html":{},"interfaces/RectangleOptions.html":{},"interfaces/ShapeOptions.html":{},"overview.html":{}}}],["internal",{"_index":149,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["internet",{"_index":566,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["interpreted",{"_index":1142,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["invisible",{"_index":752,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["isgooglemaps",{"_index":1602,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isgooglemaps(token",{"_index":724,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"miscellaneous/functions.html":{}}}],["isheremaps",{"_index":1603,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isheremaps(token",{"_index":727,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"miscellaneous/functions.html":{}}}],["isn't",{"_index":1671,"title":{},"body":{"index.html":{}}}],["isopen",{"_index":821,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["it's",{"_index":1431,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["javascript",{"_index":962,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["k",{"_index":647,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["key",{"_index":631,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["label",{"_index":458,"title":{},"body":{"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"components/NgMapsMarkerComponent.html":{}}}],["last",{"_index":1169,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["lat",{"_index":207,"title":{},"body":{"interfaces/GeoPoint.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["later",{"_index":1678,"title":{},"body":{"index.html":{}}}],["latestfitboundsdetails",{"_index":789,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["latitude",{"_index":209,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"index.html":{}}}],["latitudes",{"_index":857,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["latlng",{"_index":148,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["latlng.lat}+${latlng.lng",{"_index":187,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["latlngbounds",{"_index":608,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{}}}],["latlngboundsliteral",{"_index":1687,"title":{},"body":{"index.html":{}}}],["latlngs",{"_index":1173,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["layer",{"_index":1699,"title":{},"body":{"index.html":{}}}],["layers",{"_index":1694,"title":{},"body":{"index.html":{}}}],["layertypes",{"_index":1719,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lazy",{"_index":1674,"title":{},"body":{"index.html":{}}}],["left",{"_index":1455,"title":{},"body":{"interfaces/Padding.html":{}}}],["legend",{"_index":922,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"overview.html":{}}}],["less",{"_index":217,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["level",{"_index":1677,"title":{},"body":{"index.html":{}}}],["library",{"_index":1657,"title":{},"body":{"index.html":{}}}],["line",{"_index":1029,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolylineManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["line._getpoints().map((point",{"_index":1489,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["lineclick",{"_index":1267,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linedblclick",{"_index":1268,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linedrag",{"_index":1269,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linedragend",{"_index":1270,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linedragstart",{"_index":1271,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemousedown",{"_index":1272,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemousemove",{"_index":1273,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemouseout",{"_index":1274,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemouseover",{"_index":1275,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemouseup",{"_index":1276,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linerightclick",{"_index":1277,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["lines",{"_index":1148,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["link",{"_index":115,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["listener",{"_index":261,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["literal",{"_index":604,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["lng",{"_index":208,"title":{},"body":{"interfaces/GeoPoint.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["load",{"_index":296,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["loadcss",{"_index":1522,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loadcss(href",{"_index":1534,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loaded",{"_index":1434,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{}}}],["loader",{"_index":146,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["loader.service.ts",{"_index":1517,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:10",{"_index":1525,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:17",{"_index":1545,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:43",{"_index":1531,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:53",{"_index":1527,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:69",{"_index":1543,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:8",{"_index":1546,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:86",{"_index":1535,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:9",{"_index":1548,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.ts",{"_index":292,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["loader.ts:11",{"_index":1437,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["loader.ts:12",{"_index":1436,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["loader.ts:20",{"_index":1442,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["loader.ts:24",{"_index":1441,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["loader.ts:5",{"_index":303,"title":{},"body":{"injectables/MapsAPILoader.html":{}}}],["loader.ts:6",{"_index":302,"title":{},"body":{"injectables/MapsAPILoader.html":{}}}],["loader.ts:7",{"_index":300,"title":{},"body":{"injectables/MapsAPILoader.html":{}}}],["loader.ts:8",{"_index":298,"title":{},"body":{"injectables/MapsAPILoader.html":{}}}],["loader/maps",{"_index":145,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"coverage.html":{}}}],["loader/noop",{"_index":1427,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["loading",{"_index":1675,"title":{},"body":{"index.html":{}}}],["loads",{"_index":1537,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loadscript",{"_index":1523,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loadscript(src",{"_index":1541,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["location",{"_index":748,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["longitude",{"_index":220,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"index.html":{}}}],["longitudes",{"_index":232,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["loop",{"_index":1160,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["lower",{"_index":855,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["m",{"_index":453,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["maintained",{"_index":1153,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["make",{"_index":127,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["manager",{"_index":622,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["manager.ts",{"_index":24,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["manager.ts:11",{"_index":95,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolylineManager.html":{}}}],["manager.ts:12",{"_index":1497,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:14",{"_index":48,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolylineManager.html":{}}}],["manager.ts:16",{"_index":1499,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:21",{"_index":55,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:25",{"_index":1510,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:26",{"_index":72,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:30",{"_index":1483,"title":{},"body":{"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:32",{"_index":85,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolylineManager.html":{}}}],["manager.ts:34",{"_index":1487,"title":{},"body":{"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:36",{"_index":1507,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:37",{"_index":65,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:39",{"_index":1485,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:40",{"_index":1505,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:41",{"_index":68,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolylineManager.html":{}}}],["manager.ts:43",{"_index":70,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:44",{"_index":1512,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:45",{"_index":77,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:47",{"_index":81,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:48",{"_index":1500,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:49",{"_index":79,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:51",{"_index":91,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:53",{"_index":89,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:55",{"_index":60,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:9",{"_index":1513,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["map",{"_index":75,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["map((includeinbounds",{"_index":166,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["map.component.html",{"_index":1020,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["map_provider",{"_index":721,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapfitbounds",{"_index":736,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"index.html":{}}}],["mapfitbounds]'},{'name",{"_index":929,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["mapoptions",{"_index":277,"title":{"interfaces/MapOptions.html":{}},"body":{"interfaces/MapOptions.html":{},"injectables/MapsApiWrapper.html":{},"coverage.html":{}}}],["maps",{"_index":105,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{},"index.html":{}}}],["maps.github.io/core/components/ngmapsviewcomponent.html|ngmapsview",{"_index":1224,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["maps/core",{"_index":1654,"title":{},"body":{"index.html":{}}}],["maps/google",{"_index":1668,"title":{},"body":{"index.html":{}}}],["mapsapiloader",{"_index":144,"title":{"injectables/MapsAPILoader.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"index.html":{}}}],["mapsapiloader:5",{"_index":1440,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["mapsapiloader:6",{"_index":1439,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["mapsapiloader:7",{"_index":1444,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["mapsapiloader:8",{"_index":1443,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["mapsapiwrapper",{"_index":44,"title":{"injectables/MapsApiWrapper.html":{}},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["maptypecontrol",{"_index":281,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["maptypeid",{"_index":1689,"title":{},"body":{"index.html":{}}}],["marker",{"_index":422,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["marker's",{"_index":972,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["marker'},{'name",{"_index":927,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["marker.animation",{"_index":477,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.clickable",{"_index":474,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.draggable",{"_index":460,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.hostmarker",{"_index":1044,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["marker.iconurl",{"_index":462,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.label",{"_index":459,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.latitude",{"_index":456,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.longitude",{"_index":457,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.manager",{"_index":276,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["marker.opacity",{"_index":464,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.optimized",{"_index":466,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.title",{"_index":472,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.visible",{"_index":468,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.zindex",{"_index":470,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["markerclick",{"_index":953,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["markerclickable",{"_index":950,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markerdraggable",{"_index":951,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markericon",{"_index":390,"title":{"interfaces/MarkerIcon.html":{}},"body":{"interfaces/MarkerIcon.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["markerid",{"_index":1027,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["markerid++).tostring",{"_index":1036,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markermanager",{"_index":248,"title":{"injectables/MarkerManager.html":{}},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["markeroptions",{"_index":344,"title":{"interfaces/MarkerOptions.html":{}},"body":{"injectables/MapsApiWrapper.html":{},"interfaces/MarkerOptions.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["markerrightclick",{"_index":954,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markers",{"_index":860,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["matching",{"_index":18,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"interfaces/RectangleOptions.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":841,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["maxwidth",{"_index":822,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["maxzoom",{"_index":1684,"title":{},"body":{"index.html":{}}}],["means",{"_index":215,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["mergemap",{"_index":139,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["metadata",{"_index":491,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["meters",{"_index":558,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["method",{"_index":1680,"title":{},"body":{"index.html":{}}}],["methods",{"_index":27,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["minzoom",{"_index":1683,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1649,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1179,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["modular",{"_index":1655,"title":{},"body":{"index.html":{}}}],["module",{"_index":700,"title":{"modules/NgMapsCoreModule.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":702,"title":{"modules.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"modules.html":{}}}],["more",{"_index":1042,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"index.html":{}}}],["mouse",{"_index":527,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mousedown",{"_index":512,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mouseevent",{"_index":1237,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["mousemove",{"_index":513,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mouseout",{"_index":514,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mouseover",{"_index":515,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mouses",{"_index":996,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["mouseup",{"_index":516,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mycomponent",{"_index":1021,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["mymapcomponent",{"_index":1213,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["name",{"_index":50,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["named",{"_index":548,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["native",{"_index":885,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["need",{"_index":792,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"index.html":{}}}],["nestedpaths",{"_index":1219,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["nesting",{"_index":1215,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["new",{"_index":94,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newcenter",{"_index":366,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["newfitboundsdetails",{"_index":753,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["next",{"_index":775,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["ng",{"_index":704,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"index.html":{}}}],["ngaftercontentinit",{"_index":948,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["ngmapscircledirective",{"_index":54,"title":{"directives/NgMapsCircleDirective.html":{}},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapscircledirective._mapoptions.indexof(k",{"_index":648,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["ngmapscoremodule",{"_index":701,"title":{"modules/NgMapsCoreModule.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"index.html":{},"modules.html":{}}}],["ngmapsfitboundsdirective",{"_index":710,"title":{"directives/NgMapsFitBoundsDirective.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapsinfowindowcomponent",{"_index":252,"title":{"components/NgMapsInfoWindowComponent.html":{}},"body":{"injectables/InfoWindowManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapsinfowindowcomponent._infowindowoptionsinputs.includes(k",{"_index":915,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["ngmapsmarker",{"_index":1103,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ngmapsmarkercomponent",{"_index":420,"title":{"components/NgMapsMarkerComponent.html":{}},"body":{"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapspolygon",{"_index":1108,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["ngmapspolygondirective",{"_index":714,"title":{"directives/NgMapsPolygonDirective.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"injectables/PolygonManager.html":{},"coverage.html":{}}}],["ngmapspolygondirective._polygonoptionsattributes.indexof(k",{"_index":1255,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["ngmapspolyline",{"_index":716,"title":{"directives/NgMapsPolyline.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["ngmapspolyline._polylineoptionsattributes.indexof(k",{"_index":1331,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["ngmapspolylinepoint",{"_index":718,"title":{"directives/NgMapsPolylinePoint.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["ngmapsrectangledirective",{"_index":719,"title":{"directives/NgMapsRectangleDirective.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["ngmapsrectangledirective._mapoptions.indexof(k",{"_index":1416,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["ngmapsview",{"_index":1110,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["ngmapsviewcomponent",{"_index":712,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmodule",{"_index":709,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["ngonchanges",{"_index":500,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ngonchanges(changes",{"_index":610,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ngondestroy",{"_index":501,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ngoninit",{"_index":502,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ngzone",{"_index":46,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["noopmapsapiloader",{"_index":1426,"title":{"classes/NoOpMapsAPILoader.html":{}},"body":{"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["north",{"_index":10,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["note",{"_index":1150,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["npm",{"_index":1660,"title":{},"body":{"index.html":{}}}],["null",{"_index":758,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{}}}],["number",{"_index":13,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"interfaces/MapOptions.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/Padding.html":{},"interfaces/ShapeOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["number(this.latitude",{"_index":1045,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["number(this.longitude",{"_index":1046,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["obj",{"_index":1258,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["obj[k",{"_index":1257,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["object.keys(changes",{"_index":1253,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["object.keys(changes).filter",{"_index":646,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["object.keys(changes).filter((k",{"_index":914,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["observable",{"_index":63,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["observeload",{"_index":1524,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["observeload(element",{"_index":1544,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["old",{"_index":782,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["once",{"_index":1540,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["onchanges",{"_index":489,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ondestroy",{"_index":490,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["one",{"_index":783,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["oninit",{"_index":488,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["opacity",{"_index":463,"title":{},"body":{"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["open",{"_index":243,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["open(event",{"_index":874,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["open(infowindow",{"_index":264,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["openinfowindow",{"_index":952,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["opens",{"_index":831,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["optimize",{"_index":977,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["optimized",{"_index":465,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["option",{"_index":287,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["optional",{"_index":51,"title":{},"body":{"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"miscellaneous/functions.html":{}}}],["optionkeys",{"_index":645,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["optionkeys.foreach((k",{"_index":650,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["optionkeys.length",{"_index":653,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["options",{"_index":83,"title":{},"body":{"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"interfaces/RectangleOptions.html":{},"index.html":{}}}],["options.ts",{"_index":117,"title":{},"body":{"interfaces/CircleOptions.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{}}}],["options.ts:8",{"_index":288,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["options[k",{"_index":651,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["order",{"_index":851,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ordered",{"_index":1156,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["os",{"_index":1248,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["ouside",{"_index":838,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["out",{"_index":1706,"title":{},"body":{"index.html":{},"overview.html":{}}}],["output",{"_index":619,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["outputs",{"_index":505,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{}}}],["outside",{"_index":221,"title":{},"body":{"interfaces/GeoPoint.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["over",{"_index":533,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["overlap",{"_index":1218,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["overview",{"_index":1711,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1643,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":357,"title":{"interfaces/Padding.html":{}},"body":{"injectables/MapsApiWrapper.html":{},"interfaces/Padding.html":{},"coverage.html":{}}}],["page",{"_index":1428,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"index.html":{}}}],["pan",{"_index":829,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["panto",{"_index":321,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["panto(newcenter",{"_index":364,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["pantobounds",{"_index":322,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["pantobounds(bounds",{"_index":367,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["param",{"_index":110,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/ScriptLoaderService.html":{}}}],["parameters",{"_index":49,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":395,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsPolygonDirective.html":{},"injectables/PolygonManager.html":{}}}],["paths",{"_index":1116,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"injectables/PolygonManager.html":{}}}],["peer",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":767,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["pixels",{"_index":627,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["play",{"_index":1014,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["point",{"_index":104,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["point'},{'name",{"_index":933,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["point.latitude",{"_index":1490,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["point.longitude",{"_index":1491,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["point.positionchanged.subscribe",{"_index":1324,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["point.ts",{"_index":206,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsPolylinePoint.html":{},"coverage.html":{}}}],["point.ts:21",{"_index":1353,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:26",{"_index":1354,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:32",{"_index":1352,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:36",{"_index":1355,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["pointerdown",{"_index":1074,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["pointerenter",{"_index":1097,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["pointerleave",{"_index":1100,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["points",{"_index":538,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["polyclick",{"_index":1118,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polydblclick",{"_index":1119,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polydrag",{"_index":1120,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polydragend",{"_index":1121,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polydraggable",{"_index":1117,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polydragstart",{"_index":1122,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polygon",{"_index":1109,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"injectables/PolygonManager.html":{}}}],["polygon'},{'name",{"_index":930,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["polygonmanager",{"_index":1130,"title":{"injectables/PolygonManager.html":{}},"body":{"directives/NgMapsPolygonDirective.html":{},"injectables/PolygonManager.html":{},"coverage.html":{}}}],["polygons",{"_index":1171,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polyline",{"_index":932,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["polyline'},{'name",{"_index":931,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["polylinedraggable",{"_index":1266,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["polylineid",{"_index":1319,"title":{},"body":{"directives/NgMapsPolyline.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["polylineid++).tostring",{"_index":1320,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["polylinemanager",{"_index":1279,"title":{"injectables/PolylineManager.html":{}},"body":{"directives/NgMapsPolyline.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["polylines",{"_index":1162,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polymousedown",{"_index":1123,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polymousemove",{"_index":1124,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polymouseout",{"_index":1125,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polymouseover",{"_index":1126,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polymouseup",{"_index":1127,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polyrightclick",{"_index":1128,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polys",{"_index":573,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["position",{"_index":346,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["positionchanged",{"_index":1351,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["possible",{"_index":750,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["prevent",{"_index":979,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["private",{"_index":493,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["proccede",{"_index":1561,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["production",{"_index":1673,"title":{},"body":{"index.html":{}}}],["project",{"_index":1707,"title":{},"body":{"index.html":{}}}],["promise",{"_index":66,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["promise((resolve",{"_index":387,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"injectables/ScriptLoaderService.html":{}}}],["promise.resolve",{"_index":1452,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{}}}],["property",{"_index":565,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["propname",{"_index":644,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["protected",{"_index":25,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["provide",{"_index":940,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["provided",{"_index":1703,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":1549,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["provider",{"_index":723,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":939,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"overview.html":{}}}],["public",{"_index":28,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["querylist",{"_index":1015,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{}}}],["radius",{"_index":120,"title":{},"body":{"interfaces/CircleOptions.html":{},"directives/NgMapsCircleDirective.html":{}}}],["radius_changed",{"_index":687,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["radiuschange",{"_index":517,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["range",{"_index":213,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["rc",{"_index":1080,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["readme",{"_index":936,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["readonly",{"_index":155,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ready",{"_index":1672,"title":{},"body":{"index.html":{}}}],["readystate",{"_index":1557,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["rectangle",{"_index":934,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{}}}],["rectangle's",{"_index":1384,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["rectangleclick",{"_index":1364,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["rectangledblclick",{"_index":1365,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["rectangledraggable",{"_index":1362,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["rectanglemanager",{"_index":1366,"title":{"injectables/RectangleManager.html":{}},"body":{"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["rectangleoptions",{"_index":352,"title":{"interfaces/RectangleOptions.html":{}},"body":{"injectables/MapsApiWrapper.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/RectangleOptions.html":{},"coverage.html":{}}}],["reduce((obj",{"_index":1256,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["reflects",{"_index":230,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["regardless",{"_index":842,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["registered",{"_index":1106,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["reject",{"_index":1554,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["reject(event",{"_index":1565,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["relative",{"_index":1154,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["remove",{"_index":781,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["removecircle",{"_index":35,"title":{},"body":{"injectables/CircleManager.html":{}}}],["removecircle(circle",{"_index":71,"title":{},"body":{"injectables/CircleManager.html":{}}}],["removefrombounds",{"_index":180,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["removefrombounds(latlng",{"_index":200,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["removerectangle",{"_index":1495,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["removerectangle(rectangle",{"_index":1502,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["removes",{"_index":73,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["removing",{"_index":1176,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["rename",{"_index":1032,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["rendered",{"_index":1146,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["rendering",{"_index":981,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["renders",{"_index":800,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["repeat",{"_index":1166,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["repeatedly",{"_index":586,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["replaysubject",{"_index":1007,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["represents",{"_index":1350,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["required",{"_index":554,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["reset",{"_index":1713,"title":{},"body":{"overview.html":{}}}],["resolve",{"_index":389,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["resolve(event",{"_index":1563,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["resolved",{"_index":1539,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["responsible",{"_index":152,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["result",{"_index":17,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"interfaces/RectangleOptions.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":19,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"interfaces/RectangleOptions.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":176,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolylineManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["returns",{"_index":57,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["right",{"_index":600,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/Padding.html":{}}}],["rightclick",{"_index":518,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["rightclicks",{"_index":994,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["roadmap",{"_index":1690,"title":{},"body":{"index.html":{}}}],["root",{"_index":1550,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["rotation",{"_index":396,"title":{},"body":{"interfaces/MarkerIcon.html":{}}}],["rxjs",{"_index":98,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["rxjs/operators",{"_index":143,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["s",{"_index":1328,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["sample",{"_index":140,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["satellite",{"_index":1692,"title":{},"body":{"index.html":{}}}],["scale",{"_index":397,"title":{},"body":{"interfaces/MarkerIcon.html":{}}}],["scalecontrol",{"_index":282,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["screen",{"_index":986,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["script",{"_index":1433,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{}}}],["script.async",{"_index":1575,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["script.defer",{"_index":1576,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["script.src",{"_index":1572,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["script.type",{"_index":1573,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptloaderservice",{"_index":1515,"title":{"injectables/ScriptLoaderService.html":{}},"body":{"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["scrollwheel",{"_index":283,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["see",{"_index":1034,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["segment",{"_index":1137,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["selector",{"_index":492,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["self",{"_index":760,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["sequence",{"_index":1157,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["service",{"_index":1679,"title":{},"body":{"index.html":{}}}],["services/fit",{"_index":764,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{}}}],["services/managers/circle",{"_index":621,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["services/managers/info",{"_index":892,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["services/managers/marker.manager",{"_index":1026,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["services/managers/polygon.manager",{"_index":1222,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["services/managers/polyline",{"_index":1318,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["services/managers/rectangle",{"_index":1406,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["set",{"_index":218,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["setbounds",{"_index":1496,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setbounds(rectangle",{"_index":1503,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setcenter",{"_index":36,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/MapsApiWrapper.html":{}}}],["setcenter(circle",{"_index":76,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setcenter(newcenter",{"_index":369,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["setdraggable",{"_index":37,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["setdraggable(circle",{"_index":78,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setdraggable(rectangle",{"_index":1504,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["seteditable",{"_index":38,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["seteditable(circle",{"_index":80,"title":{},"body":{"injectables/CircleManager.html":{}}}],["seteditable(rectangle",{"_index":1506,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setmapoptions",{"_index":323,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["setmapoptions(options",{"_index":371,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["setoptions",{"_index":39,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/RectangleManager.html":{}}}],["setoptions(circle",{"_index":82,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setoptions(infowindow",{"_index":267,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setoptions(rectangle",{"_index":1508,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setpolygonoptions",{"_index":1461,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["setpolygonoptions(path",{"_index":1469,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["setpolylineoptions",{"_index":1479,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["setpolylineoptions(line",{"_index":1486,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["setposition",{"_index":244,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setposition(infowindow",{"_index":270,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setradius",{"_index":40,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setradius(circle",{"_index":88,"title":{},"body":{"injectables/CircleManager.html":{}}}],["sets",{"_index":833,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["setvisible",{"_index":41,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["setvisible(circle",{"_index":90,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setvisible(rectangle",{"_index":1511,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setzindex",{"_index":245,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setzindex(infowindow",{"_index":272,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setzoom",{"_index":324,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["setzoom(zoom",{"_index":373,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["shakable",{"_index":1656,"title":{},"body":{"index.html":{}}}],["shape",{"_index":121,"title":{},"body":{"interfaces/CircleOptions.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"interfaces/RectangleOptions.html":{}}}],["shapeoptions",{"_index":119,"title":{"interfaces/ShapeOptions.html":{}},"body":{"interfaces/CircleOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{}}}],["sharereplay",{"_index":141,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["sharereplay(1",{"_index":168,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["shown",{"_index":539,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["simple",{"_index":1170,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"index.html":{}}}],["simplechange",{"_index":620,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["simplechanges",{"_index":754,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["single",{"_index":154,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"interfaces/RectangleOptions.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{}}}],["south",{"_index":11,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["space",{"_index":1149,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["specified",{"_index":216,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["specify",{"_index":1164,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src",{"_index":1532,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["src/.../core.module.ts",{"_index":1651,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../fit",{"_index":1718,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../info",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../layers.ts",{"_index":1720,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../marker.ts",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../polyline.ts",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/core.module.ts",{"_index":703,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/directives/circle.ts",{"_index":486,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"coverage.html":{}}}],["src/lib/directives/circle.ts:102",{"_index":570,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:107",{"_index":571,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:113",{"_index":575,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:119",{"_index":579,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:125",{"_index":584,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:131",{"_index":585,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:137",{"_index":588,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:143",{"_index":590,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:149",{"_index":592,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:155",{"_index":594,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:161",{"_index":595,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:167",{"_index":596,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:173",{"_index":597,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:179",{"_index":598,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:185",{"_index":599,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:187",{"_index":614,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:189",{"_index":617,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:192",{"_index":613,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:199",{"_index":611,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:21",{"_index":520,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:221",{"_index":605,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:236",{"_index":602,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:24",{"_index":616,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:282",{"_index":612,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:290",{"_index":607,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:294",{"_index":609,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:38",{"_index":553,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:43",{"_index":555,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:48",{"_index":523,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:53",{"_index":531,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:59",{"_index":534,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:64",{"_index":541,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:69",{"_index":549,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:74",{"_index":557,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:79",{"_index":561,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:84",{"_index":563,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:97",{"_index":564,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/fit",{"_index":732,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"coverage.html":{}}}],["src/lib/directives/info",{"_index":798,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/directives/map.ts",{"_index":1611,"title":{},"body":{"coverage.html":{}}}],["src/lib/directives/marker.ts",{"_index":937,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/directives/marker.ts:102",{"_index":959,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:104",{"_index":957,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:109",{"_index":983,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:114",{"_index":973,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:119",{"_index":971,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:125",{"_index":976,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:133",{"_index":984,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:139",{"_index":968,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:145",{"_index":1013,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:151",{"_index":992,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:157",{"_index":993,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:163",{"_index":991,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:169",{"_index":989,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:175",{"_index":990,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:181",{"_index":997,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:187",{"_index":995,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:193",{"_index":1017,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:195",{"_index":1010,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:196",{"_index":1009,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:197",{"_index":1018,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:199",{"_index":1008,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:201",{"_index":956,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:210",{"_index":1003,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:215",{"_index":1001,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:227",{"_index":1004,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:287",{"_index":1000,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:291",{"_index":999,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:297",{"_index":998,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:360",{"_index":1002,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:365",{"_index":1006,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:370",{"_index":1005,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:74",{"_index":966,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:79",{"_index":967,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:84",{"_index":982,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:89",{"_index":963,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:95",{"_index":969,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/polygon.ts",{"_index":1107,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"coverage.html":{}}}],["src/lib/directives/polygon.ts:104",{"_index":1181,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:109",{"_index":1182,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:114",{"_index":1183,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:119",{"_index":1184,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:125",{"_index":1185,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:131",{"_index":1187,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:137",{"_index":1189,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:143",{"_index":1190,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:149",{"_index":1191,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:155",{"_index":1192,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:161",{"_index":1193,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:167",{"_index":1194,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:173",{"_index":1195,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:179",{"_index":1196,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:185",{"_index":1198,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:187",{"_index":1209,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:188",{"_index":1210,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:189",{"_index":1212,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:192",{"_index":1206,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:198",{"_index":1207,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:210",{"_index":1201,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:216",{"_index":1200,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:22",{"_index":1131,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:25",{"_index":1211,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:272",{"_index":1203,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:287",{"_index":1205,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:292",{"_index":1208,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:47",{"_index":1133,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:54",{"_index":1177,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:60",{"_index":1134,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:66",{"_index":1138,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:71",{"_index":1139,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:80",{"_index":1140,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:93",{"_index":1155,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:99",{"_index":1180,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polyline",{"_index":1349,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{},"coverage.html":{}}}],["src/lib/directives/polyline.ts",{"_index":1261,"title":{},"body":{"directives/NgMapsPolyline.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/directives/polyline.ts:101",{"_index":1293,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:107",{"_index":1294,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:113",{"_index":1295,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:119",{"_index":1296,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:125",{"_index":1297,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:131",{"_index":1298,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:137",{"_index":1299,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:143",{"_index":1300,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:149",{"_index":1301,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:155",{"_index":1302,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:161",{"_index":1303,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:167",{"_index":1315,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:169",{"_index":1311,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:170",{"_index":1312,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:171",{"_index":1316,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:174",{"_index":1308,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:193",{"_index":1309,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:207",{"_index":1306,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:213",{"_index":1304,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:25",{"_index":1280,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:270",{"_index":1305,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:279",{"_index":1307,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:284",{"_index":1310,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:30",{"_index":1313,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:44",{"_index":1282,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:51",{"_index":1287,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:57",{"_index":1283,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:65",{"_index":1284,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:70",{"_index":1288,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:75",{"_index":1289,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:80",{"_index":1290,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:85",{"_index":1285,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:90",{"_index":1291,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:95",{"_index":1292,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/rectangle.ts",{"_index":1359,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{},"coverage.html":{}}}],["src/lib/directives/rectangle.ts:100",{"_index":1379,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:105",{"_index":1380,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:110",{"_index":1382,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:116",{"_index":1383,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:122",{"_index":1393,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:128",{"_index":1394,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:134",{"_index":1385,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:140",{"_index":1386,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:146",{"_index":1387,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:152",{"_index":1388,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:158",{"_index":1389,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:164",{"_index":1390,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:170",{"_index":1391,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:176",{"_index":1392,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:182",{"_index":1395,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:184",{"_index":1404,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:186",{"_index":1405,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:189",{"_index":1402,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:196",{"_index":1400,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:20",{"_index":1367,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:215",{"_index":1398,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:23",{"_index":1403,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:230",{"_index":1396,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:268",{"_index":1401,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:276",{"_index":1399,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:37",{"_index":1373,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:42",{"_index":1369,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:47",{"_index":1375,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:52",{"_index":1381,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:57",{"_index":1368,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:63",{"_index":1374,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:69",{"_index":1370,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:74",{"_index":1371,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:79",{"_index":1372,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:84",{"_index":1376,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:89",{"_index":1377,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:95",{"_index":1378,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/interface/bounds.ts",{"_index":6,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"coverage.html":{}}}],["src/lib/interface/circle",{"_index":116,"title":{},"body":{"interfaces/CircleOptions.html":{},"coverage.html":{}}}],["src/lib/interface/geo",{"_index":205,"title":{},"body":{"interfaces/GeoPoint.html":{},"coverage.html":{}}}],["src/lib/interface/layers.ts",{"_index":1721,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/interface/map",{"_index":278,"title":{},"body":{"interfaces/MapOptions.html":{},"coverage.html":{}}}],["src/lib/interface/marker",{"_index":391,"title":{},"body":{"interfaces/MarkerIcon.html":{},"interfaces/MarkerOptions.html":{},"coverage.html":{}}}],["src/lib/interface/padding.ts",{"_index":1453,"title":{},"body":{"interfaces/Padding.html":{},"coverage.html":{}}}],["src/lib/interface/rectangle",{"_index":1514,"title":{},"body":{"interfaces/RectangleOptions.html":{},"coverage.html":{}}}],["src/lib/interface/shape",{"_index":1596,"title":{},"body":{"interfaces/ShapeOptions.html":{},"coverage.html":{}}}],["src/lib/services/fit",{"_index":124,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/services/managers/circle",{"_index":23,"title":{},"body":{"injectables/CircleManager.html":{},"coverage.html":{}}}],["src/lib/services/managers/info",{"_index":237,"title":{},"body":{"injectables/InfoWindowManager.html":{},"coverage.html":{}}}],["src/lib/services/managers/marker.manager.ts",{"_index":402,"title":{},"body":{"injectables/MarkerManager.html":{},"coverage.html":{}}}],["src/lib/services/managers/marker.manager.ts:11",{"_index":418,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:18",{"_index":426,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:20",{"_index":442,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:22",{"_index":446,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:24",{"_index":440,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:26",{"_index":434,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:28",{"_index":438,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:29",{"_index":436,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:31",{"_index":444,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:33",{"_index":448,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:35",{"_index":450,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:37",{"_index":432,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:39",{"_index":430,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:41",{"_index":421,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:63",{"_index":428,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:67",{"_index":424,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:8",{"_index":451,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts",{"_index":1457,"title":{},"body":{"injectables/PolygonManager.html":{},"coverage.html":{}}}],["src/lib/services/managers/polygon.manager.ts:11",{"_index":1463,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:18",{"_index":1465,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:20",{"_index":1472,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:22",{"_index":1470,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:27",{"_index":1468,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:29",{"_index":1466,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:8",{"_index":1473,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polyline",{"_index":1474,"title":{},"body":{"injectables/PolylineManager.html":{},"coverage.html":{}}}],["src/lib/services/managers/rectangle",{"_index":1492,"title":{},"body":{"injectables/RectangleManager.html":{},"coverage.html":{}}}],["src/lib/services/maps",{"_index":291,"title":{},"body":{"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["src/lib/services/script",{"_index":1516,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["standalone",{"_index":802,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["started",{"_index":1653,"title":{"index.html":{}},"body":{}}],["starts",{"_index":591,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["state",{"_index":751,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["statements",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":495,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["status",{"_index":749,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["still",{"_index":791,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["stops",{"_index":589,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["straight",{"_index":1147,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["string",{"_index":59,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"index.html":{}}}],["stroke",{"_index":562,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["strokecolor",{"_index":398,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["strokeopacity",{"_index":399,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["strokeposition",{"_index":615,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["strokeweight",{"_index":400,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["style",{"_index":1577,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["style.href",{"_index":1583,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["style.rel",{"_index":1579,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["style.type",{"_index":1581,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["styles",{"_index":805,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["stylesheet",{"_index":1580,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["subject",{"_index":761,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["submodules",{"_index":1704,"title":{},"body":{"index.html":{}}}],["subscribe",{"_index":774,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["subscribe((e",{"_index":1086,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["subscribe((value",{"_index":684,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["subscribe(obj.handler",{"_index":1251,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["subscribetomapevent",{"_index":325,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["subscribetomapevent(eventname",{"_index":375,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["subscription",{"_index":497,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["subscriptions",{"_index":1260,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["successhandler",{"_index":1567,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["successhandler(event",{"_index":1555,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["super",{"_index":1448,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["supported",{"_index":482,"title":{},"body":{"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["surface",{"_index":560,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["switch",{"_index":685,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["switchmap",{"_index":142,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["t",{"_index":385,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{}}}],["table",{"_index":1642,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1641,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1430,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["takeuntil",{"_index":763,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["template",{"_index":809,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"index.html":{}}}],["templateurl",{"_index":1019,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["terrain",{"_index":1693,"title":{},"body":{"index.html":{}}}],["text/css",{"_index":1582,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["text/javascript",{"_index":1574,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["then((bounds",{"_index":1423,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["then((radius",{"_index":689,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._addeventlisteners",{"_index":1050,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["this._api",{"_index":386,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["this._boundschangesampletime$.next(timems",{"_index":185,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._boundschangesampletime$.pipe(switchmap((time",{"_index":163,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._circleaddedtomanager",{"_index":629,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._createidentifier(latlng",{"_index":174,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._document",{"_index":1449,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["this._document.defaultview",{"_index":1451,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["this._fitboundsaccessor",{"_index":766,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._fitboundsdetails$.asobservable",{"_index":1069,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._fitboundsdetails$.next",{"_index":1070,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._fitboundsservice.addtobounds(this._latestfitboundsdetails.latlng",{"_index":795,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._fitboundsservice.removefrombounds",{"_index":786,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._id",{"_index":919,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["this._id.tostring",{"_index":920,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._includeinbounds",{"_index":162,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.next(bounds",{"_index":179,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.value",{"_index":177,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.value.has(id",{"_index":175,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._infowindowaddedtomanager",{"_index":899,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager",{"_index":908,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.addinfowindow(this).then",{"_index":898,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.close(this",{"_index":918,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.deleteinfowindow(this",{"_index":921,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.open(this",{"_index":917,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setoptions(this",{"_index":916,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setposition(this",{"_index":903,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setzindex(this",{"_index":905,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._init",{"_index":1227,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["this._latestfitboundsdetails",{"_index":785,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._latestfitboundsdetails.latlng",{"_index":787,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._manager",{"_index":683,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.addcircle(this",{"_index":628,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.addrectangle(this",{"_index":1408,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.getbounds(this",{"_index":698,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.getcenter(this",{"_index":699,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.getcenter(this).then((center",{"_index":693,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.removecircle(this",{"_index":697,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.removerectangle(this",{"_index":1425,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.setbounds(this",{"_index":1414,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.setcenter(this",{"_index":634,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.setdraggable(this",{"_index":638,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.seteditable(this",{"_index":636,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.setoptions(this",{"_index":654,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.setradius(this",{"_index":642,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.setvisible(this",{"_index":640,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._mapresolver",{"_index":388,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["this._mapswrapper.createmarker",{"_index":455,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._markeraddedtomanger",{"_index":1047,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._markers.get(marker",{"_index":480,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._markers.set(marker",{"_index":479,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._polygonaddedtomanager",{"_index":1226,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._polygonmanager",{"_index":1249,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._polygonmanager.addpolygon(this",{"_index":1230,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._polygonmanager.deletepolygon(this",{"_index":1259,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._polygonmanager.setpolygonoptions",{"_index":1228,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._polylineaddedtomanager",{"_index":1327,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager",{"_index":1345,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager.addpolyline(this",{"_index":1333,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager.deletepolyline(this",{"_index":1348,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager.setpolylineoptions(this",{"_index":1332,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager.updatepolylinepoints(this",{"_index":1325,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._rectangleaddedtomanager",{"_index":1409,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this._registereventlisteners",{"_index":630,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._setinfowindowoptions(changes",{"_index":907,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._updatebounds",{"_index":765,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._updatebounds(details",{"_index":777,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._updatecircleoptionschanges(changes",{"_index":643,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._updatefitboundsdetails",{"_index":1049,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._updateopenstate",{"_index":900,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._updatepolygonoptions(changes",{"_index":1229,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._updaterectangleoptionschanges(changes",{"_index":1415,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this._window",{"_index":1450,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["this.alreadyloaded.get(href",{"_index":1591,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.alreadyloaded.get(src",{"_index":1585,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.alreadyloaded.has(href",{"_index":1590,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.alreadyloaded.has(src",{"_index":1584,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.alreadyloaded.set(href",{"_index":1595,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.alreadyloaded.set(src",{"_index":1589,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.bounds",{"_index":160,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this.boundschange",{"_index":1418,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this.centerchange",{"_index":656,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this.circleclick",{"_index":658,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this.circledblclick",{"_index":660,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this.close",{"_index":913,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.createcsselement(href",{"_index":1592,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.createscriptelement(src",{"_index":1586,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.document",{"_index":1551,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.document.head",{"_index":1553,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.drag",{"_index":662,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.drag.emit(e",{"_index":1092,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.dragend",{"_index":664,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.dragend.emit(e",{"_index":1095,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.dragstart",{"_index":666,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.dragstart.emit(e",{"_index":1088,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.generatebounds(includeinbounds",{"_index":167,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this.handleinfowindowupdate",{"_index":1037,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.head",{"_index":1552,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.head.appendchild(script",{"_index":1588,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.head.appendchild(style",{"_index":1594,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.infowindow.changes.subscribe",{"_index":1038,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.foreach((infowindow",{"_index":1076,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.foreach((marker",{"_index":1043,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.length",{"_index":1039,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindowclose.emit",{"_index":911,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.isopen",{"_index":910,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.latitude",{"_index":901,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["this.lineclick.emit(ev",{"_index":1334,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linedblclick.emit(ev",{"_index":1335,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linedrag.emit(ev",{"_index":1336,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linedragend.emit(ev",{"_index":1337,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linedragstart.emit(ev",{"_index":1338,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemousedown.emit(ev",{"_index":1339,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemousemove.emit(ev",{"_index":1340,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemouseout.emit(ev",{"_index":1341,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemouseover.emit(ev",{"_index":1342,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemouseup.emit(ev",{"_index":1343,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linerightclick.emit(ev",{"_index":1344,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.longitude",{"_index":902,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["this.mapfitbounds",{"_index":794,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this.markerclick.emit(this",{"_index":1078,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager",{"_index":1072,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.addmarker(this).then",{"_index":1048,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.deletemarker(this",{"_index":1104,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateanimation(this",{"_index":1068,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateclickable(this",{"_index":1066,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatedraggable(this",{"_index":1056,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateicon(this",{"_index":1060,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateiconlegacy(this",{"_index":1058,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatelabel(this",{"_index":1055,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatemarkerposition(this",{"_index":1051,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateopacity(this",{"_index":1062,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatetitle(this",{"_index":1053,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatevisible(this",{"_index":1063,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatezindex(this",{"_index":1064,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markerrightclick.emit(null",{"_index":1082,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.mousedown",{"_index":668,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.mousemove",{"_index":670,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.mouseout",{"_index":672,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.mouseout.emit(e",{"_index":1101,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.mouseover",{"_index":674,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.mouseover.emit(e",{"_index":1098,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.mouseup",{"_index":676,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.observeload(script",{"_index":1587,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.observeload(style",{"_index":1593,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.open",{"_index":912,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.openinfowindow",{"_index":1075,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.points",{"_index":1346,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.points.changes.subscribe",{"_index":1329,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.points.foreach((point",{"_index":1323,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.points.length",{"_index":1322,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.points.toarray",{"_index":1347,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.polyclick.emit(ev",{"_index":1235,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polydblclick.emit(ev",{"_index":1236,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polydrag.emit(ev",{"_index":1238,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polydragend.emit(ev",{"_index":1239,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polydragstart.emit(ev",{"_index":1240,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polymousedown.emit(ev",{"_index":1241,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polymousemove.emit(ev",{"_index":1242,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polymouseout.emit(ev",{"_index":1243,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polymouseover.emit(ev",{"_index":1244,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polymouseup.emit(ev",{"_index":1245,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polyrightclick.emit(ev",{"_index":1246,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.positionchanged.emit(position",{"_index":1358,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["this.radiuschange",{"_index":678,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this.rectangleclick",{"_index":1419,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this.rectangledblclick",{"_index":1420,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this.rightclick",{"_index":680,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.subscription.add",{"_index":682,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.subscription.add(cs",{"_index":1079,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(d",{"_index":1093,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(dragend",{"_index":1096,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(ds",{"_index":1089,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(mouseout",{"_index":1102,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(mouseover",{"_index":1099,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(os",{"_index":1252,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["this.subscription.add(rc",{"_index":1083,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(s",{"_index":1330,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.subscription.add(subscription",{"_index":1326,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.subscription.unsubscribe",{"_index":696,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["throw",{"_index":1040,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["time",{"_index":165,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"index.html":{}}}],["timems",{"_index":196,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["timer",{"_index":137,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["timer(0",{"_index":164,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["title",{"_index":471,"title":{},"body":{"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"components/NgMapsMarkerComponent.html":{}}}],["todo",{"_index":111,"title":{},"body":{"injectables/CircleManager.html":{},"interfaces/MapOptions.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["toggle",{"_index":790,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["token",{"_index":725,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"miscellaneous/functions.html":{}}}],["top",{"_index":1456,"title":{},"body":{"interfaces/Padding.html":{}}}],["tostring",{"_index":819,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["trafficlayer",{"_index":1695,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["transitlayer",{"_index":1696,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["tree",{"_index":797,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["triggermapevent",{"_index":326,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["triggermapevent(eventname",{"_index":377,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["true",{"_index":522,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["tslib",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1716,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":476,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["types/googlemaps",{"_index":1665,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":803,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["typically",{"_index":1685,"title":{},"body":{"index.html":{}}}],["typings",{"_index":897,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"index.html":{}}}],["uievent",{"_index":1556,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["unlike",{"_index":1161,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["unsubscribe",{"_index":1105,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["up",{"_index":988,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["update",{"_index":847,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["updateanimation",{"_index":407,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateanimation(marker",{"_index":429,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateclickable",{"_index":408,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateclickable(marker",{"_index":431,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatedraggable",{"_index":409,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatedraggable(marker",{"_index":433,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateicon",{"_index":410,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateicon(marker",{"_index":435,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateiconlegacy",{"_index":411,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateiconlegacy(marker",{"_index":437,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatelabel",{"_index":412,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatelabel(marker",{"_index":439,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatemarkerposition",{"_index":413,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatemarkerposition(marker",{"_index":441,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateopacity",{"_index":414,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateopacity(marker",{"_index":443,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatepolygon",{"_index":1462,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["updatepolygon(polygon",{"_index":1471,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["updatepolylinepoints",{"_index":1480,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["updatepolylinepoints(line",{"_index":1488,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["updatetitle",{"_index":415,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatetitle(marker",{"_index":445,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatevisible",{"_index":416,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatevisible(marker",{"_index":447,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatezindex",{"_index":417,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatezindex(marker",{"_index":449,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["uppercase",{"_index":964,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["url",{"_index":401,"title":{},"body":{"interfaces/MarkerIcon.html":{},"components/NgMapsMarkerComponent.html":{},"injectables/ScriptLoaderService.html":{}}}],["usage",{"_index":1682,"title":{},"body":{"index.html":{}}}],["use",{"_index":837,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["used",{"_index":886,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["useexisting",{"_index":941,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["usefull",{"_index":836,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["user",{"_index":532,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["using",{"_index":1172,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["valid",{"_index":1681,"title":{},"body":{"index.html":{}}}],["value",{"_index":93,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":211,"title":{},"body":{"interfaces/GeoPoint.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["var",{"_index":924,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["variable",{"_index":1604,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1722,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vertex",{"_index":1168,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["vertical",{"_index":985,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["vertices",{"_index":1135,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["via",{"_index":1429,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["view",{"_index":806,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"index.html":{}}}],["viewchild",{"_index":891,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["viewchild('content",{"_index":882,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["visibility",{"_index":779,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["visible",{"_index":467,"title":{},"body":{"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["void",{"_index":194,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/RectangleManager.html":{}}}],["west",{"_index":12,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["whe",{"_index":1197,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["whether",{"_index":525,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["width",{"_index":626,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["window",{"_index":275,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["window'},{'name",{"_index":926,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["window.manager",{"_index":893,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.manager.ts",{"_index":238,"title":{},"body":{"injectables/InfoWindowManager.html":{},"coverage.html":{}}}],["window.manager.ts:17",{"_index":263,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:21",{"_index":271,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:23",{"_index":273,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:25",{"_index":265,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:30",{"_index":256,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:32",{"_index":269,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:37",{"_index":253,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:44",{"_index":257,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:9",{"_index":249,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.ts",{"_index":799,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["window.ts:101",{"_index":888,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:107",{"_index":883,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:112",{"_index":832,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:118",{"_index":861,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:119",{"_index":879,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:120",{"_index":878,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:122",{"_index":873,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:131",{"_index":871,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:151",{"_index":864,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:160",{"_index":867,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:164",{"_index":866,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:178",{"_index":875,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:185",{"_index":868,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:191",{"_index":870,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:196",{"_index":876,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:201",{"_index":872,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:54",{"_index":825,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:58",{"_index":887,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:61",{"_index":880,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:69",{"_index":835,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:75",{"_index":839,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:81",{"_index":827,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:89",{"_index":848,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:96",{"_index":840,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["within",{"_index":225,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["work",{"_index":128,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["wrap",{"_index":233,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["wrapped",{"_index":223,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["wrapper",{"_index":107,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["wrapper.ts",{"_index":304,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"coverage.html":{}}}],["wrapper.ts:14",{"_index":379,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:15",{"_index":328,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:23",{"_index":341,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:29",{"_index":372,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:31",{"_index":345,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:37",{"_index":330,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:39",{"_index":362,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:43",{"_index":378,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:45",{"_index":360,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:47",{"_index":370,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:49",{"_index":365,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:51",{"_index":368,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:56",{"_index":358,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:61",{"_index":359,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:63",{"_index":363,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:65",{"_index":374,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:67",{"_index":361,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:69",{"_index":376,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:71",{"_index":338,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:73",{"_index":336,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:75",{"_index":332,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:80",{"_index":353,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:85",{"_index":350,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:87",{"_index":348,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["x",{"_index":768,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["x.latlng.lat",{"_index":770,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["x.latlng.lng",{"_index":772,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["y",{"_index":769,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["y.latlng.lat",{"_index":771,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["y.latlng.lng",{"_index":773,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["yarn",{"_index":1662,"title":{},"body":{"index.html":{}}}],["yes",{"_index":266,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"injectables/ScriptLoaderService.html":{}}}],["zindex",{"_index":469,"title":{},"body":{"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["zoom",{"_index":284,"title":{},"body":{"interfaces/MapOptions.html":{},"injectables/MapsApiWrapper.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"index.html":{},"overview.html":{}}}],["zoomcontrol",{"_index":285,"title":{},"body":{"interfaces/MapOptions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/BoundsLiteral.html":{"url":"interfaces/BoundsLiteral.html","title":"interface - BoundsLiteral","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BoundsLiteral\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/bounds.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        east\n                                \n                                \n                                        north\n                                \n                                \n                                        south\n                                \n                                \n                                        west\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        east\n                                    \n                                \n                                \n                                    \n                                        east:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        north\n                                    \n                                \n                                \n                                    \n                                        north:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        south\n                                    \n                                \n                                \n                                    \n                                        south:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        west\n                                    \n                                \n                                \n                                    \n                                        west:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BoundsLiteral {\n  east: number;\n  north: number;\n  south: number;\n  west: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CircleManager.html":{"url":"injectables/CircleManager.html","title":"injectable - CircleManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CircleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/circle-manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _circles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                addCircle\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                getBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                getCenter\n                            \n                            \n                                    Public\n                                    Abstract\n                                getRadius\n                            \n                            \n                                    Public\n                                    Abstract\n                                removeCircle\n                            \n                            \n                                    Public\n                                    Abstract\n                                setCenter\n                            \n                            \n                                    Public\n                                    Abstract\n                                setDraggable\n                            \n                            \n                                    Public\n                                    Abstract\n                                setEditable\n                            \n                            \n                                    Public\n                                    Abstract\n                                setOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                setRadius\n                            \n                            \n                                    Public\n                                    Abstract\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_apiWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/circle-manager.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _apiWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            addCircle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:55\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getRadius\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            removeCircle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:26\n                \n            \n\n\n            \n                \n                    Removes the given circle from the map.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setCenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setDraggable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setEditable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(circle: NgMapsCircleDirective, options: CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of {\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        options for the circle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setRadius\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setVisible\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _circles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map>\n\n                        \n                    \n                    \n                        \n                            Default value : new Map\n  >()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/managers/circle-manager.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { NgMapsCircleDirective } from '../../directives/circle';\nimport { BoundsLiteral } from '../../interface/bounds';\nimport { CircleOptions } from '../../interface/circle-options';\nimport { GeoPoint } from '../../interface/geo-point';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\n\n@Injectable()\nexport abstract class CircleManager {\n  protected _circles: Map> = new Map\n  >();\n\n  constructor(protected _apiWrapper: MapsApiWrapper, protected _zone: NgZone) {}\n\n  /**\n   * @param circle\n   */\n  public abstract addCircle(circle: NgMapsCircleDirective);\n\n  /**\n   * Removes the given circle from the map.\n   */\n  public abstract removeCircle(circle: NgMapsCircleDirective): Promise;\n  /**\n   * @todo check how to improve type casting\n   * @param circle instance of {@link NgMapsCircleDirective}\n   * @param options options for the circle\n   */\n  public abstract setOptions(\n    circle: NgMapsCircleDirective,\n    options: CircleOptions,\n  ): Promise;\n\n  public abstract getBounds(\n    circle: NgMapsCircleDirective,\n  ): Promise;\n\n  public abstract getCenter(circle: NgMapsCircleDirective): Promise;\n\n  public abstract getRadius(circle: NgMapsCircleDirective): Promise;\n\n  public abstract setCenter(circle: NgMapsCircleDirective): Promise;\n\n  public abstract setEditable(circle: NgMapsCircleDirective): Promise;\n\n  public abstract setDraggable(circle: NgMapsCircleDirective): Promise;\n\n  public abstract setVisible(circle: NgMapsCircleDirective): Promise;\n\n  public abstract setRadius(circle: NgMapsCircleDirective): Promise;\n\n  public abstract createEventObservable(\n    eventName: string,\n    circle: NgMapsCircleDirective,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CircleOptions.html":{"url":"interfaces/CircleOptions.html","title":"interface - CircleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CircleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/circle-options.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ShapeOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        radius\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                    \n                                \n                                \n                                    \n                                        radius:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ShapeOptions } from './shape-options';\n\nexport interface CircleOptions extends ShapeOptions {\n  radius?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FitBoundsAccessor.html":{"url":"classes/FitBoundsAccessor.html","title":"class - FitBoundsAccessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FitBoundsAccessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/fit-bounds.ts\n        \n\n            \n                Description\n            \n            \n                Class to implement when you what to be able to make it work with the auto fit bounds feature\nof AGM.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                getFitBoundsDetails$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getFitBoundsDetails$\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFitBoundsDetails$()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport {\n  flatMap,\n  map,\n  mergeMap,\n  sample,\n  shareReplay,\n  switchMap,\n} from 'rxjs/operators';\nimport { BoundsLiteral } from '../interface/bounds';\nimport { GeoPoint } from '../interface/geo-point';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: GeoPoint;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  public abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport abstract class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      mergeMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this.generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  protected abstract generateBounds(\n    includeInBounds: Map,\n  ): BoundsLiteral;\n\n  public addToBounds(latLng: GeoPoint) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  public removeFromBounds(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  public changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  public getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FitBoundsDetails.html":{"url":"interfaces/FitBoundsDetails.html","title":"interface - FitBoundsDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FitBoundsDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/fit-bounds.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        latLng\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latLng\n                                    \n                                \n                                \n                                    \n                                        latLng:         GeoPoint\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GeoPoint\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport {\n  flatMap,\n  map,\n  mergeMap,\n  sample,\n  shareReplay,\n  switchMap,\n} from 'rxjs/operators';\nimport { BoundsLiteral } from '../interface/bounds';\nimport { GeoPoint } from '../interface/geo-point';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: GeoPoint;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  public abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport abstract class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      mergeMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this.generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  protected abstract generateBounds(\n    includeInBounds: Map,\n  ): BoundsLiteral;\n\n  public addToBounds(latLng: GeoPoint) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  public removeFromBounds(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  public changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  public getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FitBoundsService.html":{"url":"injectables/FitBoundsService.html","title":"injectable - FitBoundsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FitBoundsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/fit-bounds.ts\n        \n\n            \n                Description\n            \n            \n                The FitBoundsService is responsible for computing the bounds of the a single map.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                _boundsChangeSampleTime$\n                            \n                            \n                                    Protected\n                                    Readonly\n                                _includeInBounds$\n                            \n                            \n                                    Protected\n                                    Readonly\n                                bounds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _createIdentifier\n                            \n                            \n                                    Public\n                                addToBounds\n                            \n                            \n                                    Public\n                                changeFitBoundsChangeSampleTime\n                            \n                            \n                                    Protected\n                                    Abstract\n                                generateBounds\n                            \n                            \n                                    Public\n                                getBounds$\n                            \n                            \n                                    Public\n                                removeFromBounds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/fit-bounds.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _createIdentifier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _createIdentifier(latLng: google.maps.LatLng | google.maps.LatLngLiteral)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                            google.maps.LatLng | google.maps.LatLngLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addToBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addToBounds(latLng: GeoPoint)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeFitBoundsChangeSampleTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeFitBoundsChangeSampleTime(timeMs: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeMs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            generateBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateBounds(includeInBounds: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    includeInBounds\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BoundsLiteral\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBounds$\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds$()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeFromBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFromBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                            google.maps.LatLng | google.maps.LatLngLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            _boundsChangeSampleTime$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(\n    200,\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/fit-bounds.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            _includeInBounds$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(\n    new Map(),\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/fit-bounds.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            bounds$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/fit-bounds.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport {\n  flatMap,\n  map,\n  mergeMap,\n  sample,\n  shareReplay,\n  switchMap,\n} from 'rxjs/operators';\nimport { BoundsLiteral } from '../interface/bounds';\nimport { GeoPoint } from '../interface/geo-point';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: GeoPoint;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  public abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport abstract class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      mergeMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this.generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  protected abstract generateBounds(\n    includeInBounds: Map,\n  ): BoundsLiteral;\n\n  public addToBounds(latLng: GeoPoint) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  public removeFromBounds(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  public changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  public getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoPoint.html":{"url":"interfaces/GeoPoint.html","title":"interface - GeoPoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoPoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/geo-point.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lat\n                                \n                                \n                                        lng\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Latitude in degrees. Values will be clamped to the range [-90, 90]. This\nmeans that if the value specified is less than -90, it will be set to\n-90. And if the value is greater than 90, it will be set to 90.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lng\n                                    \n                                \n                                \n                                    \n                                        lng:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Longitude in degrees. Values outside the range [-180, 180] will be\nwrapped so that they fall within the range. For example, a value of -190\nwill be converted to 170. A value of 190 will be converted to -170. This\nreflects the fact that longitudes wrap around the globe.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface GeoPoint {\n  /**\n   * Latitude in degrees. Values will be clamped to the range [-90, 90]. This\n   * means that if the value specified is less than -90, it will be set to\n   * -90. And if the value is greater than 90, it will be set to 90.\n   */\n  lat: number;\n  /**\n   * Longitude in degrees. Values outside the range [-180, 180] will be\n   * wrapped so that they fall within the range. For example, a value of -190\n   * will be converted to 170. A value of 190 will be converted to -170. This\n   * reflects the fact that longitudes wrap around the globe.\n   */\n  lng: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InfoWindowManager.html":{"url":"injectables/InfoWindowManager.html","title":"injectable - InfoWindowManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InfoWindowManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/info-window.manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _infoWindows\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                addInfoWindow\n                            \n                            \n                                    Public\n                                    Abstract\n                                close\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                deleteInfoWindow\n                            \n                            \n                                    Public\n                                    Abstract\n                                open\n                            \n                            \n                                    Public\n                                    Abstract\n                                setOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                setPosition\n                            \n                            \n                                    Public\n                                    Abstract\n                                setZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone, _markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/info-window.manager.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _markerManager\n                                                  \n                                                        \n                                                                        MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            addInfoWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:44\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n                    Creates a Google Maps event listener for the given InfoWindow as an Observable\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            deleteInfoWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            open\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    open(infoWindow: NgMapsInfoWindowComponent, event?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(infoWindow: NgMapsInfoWindowComponent, options: google.maps.InfoWindowOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.InfoWindowOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPosition(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setZIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setZIndex(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _infoWindows\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/managers/info-window.manager.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { NgMapsInfoWindowComponent } from '../../directives/info-window';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\nimport { MarkerManager } from './marker.manager';\n\n@Injectable()\nexport abstract class InfoWindowManager {\n  protected _infoWindows: Map = new Map();\n\n  constructor(\n    protected _mapsWrapper: MapsApiWrapper,\n    protected _zone: NgZone,\n    protected _markerManager: MarkerManager,\n  ) {}\n\n  public abstract deleteInfoWindow(\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Promise;\n\n  public abstract setPosition(infoWindow: NgMapsInfoWindowComponent): void;\n\n  public abstract setZIndex(infoWindow: NgMapsInfoWindowComponent): void;\n\n  public abstract open(\n    infoWindow: NgMapsInfoWindowComponent,\n    event?: any,\n  ): Promise;\n\n  public abstract close(infoWindow: NgMapsInfoWindowComponent): void;\n\n  public abstract setOptions(\n    infoWindow: NgMapsInfoWindowComponent,\n    options: google.maps.InfoWindowOptions,\n  );\n\n  public abstract addInfoWindow(\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Promise;\n\n  /**\n   * Creates a Google Maps event listener for the given InfoWindow as an Observable\n   */\n  public abstract createEventObservable(\n    eventName: string,\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MapOptions.html":{"url":"interfaces/MapOptions.html","title":"interface - MapOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MapOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/map-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disableDoubleClickZoom\n                                \n                                \n                                            Optional\n                                        draggable\n                                \n                                \n                                            Optional\n                                        mapTypeControl\n                                \n                                \n                                            Optional\n                                        scaleControl\n                                \n                                \n                                            Optional\n                                        scrollwheel\n                                \n                                \n                                            Optional\n                                        zoom\n                                \n                                \n                                            Optional\n                                        zoomControl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [option: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/interface/map-options.ts:8\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableDoubleClickZoom\n                                    \n                                \n                                \n                                    \n                                        disableDoubleClickZoom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapTypeControl\n                                    \n                                \n                                \n                                    \n                                        mapTypeControl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaleControl\n                                    \n                                \n                                \n                                    \n                                        scaleControl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollwheel\n                                    \n                                \n                                \n                                    \n                                        scrollwheel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomControl\n                                    \n                                \n                                \n                                    \n                                        zoomControl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MapOptions {\n  draggable?: boolean;\n  scrollwheel?: boolean;\n  scaleControl?: boolean;\n  zoomControl?: boolean;\n  mapTypeControl?: boolean;\n  zoom?: number;\n  disableDoubleClickZoom?: boolean;\n\n  /**\n   * @todo fixme\n   */\n  [option: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapsAPILoader.html":{"url":"injectables/MapsAPILoader.html","title":"injectable - MapsAPILoader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapsAPILoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/maps-api-loader/maps-api-loader.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _document\n                            \n                            \n                                    Protected\n                                _window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                configure\n                            \n                            \n                                    Public\n                                    Abstract\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/maps-api-loader.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/maps-api-loader.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Document\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/maps-api-loader/maps-api-loader.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _window\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Window\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/maps-api-loader/maps-api-loader.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport abstract class MapsAPILoader {\n  protected _window: Window;\n  protected _document: Document;\n  public abstract load(): Promise;\n  public abstract configure(config: any): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapsApiWrapper.html":{"url":"injectables/MapsApiWrapper.html","title":"injectable - MapsApiWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapsApiWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/maps-api-wrapper.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _api\n                            \n                            \n                                    Protected\n                                _mapResolver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                clearInstanceListeners\n                            \n                            \n                                    Public\n                                    Abstract\n                                createCircle\n                            \n                            \n                                    Public\n                                    Abstract\n                                createDrawingManager\n                            \n                            \n                                    Public\n                                    Abstract\n                                createInfoWindow\n                            \n                            \n                                    Public\n                                    Abstract\n                                createMap\n                            \n                            \n                                    Public\n                                    Abstract\n                                createMarker\n                            \n                            \n                                    Public\n                                    Abstract\n                                createPolygon\n                            \n                            \n                                    Public\n                                    Abstract\n                                createPolyline\n                            \n                            \n                                    Public\n                                    Abstract\n                                createRectangle\n                            \n                            \n                                    Public\n                                    Abstract\n                                fitBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                getBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                getCenter\n                            \n                            \n                                    Public\n                                    Abstract\n                                getMapTypeId\n                            \n                            \n                                    Public\n                                    Async\n                                getNativeMap\n                            \n                            \n                                    Public\n                                    Abstract\n                                getZoom\n                            \n                            \n                                    Public\n                                    Abstract\n                                panTo\n                            \n                            \n                                    Public\n                                    Abstract\n                                panToBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                setCenter\n                            \n                            \n                                    Public\n                                    Abstract\n                                setMapOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                setZoom\n                            \n                            \n                                    Public\n                                    Abstract\n                                subscribeToMapEvent\n                            \n                            \n                                    Public\n                                    Abstract\n                                triggerMapEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_loader: MapsAPILoader, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/maps-api-wrapper.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _loader\n                                                  \n                                                        \n                                                                        MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            clearInstanceListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearInstanceListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            createCircle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCircle(center: GeoPoint, options: CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    center\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            createDrawingManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createDrawingManager(param: any, addToMap?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    addToMap\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            createInfoWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInfoWindow(center: GeoPoint, options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    center\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            createMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createMap(el: HTMLElement, center: GeoPoint, options: MapOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    center\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                MapOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            createMarker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createMarker(position: GeoPoint, options?: MarkerOptions, addToMap?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                MarkerOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    addToMap\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            createPolygon\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPolygon(options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            createPolyline\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPolyline(options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            createRectangle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRectangle(box: BoundsLiteral, options: RectangleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    box\n                                    \n                                                BoundsLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                RectangleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            fitBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fitBounds(bounds: BoundsLiteral, boundsPadding?: number | Padding)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bounds\n                                    \n                                                BoundsLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    boundsPadding\n                                    \n                                                number | Padding\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCenter()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getMapTypeId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMapTypeId()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getNativeMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNativeMap()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getZoom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getZoom()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            panTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    panTo(newCenter: GeoPoint)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newCenter\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            panToBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    panToBounds(bounds: BoundsLiteral, boundsPadding?: number | Padding)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bounds\n                                    \n                                                BoundsLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    boundsPadding\n                                    \n                                                number | Padding\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setCenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCenter(newCenter: GeoPoint)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newCenter\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setMapOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMapOptions(options: MapOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MapOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setZoom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setZoom(zoom: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    zoom\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            subscribeToMapEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeToMapEvent(eventName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            triggerMapEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    triggerMapEvent(eventName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/maps-api-wrapper.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _mapResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/maps-api-wrapper.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BoundsLiteral } from '../interface/bounds';\nimport { CircleOptions } from '../interface/circle-options';\nimport { GeoPoint } from '../interface/geo-point';\nimport { MapOptions } from '../interface/map-options';\nimport { MarkerOptions } from '../interface/marker-options';\nimport { Padding } from '../interface/padding';\nimport { RectangleOptions } from '../interface/rectangle-options';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\n@Injectable()\nexport abstract class MapsApiWrapper {\n  protected _api: Promise;\n  protected _mapResolver: (value?: T) => void;\n\n  constructor(protected _loader: MapsAPILoader, protected _zone: NgZone) {\n    this._api = new Promise((resolve) => {\n      this._mapResolver = resolve;\n    });\n  }\n\n  public abstract createMap(\n    el: HTMLElement,\n    center: GeoPoint,\n    options: MapOptions,\n  );\n\n  public abstract setMapOptions(options: MapOptions);\n\n  public abstract createMarker(\n    position: GeoPoint,\n    options?: MarkerOptions,\n    addToMap?: boolean,\n  ): Promise;\n\n  public abstract clearInstanceListeners(): void;\n\n  public async getNativeMap(): Promise {\n    return this._api;\n  }\n\n  public abstract triggerMapEvent(eventName: string): Promise;\n\n  public abstract getCenter(): Promise;\n\n  public abstract setCenter(newCenter: GeoPoint): Promise;\n\n  public abstract panTo(newCenter: GeoPoint): Promise;\n\n  public abstract panToBounds(\n    bounds: BoundsLiteral,\n    boundsPadding?: number | Padding,\n  );\n\n  public abstract fitBounds(\n    bounds: BoundsLiteral,\n    boundsPadding?: number | Padding,\n  );\n\n  public abstract getBounds(): Promise;\n\n  public abstract getZoom(): Promise;\n\n  public abstract setZoom(zoom: number): Promise;\n\n  public abstract getMapTypeId(): Promise;\n\n  public abstract subscribeToMapEvent(eventName: string): Observable;\n\n  public abstract createInfoWindow(center: GeoPoint, options: any): Promise;\n\n  public abstract createDrawingManager(param: any, addToMap?: boolean);\n\n  public abstract createCircle(\n    center: GeoPoint,\n    options: CircleOptions,\n  ): Promise;\n\n  public abstract createRectangle(\n    box: BoundsLiteral,\n    options: RectangleOptions,\n  ): Promise;\n\n  public abstract createPolyline(options: any): Promise;\n\n  public abstract createPolygon(options: any): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkerIcon.html":{"url":"interfaces/MarkerIcon.html","title":"interface - MarkerIcon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkerIcon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/marker-icon.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fillColor\n                                \n                                \n                                            Optional\n                                        fillOpacity\n                                \n                                \n                                            Optional\n                                        path\n                                \n                                \n                                            Optional\n                                        rotation\n                                \n                                \n                                            Optional\n                                        scale\n                                \n                                \n                                            Optional\n                                        strokeColor\n                                \n                                \n                                            Optional\n                                        strokeOpacity\n                                \n                                \n                                            Optional\n                                        strokeWeight\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                    \n                                \n                                \n                                    \n                                        fillColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillOpacity\n                                    \n                                \n                                \n                                    \n                                        fillOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                    \n                                \n                                \n                                    \n                                        rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                    \n                                \n                                \n                                    \n                                        scale:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MarkerIcon {\n  url?: string;\n  fillColor?: string;\n  fillOpacity?: number;\n  path?: string;\n  rotation?: number;\n  scale?: number;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarkerManager.html":{"url":"injectables/MarkerManager.html","title":"injectable - MarkerManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MarkerManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/marker.manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addMarker\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                deleteMarker\n                            \n                            \n                                    Public\n                                getNativeMarker\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateAnimation\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateClickable\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateDraggable\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateIcon\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateIconLegacy\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateLabel\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateMarkerPosition\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateOpacity\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateTitle\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateVisible\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/marker.manager.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            addMarker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string | Array, marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:67\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                            string | Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            deleteMarker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getNativeMarker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNativeMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            updateAnimation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAnimation(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            updateClickable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateClickable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            updateDraggable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDraggable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            updateIcon\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIcon(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            updateIconLegacy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIconLegacy(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            updateLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLabel(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            updateMarkerPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMarkerPosition(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            updateOpacity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOpacity(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            updateTitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTitle(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            updateVisible\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateVisible(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            updateZIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateZIndex(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _markers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/managers/marker.manager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { NgMapsMarkerComponent } from '../../directives/marker';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\n\n@Injectable()\nexport abstract class MarkerManager {\n  protected _markers: Map = new Map();\n\n  constructor(\n    protected _mapsWrapper: MapsApiWrapper,\n    protected _zone: NgZone,\n  ) {}\n\n  public abstract deleteMarker(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateMarkerPosition(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateTitle(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateLabel(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateDraggable(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateIconLegacy(marker: NgMapsMarkerComponent): void;\n  public abstract updateIcon(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateOpacity(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateVisible(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateZIndex(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateClickable(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateAnimation(marker: NgMapsMarkerComponent): void;\n\n  public async addMarker(marker: NgMapsMarkerComponent): Promise {\n    const m = await this._mapsWrapper.createMarker(\n      { lat: marker.latitude, lng: marker.longitude },\n      {\n        label: marker.label,\n        draggable: marker.draggable,\n        icon: marker.iconUrl,\n        opacity: marker.opacity,\n        optimized: marker.optimized,\n        visible: marker.visible,\n        zIndex: marker.zIndex,\n        title: marker.title,\n        clickable: marker.clickable,\n        animation:\n          typeof marker.animation === 'string'\n            ? google.maps.Animation[marker.animation]\n            : marker.animation,\n      } as any,\n    );\n    this._markers.set(marker, m);\n  }\n\n  public getNativeMarker(marker: NgMapsMarkerComponent): T {\n    return this._markers.get(marker);\n  }\n\n  public abstract createEventObservable(\n    eventName: string | Array,\n    marker: NgMapsMarkerComponent,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkerOptions.html":{"url":"interfaces/MarkerOptions.html","title":"interface - MarkerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/marker-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        clickable\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        visible\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clickable\n                                    \n                                \n                                \n                                    \n                                        clickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string | google.maps.MarkerLabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | google.maps.MarkerLabel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    not supported by here maps\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    not supported by here maps\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MarkerOptions {\n  /**\n   * not supported by here maps\n   */\n  label?: string | google.maps.MarkerLabel;\n  /**\n   * not supported by here maps\n   */\n  title?: string;\n  visible?: boolean;\n  zIndex?: number;\n  clickable?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsCircleDirective.html":{"url":"directives/NgMapsCircleDirective.html","title":"directive - NgMapsCircleDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsCircleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/circle.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnChanges\n                            OnDestroy\n                            CircleOptions\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map-circle\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _circleAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _mapOptions\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerEventListeners\n                            \n                            \n                                    Private\n                                _updateCircleOptionsChanges\n                            \n                            \n                                    Public\n                                getBounds\n                            \n                            \n                                    Public\n                                getCenter\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                draggable\n                            \n                            \n                                editable\n                            \n                            \n                                fillColor\n                            \n                            \n                                fillOpacity\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                radius\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                centerChange\n                            \n                            \n                                circleClick\n                            \n                            \n                                circleDblClick\n                            \n                            \n                                drag\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragStart\n                            \n                            \n                                mouseDown\n                            \n                            \n                                mouseMove\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                mouseUp\n                            \n                            \n                                radiusChange\n                            \n                            \n                                rightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_manager: CircleManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/circle.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _manager\n                                                  \n                                                        \n                                                                        CircleManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:48\n                            \n                        \n                \n                    \n                        Indicates whether this Circle handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        draggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:53\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this circle over the map. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:59\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this circle by dragging the control points shown at\nthe center and around the circumference of the circle. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:64\n                            \n                        \n                \n                    \n                        The fill color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:69\n                            \n                        \n                \n                    \n                        The fill opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:38\n                            \n                        \n                \n                    \n                        The latitude position of the circle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:43\n                            \n                        \n                \n                    \n                        The clickable position of the circle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:74\n                            \n                        \n                \n                    \n                        The radius in meters on the Earth's surface.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:79\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:84\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:97\n                            \n                        \n                \n                    \n                        The stroke position. Defaults to CENTER.\nThis property is not supported on Internet Explorer 8 and earlier.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:102\n                            \n                        \n                \n                    \n                        Whether this circle is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:107\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        centerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:113\n                            \n                        \n                \n                    \n                        This event is fired when the circle's center is changed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        circleClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:119\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        circleDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:125\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        drag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:131\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:137\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:143\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:149\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:155\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:161\n                            \n                        \n                \n                    \n                        This event is fired on circle mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:167\n                            \n                        \n                \n                    \n                        This event is fired on circle mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:173\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mouseup event is fired on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:179\n                            \n                        \n                \n                    \n                        This event is fired when the circle's radius is changed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:185\n                            \n                        \n                \n                    \n                        This event is fired when the circle is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _registerEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _registerEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:236\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _updateCircleOptionsChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateCircleOptionsChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:290\n                \n            \n\n\n            \n                \n                    Gets the LatLngBounds of this Circle.\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCenter()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:294\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:282\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _circleAddedToManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:187\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _mapOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:189\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { BoundsLiteral } from '../interface/bounds';\nimport { CircleOptions } from '../interface/circle-options';\nimport { GeoPoint } from '../interface/geo-point';\nimport { CircleManager } from '../services/managers/circle-manager';\n\n@Directive({\n  selector: 'map-circle',\n})\nexport class NgMapsCircleDirective\n  implements OnInit, OnChanges, OnDestroy, CircleOptions {\n  constructor(private _manager: CircleManager) {}\n\n  private static _mapOptions: Array = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ];\n  /**\n   * The latitude position of the circle (required).\n   */\n  @Input() public latitude: number;\n\n  /**\n   * The clickable position of the circle (required).\n   */\n  @Input() public longitude: number;\n\n  /**\n   * Indicates whether this Circle handles mouse events. Defaults to true.\n   */\n  @Input() public clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this circle over the map. Defaults to false.\n   */\n  @Input() public draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this circle by dragging the control points shown at\n   * the center and around the circumference of the circle. Defaults to false.\n   */\n  @Input() public editable: boolean = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() public fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0.\n   */\n  @Input() public fillOpacity: number;\n\n  /**\n   * The radius in meters on the Earth's surface.\n   */\n  @Input() public radius: number = 0;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() public strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() public strokeOpacity: number;\n\n  /**\n   * The stroke position. Defaults to CENTER.\n   * This property is not supported on Internet Explorer 8 and earlier.\n   * @fixme\n   */\n  // @Input() strokePosition: google.maps.StrokePosition =\n  //   google.maps.StrokePosition.CENTER;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() public strokeWeight: number = 0;\n\n  /**\n   * Whether this circle is visible on the map. Defaults to true.\n   */\n  @Input() public visible: boolean = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() public zIndex: number;\n\n  /**\n   * This event is fired when the circle's center is changed.\n   */\n  @Output()\n  public centerChange: EventEmitter = new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the circle.\n   */\n  @Output()\n  public circleClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the circle.\n   */\n  @Output()\n  public circleDblClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the circle.\n   */\n  @Output()\n  public drag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the circle.\n   */\n  @Output()\n  public dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the circle.\n   */\n  @Output()\n  public dragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the circle.\n   */\n  @Output()\n  public mouseDown: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the circle.\n   */\n  @Output()\n  public mouseMove: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on circle mouseout.\n   */\n  @Output()\n  public mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on circle mouseover.\n   */\n  @Output()\n  public mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mouseup event is fired on the circle.\n   */\n  @Output()\n  public mouseUp: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the circle's radius is changed.\n   */\n  @Output()\n  public radiusChange: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the circle is right-clicked on.\n   */\n  @Output()\n  public rightClick: EventEmitter = new EventEmitter();\n\n  private _circleAddedToManager: boolean = false;\n\n  private subscription: Subscription = new Subscription();\n\n  /** @internal */\n  public ngOnInit() {\n    this._manager.addCircle(this);\n    this._circleAddedToManager = true;\n    this._registerEventListeners();\n  }\n\n  /** @internal */\n  public ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (!this._circleAddedToManager) {\n      return;\n    }\n    if (changes.latitude || changes.longitude) {\n      this._manager.setCenter(this);\n    }\n    if (changes.editable) {\n      this._manager.setEditable(this);\n    }\n    if (changes.draggable) {\n      this._manager.setDraggable(this);\n    }\n    if (changes.visible) {\n      this._manager.setVisible(this);\n    }\n    if (changes.radius) {\n      this._manager.setRadius(this);\n    }\n    this._updateCircleOptionsChanges(changes);\n  }\n\n  private _updateCircleOptionsChanges(changes: {\n    [propName: string]: SimpleChange;\n  }) {\n    const options: { [propName: string]: any } = {};\n    const optionKeys = Object.keys(changes).filter(\n      (k) => NgMapsCircleDirective._mapOptions.indexOf(k) !== -1,\n    );\n    optionKeys.forEach((k) => {\n      options[k] = changes[k].currentValue;\n    });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  private _registerEventListeners() {\n    const events: Map> = new Map\n    >();\n    events.set('center_changed', this.centerChange);\n    events.set('click', this.circleClick);\n    events.set('dblclick', this.circleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragstart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('radius_changed', this.radiusChange);\n    events.set('rightclick', this.rightClick);\n\n    events.forEach((eventEmitter, eventName) => {\n      this.subscription.add(\n        this._manager\n          .createEventObservable(eventName, this)\n          .subscribe((value) => {\n            switch (eventName) {\n              case 'radius_changed':\n                this._manager\n                  .getRadius(this)\n                  .then((radius) => eventEmitter.emit(radius));\n                break;\n              case 'center_changed':\n                this._manager.getCenter(this).then((center) =>\n                  eventEmitter.emit({\n                    ...center,\n                  }),\n                );\n                break;\n              default:\n                eventEmitter.emit(value);\n            }\n          }),\n      );\n    });\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this._manager.removeCircle(this);\n  }\n\n  /**\n   * Gets the LatLngBounds of this Circle.\n   */\n  public getBounds(): Promise {\n    return this._manager.getBounds(this);\n  }\n\n  public getCenter(): Promise {\n    return this._manager.getCenter(this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgMapsCoreModule.html":{"url":"modules/NgMapsCoreModule.html","title":"module - NgMapsCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    NgMapsCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The ng-maps core module. Contains all Directives/Services/Pipes\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, NgModule } from '@angular/core';\nimport { NgMapsCircleDirective } from './directives/circle';\nimport { NgMapsFitBoundsDirective } from './directives/fit-bounds';\nimport { NgMapsInfoWindowComponent } from './directives/info-window';\nimport { NgMapsViewComponent } from './directives/map';\nimport { NgMapsMarkerComponent } from './directives/marker';\nimport { NgMapsPolygonDirective } from './directives/polygon';\nimport { NgMapsPolyline } from './directives/polyline';\nimport { NgMapsPolylinePoint } from './directives/polyline-point';\nimport { NgMapsRectangleDirective } from './directives/rectangle';\n\nexport const MAP_PROVIDER = new InjectionToken('Map Provider');\n\nexport function isGoogleMaps(token: string) {\n  return token === 'GoogleMaps';\n}\n\nexport function isHereMaps(token: string) {\n  return token === 'HereMaps';\n}\n\n/**\n * @internal\n */\nexport function coreDirectives() {\n  return [\n    NgMapsViewComponent,\n    NgMapsMarkerComponent,\n    NgMapsInfoWindowComponent,\n    NgMapsFitBoundsDirective,\n    NgMapsCircleDirective,\n    NgMapsPolygonDirective,\n    NgMapsPolyline,\n    NgMapsPolylinePoint,\n    NgMapsRectangleDirective,\n  ];\n}\n\n/**\n * The ng-maps core module. Contains all Directives/Services/Pipes\n */\n@NgModule({\n  declarations: coreDirectives(),\n  exports: coreDirectives(),\n})\nexport class NgMapsCoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsFitBoundsDirective.html":{"url":"directives/NgMapsFitBoundsDirective.html","title":"directive - NgMapsFitBoundsDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsFitBoundsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/fit-bounds.ts\n        \n\n            \n                Description\n            \n            \n                Adds the given directive to the auto fit bounds feature when the value is true.\nTo make it work with you custom AGM component, you also have to implement the FitBoundsAccessor abstract class.\n\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n                            OnChanges\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mapFitBounds]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _latestFitBoundsDetails\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _updateBounds\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapFitBounds\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_fitBoundsAccessor: FitBoundsAccessor, _fitBoundsService: FitBoundsService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/fit-bounds.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fitBoundsAccessor\n                                                  \n                                                        \n                                                                        FitBoundsAccessor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fitBoundsService\n                                                  \n                                                        \n                                                                        FitBoundsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapFitBounds\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/fit-bounds.ts:32\n                            \n                        \n                \n                    \n                        If the value is true, the element gets added to the bounds of the map.\nDefault: true.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _updateBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateBounds(newFitBoundsDetails?: FitBoundsDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:76\n                \n            \n\n\n            \n                \n                    Either the location changed, or visible status changed.\nPossible state changes are\ninvisible -> visible\nvisible -> invisible\nvisible -> visible (new location)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newFitBoundsDetails\n                                    \n                                                FitBoundsDetails\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _latestFitBoundsDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FitBoundsDetails | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/fit-bounds.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/fit-bounds.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Self,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport {\n  FitBoundsAccessor,\n  FitBoundsDetails,\n  FitBoundsService,\n} from '../services/fit-bounds';\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * \n */\n@Directive({\n  selector: '[mapFitBounds]',\n})\nexport class NgMapsFitBoundsDirective implements OnInit, OnDestroy, OnChanges {\n  /**\n   * If the value is true, the element gets added to the bounds of the map.\n   * Default: true.\n   */\n  @Input() public mapFitBounds: boolean = true;\n\n  private _latestFitBoundsDetails: FitBoundsDetails | null = null;\n  private subscription: Subscription = new Subscription();\n\n  constructor(\n    @Self() private readonly _fitBoundsAccessor: FitBoundsAccessor,\n    private readonly _fitBoundsService: FitBoundsService,\n  ) {}\n\n  /**\n   * @internal\n   */\n  public ngOnChanges(changes: SimpleChanges) {\n    this._updateBounds();\n  }\n\n  /**\n   * @internal\n   */\n  public ngOnInit() {\n    this.subscription.add(\n      this._fitBoundsAccessor\n        .getFitBoundsDetails$()\n        .pipe(\n          distinctUntilChanged(\n            (x: FitBoundsDetails, y: FitBoundsDetails) =>\n              x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng,\n          ),\n        )\n        .subscribe({\n          next: (details) => this._updateBounds(details),\n          complete: () => this._updateBounds(),\n        }),\n    );\n  }\n\n  /**\n   * Either the location changed, or visible status changed.\n   * Possible state changes are\n   * invisible -> visible\n   * visible -> invisible\n   * visible -> visible (new location)\n   */\n  private _updateBounds(newFitBoundsDetails?: FitBoundsDetails) {\n    // either visibility will change, or location, so remove the old one anyway\n    if (this._latestFitBoundsDetails) {\n      this._fitBoundsService.removeFromBounds(\n        this._latestFitBoundsDetails.latLng,\n      );\n      // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n      // true -> false -> true, in which case we still need old value cached here\n    }\n\n    if (newFitBoundsDetails) {\n      this._latestFitBoundsDetails = newFitBoundsDetails;\n    }\n    if (this._latestFitBoundsDetails) {\n      if (this.mapFitBounds === true) {\n        this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n      } else {\n        this._fitBoundsService.removeFromBounds(\n          this._latestFitBoundsDetails.latLng,\n        );\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  public ngOnDestroy() {\n    this.subscription.unsubscribe();\n    if (this._latestFitBoundsDetails !== null) {\n      this._fitBoundsService.removeFromBounds(\n        this._latestFitBoundsDetails.latLng,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgMapsInfoWindowComponent.html":{"url":"components/NgMapsInfoWindowComponent.html","title":"component - NgMapsInfoWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgMapsInfoWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/directives/info-window.ts\n\n\n    \n        Description\n    \n    \n        NgMapsInfoWindowComponent renders a info window inside a NgMapsMarkerComponent or standalone.\nExample\n```typescript\n\nimport { Component } from '@angular/core';\n\n@Component({\nselector: 'my-map-cmp',\nstyles: [map-view {\n  height: 300px;\n}],\ntemplate: `\n\n  \n  Hi, this is the content of the info window\n  \n\n`\n})\n```\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                map-info-window\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _infoWindowAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _infoWindowOptionsInputs\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                    Readonly\n                                elementRef\n                            \n                            \n                                    Public\n                                hostMarker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerEventListeners\n                            \n                            \n                                    Private\n                                _setInfoWindowOptions\n                            \n                            \n                                    Private\n                                _updateOpenState\n                            \n                            \n                                    Public\n                                    Async\n                                close\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                toString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableAutoPan\n                            \n                            \n                                isOpen\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                maxWidth\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                infoWindowClose\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_infoWindowManager: InfoWindowManager, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/info-window.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _infoWindowManager\n                                                  \n                                                        \n                                                                        InfoWindowManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableAutoPan\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:81\n                            \n                        \n                \n                    \n                        Disable auto-pan on open. By default, the info window will pan the map so that it is fully\nvisible when it opens.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:112\n                            \n                        \n                \n                    \n                        Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:69\n                            \n                        \n                \n                    \n                        The latitude position of the info window (only usefull if you use it ouside of a NgMapsMarkerComponent).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:75\n                            \n                        \n                \n                    \n                        The longitude position of the info window (only usefull if you use it ouside of a NgMapsMarkerComponent).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxWidth\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:96\n                            \n                        \n                \n                    \n                        Maximum width of the infowindow, regardless of content's width. This value is only considered\nif it is set before a call to open. To change the maximum width when changing content, call\nclose, update maxWidth, and then open.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:89\n                            \n                        \n                \n                    \n                        All InfoWindows are displayed on the map in order of their zIndex, with higher values\ndisplaying in front of InfoWindows with lower values. By default, InfoWindows are displayed\naccording to their latitude, with InfoWindows of lower latitudes appearing in front of\nInfoWindows at higher latitudes. InfoWindows are always displayed in front of markers.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        infoWindowClose\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:118\n                            \n                        \n                \n                    \n                        Emits an event when the info window is closed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _registerEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _registerEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _setInfoWindowOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _setInfoWindowOptions(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _updateOpenState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateOpenState()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:185\n                \n            \n\n\n            \n                \n                    Closes the info window.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            id\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    id()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            open\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    open(event?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:178\n                \n            \n\n\n            \n                \n                    Opens the info window.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toString()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : (infoWindowId++).toString()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _infoWindowAddedToManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:119\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _infoWindowOptionsInputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'disableAutoPan',\n    'maxWidth',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('content', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:107\n                            \n                        \n\n                \n                    \n                        Holds the native element that is used for the info window content.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hostMarker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgMapsMarkerComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:101\n                            \n                        \n\n                \n                    \n                        Holds the marker that is the host of the info window (if available)\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\n\nimport { InfoWindowManager } from '../services/managers/info-window.manager';\n\nimport { NgMapsMarkerComponent } from './marker';\n\nlet infoWindowId = 0;\n\n/**\n * NgMapsInfoWindowComponent renders a info window inside a {@link NgMapsMarkerComponent} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    map-view {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    \n *      \n *        \n *          Hi, this is the content of the info window\n *        \n *      \n *    \n *  `\n * })\n * ```\n */\n@Component({\n  selector: 'map-info-window',\n  template: `\n    \n      \n    \n  `,\n})\nexport class NgMapsInfoWindowComponent implements OnDestroy, OnChanges, OnInit {\n  // @todo how to add correct typings?\n  constructor(\n    protected _infoWindowManager: InfoWindowManager,\n    public readonly elementRef: ElementRef,\n  ) {}\n\n  private static _infoWindowOptionsInputs: Array = [\n    'disableAutoPan',\n    'maxWidth',\n  ];\n  /**\n   * The latitude position of the info window (only usefull if you use it ouside of a {@link\n   * NgMapsMarkerComponent}).\n   */\n  @Input() public latitude: number;\n\n  /**\n   * The longitude position of the info window (only usefull if you use it ouside of a {@link\n   * NgMapsMarkerComponent}).\n   */\n  @Input() public longitude: number;\n\n  /**\n   * Disable auto-pan on open. By default, the info window will pan the map so that it is fully\n   * visible when it opens.\n   */\n  @Input() public disableAutoPan: boolean;\n\n  /**\n   * All InfoWindows are displayed on the map in order of their zIndex, with higher values\n   * displaying in front of InfoWindows with lower values. By default, InfoWindows are displayed\n   * according to their latitude, with InfoWindows of lower latitudes appearing in front of\n   * InfoWindows at higher latitudes. InfoWindows are always displayed in front of markers.\n   */\n  @Input() public zIndex: number;\n\n  /**\n   * Maximum width of the infowindow, regardless of content's width. This value is only considered\n   * if it is set before a call to open. To change the maximum width when changing content, call\n   * close, update maxWidth, and then open.\n   */\n  @Input() public maxWidth: number;\n\n  /**\n   * Holds the marker that is the host of the info window (if available)\n   */\n  public hostMarker: NgMapsMarkerComponent;\n\n  /**\n   * Holds the native element that is used for the info window content.\n   */\n  @ViewChild('content', { static: true })\n  public content: ElementRef;\n\n  /**\n   * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n   */\n  @Input() public isOpen: boolean = false;\n\n  /**\n   * Emits an event when the info window is closed.\n   */\n  @Output()\n  public infoWindowClose: EventEmitter = new EventEmitter();\n  private _infoWindowAddedToManager: boolean = false;\n  private _id: string = (infoWindowId++).toString();\n\n  public ngOnInit() {\n    this._infoWindowManager.addInfoWindow(this).then(() => {\n      this._infoWindowAddedToManager = true;\n      this._updateOpenState();\n      this._registerEventListeners();\n    });\n  }\n\n  /** @internal */\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this._infoWindowAddedToManager) {\n      return;\n    }\n    if (\n      (changes.latitude || changes.longitude) &&\n      typeof this.latitude === 'number' &&\n      typeof this.longitude === 'number'\n    ) {\n      this._infoWindowManager.setPosition(this);\n    }\n    if (changes.zIndex) {\n      this._infoWindowManager.setZIndex(this);\n    }\n    if (changes.isOpen) {\n      this._updateOpenState();\n    }\n    this._setInfoWindowOptions(changes);\n  }\n\n  private _registerEventListeners() {\n    this._infoWindowManager\n      .createEventObservable('closeclick', this)\n      .subscribe(() => {\n        this.isOpen = false;\n        this.infoWindowClose.emit();\n      });\n  }\n\n  private _updateOpenState() {\n    this.isOpen ? this.open() : this.close();\n  }\n\n  private _setInfoWindowOptions(changes: SimpleChanges) {\n    const options: SimpleChanges = {};\n    const optionKeys = Object.keys(changes).filter((k) =>\n      NgMapsInfoWindowComponent._infoWindowOptionsInputs.includes(k),\n    );\n    optionKeys.forEach((k) => {\n      options[k] = changes[k].currentValue;\n    });\n    this._infoWindowManager.setOptions(this, options);\n  }\n\n  /**\n   * Opens the info window.\n   */\n  public open(event?: any): Promise {\n    return this._infoWindowManager.open(this, event);\n  }\n\n  /**\n   * Closes the info window.\n   */\n  public async close(): Promise {\n    await this._infoWindowManager.close(this);\n    return this.infoWindowClose.emit();\n  }\n\n  /** @internal */\n  public id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  public toString(): string {\n    return `NgMapsInfoWindowComponent-${this._id.toString()}`;\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this._infoWindowManager.deleteInfoWindow(this);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'NgMapsInfoWindowComponent', 'selector': 'map-info-window'},{'name': 'NgMapsMarkerComponent', 'selector': 'map-marker'},{'name': 'NgMapsViewComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'NgMapsCircleDirective', 'selector': 'map-circle'},{'name': 'NgMapsFitBoundsDirective', 'selector': '[mapFitBounds]'},{'name': 'NgMapsPolygonDirective', 'selector': 'map-polygon'},{'name': 'NgMapsPolyline', 'selector': 'map-polyline'},{'name': 'NgMapsPolylinePoint', 'selector': 'map-polyline-point'},{'name': 'NgMapsRectangleDirective', 'selector': 'map-rectangle'}];\n    var ACTUAL_COMPONENT = {'name': 'NgMapsInfoWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgMapsMarkerComponent.html":{"url":"components/NgMapsMarkerComponent.html","title":"component - NgMapsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgMapsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/directives/marker.ts\n\n\n    \n        Description\n    \n    \n        NgMapsMarkerComponent renders a map marker inside a NgMapsViewComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n                    AfterContentInit\n                    FitBoundsAccessor\n                    MarkerOptions\n    \n\n    \n        Example\n    \n    \n                \n                    \n   \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: FitBoundsAccessor, useExisting: forwardRef(() => NgMapsMarkerComponent),\n}\n                \n            \n\n\n            \n                selector\n                map-marker\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                _fitBoundsDetails$\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _markerAddedToManger\n                            \n                            \n                                    Public\n                                animation\n                            \n                            \n                                    Public\n                                infoWindow\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _addEventListeners\n                            \n                            \n                                    Protected\n                                _updateFitBoundsDetails\n                            \n                            \n                                    Public\n                                getFitBoundsDetails$\n                            \n                            \n                                    Private\n                                handleInfoWindowUpdate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                toString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                iconUrl\n                            \n                            \n                                label\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                markerClickable\n                            \n                            \n                                markerDraggable\n                            \n                            \n                                opacity\n                            \n                            \n                                openInfoWindow\n                            \n                            \n                                optimized\n                            \n                            \n                                title\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                drag\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragStart\n                            \n                            \n                                markerClick\n                            \n                            \n                                markerRightClick\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/marker.ts:201\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        markerManager\n                                                  \n                                                        \n                                                                        MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         MarkerIcon\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:104\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconUrl\n                    \n                \n                \n                    \n                        Type :     string | google.maps.Icon\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:102\n                            \n                        \n                \n                    \n                        Icon (the URL of the image) for the foreground.\nCan also be a MarkerIcon (google.maps.Icon in Google Maps Javascript api)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     string | google.maps.MarkerLabel\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:89\n                            \n                        \n                \n                    \n                        The label (a single uppercase character) for the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:74\n                            \n                        \n                \n                    \n                        The latitude position of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:79\n                            \n                        \n                \n                    \n                        The longitude position of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerClickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:139\n                            \n                        \n                \n                    \n                        If true, the marker can be clicked. Default value is true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:95\n                            \n                        \n                \n                    \n                        If true, the marker can be dragged. Default value is false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:119\n                            \n                        \n                \n                    \n                        The marker's opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        openInfoWindow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:114\n                            \n                        \n                \n                    \n                        Whether to automatically open the child info window when the marker is clicked.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        optimized\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:125\n                            \n                        \n                \n                    \n                        Marker optimize flag. If it is false then it prevent duplicate rendering.\nDefault it is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:84\n                            \n                        \n                \n                    \n                        The title of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:109\n                            \n                        \n                \n                    \n                        If true, the marker is visible\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:133\n                            \n                        \n                \n                    \n                        All markers are displayed on the map in order of their zIndex, with higher values displaying in\nfront of markers with lower values. By default, markers are displayed according to their\nvertical position on screen, with lower markers appearing in front of markers further up the\nscreen.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        drag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:169\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:175\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:163\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:151\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerRightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:157\n                            \n                        \n                \n                    \n                        This event is fired when the user rightclicks on the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:187\n                            \n                        \n                \n                    \n                        This event is fired when the user mouses outside the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:181\n                            \n                        \n                \n                    \n                        This event is fired when the user mouses over the marker.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _addEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:297\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _updateFitBoundsDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateFitBoundsDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:291\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFitBoundsDetails$\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFitBoundsDetails$()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:287\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleInfoWindowUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleInfoWindowUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:215\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            id\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    id()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:360\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:370\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toString()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:365\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            _fitBoundsDetails$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject(\n    1,\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:199\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:196\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _markerAddedToManger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:195\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"BOUNCE\" | \"DROP\" | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:145\n                            \n                        \n\n                \n                    \n                        Which animation to play when marker is added to a map.\nThis can be 'BOUNCE' or 'DROP'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            infoWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Default value : new QueryList()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(NgMapsInfoWindowComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:193\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:197\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Component\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-map',\n  styles: [\n    `\n      map-view {\n        height: 300px;\n      }\n    `,\n  ],\n  templateUrl: './my-map.component.html',\n})\nexport class MyComponent {\n  lat: number = 51.678418;\n  lng: number = 7.809007;\n  zoom: number = 10;\n}Template\n\n  \n\n    \n\n    \n        import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  QueryList,\n  SimpleChange,\n} from '@angular/core';\nimport { Observable, ReplaySubject, Subscription } from 'rxjs';\nimport { MarkerIcon } from '../interface/marker-icon';\nimport { MarkerOptions } from '../interface/marker-options';\nimport { FitBoundsAccessor, FitBoundsDetails } from '../services/fit-bounds';\nimport { MarkerManager } from '../services/managers/marker.manager';\nimport { NgMapsInfoWindowComponent } from './info-window';\n\nlet markerId = 0;\n\n/**\n * NgMapsMarkerComponent renders a map marker inside a {@link NgMapsViewComponent}.\n *\n * @example\n * \n *               \n * \n */\n@Component({\n  selector: 'map-marker',\n  providers: [\n    {\n      provide: FitBoundsAccessor,\n      useExisting: forwardRef(() => NgMapsMarkerComponent),\n    },\n  ],\n  inputs: [\n    'latitude',\n    'longitude',\n    'title',\n    'label',\n    'draggable: markerDraggable',\n    'iconUrl',\n    'icon',\n    'openInfoWindow',\n    'opacity',\n    'optimized',\n    'visible',\n    'zIndex',\n    'animation',\n  ],\n  outputs: [\n    'markerClick',\n    'dragStart',\n    'drag',\n    'dragEnd',\n    'mouseOver',\n    'mouseOut',\n  ],\n  template: '',\n})\nexport class NgMapsMarkerComponent\n  implements\n    OnDestroy,\n    OnChanges,\n    AfterContentInit,\n    FitBoundsAccessor,\n    MarkerOptions {\n  /**\n   * The latitude position of the marker.\n   */\n  @Input() public latitude: number;\n\n  /**\n   * The longitude position of the marker.\n   */\n  @Input() public longitude: number;\n\n  /**\n   * The title of the marker.\n   */\n  @Input() public title: string;\n\n  /**\n   * The label (a single uppercase character) for the marker.\n   */\n  @Input() public label: string | google.maps.MarkerLabel;\n\n  /**\n   * If true, the marker can be dragged. Default value is false.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('markerDraggable') public draggable: boolean = false;\n\n  /**\n   * Icon (the URL of the image) for the foreground.\n   * Can also be a MarkerIcon (google.maps.Icon in Google Maps Javascript api)\n   * @see google.maps.Icon\n   */\n  @Input() public iconUrl: string | google.maps.Icon;\n\n  @Input() public icon: MarkerIcon;\n\n  /**\n   * If true, the marker is visible\n   */\n  @Input() public visible: boolean = true;\n\n  /**\n   * Whether to automatically open the child info window when the marker is clicked.\n   */\n  @Input() public openInfoWindow: boolean = true;\n\n  /**\n   * The marker's opacity between 0.0 and 1.0.\n   */\n  @Input() public opacity: number = 1;\n\n  /**\n   * Marker optimize flag. If it is false then it prevent duplicate rendering.\n   * Default it is true\n   */\n  @Input() public optimized: boolean = true;\n\n  /**\n   * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n   * front of markers with lower values. By default, markers are displayed according to their\n   * vertical position on screen, with lower markers appearing in front of markers further up the\n   * screen.\n   */\n  @Input() public zIndex: number = 1;\n\n  /**\n   * If true, the marker can be clicked. Default value is true.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('markerClickable') public clickable: boolean = true;\n\n  /**\n   * Which animation to play when marker is added to a map.\n   * This can be 'BOUNCE' or 'DROP'\n   */\n  public animation: 'BOUNCE' | 'DROP' | null;\n\n  /**\n   * This event emitter gets emitted when the user clicks on the marker.\n   */\n  @Output()\n  public markerClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user rightclicks on the marker.\n   */\n  @Output()\n  public markerRightClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the marker.\n   */\n  @Output()\n  public dragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the marker.\n   */\n  @Output()\n  public drag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the marker.\n   */\n  @Output()\n  public dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user mouses over the marker.\n   */\n  @Output()\n  public mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user mouses outside the marker.\n   */\n  @Output()\n  public mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * @internal\n   */\n  @ContentChildren(NgMapsInfoWindowComponent)\n  public infoWindow: QueryList = new QueryList();\n\n  private _markerAddedToManger: boolean = false;\n  private _id: string;\n  private subscription: Subscription = new Subscription();\n\n  protected readonly _fitBoundsDetails$: ReplaySubject = new ReplaySubject(\n    1,\n  );\n\n  constructor(private markerManager: MarkerManager) {\n    this._id = (markerId++).toString();\n  }\n\n  /**\n   *  @internal\n   */\n  public ngAfterContentInit() {\n    this.handleInfoWindowUpdate();\n    this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n  }\n\n  private handleInfoWindowUpdate() {\n    if (this.infoWindow.length > 1) {\n      throw new Error('Expected no more than one info window.');\n    }\n    this.infoWindow.forEach((marker) => {\n      marker.hostMarker = this;\n    });\n  }\n\n  /**\n   * @internal\n   */\n  public ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (typeof this.latitude === 'string') {\n      this.latitude = Number(this.latitude);\n    }\n    if (typeof this.longitude === 'string') {\n      this.longitude = Number(this.longitude);\n    }\n    if (\n      typeof this.latitude !== 'number' ||\n      typeof this.longitude !== 'number'\n    ) {\n      return;\n    }\n    if (!this._markerAddedToManger) {\n      this.markerManager.addMarker(this).then(() => {\n        this._updateFitBoundsDetails();\n        this._markerAddedToManger = true;\n        this._addEventListeners();\n      });\n      return;\n    }\n    if (changes.latitude || changes.longitude) {\n      this.markerManager.updateMarkerPosition(this);\n      this._updateFitBoundsDetails();\n    }\n    if (changes.title) {\n      this.markerManager.updateTitle(this);\n    }\n    if (changes.label) {\n      this.markerManager.updateLabel(this);\n    }\n    if (changes.draggable) {\n      this.markerManager.updateDraggable(this);\n    }\n    if (changes.iconUrl) {\n      this.markerManager.updateIconLegacy(this);\n    }\n    if (changes.icon) {\n      this.markerManager.updateIcon(this);\n    }\n    if (changes.opacity) {\n      this.markerManager.updateOpacity(this);\n    }\n    if (changes.visible) {\n      this.markerManager.updateVisible(this);\n    }\n    if (changes.zIndex) {\n      this.markerManager.updateZIndex(this);\n    }\n    if (changes.clickable) {\n      this.markerManager.updateClickable(this);\n    }\n    if (changes.animation) {\n      this.markerManager.updateAnimation(this);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  public getFitBoundsDetails$(): Observable {\n    return this._fitBoundsDetails$.asObservable();\n  }\n\n  protected _updateFitBoundsDetails() {\n    this._fitBoundsDetails$.next({\n      latLng: { lat: this.latitude, lng: this.longitude },\n    });\n  }\n\n  protected _addEventListeners() {\n    const cs = this.markerManager\n      .createEventObservable(['click', 'pointerdown'], this)\n      .subscribe({\n        next: (event) => {\n          if (this.openInfoWindow) {\n            this.infoWindow.forEach((infoWindow) => infoWindow.open(event));\n          }\n          this.markerClick.emit(this);\n        },\n      });\n    this.subscription.add(cs);\n\n    const rc = this.markerManager\n      .createEventObservable('rightclick', this)\n      .subscribe(() => {\n        this.markerRightClick.emit(null);\n      });\n    this.subscription.add(rc);\n\n    const ds = this.markerManager\n      .createEventObservable('dragstart', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.dragStart.emit(e);\n      });\n    this.subscription.add(ds);\n\n    const d = this.markerManager\n      .createEventObservable('drag', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.drag.emit(e);\n      });\n    this.subscription.add(d);\n\n    const dragend = this.markerManager\n      .createEventObservable('dragend', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.dragEnd.emit(e);\n      });\n    this.subscription.add(dragend);\n\n    const mouseover = this.markerManager\n      .createEventObservable(\n        ['mouseover', 'pointerenter'],\n        this,\n      )\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.mouseOver.emit(e);\n      });\n    this.subscription.add(mouseover);\n\n    const mouseout = this.markerManager\n      .createEventObservable(\n        ['mouseout', 'pointerleave'],\n        this,\n      )\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.mouseOut.emit(e);\n      });\n    this.subscription.add(mouseout);\n  }\n\n  /** @internal */\n  public id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  public toString(): string {\n    return `NgMapsMarker-${this._id}`;\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this.markerManager.deleteMarker(this);\n    // unsubscribe all registered observable subscription\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgMapsInfoWindowComponent', 'selector': 'map-info-window'},{'name': 'NgMapsMarkerComponent', 'selector': 'map-marker'},{'name': 'NgMapsViewComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'NgMapsCircleDirective', 'selector': 'map-circle'},{'name': 'NgMapsFitBoundsDirective', 'selector': '[mapFitBounds]'},{'name': 'NgMapsPolygonDirective', 'selector': 'map-polygon'},{'name': 'NgMapsPolyline', 'selector': 'map-polyline'},{'name': 'NgMapsPolylinePoint', 'selector': 'map-polyline-point'},{'name': 'NgMapsRectangleDirective', 'selector': 'map-rectangle'}];\n    var ACTUAL_COMPONENT = {'name': 'NgMapsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsPolygonDirective.html":{"url":"directives/NgMapsPolygonDirective.html","title":"directive - NgMapsPolygonDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsPolygonDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/polygon.ts\n        \n\n            \n                Description\n            \n            \n                NgMapsPolygon renders a polygon on a NgMapsView\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map-polygon\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _polygonAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _polygonOptionsAttributes\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addEventListeners\n                            \n                            \n                                    Private\n                                _init\n                            \n                            \n                                    Private\n                                _updatePolygonOptions\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                editable\n                            \n                            \n                                fillColor\n                            \n                            \n                                fillOpacity\n                            \n                            \n                                geodesic\n                            \n                            \n                                paths\n                            \n                            \n                                polyDraggable\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                polyClick\n                            \n                            \n                                polyDblClick\n                            \n                            \n                                polyDrag\n                            \n                            \n                                polyDragEnd\n                            \n                            \n                                polyDragStart\n                            \n                            \n                                polyMouseDown\n                            \n                            \n                                polyMouseMove\n                            \n                            \n                                polyMouseOut\n                            \n                            \n                                polyMouseOver\n                            \n                            \n                                polyMouseUp\n                            \n                            \n                                polyRightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_polygonManager: PolygonManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/polygon.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _polygonManager\n                                                  \n                                                        \n                                                                        PolygonManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:47\n                            \n                        \n                \n                    \n                        Indicates whether this Polygon handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:60\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this shape by dragging the control\npoints shown at the vertices and on each segment. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:66\n                            \n                        \n                \n                    \n                        The fill color. All CSS3 colors are supported except for extended\nnamed colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:71\n                            \n                        \n                \n                    \n                        The fill opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        geodesic\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:80\n                            \n                        \n                \n                    \n                        When true, edges of the polygon are interpreted as geodesic and will\nfollow the curvature of the Earth. When false, edges of the polygon are\nrendered as straight lines in screen space. Note that the shape of a\ngeodesic polygon may appear to change when dragged, as the dimensions\nare maintained relative to the surface of the earth. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        paths\n                    \n                \n                \n                    \n                        Type :         Array | Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:93\n                            \n                        \n                \n                    \n                        The ordered sequence of coordinates that designates a closed loop.\nUnlike polylines, a polygon may consist of one or more paths.\n  As a result, the paths property may specify one or more arrays of\nLatLng coordinates. Paths are closed automatically; do not repeat the\nfirst vertex of the path as the last vertex. Simple polygons may be\ndefined using a single array of LatLngs. More complex polygons may\nspecify an array of arrays. Any simple arrays are converted into Arrays.\nInserting or removing LatLngs from the Array will automatically update\nthe polygon on the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:54\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this shape over the map. The geodesic\nproperty defines the mode of dragging. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:99\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended\nnamed colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:104\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:109\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:114\n                            \n                        \n                \n                    \n                        Whether this polygon is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:119\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        polyClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:125\n                            \n                        \n                \n                    \n                        This event is fired when the DOM click event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:131\n                            \n                        \n                \n                    \n                        This event is fired when the DOM dblclick event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDrag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:137\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:143\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:149\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:155\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:161\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:167\n                            \n                        \n                \n                    \n                        This event is fired on Polygon mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:173\n                            \n                        \n                \n                    \n                        This event is fired on Polygon mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:179\n                            \n                        \n                \n                    \n                        This event is fired whe the DOM mouseup event is fired on the Polygon\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyRightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:185\n                            \n                        \n                \n                    \n                        This even is fired when the Polygon is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _addEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _init()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _updatePolygonOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updatePolygonOptions(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:272\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     google.maps.PolygonOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            id\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    id()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:287\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:292\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:187\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _polygonAddedToManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:188\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _polygonOptionsAttributes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'clickable',\n    'draggable',\n    'editable',\n    'fillColor',\n    'fillOpacity',\n    'geodesic',\n    'icon',\n    'map',\n    'paths',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'draggable',\n    'editable',\n    'visible',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:189\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        Component\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-map',\n  styles: [\n    `\n      map-view {\n        height: 300px;\n      }\n    `,\n  ],\n  templateUrl: './my-map.component.html',\n})\nexport class MyMapComponent {\n  lat: number = 0;\n  lng: number = 0;\n  zoom: number = 10;\n  paths: Array = [\n    { lat: 0, lng: 10 },\n    { lat: 0, lng: 20 },\n    { lat: 10, lng: 20 },\n    { lat: 10, lng: 10 },\n    { lat: 0, lng: 10 },\n  ];\n  // Nesting paths will create a hole where they overlap;\n  nestedPaths: Array> = [\n    [\n      { lat: 0, lng: 10 },\n      { lat: 0, lng: 20 },\n      { lat: 10, lng: 20 },\n      { lat: 10, lng: 10 },\n      { lat: 0, lng: 10 },\n    ],\n    [\n      { lat: 0, lng: 15 },\n      { lat: 0, lng: 20 },\n      { lat: 5, lng: 20 },\n      { lat: 5, lng: 15 },\n      { lat: 0, lng: 15 },\n    ],\n  ];\n}Template\n\n  \n\n    \n\n    \n        import {\n  AfterContentInit,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { GeoPoint } from '../interface/geo-point';\nimport { PolygonManager } from '../services/managers/polygon.manager';\n\n/**\n * NgMapsPolygon renders a polygon on a {@link https://ng-maps.github.io/core/components/NgMapsViewComponent.html|NgMapsView}\n */\n@Directive({\n  selector: 'map-polygon',\n})\nexport class NgMapsPolygonDirective\n  implements OnDestroy, OnChanges, AfterContentInit {\n  constructor(private _polygonManager: PolygonManager) {}\n\n  private static _polygonOptionsAttributes: Array = [\n    'clickable',\n    'draggable',\n    'editable',\n    'fillColor',\n    'fillOpacity',\n    'geodesic',\n    'icon',\n    'map',\n    'paths',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'draggable',\n    'editable',\n    'visible',\n  ];\n  /**\n   * Indicates whether this Polygon handles mouse events. Defaults to true.\n   */\n  @Input() public clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this shape over the map. The geodesic\n   * property defines the mode of dragging. Defaults to false.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('polyDraggable') public draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this shape by dragging the control\n   * points shown at the vertices and on each segment. Defaults to false.\n   */\n  @Input() public editable: boolean = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended\n   * named colors.\n   */\n  @Input() public fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0\n   */\n  @Input() public fillOpacity: number;\n\n  /**\n   * When true, edges of the polygon are interpreted as geodesic and will\n   * follow the curvature of the Earth. When false, edges of the polygon are\n   * rendered as straight lines in screen space. Note that the shape of a\n   * geodesic polygon may appear to change when dragged, as the dimensions\n   * are maintained relative to the surface of the earth. Defaults to false.\n   */\n  @Input() public geodesic: boolean = false;\n\n  /**\n   * The ordered sequence of coordinates that designates a closed loop.\n   * Unlike polylines, a polygon may consist of one or more paths.\n   *  As a result, the paths property may specify one or more arrays of\n   * LatLng coordinates. Paths are closed automatically; do not repeat the\n   * first vertex of the path as the last vertex. Simple polygons may be\n   * defined using a single array of LatLngs. More complex polygons may\n   * specify an array of arrays. Any simple arrays are converted into Arrays.\n   * Inserting or removing LatLngs from the Array will automatically update\n   * the polygon on the map.\n   */\n  @Input() public paths: Array | Array> = [];\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended\n   * named colors.\n   */\n  @Input() public strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() public strokeOpacity: number;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() public strokeWeight: number;\n\n  /**\n   * Whether this polygon is visible on the map. Defaults to true.\n   */\n  @Input() public visible: boolean;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() public zIndex: number;\n\n  /**\n   * This event is fired when the DOM click event is fired on the Polygon.\n   */\n  @Output()\n  public polyClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM dblclick event is fired on the Polygon.\n   */\n  @Output()\n  public polyDblClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the polygon.\n   */\n  @Output()\n  public polyDrag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the polygon.\n   */\n  @Output()\n  public polyDragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the polygon.\n   */\n  @Output()\n  public polyDragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the Polygon.\n   */\n  @Output()\n  public polyMouseDown: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the Polygon.\n   */\n  @Output()\n  public polyMouseMove: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on Polygon mouseout.\n   */\n  @Output()\n  public polyMouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on Polygon mouseover.\n   */\n  @Output()\n  public polyMouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired whe the DOM mouseup event is fired on the Polygon\n   */\n  @Output()\n  public polyMouseUp: EventEmitter = new EventEmitter();\n\n  /**\n   * This even is fired when the Polygon is right-clicked on.\n   */\n  @Output()\n  public polyRightClick: EventEmitter = new EventEmitter();\n\n  private _id: string;\n  private _polygonAddedToManager: boolean = false;\n  private subscription: Subscription = new Subscription();\n\n  /** @internal */\n  public ngAfterContentInit() {\n    if (!this._polygonAddedToManager) {\n      this._init();\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): any {\n    if (!this._polygonAddedToManager) {\n      this._init();\n      return;\n    }\n\n    this._polygonManager.setPolygonOptions(\n      this,\n      this._updatePolygonOptions(changes),\n    );\n  }\n\n  private _init() {\n    this._polygonManager.addPolygon(this);\n    this._polygonAddedToManager = true;\n    this._addEventListeners();\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      {\n        name: 'click',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyClick.emit(ev),\n      },\n      {\n        name: 'dblclick',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyDblClick.emit(ev),\n      },\n      { name: 'drag', handler: (ev: MouseEvent) => this.polyDrag.emit(ev) },\n      {\n        name: 'dragend',\n        handler: (ev: MouseEvent) => this.polyDragEnd.emit(ev),\n      },\n      {\n        name: 'dragstart',\n        handler: (ev: MouseEvent) => this.polyDragStart.emit(ev),\n      },\n      {\n        name: 'mousedown',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyMouseDown.emit(ev),\n      },\n      {\n        name: 'mousemove',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyMouseMove.emit(ev),\n      },\n      {\n        name: 'mouseout',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyMouseOut.emit(ev),\n      },\n      {\n        name: 'mouseover',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyMouseOver.emit(ev),\n      },\n      {\n        name: 'mouseup',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyMouseUp.emit(ev),\n      },\n      {\n        name: 'rightclick',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyRightClick.emit(ev),\n      },\n    ];\n    handlers.forEach((obj) => {\n      const os = this._polygonManager\n        .createEventObservable(obj.name, this)\n        .subscribe(obj.handler);\n      this.subscription.add(os);\n    });\n  }\n\n  private _updatePolygonOptions(\n    changes: SimpleChanges,\n  ): google.maps.PolygonOptions {\n    return Object.keys(changes)\n      .filter(\n        (k) =>\n          NgMapsPolygonDirective._polygonOptionsAttributes.indexOf(k) !== -1,\n      )\n      .reduce((obj: any, k: string) => {\n        obj[k] = changes[k].currentValue;\n        return obj;\n      }, {});\n  }\n\n  /** @internal */\n  public id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this._polygonManager.deletePolygon(this);\n    // unsubscribe all registered observable subscriptions\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsPolyline.html":{"url":"directives/NgMapsPolyline.html","title":"directive - NgMapsPolyline","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsPolyline\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/polyline.ts\n        \n\n            \n                Description\n            \n            \n                NgMapsPolyline renders a polyline on a NgMapsView\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map-polyline\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _polylineAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _polylineOptionsAttributes\n                            \n                            \n                                    Public\n                                points\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addEventListeners\n                            \n                            \n                                    Public\n                                _getPoints\n                            \n                            \n                                    Private\n                                _init\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                editable\n                            \n                            \n                                geodesic\n                            \n                            \n                                icons\n                            \n                            \n                                polylineDraggable\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                lineClick\n                            \n                            \n                                lineDblClick\n                            \n                            \n                                lineDrag\n                            \n                            \n                                lineDragEnd\n                            \n                            \n                                lineDragStart\n                            \n                            \n                                lineMouseDown\n                            \n                            \n                                lineMouseMove\n                            \n                            \n                                lineMouseOut\n                            \n                            \n                                lineMouseOver\n                            \n                            \n                                lineMouseUp\n                            \n                            \n                                lineRightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_polylineManager: PolylineManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/polyline.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _polylineManager\n                                                  \n                                                        \n                                                                        PolylineManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:44\n                            \n                        \n                \n                    \n                        Indicates whether this Polyline handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:57\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this shape by dragging the control points shown at the\nvertices and on each segment. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        geodesic\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:65\n                            \n                        \n                \n                    \n                        When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\nthe Earth. When false, edges of the polygon are rendered as straight lines in screen space.\nNote that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\nare maintained relative to the surface of the earth. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        icons\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:85\n                            \n                        \n                \n                    \n                        The icons to be rendered along the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polylineDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:51\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this shape over the map. The geodesic property defines the\nmode of dragging. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:70\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:75\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:80\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:90\n                            \n                        \n                \n                    \n                        Whether this polyline is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:95\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        lineClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:101\n                            \n                        \n                \n                    \n                        This event is fired when the DOM click event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:107\n                            \n                        \n                \n                    \n                        This event is fired when the DOM dblclick event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDrag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:113\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:119\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:125\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:131\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:137\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:143\n                            \n                        \n                \n                    \n                        This event is fired on Polyline mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:149\n                            \n                        \n                \n                    \n                        This event is fired on Polyline mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:155\n                            \n                        \n                \n                    \n                        This event is fired whe the DOM mouseup event is fired on the Polyline\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineRightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:161\n                            \n                        \n                \n                    \n                        This even is fired when the Polyline is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _addEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            _getPoints\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getPoints()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _init()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            id\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    id()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:279\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:169\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _polylineAddedToManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:170\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _polylineOptionsAttributes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'draggable',\n    'editable',\n    'visible',\n    'geodesic',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'zIndex',\n    'icons',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            points\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(NgMapsPolylinePoint)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:167\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:171\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        Polyline\nExample\nComponent\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-map',\n  styles: [\n    `\n      .agm-map-container {\n        height: 300px;\n      }\n    `,\n  ],\n  templateUrl: './my-map.component.html',\n})\nexport class MyMapComponent {}Template\n\n  \n    \n    \n    \n    \n  \n\n    \n\n    \n        import {\n  AfterContentInit,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  QueryList,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { PolylineManager } from '../services/managers/polyline-manager';\nimport { NgMapsPolylinePoint } from './polyline-point';\n\nlet polylineId = 0;\n\n/**\n * NgMapsPolyline renders a polyline on a {@link https://ng-maps.github.io/core/components/NgMapsViewComponent.html|NgMapsView}\n */\n@Directive({\n  selector: 'map-polyline',\n})\nexport class NgMapsPolyline implements OnDestroy, OnChanges, AfterContentInit {\n  constructor(private _polylineManager: PolylineManager) {\n    this._id = (polylineId++).toString();\n  }\n\n  private static _polylineOptionsAttributes: Array = [\n    'draggable',\n    'editable',\n    'visible',\n    'geodesic',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'zIndex',\n    'icons',\n  ];\n  /**\n   * Indicates whether this Polyline handles mouse events. Defaults to true.\n   */\n  @Input() public clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this shape over the map. The geodesic property defines the\n   * mode of dragging. Defaults to false.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('polylineDraggable') public draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this shape by dragging the control points shown at the\n   * vertices and on each segment. Defaults to false.\n   */\n  @Input() public editable: boolean = false;\n\n  /**\n   * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n   * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n   * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n   * are maintained relative to the surface of the earth. Defaults to false.\n   */\n  @Input() public geodesic: boolean = false;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() public strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0.\n   */\n  @Input() public strokeOpacity: number;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() public strokeWeight: number;\n\n  /**\n   * The icons to be rendered along the polyline.\n   */\n  @Input() public icons: Array;\n\n  /**\n   * Whether this polyline is visible on the map. Defaults to true.\n   */\n  @Input() public visible: boolean = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() public zIndex: number;\n\n  /**\n   * This event is fired when the DOM click event is fired on the Polyline.\n   */\n  @Output()\n  public lineClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM dblclick event is fired on the Polyline.\n   */\n  @Output()\n  public lineDblClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the polyline.\n   */\n  @Output()\n  public lineDrag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the polyline.\n   */\n  @Output()\n  public lineDragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the polyline.\n   */\n  @Output()\n  public lineDragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the Polyline.\n   */\n  @Output()\n  public lineMouseDown: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the Polyline.\n   */\n  @Output()\n  public lineMouseMove: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on Polyline mouseout.\n   */\n  @Output()\n  public lineMouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on Polyline mouseover.\n   */\n  @Output()\n  public lineMouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired whe the DOM mouseup event is fired on the Polyline\n   */\n  @Output()\n  public lineMouseUp: EventEmitter = new EventEmitter();\n\n  /**\n   * This even is fired when the Polyline is right-clicked on.\n   */\n  @Output()\n  public lineRightClick: EventEmitter = new EventEmitter();\n\n  /**\n   * @internal\n   */\n  @ContentChildren(NgMapsPolylinePoint)\n  public points: QueryList;\n\n  private _id: string;\n  private _polylineAddedToManager: boolean = false;\n  private subscription: Subscription = new Subscription();\n\n  /** @internal */\n  public ngAfterContentInit() {\n    if (this.points.length) {\n      this.points.forEach((point: NgMapsPolylinePoint) => {\n        const subscription = point.positionChanged.subscribe(() => {\n          this._polylineManager.updatePolylinePoints(this);\n        });\n        this.subscription.add(subscription);\n      });\n    }\n    if (!this._polylineAddedToManager) {\n      this._init();\n    }\n    const s = this.points.changes.subscribe(() =>\n      this._polylineManager.updatePolylinePoints(this),\n    );\n    this.subscription.add(s);\n    this._polylineManager.updatePolylinePoints(this);\n  }\n\n  public ngOnChanges(changes: SimpleChanges): any {\n    if (!this._polylineAddedToManager) {\n      this._init();\n      return;\n    }\n\n    const options: { [propName: string]: any } = {};\n    const optionKeys = Object.keys(changes).filter(\n      (k) => NgMapsPolyline._polylineOptionsAttributes.indexOf(k) !== -1,\n    );\n    optionKeys.forEach((k) => (options[k] = changes[k].currentValue));\n    this._polylineManager.setPolylineOptions(this, options);\n  }\n\n  private _init() {\n    this._polylineManager.addPolyline(this);\n    this._polylineAddedToManager = true;\n    this._addEventListeners();\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      {\n        name: 'click',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineClick.emit(ev),\n      },\n      {\n        name: 'dblclick',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineDblClick.emit(ev),\n      },\n      { name: 'drag', handler: (ev: MouseEvent) => this.lineDrag.emit(ev) },\n      {\n        name: 'dragend',\n        handler: (ev: MouseEvent) => this.lineDragEnd.emit(ev),\n      },\n      {\n        name: 'dragstart',\n        handler: (ev: MouseEvent) => this.lineDragStart.emit(ev),\n      },\n      {\n        name: 'mousedown',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineMouseDown.emit(ev),\n      },\n      {\n        name: 'mousemove',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineMouseMove.emit(ev),\n      },\n      {\n        name: 'mouseout',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineMouseOut.emit(ev),\n      },\n      {\n        name: 'mouseover',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineMouseOver.emit(ev),\n      },\n      {\n        name: 'mouseup',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineMouseUp.emit(ev),\n      },\n      {\n        name: 'rightclick',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineRightClick.emit(ev),\n      },\n    ];\n    handlers.forEach((obj) => {\n      const os = this._polylineManager\n        .createEventObservable(obj.name, this)\n        .subscribe(obj.handler);\n      this.subscription.add(os);\n    });\n  }\n\n  /** @internal */\n  public _getPoints(): Array {\n    if (this.points) {\n      return this.points.toArray();\n    } else {\n      return [];\n    }\n  }\n\n  /** @internal */\n  public id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this._polylineManager.deletePolyline(this);\n    // unsubscribe all registered observable subscriptions\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsPolylinePoint.html":{"url":"directives/NgMapsPolylinePoint.html","title":"directive - NgMapsPolylinePoint","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsPolylinePoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/polyline-point.ts\n        \n\n            \n                Description\n            \n            \n                NgMapsPolylinePoint represents one element of a polyline within a  NgMapsPolyline\n\n            \n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map-polyline-point\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                positionChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/polyline-point.ts:32\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline-point.ts:21\n                            \n                        \n                \n                    \n                        The latitude position of the point.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline-point.ts:26\n                            \n                        \n                \n                    \n                        The longitude position of the point;\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        positionChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline-point.ts:32\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the position of the point changed.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline-point.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\n\n/**\n * NgMapsPolylinePoint represents one element of a polyline within a  {@link\n * NgMapsPolyline}\n */\n@Directive({\n  selector: 'map-polyline-point',\n})\nexport class NgMapsPolylinePoint implements OnChanges {\n  /**\n   * The latitude position of the point.\n   */\n  @Input() public latitude: number;\n\n  /**\n   * The longitude position of the point;\n   */\n  @Input() public longitude: number;\n\n  /**\n   * This event emitter gets emitted when the position of the point changed.\n   */\n  @Output()\n  public positionChanged: EventEmitter = new EventEmitter();\n\n  constructor() {}\n\n  public ngOnChanges(changes: SimpleChanges): any {\n    if (changes.latitude || changes.longitude) {\n      const position: google.maps.LatLngLiteral = {\n        lat: changes.latitude ? changes.latitude.currentValue : this.latitude,\n        lng: changes.longitude\n          ? changes.longitude.currentValue\n          : this.longitude,\n      } as google.maps.LatLngLiteral;\n      this.positionChanged.emit(position);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsRectangleDirective.html":{"url":"directives/NgMapsRectangleDirective.html","title":"directive - NgMapsRectangleDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsRectangleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/rectangle.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnChanges\n                            OnDestroy\n                            RectangleOptions\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map-rectangle\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _mapOptions\n                            \n                            \n                                    Private\n                                _rectangleAddedToManager\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerEventListeners\n                            \n                            \n                                    Private\n                                _updateRectangleOptionsChanges\n                            \n                            \n                                    Public\n                                getBounds\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                east\n                            \n                            \n                                editable\n                            \n                            \n                                fillColor\n                            \n                            \n                                fillOpacity\n                            \n                            \n                                north\n                            \n                            \n                                rectangleDraggable\n                            \n                            \n                                south\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokePosition\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                west\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                boundsChange\n                            \n                            \n                                drag\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragStart\n                            \n                            \n                                mouseDown\n                            \n                            \n                                mouseMove\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                mouseUp\n                            \n                            \n                                rectangleClick\n                            \n                            \n                                rectangleDblClick\n                            \n                            \n                                rightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_manager: RectangleManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/rectangle.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _manager\n                                                  \n                                                        \n                                                                        RectangleManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:57\n                            \n                        \n                \n                    \n                        Indicates whether this Rectangle handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        east\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:42\n                            \n                        \n                \n                    \n                        The east position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:69\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this rectangle by dragging the control points shown at\nthe center and around the circumference of the rectangle. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:74\n                            \n                        \n                \n                    \n                        The fill color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:79\n                            \n                        \n                \n                    \n                        The fill opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        north\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:37\n                            \n                        \n                \n                    \n                        The north position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:63\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this rectangle over the map. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        south\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:47\n                            \n                        \n                \n                    \n                        The south position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:84\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:89\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokePosition\n                    \n                \n                \n                    \n                        Type :     \"CENTER\" | \"INSIDE\" | \"OUTSIDE\"\n\n                    \n                \n                \n                    \n                        Default value : 'CENTER'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:95\n                            \n                        \n                \n                    \n                        The stroke position. Defaults to CENTER.\nThis property is not supported on Internet Explorer 8 and earlier.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:100\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:105\n                            \n                        \n                \n                    \n                        Whether this rectangle is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        west\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:52\n                            \n                        \n                \n                    \n                        The west position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:110\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        boundsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:116\n                            \n                        \n                \n                    \n                        This event is fired when the rectangle's is changed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        drag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:134\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:140\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:146\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:152\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:158\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:164\n                            \n                        \n                \n                    \n                        This event is fired on rectangle mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:170\n                            \n                        \n                \n                    \n                        This event is fired on rectangle mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:176\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mouseup event is fired on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:122\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:128\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:182\n                            \n                        \n                \n                    \n                        This event is fired when the rectangle is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _registerEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _registerEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _updateRectangleOptionsChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateRectangleOptionsChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:215\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:276\n                \n            \n\n\n            \n                \n                    Gets the LatLngBounds of this Rectangle.\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:268\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _mapOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _rectangleAddedToManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:184\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:186\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { BoundsLiteral } from '../interface/bounds';\nimport { RectangleOptions } from '../interface/rectangle-options';\nimport { RectangleManager } from '../services/managers/rectangle-manager';\n\n@Directive({\n  selector: 'map-rectangle',\n})\nexport class NgMapsRectangleDirective\n  implements OnInit, OnChanges, OnDestroy, RectangleOptions {\n  constructor(private _manager: RectangleManager) {}\n\n  private static _mapOptions: Array = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ];\n  /**\n   * The north position of the rectangle (required).\n   */\n  @Input() public north: number;\n\n  /**\n   * The east position of the rectangle (required).\n   */\n  @Input() public east: number;\n\n  /**\n   * The south position of the rectangle (required).\n   */\n  @Input() public south: number;\n\n  /**\n   * The west position of the rectangle (required).\n   */\n  @Input() public west: number;\n\n  /**\n   * Indicates whether this Rectangle handles mouse events. Defaults to true.\n   */\n  @Input() public clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this rectangle over the map. Defaults to false.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('rectangleDraggable') public draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this rectangle by dragging the control points shown at\n   * the center and around the circumference of the rectangle. Defaults to false.\n   */\n  @Input() public editable: boolean = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() public fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0.\n   */\n  @Input() public fillOpacity: number;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() public strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() public strokeOpacity: number;\n\n  /**\n   * The stroke position. Defaults to CENTER.\n   * This property is not supported on Internet Explorer 8 and earlier.\n   */\n  @Input() public strokePosition: 'CENTER' | 'INSIDE' | 'OUTSIDE' = 'CENTER';\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() public strokeWeight: number = 0;\n\n  /**\n   * Whether this rectangle is visible on the map. Defaults to true.\n   */\n  @Input() public visible: boolean = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() public zIndex: number;\n\n  /**\n   * This event is fired when the rectangle's is changed.\n   */\n  @Output()\n  public boundsChange: EventEmitter = new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the rectangle.\n   */\n  @Output()\n  public rectangleClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the rectangle.\n   */\n  @Output()\n  public rectangleDblClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the rectangle.\n   */\n  @Output()\n  public drag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the rectangle.\n   */\n  @Output()\n  public dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the rectangle.\n   */\n  @Output()\n  public dragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the rectangle.\n   */\n  @Output()\n  public mouseDown: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the rectangle.\n   */\n  @Output()\n  public mouseMove: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on rectangle mouseout.\n   */\n  @Output()\n  public mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on rectangle mouseover.\n   */\n  @Output()\n  public mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mouseup event is fired on the rectangle.\n   */\n  @Output()\n  public mouseUp: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the rectangle is right-clicked on.\n   */\n  @Output()\n  public rightClick: EventEmitter = new EventEmitter();\n\n  private _rectangleAddedToManager: boolean = false;\n\n  private subscription: Subscription = new Subscription();\n\n  /** @internal */\n  public ngOnInit() {\n    this._manager.addRectangle(this);\n    this._rectangleAddedToManager = true;\n    this._registerEventListeners();\n  }\n\n  /** @internal */\n  public ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (!this._rectangleAddedToManager) {\n      return;\n    }\n    if (changes.north || changes.east || changes.south || changes.west) {\n      this._manager.setBounds(this);\n    }\n    if (changes.editable) {\n      this._manager.setEditable(this);\n    }\n    if (changes.draggable) {\n      this._manager.setDraggable(this);\n    }\n    if (changes.visible) {\n      this._manager.setVisible(this);\n    }\n    this._updateRectangleOptionsChanges(changes);\n  }\n\n  private _updateRectangleOptionsChanges(changes: {\n    [propName: string]: SimpleChange;\n  }) {\n    const options: { [propName: string]: any } = {};\n    const optionKeys = Object.keys(changes).filter(\n      (k) => NgMapsRectangleDirective._mapOptions.indexOf(k) !== -1,\n    );\n    optionKeys.forEach((k) => {\n      options[k] = changes[k].currentValue;\n    });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  private _registerEventListeners() {\n    const events: Map> = new Map\n    >();\n    events.set('bounds_changed', this.boundsChange);\n    events.set('click', this.rectangleClick);\n    events.set('dblclick', this.rectangleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragStart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('rightclick', this.rightClick);\n\n    events.forEach((eventEmitter, eventName) => {\n      this.subscription.add(\n        this._manager\n          .createEventObservable(eventName, this)\n          .subscribe((value) => {\n            switch (eventName) {\n              case 'bounds_changed':\n                this._manager\n                  .getBounds(this)\n                  .then((bounds) => eventEmitter.emit(bounds));\n                break;\n              default:\n                eventEmitter.emit(value);\n            }\n          }),\n      );\n    });\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this._manager.removeRectangle(this);\n  }\n\n  /**\n   * Gets the LatLngBounds of this Rectangle.\n   */\n  public getBounds(): Promise {\n    return this._manager.getBounds(this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoOpMapsAPILoader.html":{"url":"classes/NoOpMapsAPILoader.html","title":"class - NoOpMapsAPILoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoOpMapsAPILoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/maps-api-loader/noop-maps-api-loader.ts\n        \n\n            \n                Description\n            \n            \n                When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a \nTag.\nIt's important that the Google Maps API script gets loaded first on the page.\n\n            \n\n            \n                Extends\n            \n            \n                        MapsAPILoader\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _document\n                            \n                            \n                                    Protected\n                                _window\n                            \n                            \n                                    Protected\n                                _document\n                            \n                            \n                                    Protected\n                                _window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configure\n                            \n                            \n                                    Public\n                                load\n                            \n                            \n                                    Public\n                                    Abstract\n                                configure\n                            \n                            \n                                    Public\n                                    Abstract\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/maps-api-loader/noop-maps-api-loader.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Document\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/maps-api-loader/noop-maps-api-loader.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _window\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Window\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/maps-api-loader/noop-maps-api-loader.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Document\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MapsAPILoader\n\n                                \n                            \n                        \n                            \n                                    Defined in         MapsAPILoader:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _window\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Window\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MapsAPILoader\n\n                                \n                            \n                        \n                            \n                                    Defined in         MapsAPILoader:5\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/noop-maps-api-loader.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/noop-maps-api-loader.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MapsAPILoader\n\n                \n            \n            \n                \n                        Defined in         MapsAPILoader:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Inherited from         MapsAPILoader\n\n                \n            \n            \n                \n                        Defined in         MapsAPILoader:7\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject } from '@angular/core';\nimport { MapsAPILoader } from './maps-api-loader';\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a ``\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nexport class NoOpMapsAPILoader extends MapsAPILoader {\n  protected _window: Window;\n  protected _document: Document;\n\n  constructor(@Inject(DOCUMENT) document: any) {\n    super();\n    this._document = document as Document;\n    this._window = this._document.defaultView;\n  }\n\n  public load(): Promise {\n    return Promise.resolve();\n  }\n\n  public configure(config: any): void {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Padding.html":{"url":"interfaces/Padding.html","title":"interface - Padding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Padding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/padding.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bottom\n                                \n                                \n                                        left\n                                \n                                \n                                        right\n                                \n                                \n                                        top\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                    \n                                \n                                \n                                    \n                                        bottom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Padding {\n  bottom: number;\n  left: number;\n  right: number;\n  top: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PolygonManager.html":{"url":"injectables/PolygonManager.html","title":"injectable - PolygonManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PolygonManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/polygon.manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _polygons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                addPolygon\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                deletePolygon\n                            \n                            \n                                    Public\n                                    Abstract\n                                setPolygonOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                updatePolygon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/polygon.manager.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            addPolygon\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPolygon(path: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polygon.manager.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, path: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polygon.manager.ts:29\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            deletePolygon\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolygon(paths: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polygon.manager.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setPolygonOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolygonOptions(path: NgMapsPolygonDirective, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polygon.manager.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            updatePolygon\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolygon(polygon: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polygon.manager.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    polygon\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _polygons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map>\n\n                        \n                    \n                    \n                        \n                            Default value : new Map\n  >()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/managers/polygon.manager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { NgMapsPolygonDirective } from '../../directives/polygon';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\n\n@Injectable()\nexport abstract class PolygonManager {\n  protected _polygons: Map> = new Map\n  >();\n\n  constructor(\n    protected _mapsWrapper: MapsApiWrapper,\n    protected _zone: NgZone,\n  ) {}\n\n  public abstract addPolygon(path: NgMapsPolygonDirective);\n\n  public abstract updatePolygon(polygon: NgMapsPolygonDirective): Promise;\n\n  public abstract setPolygonOptions(\n    path: NgMapsPolygonDirective,\n    options: { [propName: string]: any },\n  ): Promise;\n\n  public abstract deletePolygon(paths: NgMapsPolygonDirective): Promise;\n\n  public abstract createEventObservable(\n    eventName: string,\n    path: NgMapsPolygonDirective,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PolylineManager.html":{"url":"injectables/PolylineManager.html","title":"injectable - PolylineManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PolylineManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/polyline-manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _polylines\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _convertPoints\n                            \n                            \n                                    Public\n                                    Abstract\n                                addPolyline\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                deletePolyline\n                            \n                            \n                                    Public\n                                    Abstract\n                                setPolylineOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                updatePolylinePoints\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/polyline-manager.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _convertPoints\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _convertPoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            addPolyline\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:41\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            deletePolyline\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setPolylineOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolylineOptions(line: NgMapsPolyline, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            updatePolylinePoints\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolylinePoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _polylines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map>\n\n                        \n                    \n                    \n                        \n                            Default value : new Map\n  >()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/managers/polyline-manager.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GeoPoint } from '../../interface/geo-point';\n\nimport { NgMapsPolyline } from '../../directives/polyline';\nimport { NgMapsPolylinePoint } from '../../directives/polyline-point';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\n\n@Injectable()\nexport abstract class PolylineManager {\n  protected _polylines: Map> = new Map\n  >();\n\n  constructor(\n    protected _mapsWrapper: MapsApiWrapper,\n    protected _zone: NgZone,\n  ) {}\n\n  protected _convertPoints(line: NgMapsPolyline): Array {\n    return line._getPoints().map((point: NgMapsPolylinePoint) => {\n      return {\n        lat: point.latitude,\n        lng: point.longitude,\n      } as google.maps.LatLngLiteral;\n    });\n  }\n\n  public abstract addPolyline(line: NgMapsPolyline);\n\n  public abstract updatePolylinePoints(line: NgMapsPolyline): Promise;\n\n  public abstract setPolylineOptions(\n    line: NgMapsPolyline,\n    options: { [propName: string]: any },\n  ): Promise;\n\n  public abstract deletePolyline(line: NgMapsPolyline): Promise;\n\n  public abstract createEventObservable(\n    eventName: string,\n    line: NgMapsPolyline,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RectangleManager.html":{"url":"injectables/RectangleManager.html","title":"injectable - RectangleManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RectangleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/rectangle-manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _rectangles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                addRectangle\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                getBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                removeRectangle\n                            \n                            \n                                    Public\n                                    Abstract\n                                setBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                setDraggable\n                            \n                            \n                                    Public\n                                    Abstract\n                                setEditable\n                            \n                            \n                                    Public\n                                    Abstract\n                                setOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_apiWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/rectangle-manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _apiWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            addRectangle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:48\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            removeRectangle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:21\n                \n            \n\n\n            \n                \n                    Removes the given rectangle from the map.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setDraggable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setEditable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(rectangle: NgMapsRectangleDirective, options: google.maps.RectangleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                google.maps.RectangleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            setVisible\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _rectangles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map>\n\n                        \n                    \n                    \n                        \n                            Default value : new Map\n  >()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/managers/rectangle-manager.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { NgMapsRectangleDirective } from '../../directives/rectangle';\nimport { BoundsLiteral } from '../../interface/bounds';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\n\n@Injectable()\nexport abstract class RectangleManager {\n  protected _rectangles: Map> = new Map\n  >();\n\n  constructor(protected _apiWrapper: MapsApiWrapper, protected _zone: NgZone) {}\n\n  public abstract addRectangle(rectangle: NgMapsRectangleDirective): void;\n\n  /**\n   * Removes the given rectangle from the map.\n   */\n  public abstract removeRectangle(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise;\n\n  public abstract setOptions(\n    rectangle: NgMapsRectangleDirective,\n    options: google.maps.RectangleOptions,\n  ): Promise;\n\n  public abstract getBounds(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise;\n\n  public abstract setBounds(rectangle: NgMapsRectangleDirective): Promise;\n\n  public abstract setEditable(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise;\n\n  public abstract setDraggable(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise;\n\n  public abstract setVisible(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise;\n\n  public abstract createEventObservable(\n    eventName: string,\n    rectangle: NgMapsRectangleDirective,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RectangleOptions.html":{"url":"interfaces/RectangleOptions.html","title":"interface - RectangleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RectangleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/rectangle-options.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ShapeOptions\n            \n\n\n\n\n    \n\n\n    \n        import { ShapeOptions } from './shape-options';\n\nexport interface RectangleOptions extends ShapeOptions {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScriptLoaderService.html":{"url":"injectables/ScriptLoaderService.html","title":"injectable - ScriptLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScriptLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/script-loader.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alreadyLoaded\n                            \n                            \n                                    Public\n                                document\n                            \n                            \n                                    Private\n                                head\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createCSSElement\n                            \n                            \n                                    Private\n                                createScriptElement\n                            \n                            \n                                    Public\n                                loadCSS\n                            \n                            \n                                    Public\n                                loadScript\n                            \n                            \n                                    Private\n                                observeLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/script-loader.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createCSSElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCSSElement(href: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/script-loader.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    href\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLLinkElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createScriptElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createScriptElement(src: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/script-loader.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    src\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLScriptElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadCSS\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadCSS(href: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/script-loader.service.ts:86\n                \n            \n\n\n            \n                \n                    Dynamically loads the given CSS file\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    href\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The url of the CSS to load dynamically\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Observable Promise that will be resolved once the CSS file has been loaded.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadScript\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadScript(src: string, integrity?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/script-loader.service.ts:69\n                \n            \n\n\n            \n                \n                    Dynamically loads the given script\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    src\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The url of the script to load dynamically\n\n                                    \n                                \n                                \n                                    integrity\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        set integrity check value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Observable Observable that will be resolved once the script has been loaded.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            observeLoad\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    observeLoad(element: HTMLScriptElement | HTMLLinkElement)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/script-loader.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLScriptElement | HTMLLinkElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alreadyLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map>\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/script-loader.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Document\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/script-loader.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            head\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLHeadElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/script-loader.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScriptLoaderService {\n  public document: Document;\n  private head: HTMLHeadElement;\n  private alreadyLoaded: Map> = new Map();\n\n  constructor(@Inject(DOCUMENT) document: any) {\n    this.document = document as Document;\n    this.head = this.document.head;\n  }\n\n  private observeLoad(\n    element: HTMLScriptElement | HTMLLinkElement,\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      function successHandler(event: UIEvent) {\n        const readyState: string = (element as any).readyState;\n        // For IE we have readyState, other browsers just call the load event and we proccede\n        if (\n          readyState === 'complete' ||\n          readyState === 'loaded' ||\n          event.type === 'load'\n        ) {\n          resolve(event);\n        }\n      }\n\n      function errorHandler(event: UIEvent) {\n        reject(event);\n      }\n\n      element.addEventListener('readystatechange', successHandler);\n      element.addEventListener('load', successHandler);\n      element.addEventListener('error', errorHandler);\n    });\n  }\n\n  private createScriptElement(src: string): HTMLScriptElement {\n    const script = document.createElement('script');\n    script.src = src;\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    return script;\n  }\n\n  // eslint-disable-next-line\n  private createCSSElement(href: string): HTMLLinkElement {\n    const style = document.createElement('link');\n\n    style.rel = 'stylesheet';\n    style.type = 'text/css';\n    style.href = href;\n\n    return style;\n  }\n\n  /**\n   * Dynamically loads the given script\n   * @param src The url of the script to load dynamically\n   * @param integrity set integrity check value\n   * @returns Observable Observable that will be resolved once the script has been loaded.\n   */\n  public loadScript(src: string, integrity?: string): Promise {\n    if (this.alreadyLoaded.has(src)) {\n      return this.alreadyLoaded.get(src);\n    } else {\n      const script = this.createScriptElement(src);\n      const promise = this.observeLoad(script);\n      this.head.appendChild(script);\n      this.alreadyLoaded.set(src, promise);\n      return promise;\n    }\n  }\n\n  /**\n   * Dynamically loads the given CSS file\n   * @param href The url of the CSS to load dynamically\n   * @returns Observable Promise that will be resolved once the CSS file has been loaded.\n   */\n  public loadCSS(href: string): Promise {\n    // eslint-disable-line\n    if (this.alreadyLoaded.has(href)) {\n      return this.alreadyLoaded.get(href);\n    } else {\n      const style = this.createCSSElement(href);\n      const promise = this.observeLoad(style);\n      this.head.appendChild(style);\n      this.alreadyLoaded.set(href, promise);\n      return promise;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShapeOptions.html":{"url":"interfaces/ShapeOptions.html","title":"interface - ShapeOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ShapeOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/shape-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fillColor\n                                \n                                \n                                            Optional\n                                        fillOpacity\n                                \n                                \n                                            Optional\n                                        strokeColor\n                                \n                                \n                                            Optional\n                                        strokeOpacity\n                                \n                                \n                                            Optional\n                                        strokeWeight\n                                \n                                \n                                            Optional\n                                        visible\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                    \n                                \n                                \n                                    \n                                        fillColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillOpacity\n                                    \n                                \n                                \n                                    \n                                        fillOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ShapeOptions {\n  fillColor?: string;\n  fillOpacity?: number;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  visible?: boolean;\n  zIndex?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/core.module.ts\n            \n            function\n            coreDirectives\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/core.module.ts\n            \n            function\n            isGoogleMaps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/core.module.ts\n            \n            function\n            isHereMaps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/core.module.ts\n            \n            variable\n            MAP_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/directives/circle.ts\n            \n            directive\n            NgMapsCircleDirective\n            \n                71 %\n                (27/38)\n            \n        \n        \n            \n                \n                src/lib/directives/fit-bounds.ts\n            \n            directive\n            NgMapsFitBoundsDirective\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/lib/directives/info-window.ts\n            \n            component\n            NgMapsInfoWindowComponent\n            \n                48 %\n                (12/25)\n            \n        \n        \n            \n                \n                src/lib/directives/info-window.ts\n            \n            variable\n            infoWindowId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/directives/map.ts\n            \n            component\n            NgMapsViewComponent\n            \n                68 %\n                (49/72)\n            \n        \n        \n            \n                \n                src/lib/directives/marker.ts\n            \n            component\n            NgMapsMarkerComponent\n            \n                56 %\n                (21/37)\n            \n        \n        \n            \n                \n                src/lib/directives/marker.ts\n            \n            variable\n            markerId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/directives/polygon.ts\n            \n            directive\n            NgMapsPolygonDirective\n            \n                66 %\n                (24/36)\n            \n        \n        \n            \n                \n                src/lib/directives/polyline-point.ts\n            \n            directive\n            NgMapsPolylinePoint\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/lib/directives/polyline.ts\n            \n            directive\n            NgMapsPolyline\n            \n                62 %\n                (22/35)\n            \n        \n        \n            \n                \n                src/lib/directives/polyline.ts\n            \n            variable\n            polylineId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/directives/rectangle.ts\n            \n            directive\n            NgMapsRectangleDirective\n            \n                73 %\n                (28/38)\n            \n        \n        \n            \n                \n                src/lib/interface/bounds.ts\n            \n            interface\n            BoundsLiteral\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/interface/circle-options.ts\n            \n            interface\n            CircleOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/interface/geo-point.ts\n            \n            interface\n            GeoPoint\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/lib/interface/map-options.ts\n            \n            interface\n            MapOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/interface/marker-icon.ts\n            \n            interface\n            MarkerIcon\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/lib/interface/marker-options.ts\n            \n            interface\n            MarkerOptions\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/lib/interface/padding.ts\n            \n            interface\n            Padding\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/interface/rectangle-options.ts\n            \n            interface\n            RectangleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/interface/shape-options.ts\n            \n            interface\n            ShapeOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/services/fit-bounds.ts\n            \n            class\n            FitBoundsAccessor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/services/fit-bounds.ts\n            \n            injectable\n            FitBoundsService\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/lib/services/fit-bounds.ts\n            \n            interface\n            FitBoundsDetails\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/services/managers/circle-manager.ts\n            \n            injectable\n            CircleManager\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/lib/services/managers/info-window.manager.ts\n            \n            injectable\n            InfoWindowManager\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/lib/services/managers/marker.manager.ts\n            \n            injectable\n            MarkerManager\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/lib/services/managers/polygon.manager.ts\n            \n            injectable\n            PolygonManager\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/services/managers/polyline-manager.ts\n            \n            injectable\n            PolylineManager\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lib/services/managers/rectangle-manager.ts\n            \n            injectable\n            RectangleManager\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-loader/maps-api-loader.ts\n            \n            injectable\n            MapsAPILoader\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-loader/noop-maps-api-loader.ts\n            \n            class\n            NoOpMapsAPILoader\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-wrapper.ts\n            \n            injectable\n            MapsApiWrapper\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/lib/services/script-loader.service.ts\n            \n            injectable\n            ScriptLoaderService\n            \n                20 %\n                (2/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.0.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^13.0.0\n        \n            @angular/core : ^13.0.0\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            coreDirectives   (src/.../core.module.ts)\n                        \n                        \n                            isGoogleMaps   (src/.../core.module.ts)\n                        \n                        \n                            isHereMaps   (src/.../core.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/core.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            coreDirectives\n                        \n                        \n                    \n                \n            \n            \n                \ncoreDirectives()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isGoogleMaps\n                        \n                        \n                    \n                \n            \n            \n                \nisGoogleMaps(token)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isHereMaps\n                        \n                        \n                    \n                \n            \n            \n                \nisHereMaps(token)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ng-maps/core\n@ng-maps/core is a simple, modular and tree-shakable library for displaying google-maps inside an angular application\nInstallation\n\nNpm: npm install @ng-maps/core\nYarn: yarn add @ng-maps/core\n\nThen you will need to install typings for google maps as a dev dependency\n\nNpm: npm install -D @types/googlemaps\nYarn: yarn add -D @types/googlemaps\n\nAdd NgMapsCoreModule to your AppModule.\nAdditionally you will need to add the @ng-maps/google module and follow the instruction there. As alternative there is a here maps module which isn't ready for production yet.\nLazy loading configuration\nIf you can not provide configuration at module import level you can load it at a later time.\nYou just need to inject MapsAPILoader into a component or service and call the method configure(config) with a valid configuration.\nUsage\nSimple Map\nAdd the map to your components template\nAdd a height to your components CSS, for example\nmap-view {\n  height: 300px;\n}Input options\n\n\n\nName\nType\nValues\nDescription\n\n\n\n\nlongitude\nNumber\n\n\n\n\nlatitude\nNumber\n\n\n\n\nminZoom\nNumber\n\n\n\n\nmaxZoom\nNumber\n\n\n\n\nzoom\nNumber\nBetween 0 and MaxZoom, typically 18\n\n\n\nfitBounds\nLatLngBoundsLiteral, LatLngBounds or Boolean\nIf set to true attaches to mapFitBounds directives on \n\n\n\nmapTypeId\nroadmap, hybrid, satellite, terrain\n\n\n\n\nlayers\nArray or String\nTrafficLayer or TransitLayer or BicyclingLayer\nActivates layer as described in TrafficLayer Documentation\n\n\n\nMarker\nAdditionally you can add markers\n\n  \nInput options\n\n\n\nName\nType\nValues\nDescription\n\n\n\n\nlongitude\nNumber\n\n\n\n\nlatitude\nNumber\n\n\n\n\n\nOutputs\n\n\n\nName\nValue\nDescription\n\n\n\n\nmarkerClick\nComponent\n\n\n\n\nAdditional features\nOther features are provided in submodules. Find out more on the project page at github\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgMapsCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BoundsMap   (src/.../fit-bounds.ts)\n                        \n                        \n                            LayerTypes   (src/.../layers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/services/fit-bounds.ts\n    \n    \n        \n            \n                \n                    \n                    BoundsMap\n                \n            \n            \n                \n                            Map\n\n                \n            \n        \n    \n    src/lib/interface/layers.ts\n    \n    \n        \n            \n                \n                    \n                    LayerTypes\n                \n            \n            \n                \n                        \"TrafficLayer\" | \"TransitLayer\" | \"BicyclingLayer\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            infoWindowId   (src/.../info-window.ts)\n                        \n                        \n                            MAP_PROVIDER   (src/.../core.module.ts)\n                        \n                        \n                            markerId   (src/.../marker.ts)\n                        \n                        \n                            polylineId   (src/.../polyline.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/directives/info-window.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            infoWindowId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n    src/lib/core.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAP_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('Map Provider')\n                        \n                    \n\n\n            \n        \n\n    src/lib/directives/marker.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            markerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n    src/lib/directives/polyline.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            polylineId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
