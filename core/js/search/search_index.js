var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/BoundsLiteral.html",[0,0.64,1,1.284]],["body/interfaces/BoundsLiteral.html",[0,0.953,1,2.253,2,2.052,3,0.416,4,0.416,5,0.367,6,4.254,7,0.272,8,0.55,9,5.503,10,5.503,11,5.503,12,5.503,13,1.318,14,0.294,15,0.026,16,0.416,17,0.023,18,0.023]],["title/injectables/CircleManager.html",[19,0.548,20,2.251]],["body/injectables/CircleManager.html",[1,1.116,3,0.243,4,0.243,5,0.214,7,0.159,8,0.388,14,0.298,15,0.027,16,0.243,17,0.016,18,0.016,19,0.677,20,2.781,21,1.116,22,5.56,23,1.956,24,1.636,25,4.862,26,0.851,27,1.313,28,2.462,29,4.179,30,2.479,31,2.293,32,3.1,33,4.179,34,4.179,35,3.529,36,3.529,37,3.529,38,3.607,39,4.179,40,3.529,41,0.69,42,2.482,43,2.318,44,2.479,45,2.699,46,1.237,47,2.94,48,1.332,49,1.228,50,0.891,51,3.529,52,4.179,53,3.55,54,2.482,55,5.721,56,1.311,57,1.387,58,0.726,59,2.94,60,1.627,61,1.83,62,1.503,63,2.94,64,2.94,65,2.227,66,4.179,67,2.482,68,4.179,69,2.94,70,4.179,71,2.94,72,3.529,73,2.525,74,1.099,75,4.179,76,2.94,77,4.179,78,2.94,79,4.179,80,2.94,81,2.94,82,1.978,83,2.93,84,2.482,85,0.972,86,4.179,87,4.179,88,2.94,89,4.179,90,2.94,91,0.793,92,0.643,93,0.732,94,2.94,95,0.893,96,0.476,97,0.793,98,2.482,99,1.387,100,2.181,101,1.116,102,1.387,103,1.116,104,0.74,105,0.908,106,1.627,107,0.403,108,2.181,109,3.607,110,2.181,111,2.482,112,2.94,113,2.94,114,1.499]],["title/interfaces/CircleOptions.html",[0,0.64,83,1.872]],["body/interfaces/CircleOptions.html",[0,0.975,2,2.101,3,0.426,4,0.426,5,0.375,7,0.279,8,0.558,13,1.205,14,0.232,15,0.026,16,0.426,17,0.023,18,0.023,50,0.825,82,1.706,83,3.331,95,0.77,115,4.356,116,2.855,117,5.082,118,3.851,119,5.545,120,3.827]],["title/classes/FitBoundsAccessor.html",[107,0.464,121,1.724]],["body/classes/FitBoundsAccessor.html",[0,0.724,1,1.901,3,0.316,4,0.316,5,0.279,7,0.207,13,0.724,14,0.173,15,0.027,16,0.488,17,0.019,18,0.019,19,0.811,24,1.896,26,1.019,27,1.212,28,2.23,31,1.807,46,0.724,56,0.78,58,0.572,62,1.896,74,1.16,85,1.267,93,0.977,95,0.94,96,0.62,97,1.033,99,1.807,101,2.117,102,1.807,103,1.454,104,0.964,105,1.547,107,0.811,121,2.552,122,2.842,123,3.025,124,2.12,125,3.331,126,3.331,127,3.331,128,3.025,129,3.331,130,3.209,131,3.331,132,2.771,133,3.574,134,3.83,135,4.138,136,2.842,137,2.842,138,3.714,139,3.714,140,2.842,141,2.842,142,2.549,143,2.192,144,2.12,145,2.315,146,1.953,147,3.574,148,1.454,149,2.549,150,2.771,151,2.842,152,2.842,153,2.315,154,3.086,155,2.842,156,2.842,157,2.842,158,2.842,159,3.714,160,2.842,161,2.842,162,2.842,163,2.842,164,2.549,165,2.842,166,2.842,167,2.842,168,2.842,169,2.842,170,2.842,171,1.845,172,1.953,173,2.842,174,2.842,175,1.61,176,3.714,177,2.842,178,3.714,179,2.842,180,3.714,181,3.025,182,2.842,183,2.842,184,2.842,185,2.842,186,2.842]],["title/interfaces/FitBoundsDetails.html",[0,0.64,146,1.724]],["body/interfaces/FitBoundsDetails.html",[0,0.739,1,1.926,2,1.593,3,0.323,4,0.323,5,0.284,7,0.211,8,0.47,13,0.739,14,0.229,15,0.027,16,0.492,17,0.019,18,0.019,19,0.822,24,1.909,27,1.168,28,2.112,31,1.844,58,0.584,62,1.842,74,1.168,93,0.987,95,0.945,96,0.633,97,1.054,99,1.844,101,2.345,102,1.844,103,1.484,104,0.984,105,1.568,107,0.772,121,1.993,123,2.363,124,2.164,125,2.602,126,2.602,127,2.602,128,2.363,129,2.602,130,3.149,131,2.602,132,2.164,133,2.363,135,4.179,136,2.901,137,2.901,138,3.764,139,3.764,140,2.901,141,2.901,142,2.602,143,2.221,144,2.164,145,2.363,146,2.587,147,3.894,148,1.484,149,2.602,150,2.808,151,2.901,152,2.901,153,2.363,154,3.117,155,2.901,156,2.901,157,2.901,158,2.901,159,3.764,160,2.901,161,2.901,162,2.901,163,2.901,164,2.602,165,2.901,166,2.901,167,2.901,168,2.901,169,2.901,170,2.901,171,1.863,172,1.993,173,2.901,174,2.901,175,1.626,176,3.764,177,2.901,178,3.764,179,2.901,180,3.764,181,3.066,182,2.901,183,2.901,184,2.901,185,2.901,186,2.901]],["title/injectables/FitBoundsService.html",[19,0.548,150,1.872]],["body/injectables/FitBoundsService.html",[0,0.602,1,1.927,3,0.263,4,0.263,5,0.232,7,0.172,8,0.41,13,0.96,14,0.281,15,0.027,16,0.453,17,0.017,18,0.017,19,0.716,21,1.209,24,2.058,26,0.9,27,1.244,28,2.112,31,2.587,41,0.748,46,1.212,48,1.214,49,1.127,50,0.818,56,1.214,58,0.66,62,1.843,74,1.197,85,1.053,91,1.192,92,0.967,93,1.045,95,0.89,96,0.516,97,0.859,99,1.502,101,2.187,102,1.502,103,1.209,104,0.802,105,1.366,107,0.696,121,1.624,123,3.914,124,1.762,125,2.119,126,2.119,127,2.119,128,1.924,129,2.119,130,3.179,131,2.119,132,1.762,133,1.924,135,4.275,136,2.363,137,2.363,138,3.28,139,3.28,140,2.363,141,2.363,142,2.119,143,2.401,144,1.762,145,2.671,146,1.624,147,3.695,148,1.209,149,2.119,150,3.035,151,3.28,152,3.28,153,2.671,154,3.504,155,3.767,156,3.28,157,3.767,158,3.28,159,3.28,160,2.363,161,2.363,162,2.363,163,2.363,164,2.119,165,2.363,166,2.363,167,2.363,168,3.767,169,3.28,170,3.28,171,1.68,172,1.624,173,2.363,174,2.363,175,1.466,176,3.28,177,2.363,178,3.28,179,3.767,180,4.424,181,3.603,182,2.363,183,3.28,184,2.363,185,3.767,186,2.363,187,4.42,188,4.42,189,3.184,190,3.184,191,3.184,192,3.184,193,1.569,194,3.184,195,3.184,196,3.184,197,3.184,198,3.184,199,3.184,200,3.184,201,3.184,202,3.184,203,3.184]],["title/interfaces/GeoPoint.html",[0,0.64,101,1.284]],["body/interfaces/GeoPoint.html",[0,0.831,2,1.79,3,0.363,4,0.363,5,0.32,7,0.237,8,0.507,13,1.233,14,0.246,15,0.027,16,0.363,17,0.021,18,0.021,92,1.463,101,2.074,204,3.71,205,3.259,206,3.443,207,3.443,208,3.024,209,6.221,210,4.14,211,5.463,212,6.523,213,6.855,214,5.463,215,5.463,216,5.463,217,2.724,218,5.463,219,3.024,220,4.054,221,6.221,222,5.463,223,5.463,224,4.613,225,3.024,226,6.221,227,5.253,228,6.221,229,5.463,230,5.463,231,5.463,232,5.463,233,4.054,234,5.463]],["title/injectables/InfoWindowManager.html",[19,0.548,235,2.251]],["body/injectables/InfoWindowManager.html",[3,0.275,4,0.275,5,0.242,7,0.18,8,0.423,14,0.294,15,0.027,16,0.275,17,0.017,18,0.017,19,0.739,21,1.265,24,1.869,26,0.928,27,1.302,28,2.445,30,2.651,38,3.858,41,1.071,43,2.448,44,2.651,45,2.85,46,1.223,48,1.317,49,1.209,50,0.877,56,1.283,57,1.572,58,0.776,60,1.844,61,1.997,62,1.81,65,2,73,2.756,74,1.057,82,1.72,91,0.899,92,0.729,93,0.799,95,0.874,96,0.54,97,0.899,104,1.309,105,1.03,106,1.844,107,0.457,193,1.869,235,3.035,236,5.514,237,2.814,238,5.199,239,5.199,240,3.851,241,5.199,242,3.858,243,4.56,244,4.56,245,2.217,246,5.199,247,3.379,248,4.56,249,3.035,250,3.332,251,3.819,252,3.332,253,4.995,254,4.56,255,3.332,256,3.332,257,4.56,258,3.035,259,2.564,260,4.56,261,3.332,262,3.332,263,3.332,264,3.332,265,2.013,266,3.332,267,5.199,268,3.332,269,4.56,270,3.332,271,4.56,272,3.332,273,2.814,274,1.844,275,3.332]],["title/interfaces/MapOptions.html",[0,0.64,276,2.251]],["body/interfaces/MapOptions.html",[0,0.873,2,1.88,3,0.381,4,0.381,5,0.336,7,0.249,8,0.522,13,1.149,14,0.301,15,0.027,16,0.381,17,0.022,18,0.022,46,0.873,50,0.952,58,0.841,110,3.424,116,2.554,276,3.747,277,4.755,278,6.329,279,3.227,280,6.329,281,6.329,282,6.329,283,3.502,284,6.329,285,4.614,286,5.631,287,4.614,288,2.481,289,3.897]],["title/injectables/MapsAPILoader.html",[19,0.548,143,1.481]],["body/injectables/MapsAPILoader.html",[3,0.381,4,0.381,5,0.336,7,0.249,8,0.522,14,0.274,15,0.026,16,0.381,17,0.022,18,0.022,19,0.912,21,1.752,24,2.04,26,1.146,27,1.248,28,2.368,46,1.197,48,0.939,49,0.873,50,0.633,56,1.146,65,1.863,95,0.689,96,0.747,105,2.113,107,0.633,143,2.466,144,3.591,193,1.74,274,3.117,290,4.318,291,3.424,292,5.132,293,5.132,294,4.755,295,4.211,296,4.178,297,4.614,298,3.897,299,4.614,300,4.178,301,4.614,302,4.614]],["title/injectables/MapsApiWrapper.html",[19,0.548,43,1.481]],["body/injectables/MapsApiWrapper.html",[1,2.261,3,0.191,4,0.191,5,0.168,7,0.125,8,0.325,13,1.105,14,0.293,15,0.027,16,0.191,17,0.013,18,0.013,19,0.567,21,0.877,24,1.712,26,0.713,27,1.323,28,2.477,31,2.225,32,3.499,35,2.956,41,0.543,43,1.533,44,2.155,45,2.404,46,1.259,48,1.307,49,1.214,50,0.88,56,1.341,58,0.796,61,1.533,62,1.306,65,2.241,82,2.179,83,2.61,92,0.506,93,0.405,95,0.889,96,0.374,97,0.623,99,1.09,100,1.714,101,2.466,102,1.09,103,0.877,104,0.582,105,2.075,107,0.317,108,1.714,109,1.714,130,2.404,143,2.065,144,1.279,145,1.396,175,0.667,193,1.306,265,3.062,276,3.687,283,1.279,288,1.889,290,4.443,303,1.951,304,4.227,305,4.227,306,4.716,307,4.227,308,3.501,309,3.501,310,4.227,311,4.227,312,3.501,313,3.501,314,4.227,315,3.569,316,4.716,317,3.136,318,4.716,319,4.716,320,3.501,321,4.227,322,3.501,323,3.501,324,3.501,325,3.501,326,2.31,327,3.501,328,3.501,329,2.31,330,2.31,331,2.31,332,3.957,333,3.501,334,5.333,335,2.31,336,3.501,337,2.31,338,2.31,339,4.227,340,2.31,341,3.501,342,2.31,343,2.85,344,2.31,345,1.937,346,3.501,347,2.31,348,3.501,349,2.31,350,2.31,351,3.499,352,2.31,353,3.501,354,2.31,355,5.333,356,3.687,357,2.31,358,2.31,359,2.31,360,2.31,361,2.31,362,2.31,363,3.501,364,2.31,365,3.501,366,2.31,367,2.31,368,3.501,369,2.31,370,3.501,371,2.31,372,3.501,373,2.31,374,3.501,375,2.31,376,3.501,377,2.31,378,2.31,379,1.537,380,2.31,381,1.951,382,2.31,383,1.951,384,1.951,385,3.501,386,1.951,387,2.31,388,2.31]],["title/interfaces/MarkerIcon.html",[0,0.64,389,2.251]],["body/interfaces/MarkerIcon.html",[0,0.861,2,1.854,3,0.376,4,0.376,5,0.331,7,0.246,8,0.518,13,1.314,14,0.306,15,0.026,16,0.376,17,0.021,18,0.021,50,0.959,58,1.028,389,3.716,390,3.377,391,3.844,392,3.807,393,3.807,394,4.674,395,6.299,396,6.299,397,3.486,398,3.486,399,3.486,400,4.674]],["title/injectables/MarkerManager.html",[19,0.548,247,2.044]],["body/injectables/MarkerManager.html",[3,0.232,4,0.232,5,0.205,7,0.152,8,0.375,14,0.299,15,0.027,16,0.232,17,0.016,18,0.016,19,0.656,21,1.067,24,1.699,26,0.824,27,1.32,28,2.462,30,2.418,41,0.95,43,2.271,44,2.418,45,2.645,46,1.25,48,1.346,49,1.244,50,0.902,56,1.331,57,1.326,58,0.775,60,1.556,61,1.772,62,1.466,65,1.339,74,0.981,91,0.758,92,0.615,93,0.709,95,0.775,96,0.455,97,0.758,104,0.708,105,0.869,106,1.556,107,0.385,171,0.93,175,0.812,193,2.095,206,1.556,207,1.556,245,1.871,247,2.446,249,2.693,279,1.433,317,3.519,384,3.418,401,2.374,402,4.742,403,4.047,404,4.047,405,4.047,406,4.047,407,4.047,408,4.047,409,4.047,410,4.047,411,4.047,412,4.047,413,4.047,414,4.047,415,4.047,416,4.047,417,2.811,418,4.047,419,3.866,420,2.811,421,4.4,422,2.237,423,2.811,424,4.047,425,2.811,426,4.047,427,2.811,428,4.047,429,2.811,430,4.047,431,2.811,432,4.047,433,2.811,434,4.047,435,2.811,436,4.047,437,2.811,438,4.047,439,2.811,440,4.047,441,2.811,442,4.047,443,2.811,444,4.047,445,2.811,446,4.047,447,2.811,448,4.047,449,2.811,450,2.811,451,2.374,452,4.047,453,2.374,454,2.811,455,2.811,456,2.811,457,2.086,458,2.811,459,2.811,460,2.086,461,2.811,462,1.556,463,2.811,464,2.374,465,2.811,466,1.145,467,2.811,468,1.231,469,2.811,470,2.086,471,2.811,472,1.433,473,2.811,474,2.374,475,2.086,476,4.047,477,2.811,478,2.811,479,2.811]],["title/interfaces/MarkerOptions.html",[0,0.64,343,2.044]],["body/interfaces/MarkerOptions.html",[0,0.887,2,1.912,3,0.388,4,0.388,5,0.341,7,0.253,8,0.528,13,1.158,14,0.294,15,0.027,16,0.388,17,0.022,18,0.022,50,0.94,58,0.99,104,1.603,116,2.597,288,2.348,343,3.438,390,3.482,457,4.723,466,2.593,468,2.787,470,4.723,472,3.245,480,5.171,481,3.847,482,4.723]],["title/directives/NgMapsCircleDirective.html",[53,1.724,483,0.977]],["body/directives/NgMapsCircleDirective.html",[1,0.639,3,0.139,4,0.139,5,0.122,7,0.091,8,0.253,13,1.106,14,0.298,15,0.027,16,0.139,17,0.01,18,0.01,20,2.637,26,0.556,27,1.264,31,1.869,32,2.94,41,0.395,46,1.254,48,0.701,49,0.651,50,0.472,53,1.392,55,5.636,56,1,57,0.794,58,0.734,61,1.195,65,1.311,74,0.968,82,1.14,83,1.906,91,1.466,92,1.157,93,1.05,95,0.696,96,0.273,97,0.454,99,0.794,100,1.249,101,0.639,102,0.794,103,0.639,107,0.231,119,4.149,148,1.308,171,1.14,175,0.995,193,1.346,208,2.411,217,1.735,219,1.906,233,2.026,259,2.868,279,1.756,288,1.925,289,1.421,332,3.461,345,2.411,392,2.632,393,2.632,397,2.411,398,2.411,399,2.411,422,1.288,462,2.193,466,2.001,468,2.151,472,2.505,481,2.632,483,0.788,484,0.686,485,1.421,486,1.288,487,2.292,488,1.625,489,1.756,490,0.794,491,1.288,492,2.794,493,3.445,494,2.082,495,2.909,496,2.832,497,2.94,498,2.73,499,1.288,500,2.02,501,2.637,502,1.288,503,2.292,504,1.288,505,3.445,506,3.445,507,3.445,508,2.632,509,2.082,510,2.082,511,2.899,512,2.899,513,2.632,514,2.632,515,2.899,516,3.445,517,2.292,518,1.421,519,1.683,520,2.306,521,2.524,522,1.683,523,1.817,524,2.395,525,1.817,526,1.817,527,2.292,528,3.52,529,2.771,530,1.683,531,3.534,532,1.65,533,1.683,534,1.817,535,2.819,536,1.817,537,1.817,538,1.817,539,2.306,540,1.683,541,2.94,542,2.637,543,2.637,544,3.406,545,2.637,546,2.637,547,2.637,548,1.683,549,2.193,550,2.395,551,2.395,552,1.683,553,3.346,554,1.683,555,1.907,556,1.683,557,2.73,558,2.73,559,2.026,560,1.683,561,3.269,562,1.683,563,1.683,564,1.65,565,1.817,566,1.683,567,1.683,568,1.817,569,1.817,570,3.403,571,1.683,572,3.906,573,3.963,574,2.637,575,1.683,576,2.637,577,2.582,578,2.637,579,2.94,580,1.683,581,1.683,582,1.65,583,1.65,584,1.683,585,1.65,586,1.683,587,1.65,588,1.683,589,2.582,590,1.683,591,1.683,592,1.683,593,1.683,594,1.683,595,1.683,596,1.65,597,1.65,598,1.683,599,2.73,600,2.395,601,1.683,602,1.288,603,1.683,604,2.026,605,1.683,606,1.288,607,1.683,608,1.683,609,1.683,610,1.683,611,2.909,612,1.683,613,1.683,614,2.594,615,2.982,616,2.556,617,1.683,618,1.249,619,1.017,620,1.12,621,1.421,622,1.421,623,1.249,624,1.421,625,1.683,626,1.683,627,1.683,628,2.73,629,1.249,630,1.249,631,1.12,632,1.12,633,1.683,634,1.421,635,1.421,636,1.249,637,1.421,638,1.249,639,1.421,640,1.683,641,1.683,642,1.683,643,1.65,644,1.12,645,1.249,646,1.12,647,1.683,648,0.932,649,1.12,650,1.12,651,1.017,652,1.421,653,1.421,654,1.683,655,1.683,656,1.421,657,1.683,658,1.421,659,1.683,660,1.421,661,1.421,662,1.421,663,1.421,664,1.421,665,1.421,666,1.421,667,1.421,668,1.421,669,1.421,670,1.421,671,1.421,672,1.421,673,1.421,674,1.421,675,1.421,676,1.683,677,1.683,678,1.421,679,1.421,680,1.421,681,1.249,682,2.306,683,1.421,684,1.421,685,2.026,686,1.683,687,1.683,688,1.683,689,1.683,690,2.306,691,1.683,692,1.683,693,1.683,694,1.421,695,0.932,696,1.683,697,1.421,698,1.683]],["title/modules/NgMapsCoreModule.html",[699,2.251,700,2.251]],["body/modules/NgMapsCoreModule.html",[3,0.365,4,0.365,5,0.321,15,0.027,16,0.529,17,0.021,18,0.021,53,2.796,58,0.819,85,1.462,93,0.774,95,1.014,96,0.716,98,3.731,103,1.678,104,1.381,107,0.606,130,2.253,148,1.678,171,1.462,175,1.721,251,3.035,273,3.731,274,2.445,379,3.967,419,3.035,451,3.731,699,3.649,700,3.649,701,3.278,702,2.94,703,4.068,704,5.483,705,5.483,706,5.483,707,4.419,708,5.483,709,3.035,710,4.419,711,3.649,712,4.419,713,2.796,714,3.731,715,2.587,716,4.63,717,2.587,718,2.796,719,3.731,720,3.278,721,3.731,722,3.731,723,3.731,724,4.63,725,4.419,726,3.731,727,4.419,728,4.424,729,4.419,730,4.419]],["title/directives/NgMapsFitBoundsDirective.html",[483,0.977,709,1.872]],["body/directives/NgMapsFitBoundsDirective.html",[3,0.249,4,0.249,5,0.219,7,0.163,8,0.394,14,0.264,15,0.027,16,0.249,17,0.016,18,0.016,26,0.865,27,1.198,28,1.505,41,0.998,46,1.162,48,1.003,49,0.931,50,0.675,56,1.089,73,2.568,74,0.803,85,0.996,91,1.522,92,1.345,93,0.938,95,0.799,96,0.488,97,0.812,107,0.675,114,1.535,121,2.986,124,1.666,125,2.828,126,2.828,127,2.828,128,2.568,129,2.828,130,2.877,131,2.828,132,2.352,133,1.819,142,2.003,146,3.134,148,1.87,150,2.961,154,2.352,193,1.654,217,1.318,225,1.666,265,1.819,288,1.505,466,2.581,482,2.233,483,1.545,484,1.226,486,2.004,487,3.277,488,2.323,489,2.511,490,1.42,491,2.004,492,3.023,496,3.402,499,2.004,500,2.728,501,3.561,502,2.004,521,2.806,529,1.535,574,3.561,577,2.352,602,2.323,606,2.004,614,1.86,681,2.233,685,2.233,695,1.666,709,2.352,731,5.279,732,4.249,733,4.249,734,1.86,735,4.765,736,4.925,737,4.249,738,3.01,739,4.925,740,4.249,741,4.249,742,3.01,743,2.568,744,3.153,745,4.249,746,3.01,747,5.643,748,4.249,749,4.249,750,3.588,751,5.351,752,4.925,753,3.233,754,3.01,755,3.01,756,3.01,757,4.946,758,3.01,759,4.249,760,3.01,761,4.249,762,3.01,763,2.542,764,4.249,765,3.01,766,3.01,767,3.01,768,3.01,769,3.01,770,3.01,771,3.01,772,3.01,773,2.233,774,1.666,775,3.01,776,3.01,777,2.542,778,4.249,779,2.003,780,3.01,781,4.249,782,2.003,783,3.01,784,5.351,785,4.925,786,4.925,787,3.01,788,3.01,789,3.01,790,3.01,791,2.542,792,3.01,793,3.01,794,3.01]],["title/components/NgMapsInfoWindowComponent.html",[251,1.872,734,1.481]],["body/components/NgMapsInfoWindowComponent.html",[3,0.535,4,0.159,5,0.14,7,0.104,8,0.281,13,1.07,14,0.28,15,0.027,16,0.159,17,0.012,18,0.012,24,0.594,26,0.87,27,1.271,41,0.713,46,1.225,48,0.87,49,0.98,50,0.586,53,0.979,56,1.152,58,0.739,65,1.414,74,1.175,82,1.004,85,0.635,91,1.448,92,1.083,93,0.337,95,0.695,96,0.609,107,0.263,110,1.425,114,1.918,128,1.834,148,1.623,154,2.082,171,1.004,172,2.179,175,1.344,193,1.529,208,2.867,210,2.844,217,1.329,219,2.576,225,1.68,235,2.844,240,4.535,242,4.357,251,2.867,253,3.171,259,1.871,265,1.161,274,3.552,288,1.753,317,2.791,345,2.365,419,3.133,421,2.503,422,1.432,453,1.622,466,1.236,468,2.038,475,2.252,483,0.555,484,0.783,486,1.432,487,2.503,488,1.775,489,1.918,490,0.906,491,2.811,492,2.954,494,2.812,497,3.171,499,1.432,500,2.179,501,2.844,502,1.432,504,1.432,521,1.647,529,2.373,555,0.841,564,2.99,570,2.179,589,1.063,602,1.432,606,1.432,614,2.268,615,1.547,629,1.425,631,1.278,632,1.278,644,1.278,649,1.278,650,1.278,651,1.161,709,1.063,711,1.278,713,0.979,715,0.906,717,0.906,718,0.979,734,2.268,743,2.583,750,2.563,753,3.245,773,1.425,779,2.019,795,2.019,796,1.425,797,4.827,798,1.425,799,2.019,800,2.019,801,3.035,802,3.035,803,2.019,804,2.019,805,1.834,806,1.834,807,2.583,808,3.035,809,5.528,810,2.503,811,3.762,812,3.762,813,5.873,814,3.762,815,3.035,816,4.274,817,3.609,818,4.654,819,3.762,820,5.181,821,3.762,822,1.921,823,1.921,824,3.035,825,1.921,826,1.68,827,4.274,828,3.035,829,4.274,830,1.921,831,3.035,832,3.671,833,1.921,834,4.274,835,4.274,836,4.274,837,1.921,838,1.921,839,4.274,840,3.035,841,3.035,842,3.035,843,3.035,844,3.035,845,2.563,846,1.921,847,5.873,848,4.178,849,2.563,850,3.609,851,2.252,852,4.178,853,3.609,854,2.563,855,4.274,856,2.563,857,3.035,858,2.252,859,1.921,860,3.035,861,2.563,862,1.921,863,3.035,864,1.921,865,1.921,866,1.921,867,3.035,868,1.921,869,1.921,870,1.921,871,1.921,872,3.035,873,1.921,874,1.921,875,3.035,876,1.921,877,1.921,878,1.921,879,1.425,880,3.035,881,1.921,882,4.274,883,3.035,884,3.035,885,1.921,886,1.921,887,3.035,888,2.563,889,1.921,890,1.921,891,1.921,892,1.425,893,1.921,894,1.622,895,1.921,896,1.622,897,1.921,898,3.035,899,3.035,900,1.425,901,1.425,902,1.921,903,1.622,904,1.921,905,1.921,906,1.921,907,1.921,908,1.921,909,3.035,910,3.035,911,1.921,912,1.921,913,1.921,914,1.921,915,1.921,916,1.921,917,1.921,918,1.278,919,1.921,920,1.921,921,1.622,922,2.563,923,3.609,924,1.622,925,1.622,926,1.622,927,1.622,928,1.622,929,1.622,930,1.622,931,1.278,932,1.622,933,1.278,934,1.622]],["title/components/NgMapsMarkerComponent.html",[419,1.872,734,1.481]],["body/components/NgMapsMarkerComponent.html",[3,0.364,4,0.124,5,0.109,7,0.081,8,0.23,13,1.056,14,0.289,15,0.027,16,0.205,17,0.01,18,0.01,24,1.567,26,0.505,27,1.257,30,1.266,41,0.352,46,1.235,48,0.505,49,0.774,50,0.34,53,0.764,56,1.032,58,0.86,62,1.142,74,1.115,82,0.496,85,0.496,91,1.622,92,1.26,93,0.994,95,0.73,96,0.402,97,0.404,104,0.625,105,0.767,107,0.34,114,0.764,121,2.088,130,0.764,133,2.233,146,0.764,147,0.906,148,1.856,153,1.5,154,1.759,171,1.546,172,1.884,175,1.182,193,1.364,206,1.374,207,1.374,208,2.443,210,2.459,219,2.443,220,1.842,225,0.829,242,1.842,247,2.667,251,1.374,253,2.358,258,1.652,259,2.521,274,2.045,279,1.266,283,0.829,288,1.941,343,1.92,345,2.443,381,2.096,389,2.725,400,1.842,419,2.706,421,4.368,457,3.275,460,3.467,462,2.443,464,3.12,466,1.798,468,1.932,470,3.275,472,0.764,474,3.727,475,2.742,480,2.096,483,0.433,484,0.611,486,1.171,488,1.499,489,1.62,490,0.707,491,2.585,492,2.585,496,2.807,499,1.171,500,1.884,502,1.499,504,1.499,508,2.233,509,2.475,510,2.233,513,2.667,514,2.667,521,2.633,524,1.5,529,2.493,531,3.429,532,1.5,535,2.233,549,1.374,550,1.5,551,1.5,555,0.656,570,3.138,572,3.311,576,1.652,577,1.374,578,1.652,579,1.842,582,1.5,583,1.5,585,1.5,587,1.5,589,0.829,597,2.233,600,1.5,602,0.707,606,1.171,614,2.485,615,2.493,616,1.842,619,0.906,630,1.112,631,0.997,632,0.997,636,1.112,638,1.112,648,2.266,695,0.829,709,0.829,711,2.114,713,0.764,715,0.707,717,0.707,718,0.764,734,1.932,743,1.5,744,1.842,757,2.096,763,1.266,773,1.842,774,1.759,782,0.997,795,1.652,796,1.112,799,1.652,800,1.652,803,0.997,804,0.997,805,0.906,806,0.906,807,1.92,810,2.114,817,3.12,826,1.374,848,3.12,849,2.096,850,2.096,851,1.842,852,3.12,853,3.12,854,2.096,856,2.096,858,3.878,879,1.112,900,2.742,901,2.742,903,1.266,918,2.114,921,1.266,922,2.096,923,3.12,924,1.266,925,1.266,926,1.266,927,1.266,928,1.266,929,1.266,930,1.266,931,0.997,932,1.266,933,0.997,934,1.266,935,1.112,936,1.112,937,2.358,938,2.482,939,2.096,940,2.482,941,3.178,942,3.178,943,3.178,944,2.742,945,3.695,946,3.695,947,2.742,948,3.695,949,2.482,950,3.178,951,3.695,952,3.12,953,3.178,954,1.499,955,1.499,956,1.499,957,4.414,958,1.499,959,2.482,960,2.482,961,2.482,962,2.482,963,1.499,964,2.482,965,2.482,966,1.499,967,1.499,968,1.499,969,1.499,970,1.842,971,1.499,972,2.482,973,1.499,974,2.096,975,2.482,976,1.499,977,2.482,978,2.482,979,2.482,980,2.482,981,2.482,982,1.499,983,1.499,984,1.499,985,2.482,986,2.742,987,2.482,988,2.482,989,1.499,990,1.499,991,1.499,992,1.499,993,1.499,994,2.482,995,1.499,996,3.695,997,1.499,998,1.499,999,1.499,1000,1.499,1001,1.499,1002,1.499,1003,1.499,1004,1.499,1005,1.499,1006,1.499,1007,3.178,1008,2.482,1009,1.499,1010,1.499,1011,1.499,1012,3.695,1013,3.695,1014,1.499,1015,2.482,1016,3.458,1017,2.482,1018,1.499,1019,1.499,1020,1.112,1021,1.112,1022,1.499,1023,1.499,1024,1.499,1025,1.112,1026,1.266,1027,1.499,1028,1.112,1029,1.5,1030,1.374,1031,1.374,1032,1.652,1033,1.652,1034,1.499,1035,1.499,1036,1.499,1037,2.482,1038,1.499,1039,1.499,1040,1.499,1041,1.499,1042,1.112,1043,1.499,1044,1.499,1045,1.499,1046,1.499,1047,2.482,1048,1.499,1049,2.482,1050,1.112,1051,1.499,1052,1.499,1053,1.499,1054,1.499,1055,1.499,1056,1.499,1057,1.499,1058,1.499,1059,1.499,1060,1.499,1061,1.499,1062,1.499,1063,1.499,1064,1.499,1065,1.499,1066,1.499,1067,1.499,1068,1.499,1069,1.499,1070,1.499,1071,1.499,1072,4.673,1073,1.499,1074,1.499,1075,1.499,1076,1.499,1077,1.499,1078,1.499,1079,1.499,1080,1.499,1081,1.499,1082,1.499,1083,1.499,1084,1.499,1085,1.499,1086,4.095,1087,4.095,1088,1.499,1089,1.499,1090,1.266,1091,1.499,1092,1.499,1093,1.499,1094,1.499,1095,1.499,1096,1.499,1097,1.499,1098,1.499,1099,1.499,1100,1.499,1101,1.499,1102,1.499,1103,1.499,1104,1.499,1105,1.112,1106,1.112]],["title/directives/NgMapsPolygonDirective.html",[483,0.977,713,1.724]],["body/directives/NgMapsPolygonDirective.html",[3,0.121,4,0.121,5,0.106,7,0.079,8,0.226,13,1.006,14,0.288,15,0.027,16,0.201,17,0.009,18,0.009,26,0.495,27,1.228,41,0.344,46,1.234,48,0.636,49,1.066,50,0.428,56,0.941,58,0.75,62,0.452,74,1.028,85,0.484,91,1.306,92,1.059,93,0.972,95,0.603,96,0.394,97,0.395,101,0.556,102,0.69,103,0.556,107,0.334,114,0.746,120,3.236,147,1.471,148,1.186,153,1.471,171,0.805,172,1.856,175,1.051,193,1.125,206,3.208,207,3.208,217,1.594,227,2.055,259,2.796,279,2.06,283,0.81,288,1.927,392,2.442,393,2.442,394,1.806,397,2.237,398,2.237,399,2.237,422,2.66,460,1.806,462,2.015,466,2.047,468,2.024,472,2.06,481,2.2,483,0.703,484,0.596,486,1.148,488,1.474,489,1.593,490,0.69,491,1.474,492,2.869,494,1.888,496,2.679,499,1.148,500,1.856,502,1.148,503,3.076,504,1.148,508,1.888,509,0.884,510,0.884,511,2.079,512,2.079,513,1.888,514,1.888,515,2.079,517,0.974,521,2.428,523,1.619,524,2.2,525,1.619,526,1.619,527,1.619,528,3.449,529,2.956,531,3.132,532,1.471,534,1.619,535,2.925,536,1.619,537,1.619,538,1.619,541,2.701,542,2.422,543,2.422,544,3.221,545,2.422,546,2.422,547,2.422,549,2.015,550,2.2,551,2.2,555,2.329,559,1.806,561,2.902,564,1.471,565,1.619,568,1.619,569,1.619,570,3.301,572,3.887,582,1.471,583,1.471,585,1.471,587,1.471,589,2.868,596,1.471,597,1.471,602,1.474,606,1.148,614,2.428,615,2.773,619,0.884,620,2.422,646,1.619,648,0.81,651,0.884,695,0.81,713,1.241,734,1.368,753,2.794,774,0.81,779,1.619,782,2.422,799,1.619,803,0.974,804,0.974,805,0.884,806,0.884,807,0.884,810,2.079,826,0.81,845,2.055,861,3.074,918,0.974,935,1.086,937,2.318,944,2.701,947,2.701,970,1.806,974,3.074,986,1.806,1020,1.086,1021,1.086,1025,3.947,1029,0.884,1030,0.81,1031,0.81,1032,0.974,1033,0.974,1042,3.236,1050,1.086,1105,1.086,1106,1.086,1107,1.236,1108,2.434,1109,4.879,1110,1.236,1111,3.124,1112,3.124,1113,3.074,1114,3.124,1115,4.492,1116,4.682,1117,2.434,1118,3.124,1119,3.124,1120,3.124,1121,3.124,1122,3.124,1123,3.124,1124,3.124,1125,3.124,1126,3.124,1127,3.124,1128,3.124,1129,1.463,1130,2.422,1131,1.463,1132,2.434,1133,1.463,1134,1.463,1135,2.055,1136,2.055,1137,2.055,1138,1.463,1139,1.463,1140,1.463,1141,3.074,1142,2.055,1143,1.806,1144,2.055,1145,3.074,1146,2.055,1147,2.055,1148,2.055,1149,2.055,1150,2.055,1151,2.055,1152,2.055,1153,2.055,1154,2.055,1155,1.463,1156,2.434,1157,2.434,1158,3.641,1159,2.434,1160,2.434,1161,2.434,1162,2.434,1163,2.434,1164,2.434,1165,3.641,1166,4.841,1167,2.434,1168,2.055,1169,3.641,1170,2.434,1171,3.074,1172,3.641,1173,2.055,1174,3.641,1175,2.434,1176,2.434,1177,2.434,1178,1.463,1179,2.055,1180,2.055,1181,1.463,1182,1.463,1183,1.463,1184,1.463,1185,1.463,1186,1.463,1187,2.638,1188,1.463,1189,2.638,1190,1.463,1191,1.463,1192,1.463,1193,1.463,1194,1.463,1195,1.463,1196,1.463,1197,1.463,1198,2.055,1199,1.463,1200,2.055,1201,1.463,1202,1.463,1203,1.463,1204,1.463,1205,2.434,1206,1.463,1207,1.463,1208,1.463,1209,1.463,1210,1.463,1211,1.463,1212,1.463,1213,1.463,1214,1.236,1215,3.683,1216,1.463,1217,1.463,1218,1.463,1219,1.463,1220,1.463,1221,3.124,1222,2.434,1223,1.463,1224,1.086,1225,1.236,1226,1.463,1227,3.124,1228,2.055,1229,1.463,1230,1.463,1231,1.463,1232,1.236,1233,4.492,1234,4.492,1235,4.088,1236,1.463,1237,1.463,1238,2.638,1239,1.463,1240,1.463,1241,1.463,1242,1.463,1243,1.463,1244,1.463,1245,1.463,1246,1.463,1247,1.463,1248,1.236,1249,1.236,1250,1.463,1251,1.236,1252,1.236,1253,1.236,1254,1.463,1255,1.463,1256,1.463,1257,1.463,1258,1.463,1259,1.463,1260,1.463,1261,1.236]],["title/directives/NgMapsPolyline.html",[483,0.977,715,1.595]],["body/directives/NgMapsPolyline.html",[3,0.138,4,0.138,5,0.121,7,0.09,8,0.251,13,0.878,14,0.291,15,0.027,16,0.224,17,0.01,18,0.01,26,0.552,27,1.258,41,0.392,46,1.244,48,0.552,49,1.087,50,0.372,56,0.996,58,0.731,62,0.515,74,0.964,82,0.896,85,0.552,91,1.375,92,1.116,93,1.008,95,0.647,96,0.439,97,0.45,103,0.633,107,0.372,114,0.85,120,3.446,132,0.923,148,1.646,171,1.536,172,2.009,175,1.138,193,1.218,217,1.725,225,0.923,259,2.847,279,1.745,288,2.003,397,2.399,398,2.399,399,2.399,422,2.191,462,1.5,466,1.994,468,2.143,472,1.745,481,1.637,483,0.782,484,0.679,486,1.278,488,1.614,489,1.745,490,0.787,491,1.614,492,2.875,494,2.068,496,2.918,499,1.278,500,2.009,502,1.278,503,2.884,504,1.278,508,2.068,509,1.008,510,1.008,511,2.277,512,2.277,513,2.068,514,2.068,515,2.277,517,1.11,521,2.588,523,1.803,524,2.381,525,1.803,526,1.803,527,1.803,528,3.605,529,3.048,531,3.274,532,1.637,534,1.803,535,3.082,536,1.803,537,2.884,538,1.803,542,1.803,543,1.803,544,2.622,545,1.803,546,1.803,547,1.803,549,1.5,550,1.637,551,1.637,555,0.73,559,2.01,561,3.09,564,1.637,565,1.803,568,1.803,569,1.803,570,3.354,572,3.953,582,1.637,583,1.637,585,1.637,587,1.637,589,2.999,596,1.637,597,1.637,602,0.787,606,1.278,614,2.427,615,2.882,618,1.237,619,1.008,620,1.803,643,1.008,644,1.11,645,1.237,646,1.11,648,0.923,649,1.11,650,1.11,651,1.008,695,0.923,715,1.859,717,1.278,734,1.498,753,2.381,774,0.923,779,1.803,799,1.803,803,1.11,805,1.008,806,1.008,807,1.008,810,2.277,826,0.923,879,1.237,918,1.803,931,4.378,935,1.237,937,2.539,944,2.924,947,2.924,970,2.01,986,2.01,1016,2.89,1020,1.237,1021,1.237,1026,1.408,1029,1.008,1030,0.923,1031,0.923,1032,1.11,1033,1.11,1050,1.237,1105,1.237,1106,1.237,1109,3.446,1110,1.408,1113,3.328,1115,4.682,1135,2.288,1136,2.288,1137,2.288,1141,3.328,1142,2.288,1143,2.01,1144,2.288,1145,3.328,1146,3.328,1147,2.288,1148,2.288,1149,2.288,1150,2.288,1151,2.288,1152,2.288,1153,2.288,1154,2.288,1179,2.288,1180,2.288,1187,2.89,1189,2.89,1198,2.288,1200,2.288,1214,1.408,1224,1.237,1225,1.408,1228,2.288,1232,1.408,1233,4.682,1234,4.682,1235,4.306,1238,2.89,1248,1.408,1249,1.408,1251,1.408,1252,1.408,1253,1.408,1261,1.408,1262,1.237,1263,3.422,1264,3.422,1265,3.941,1266,4.894,1267,2.71,1268,3.422,1269,3.422,1270,3.422,1271,3.422,1272,3.422,1273,3.422,1274,3.422,1275,3.422,1276,3.422,1277,3.422,1278,3.422,1279,1.668,1280,2.622,1281,1.668,1282,2.71,1283,1.668,1284,1.668,1285,1.668,1286,1.668,1287,2.71,1288,1.668,1289,1.668,1290,1.668,1291,1.668,1292,1.668,1293,1.668,1294,1.668,1295,1.668,1296,1.668,1297,1.668,1298,1.668,1299,1.668,1300,1.668,1301,1.668,1302,1.668,1303,1.668,1304,1.668,1305,1.668,1306,1.668,1307,1.668,1308,1.668,1309,1.668,1310,1.668,1311,1.668,1312,1.668,1313,1.668,1314,1.668,1315,2.71,1316,1.668,1317,1.668,1318,1.668,1319,1.668,1320,1.237,1321,1.668,1322,1.668,1323,1.668,1324,1.668,1325,1.668,1326,3.422,1327,1.668,1328,3.422,1329,1.668,1330,1.668,1331,1.668,1332,1.668,1333,1.668,1334,1.668,1335,1.668,1336,1.668,1337,1.668,1338,1.668,1339,1.668,1340,1.668,1341,1.668,1342,1.668,1343,1.668,1344,1.668,1345,1.668,1346,1.668,1347,1.668,1348,1.668,1349,1.668]],["title/directives/NgMapsPolylinePoint.html",[483,0.977,717,1.595]],["body/directives/NgMapsPolylinePoint.html",[3,0.336,4,0.336,5,0.296,7,0.22,13,1.144,14,0.273,15,0.027,16,0.336,17,0.02,18,0.02,26,1.06,27,1.209,41,1.348,46,1.182,48,0.828,49,0.769,50,0.558,56,0.828,74,0.984,85,1.346,93,0.713,95,0.607,96,0.659,103,2.5,107,0.558,114,2.074,171,1.346,181,3.145,205,3.018,206,2.251,207,2.251,208,3.461,219,3.461,224,4.395,259,2.279,345,3.599,483,1.503,484,1.657,486,2.455,488,2.707,490,1.919,491,2.455,499,2.455,502,2.455,504,2.455,570,3.085,574,3.463,576,3.463,577,2.88,578,3.463,602,1.919,606,2.455,614,2.513,615,2.653,631,3.463,632,3.463,715,2.455,717,2.854,743,3.145,753,3.656,782,3.463,900,3.018,901,3.018,931,4.026,1350,5.401,1351,5.205,1352,5.739,1353,5.205,1354,4.068,1355,4.068,1356,4.068,1357,4.068,1358,4.068,1359,4.068]],["title/directives/NgMapsRectangleDirective.html",[483,0.977,718,1.724]],["body/directives/NgMapsRectangleDirective.html",[1,0.644,3,0.14,4,0.14,5,0.123,7,0.092,8,0.255,9,3.692,10,3.692,11,3.692,12,3.692,13,1.135,14,0.299,15,0.027,16,0.14,17,0.011,18,0.011,26,0.559,27,1.26,31,1.877,41,0.398,46,1.255,48,0.705,49,0.655,50,0.475,56,0.953,57,0.8,58,0.736,61,1.203,65,0.909,74,0.97,82,1.145,91,1.469,92,1.16,93,1.04,95,0.653,96,0.275,97,0.457,99,0.8,107,0.232,148,1.314,171,1.145,175,0.793,193,1.351,217,1.743,220,2.038,233,2.038,259,2.853,279,0.864,288,1.93,332,3.808,345,3.015,351,2.568,383,1.432,392,2.642,393,2.642,397,2.42,398,2.42,399,2.42,422,1.296,462,2.202,466,2.008,468,2.158,472,2.229,481,2.828,483,0.793,484,0.691,486,1.296,487,2.303,488,1.633,489,1.765,490,0.8,491,1.296,492,2.799,494,2.092,495,2.923,496,2.84,497,2.953,499,1.296,500,2.029,501,2.648,502,1.296,503,2.303,504,1.296,508,2.642,509,2.092,510,2.092,511,2.91,512,2.91,513,2.642,514,2.642,515,2.91,517,2.303,518,1.432,520,2.319,521,2.529,523,1.828,524,2.405,525,1.828,526,1.828,527,2.303,528,3.625,529,2.777,531,3.541,532,1.66,534,1.828,535,2.828,536,1.828,537,1.828,538,1.828,539,2.319,541,2.953,542,2.648,543,2.648,544,3.415,545,2.648,546,2.648,547,2.648,549,2.202,550,2.405,551,2.405,553,4.334,555,1.516,561,3.415,564,1.66,565,1.828,568,1.828,569,1.828,570,3.385,572,3.879,574,1.828,576,2.648,577,2.59,578,2.648,579,2.953,582,1.66,583,1.66,585,1.66,587,1.66,589,2.59,596,1.66,597,1.66,600,2.405,602,1.296,604,2.038,606,1.296,611,3.692,614,2.627,615,2.944,616,2.568,618,1.258,619,1.025,620,1.828,621,2.319,622,2.319,623,2.038,624,2.319,629,1.258,630,1.258,634,1.432,635,1.432,636,1.258,637,1.432,638,1.258,639,1.432,643,1.66,644,1.128,645,1.258,646,1.128,648,0.938,649,1.128,650,1.128,651,1.025,652,1.432,653,1.432,656,1.432,658,1.432,660,1.432,661,1.432,662,1.432,663,1.432,664,1.432,665,1.432,666,1.432,667,1.432,668,1.432,669,1.432,670,1.432,671,1.432,672,1.432,673,1.432,674,1.432,675,1.432,678,1.432,679,1.432,680,1.432,681,1.258,682,2.319,683,1.432,684,1.432,685,1.258,690,1.432,694,1.432,695,0.938,697,1.432,718,1.4,774,0.938,800,1.828,826,0.938,933,4.475,1029,1.025,1030,0.938,1031,0.938,1032,1.128,1033,1.128,1360,1.432,1361,3.462,1362,2.747,1363,2.747,1364,3.462,1365,3.462,1366,3.462,1367,2.648,1368,1.696,1369,1.696,1370,1.696,1371,1.696,1372,1.696,1373,1.696,1374,1.696,1375,1.696,1376,1.696,1377,1.696,1378,1.696,1379,1.696,1380,1.696,1381,1.696,1382,1.696,1383,1.696,1384,1.696,1385,2.747,1386,1.696,1387,1.696,1388,1.696,1389,1.696,1390,1.696,1391,1.696,1392,1.696,1393,1.696,1394,1.696,1395,1.696,1396,1.696,1397,1.696,1398,2.747,1399,1.696,1400,1.696,1401,1.696,1402,1.696,1403,1.696,1404,1.696,1405,1.696,1406,1.696,1407,1.696,1408,1.696,1409,1.696,1410,2.747,1411,1.696,1412,1.696,1413,1.696,1414,1.696,1415,1.696,1416,1.696,1417,1.696,1418,1.696,1419,1.696,1420,1.696,1421,1.696,1422,1.696,1423,1.696,1424,1.696,1425,1.696,1426,1.696]],["title/classes/NoOpMapsAPILoader.html",[107,0.464,1427,2.509]],["body/classes/NoOpMapsAPILoader.html",[3,0.341,4,0.341,5,0.3,7,0.223,8,0.487,14,0.274,15,0.027,16,0.341,17,0.02,18,0.02,24,1.984,26,1.069,27,1.214,41,0.968,46,1.187,48,1.069,49,0.993,50,0.72,56,1.069,65,1.737,85,1.364,95,0.862,96,0.668,104,1.642,105,2.06,107,0.565,117,4.433,122,3.059,143,2.856,145,2.492,175,1.191,193,1.622,258,4.046,274,2.905,290,3.493,291,3.059,292,4.877,293,4.877,294,4.433,295,4.046,296,3.895,298,3.482,300,4.84,577,2.905,744,3.895,1168,4.433,1173,4.433,1427,4.511,1428,4.433,1429,5.135,1430,5.25,1431,5.25,1432,5.25,1433,5.25,1434,4.433,1435,4.433,1436,3.482,1437,4.123,1438,6.081,1439,4.123,1440,4.123,1441,4.123,1442,4.123,1443,3.059,1444,3.059,1445,3.482,1446,4.123,1447,4.123,1448,4.123,1449,4.123,1450,4.123]],["title/interfaces/Padding.html",[0,0.64,356,2.251]],["body/interfaces/Padding.html",[0,0.953,2,2.052,3,0.416,4,0.416,5,0.367,7,0.272,8,0.55,13,1.318,14,0.294,15,0.026,16,0.416,17,0.023,18,0.023,356,3.95,596,3.938,1451,4.254,1452,6.517,1453,6.517,1454,6.517]],["title/injectables/PolygonManager.html",[19,0.548,1130,2.251]],["body/injectables/PolygonManager.html",[3,0.318,4,0.318,5,0.28,7,0.208,8,0.465,14,0.299,15,0.027,16,0.318,17,0.019,18,0.019,19,0.813,21,1.46,24,1.899,26,1.022,27,1.29,28,2.426,30,2.848,41,1.179,43,2.593,44,2.848,45,3.019,46,1.214,48,1.307,49,1.191,50,0.864,56,1.251,57,1.814,58,0.884,60,2.128,61,2.197,62,1.727,65,2.084,74,1.12,82,1.848,91,1.037,92,0.841,93,0.879,95,0.884,96,0.623,97,1.037,104,0.968,105,1.188,106,2.128,107,0.527,245,2.559,249,3.339,394,4.675,600,3.033,643,2.324,713,3.491,714,3.247,1109,2.853,1116,3.247,1130,3.339,1455,3.247,1456,5.587,1457,5.019,1458,5.019,1459,5.587,1460,5.019,1461,3.845,1462,5.019,1463,3.845,1464,3.845,1465,5.019,1466,3.845,1467,3.845,1468,3.845,1469,5.019,1470,3.845,1471,3.845]],["title/injectables/PolylineManager.html",[19,0.548,1280,2.251]],["body/injectables/PolylineManager.html",[3,0.296,4,0.296,5,0.261,7,0.193,8,0.444,14,0.298,15,0.027,16,0.296,17,0.018,18,0.018,19,0.776,21,1.359,23,2.383,24,1.981,26,0.975,27,1.279,28,2.406,30,2.75,41,1.124,43,2.521,44,2.75,45,2.936,46,1.212,48,1.305,49,1.193,50,0.865,56,1.257,57,1.689,58,0.86,60,1.982,61,2.096,62,1.667,65,2.043,67,3.024,74,1.089,82,1.784,84,3.024,91,0.966,92,0.784,93,0.839,95,0.922,96,0.58,97,0.966,101,1.359,102,1.689,103,2.048,104,0.902,105,1.107,106,1.982,107,0.491,175,1.034,181,2.164,206,1.982,207,1.982,245,2.383,249,3.186,422,2.259,600,2.893,643,2.164,715,3.234,716,4.043,717,2.259,1030,3.592,1280,3.186,1472,5.48,1473,5.394,1474,4.788,1475,4.788,1476,4.788,1477,5.394,1478,4.788,1479,3.581,1480,4.788,1481,3.581,1482,4.788,1483,3.024,1484,4.788,1485,3.581,1486,3.581,1487,3.024,1488,4.788,1489,3.581,1490,3.581,1491,3.581,1492,3.581]],["title/injectables/RectangleManager.html",[19,0.548,1367,2.251]],["body/injectables/RectangleManager.html",[1,1.248,3,0.272,4,0.272,5,0.239,7,0.178,8,0.419,14,0.296,15,0.027,16,0.272,17,0.017,18,0.017,19,0.732,21,1.248,23,2.188,24,1.718,26,0.92,27,1.308,28,2.454,30,2.633,31,2.436,36,4.36,37,4.36,38,3.831,40,4.36,41,0.772,42,2.777,43,2.434,44,2.633,45,2.835,46,1.232,48,1.326,49,1.22,50,0.885,51,3.816,54,2.777,56,1.298,57,1.551,58,0.771,60,1.82,61,1.979,62,1.596,65,2.201,72,3.816,73,2.731,74,1.139,82,1.708,91,0.887,92,0.72,93,0.792,95,0.87,96,0.533,97,0.887,99,1.551,104,0.828,105,1.016,106,1.82,107,0.451,108,2.44,193,1.397,718,3.532,719,2.777,933,4.522,1367,3.007,1483,2.777,1487,2.777,1493,5.547,1494,5.164,1495,4.519,1496,5.164,1497,4.519,1498,3.288,1499,4.519,1500,3.288,1501,3.288,1502,3.288,1503,3.288,1504,4.519,1505,3.288,1506,3.288,1507,3.288,1508,3.288,1509,3.288,1510,5.164,1511,3.288,1512,3.288,1513,3.288,1514,3.288]],["title/injectables/ScriptLoaderService.html",[19,0.548,1515,2.509]],["body/injectables/ScriptLoaderService.html",[3,0.245,4,0.245,5,0.408,7,0.16,8,0.39,14,0.281,15,0.027,16,0.245,17,0.016,18,0.016,19,0.682,21,1.127,26,0.857,27,1.178,41,0.697,46,1.178,48,1.187,49,1.102,50,0.799,56,1.221,58,0.99,62,1.802,65,2.168,73,3.214,74,1.006,85,1.392,91,0.801,92,1.07,93,0.857,95,0.628,96,0.481,107,0.407,109,3.627,111,3.553,171,1.983,175,1.731,217,1.842,259,1.3,265,1.794,295,3.88,300,4.688,379,2.8,386,2.507,400,3.946,492,3.11,521,1.842,743,2.954,774,1.643,777,2.507,826,2.329,832,2.203,1029,2.543,1030,2.329,1434,5.262,1435,4.741,1436,2.507,1443,2.203,1444,2.203,1445,2.507,1515,3.122,1516,5.335,1517,2.507,1518,4.888,1519,4.888,1520,4.208,1521,4.208,1522,4.208,1523,4.208,1524,4.888,1525,4.208,1526,4.208,1527,2.969,1528,5.318,1529,5.614,1530,4.208,1531,2.969,1532,5.318,1533,5.614,1534,4.208,1535,2.969,1536,6.126,1537,5.318,1538,4.924,1539,5.318,1540,5.318,1541,4.208,1542,5.831,1543,2.969,1544,2.969,1545,2.969,1546,2.969,1547,4.208,1548,2.969,1549,2.969,1550,2.969,1551,2.969,1552,2.969,1553,2.969,1554,2.969,1555,2.969,1556,4.208,1557,5.318,1558,2.969,1559,2.969,1560,2.969,1561,2.969,1562,2.969,1563,2.969,1564,2.969,1565,2.969,1566,2.969,1567,4.208,1568,2.969,1569,2.969,1570,2.969,1571,2.969,1572,2.969,1573,2.969,1574,2.969,1575,2.969,1576,2.969,1577,4.888,1578,2.969,1579,2.969,1580,2.969,1581,2.969,1582,2.969,1583,2.969,1584,2.969,1585,2.969,1586,2.969,1587,2.969,1588,2.969,1589,2.969,1590,2.969,1591,2.969,1592,2.969,1593,2.969,1594,2.969,1595,2.969]],["title/interfaces/ShapeOptions.html",[0,0.64,118,2.044]],["body/interfaces/ShapeOptions.html",[0,0.89,2,1.918,3,0.389,4,0.389,5,0.343,7,0.254,8,0.529,13,1.308,14,0.302,15,0.026,16,0.389,17,0.022,18,0.022,50,0.954,58,0.99,116,2.605,118,3.445,288,2.172,392,3.851,393,3.851,397,3.527,398,3.527,399,3.527,466,2.596,468,2.79,1596,3.976]],["title/coverage.html",[1597,3.89]],["body/coverage.html",[0,1.237,1,1.417,5,0.271,6,3.151,14,0.168,15,0.027,17,0.019,18,0.019,19,1.07,20,2.483,22,3.151,23,3.664,43,1.634,53,1.902,83,2.065,93,0.654,101,1.417,104,0.939,105,1.88,107,0.675,115,3.151,116,3.24,118,2.255,121,1.902,123,3.327,124,3.24,143,1.634,144,2.065,146,1.902,150,2.065,204,3.151,205,3.651,235,2.483,236,3.151,237,3.151,247,2.255,251,2.065,276,2.483,277,3.151,290,3.664,291,3.651,303,3.151,343,2.255,356,2.483,379,3.664,389,2.483,390,3.651,391,3.151,401,3.151,419,2.065,483,1.804,485,3.151,555,3.014,623,2.768,702,3.895,709,2.065,711,2.483,713,1.902,715,1.76,717,1.76,718,1.902,720,2.768,728,2.768,731,3.151,734,2.411,797,3.651,798,3.651,892,2.768,936,3.651,1028,2.768,1107,3.151,1130,2.483,1215,3.151,1262,3.651,1280,2.483,1320,2.768,1350,3.151,1360,3.151,1367,2.483,1427,2.768,1428,3.151,1451,3.151,1455,3.151,1472,3.151,1493,3.151,1515,2.768,1516,3.151,1517,3.151,1596,3.151,1597,3.151,1598,3.151,1599,3.731,1600,3.731,1601,6.372,1602,3.151,1603,3.151,1604,5.854,1605,3.731,1606,3.731,1607,4.921,1608,3.731,1609,3.731,1610,3.731,1611,3.731,1612,3.731,1613,3.731,1614,3.731,1615,3.731,1616,5.506,1617,3.731,1618,3.731,1619,3.731,1620,3.731,1621,3.731,1622,3.731,1623,5.506,1624,4.921,1625,3.731,1626,5.506,1627,3.731,1628,3.731,1629,3.731,1630,3.731,1631,4.155,1632,4.921,1633,3.151,1634,3.731,1635,3.731,1636,3.731,1637,3.731,1638,3.731,1639,3.731,1640,3.731,1641,3.731,1642,3.731,1643,3.731]],["title/dependencies.html",[1644,2.389,1645,3.016]],["body/dependencies.html",[15,0.026,17,0.024,18,0.024,96,0.871,1443,3.991,1645,4.575,1646,5.378,1647,5.378,1648,5.378,1649,6.166]],["title/miscellaneous/functions.html",[1650,1.565,1651,3.433]],["body/miscellaneous/functions.html",[7,0.28,14,0.272,15,0.025,17,0.023,18,0.023,48,1.23,49,1.143,50,0.829,58,0.982,702,3.456,723,4.386,724,5.103,726,4.386,728,4.742,1602,5.103,1603,5.103,1650,2.874,1651,4.386,1652,5.397]],["title/index.html",[7,0.153,1653,2.829,1654,2.829]],["body/index.html",[13,1.236,14,0.238,15,0.022,17,0.02,18,0.02,49,1.097,58,0.622,74,1.097,82,1.747,85,1.919,92,0.911,95,0.622,104,1.461,143,1.823,164,2.77,208,2.923,210,3.515,217,1.823,219,2.923,225,2.304,258,3.515,283,2.304,288,1.475,295,2.77,296,3.089,315,3.515,421,2.77,422,1.964,482,3.089,484,1.696,504,1.964,521,1.823,549,2.304,555,1.823,604,3.089,614,2.313,699,3.861,700,2.77,703,4.672,734,2.313,735,3.515,791,4.899,795,3.515,796,3.089,800,2.77,804,2.77,805,3.192,806,2.516,807,2.516,832,3.089,851,3.089,858,3.089,894,5.52,896,3.515,939,3.515,952,3.515,1031,2.304,1042,3.089,1090,4.46,1143,3.089,1171,4.46,1429,3.515,1444,3.089,1538,3.515,1598,3.515,1655,6.102,1656,4.163,1657,4.163,1658,4.163,1659,4.163,1660,4.163,1661,6.102,1662,5.802,1663,6.102,1664,4.163,1665,4.163,1666,5.282,1667,4.163,1668,5.282,1669,4.163,1670,4.163,1671,4.163,1672,4.163,1673,4.163,1674,4.163,1675,4.163,1676,4.163,1677,5.802,1678,4.163,1679,4.163,1680,4.163,1681,4.163,1682,4.163,1683,4.163,1684,4.163,1685,5.282,1686,4.163,1687,4.163,1688,4.163,1689,4.163,1690,4.163,1691,4.163,1692,4.163,1693,4.163,1694,4.163,1695,4.163,1696,4.46,1697,3.515,1698,3.515,1699,4.163,1700,4.163,1701,4.163,1702,4.163,1703,5.282,1704,4.163,1705,4.163,1706,4.163,1707,3.515,1708,4.163,1709,4.163]],["title/modules.html",[701,3.418]],["body/modules.html",[15,0.024,17,0.024,18,0.024,700,3.624,701,4.041,888,4.599,1710,5.446,1711,5.446]],["title/overview.html",[1712,3.89]],["body/overview.html",[2,2.164,15,0.023,17,0.023,18,0.023,21,2.017,122,3.941,283,3.388,484,2.164,648,2.94,699,3.535,795,3.535,1025,3.941,1631,4.486,1633,4.486,1645,4.542,1707,4.486,1712,4.486,1713,5.312,1714,5.312,1715,5.312]],["title/properties.html",[8,0.377,1644,2.389]],["body/properties.html",[8,0.483,15,0.026,17,0.023,18,0.023,74,0.985,104,1.312,132,2.884,703,3.867,1031,2.884,1224,3.867,1716,5.211,1717,5.211,1718,5.211,1719,5.211,1720,5.211,1721,5.211,1722,5.211,1723,5.211,1724,6.055,1725,6.055,1726,5.211,1727,5.211,1728,5.211,1729,5.211,1730,5.211]],["title/miscellaneous/typealiases.html",[1650,1.565,1731,4.065]],["body/miscellaneous/typealiases.html",[7,0.283,14,0.236,15,0.025,17,0.023,18,0.023,74,0.991,116,3.361,118,3.166,123,3.166,124,3.361,149,4.041,351,4.506,1650,2.899,1696,4.424,1697,4.424,1698,4.424,1732,5.239,1733,5.239,1734,6.073,1735,5.239,1736,5.239,1737,5.239,1738,5.239]],["title/miscellaneous/variables.html",[1650,1.565,1739,3.433]],["body/miscellaneous/variables.html",[7,0.273,13,1.195,14,0.285,15,0.026,17,0.023,18,0.023,91,1.759,92,1.427,93,0.886,555,2.767,702,3.363,720,4.413,721,4.268,722,4.268,797,3.75,798,4.413,892,4.413,936,3.75,1028,4.413,1262,3.75,1320,4.413,1650,2.797,1652,4.268,1739,4.268,1740,5.055,1741,5.055,1742,5.055]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":555,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":550,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["0/1",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1627,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1635,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1624,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1640,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1623,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1626,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1636,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":648,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"overview.html":{}}}],["1.0",{"_index":551,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["1/11",{"_index":1632,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":1637,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":1634,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1630,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1639,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1025,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"overview.html":{}}}],["12/25",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["14.0.0",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1221,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["16",{"_index":1638,"title":{},"body":{"coverage.html":{}}}],["170",{"_index":228,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["18",{"_index":1687,"title":{},"body":{"index.html":{}}}],["180",{"_index":221,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["190",{"_index":226,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["2",{"_index":1715,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["2/10",{"_index":1641,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1625,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1628,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1215,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"coverage.html":{}}}],["200",{"_index":156,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["22/35",{"_index":1620,"title":{},"body":{"coverage.html":{}}}],["22/37",{"_index":1615,"title":{},"body":{"coverage.html":{}}}],["24/36",{"_index":1617,"title":{},"body":{"coverage.html":{}}}],["27/38",{"_index":1606,"title":{},"body":{"coverage.html":{}}}],["28/38",{"_index":1622,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1714,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":1717,"title":{},"body":{"properties.html":{}}}],["3/9",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":806,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"index.html":{}}}],["33",{"_index":1607,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1618,"title":{},"body":{"coverage.html":{}}}],["48",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["49/72",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1222,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["50",{"_index":1629,"title":{},"body":{"coverage.html":{}}}],["51.678418",{"_index":1023,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["59",{"_index":1614,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1633,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["62",{"_index":1619,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1616,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":1612,"title":{},"body":{"coverage.html":{}}}],["7.809007",{"_index":1024,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["71",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":1621,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":623,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"coverage.html":{}}}],["9",{"_index":1631,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["90",{"_index":213,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["_addeventlisteners",{"_index":944,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["_api",{"_index":304,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["_apiwrapper",{"_index":51,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["_boundschangesampletime",{"_index":155,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_circleaddedtomanager",{"_index":493,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["_circles",{"_index":25,"title":{},"body":{"injectables/CircleManager.html":{}}}],["_convertpoints",{"_index":1474,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["_convertpoints(line",{"_index":1480,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["_createidentifier",{"_index":185,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_createidentifier(latlng",{"_index":190,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["_document",{"_index":292,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["_fitboundsaccessor",{"_index":741,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["_fitboundsdetails",{"_index":942,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_fitboundsservice",{"_index":739,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["_getpoints",{"_index":1265,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["_id",{"_index":810,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["_includeinbounds",{"_index":157,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_infowindowaddedtomanager",{"_index":811,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindowmanager",{"_index":824,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindowoptionsinputs",{"_index":812,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindows",{"_index":238,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["_init",{"_index":1113,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["_latestfitboundsdetails",{"_index":736,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["_loader",{"_index":328,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["_manager",{"_index":520,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["_mapoptions",{"_index":495,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["_mapresolver",{"_index":305,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["_mapswrapper",{"_index":249,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["_markeraddedtomanger",{"_index":943,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_markermanager",{"_index":246,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["_markers",{"_index":402,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["_polygonaddedtomanager",{"_index":1111,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["_polygonmanager",{"_index":1132,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["_polygonoptionsattributes",{"_index":1112,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["_polygons",{"_index":1456,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["_polylineaddedtomanager",{"_index":1263,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["_polylinemanager",{"_index":1282,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["_polylineoptionsattributes",{"_index":1264,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["_polylines",{"_index":1473,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["_rectangleaddedtomanager",{"_index":1361,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["_rectangles",{"_index":1494,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["_registereventlisteners",{"_index":497,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["_setinfowindowoptions",{"_index":815,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_setinfowindowoptions(changes",{"_index":863,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_updatebounds",{"_index":737,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["_updatebounds(newfitboundsdetails",{"_index":745,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["_updatecircleoptionschanges",{"_index":498,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["_updatecircleoptionschanges(changes",{"_index":599,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["_updatefitboundsdetails",{"_index":945,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_updateopenstate",{"_index":816,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_updatepolygonoptions",{"_index":1114,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["_updatepolygonoptions(changes",{"_index":1203,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["_updaterectangleoptionschanges",{"_index":1362,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["_updaterectangleoptionschanges(changes",{"_index":1398,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["_window",{"_index":293,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["_zone",{"_index":44,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["abstract",{"_index":28,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBoundsDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["according",{"_index":854,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["activates",{"_index":1699,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":934,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["add",{"_index":894,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"index.html":{}}}],["addcircle",{"_index":29,"title":{},"body":{"injectables/CircleManager.html":{}}}],["addcircle(circle",{"_index":52,"title":{},"body":{"injectables/CircleManager.html":{}}}],["added",{"_index":744,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["addinfowindow",{"_index":239,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["addinfowindow(infowindow",{"_index":250,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["additional",{"_index":1702,"title":{},"body":{"index.html":{}}}],["additionally",{"_index":1668,"title":{},"body":{"index.html":{}}}],["addmarker",{"_index":403,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["addmarker(marker",{"_index":418,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["addpolygon",{"_index":1457,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["addpolygon(path",{"_index":1462,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["addpolyline",{"_index":1475,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["addpolyline(line",{"_index":1482,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["addrectangle",{"_index":1495,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["addrectangle(rectangle",{"_index":1499,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["adds",{"_index":732,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["addtobounds",{"_index":187,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["addtobounds(latlng",{"_index":170,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["addtomap",{"_index":334,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["aftercontentinit",{"_index":937,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["agm",{"_index":132,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"directives/NgMapsPolyline.html":{},"properties.html":{}}}],["aliases",{"_index":1732,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["along",{"_index":1287,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["alreadyloaded",{"_index":1518,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["alternative",{"_index":1671,"title":{},"body":{"index.html":{}}}],["always",{"_index":857,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["angular",{"_index":1031,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{},"properties.html":{}}}],["angular/common",{"_index":1443,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["angular/core",{"_index":96,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["angular2",{"_index":1720,"title":{},"body":{"properties.html":{}}}],["animation",{"_index":474,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["any).readystate",{"_index":1558,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["anyway",{"_index":783,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["api",{"_index":105,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["appear",{"_index":1151,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["appearing",{"_index":856,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["application",{"_index":1659,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1667,"title":{},"body":{"index.html":{}}}],["around",{"_index":233,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["array",{"_index":422,"title":{},"body":{"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolylineManager.html":{},"index.html":{}}}],["arrays",{"_index":1166,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["async",{"_index":317,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["attaches",{"_index":1689,"title":{},"body":{"index.html":{}}}],["auto",{"_index":128,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["automatically",{"_index":974,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["available",{"_index":888,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"modules.html":{}}}],["await",{"_index":453,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["before",{"_index":843,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["behaviorsubject",{"_index":135,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["between",{"_index":549,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{}}}],["bicyclinglayer",{"_index":1698,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["boolean",{"_index":288,"title":{},"body":{"interfaces/MapOptions.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{},"index.html":{}}}],["bottom",{"_index":1452,"title":{},"body":{"interfaces/Padding.html":{}}}],["bounce",{"_index":1012,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["bounds",{"_index":130,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{}}}],["bounds.delete(this._createidentifier(latlng",{"_index":182,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["bounds.set(id",{"_index":177,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["bounds.ts",{"_index":124,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["bounds.ts:105",{"_index":755,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:31",{"_index":134,"title":{},"body":{"classes/FitBoundsAccessor.html":{}}}],["bounds.ts:34",{"_index":742,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:36",{"_index":758,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:37",{"_index":740,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:39",{"_index":203,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:40",{"_index":201,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:43",{"_index":202,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:45",{"_index":189,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:47",{"_index":754,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:54",{"_index":756,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:58",{"_index":197,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:62",{"_index":192,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:72",{"_index":200,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:78",{"_index":746,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["bounds.ts:80",{"_index":194,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:84",{"_index":198,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:88",{"_index":191,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds_changed",{"_index":1422,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["boundschange",{"_index":1364,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["boundsliteral",{"_index":1,"title":{"interfaces/BoundsLiteral.html":{}},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["boundsmap",{"_index":149,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"miscellaneous/typealiases.html":{}}}],["boundspadding",{"_index":355,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["box",{"_index":353,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["break",{"_index":690,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["browse",{"_index":1711,"title":{},"body":{"modules.html":{}}}],["browsers",{"_index":1560,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["bugs",{"_index":1723,"title":{},"body":{"properties.html":{}}}],["cached",{"_index":792,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["call",{"_index":832,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["case",{"_index":685,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["casting",{"_index":113,"title":{},"body":{"injectables/CircleManager.html":{}}}],["center",{"_index":332,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["center_changed",{"_index":691,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["centerchange",{"_index":505,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["change",{"_index":779,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["changed",{"_index":574,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["changefitboundschangesampletime",{"_index":188,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["changefitboundschangesampletime(timems",{"_index":183,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["changes",{"_index":602,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["changes.animation",{"_index":1067,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.clickable",{"_index":1065,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.draggable",{"_index":636,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["changes.east",{"_index":1412,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["changes.editable",{"_index":634,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["changes.icon",{"_index":1059,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.iconurl",{"_index":1057,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.isopen",{"_index":905,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["changes.label",{"_index":1054,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.latitude",{"_index":631,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["changes.latitude.currentvalue",{"_index":1357,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["changes.longitude",{"_index":632,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["changes.longitude.currentvalue",{"_index":1358,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["changes.north",{"_index":1411,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["changes.opacity",{"_index":1061,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.radius",{"_index":640,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["changes.south",{"_index":1413,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["changes.title",{"_index":1052,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.visible",{"_index":638,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["changes.west",{"_index":1414,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["changes.zindex",{"_index":903,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["changes[k].currentvalue",{"_index":651,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["changing",{"_index":844,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["character",{"_index":965,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["check",{"_index":111,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["child",{"_index":975,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["circle",{"_index":55,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircleDirective.html":{}}}],["circle's",{"_index":573,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["circle'},{'name",{"_index":927,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["circleclick",{"_index":506,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["circledblclick",{"_index":507,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["circlemanager",{"_index":20,"title":{"injectables/CircleManager.html":{}},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircleDirective.html":{},"coverage.html":{}}}],["circleoptions",{"_index":83,"title":{"interfaces/CircleOptions.html":{}},"body":{"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"coverage.html":{}}}],["circumference",{"_index":539,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["clamped",{"_index":211,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["class",{"_index":107,"title":{"classes/FitBoundsAccessor.html":{},"classes/NoOpMapsAPILoader.html":{}},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["classes",{"_index":122,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"classes/NoOpMapsAPILoader.html":{},"overview.html":{}}}],["clearinstancelisteners",{"_index":306,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["click",{"_index":1187,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["clickable",{"_index":472,"title":{},"body":{"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["clicked",{"_index":597,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["clicks",{"_index":579,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["close",{"_index":240,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["close(infowindow",{"_index":254,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["closed",{"_index":861,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["closes",{"_index":867,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["cmp",{"_index":802,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["color",{"_index":542,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["colors",{"_index":544,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["compared",{"_index":568,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["complete",{"_index":777,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["complex",{"_index":1175,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["component",{"_index":734,"title":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":924,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["components",{"_index":795,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{},"overview.html":{}}}],["computing",{"_index":152,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["config",{"_index":298,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["configuration",{"_index":1677,"title":{},"body":{"index.html":{}}}],["configure",{"_index":294,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["configure(config",{"_index":296,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"index.html":{}}}],["considered",{"_index":842,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["consist",{"_index":1163,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["const",{"_index":171,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["constructor(@inject(document",{"_index":1445,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{}}}],["constructor(_apiwrapper",{"_index":42,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["constructor(_fitboundsaccessor",{"_index":738,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["constructor(_infowindowmanager",{"_index":822,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["constructor(_loader",{"_index":326,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["constructor(_manager",{"_index":518,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["constructor(_mapswrapper",{"_index":245,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["constructor(_polygonmanager",{"_index":1129,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["constructor(_polylinemanager",{"_index":1279,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["constructor(document",{"_index":1436,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{}}}],["constructor(loader",{"_index":158,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["constructor(markermanager",{"_index":954,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["constructor(private",{"_index":619,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["constructor(protected",{"_index":108,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/RectangleManager.html":{}}}],["container",{"_index":1318,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["contains",{"_index":705,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["content",{"_index":809,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["content's",{"_index":841,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["contentchildren",{"_index":1026,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{}}}],["contentchildren(ngmapsinfowindowcomponent",{"_index":1017,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["contentchildren(ngmapspolylinepoint",{"_index":1315,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["control",{"_index":536,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["converted",{"_index":227,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["coordinates",{"_index":1158,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["core",{"_index":704,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["coredirectives",{"_index":728,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["correct",{"_index":895,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["coverage",{"_index":1597,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1217,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["createcircle",{"_index":307,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createcircle(center",{"_index":330,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createcsselement",{"_index":1520,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["createcsselement(href",{"_index":1526,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["createdrawingmanager",{"_index":308,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createdrawingmanager(param",{"_index":333,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createeventobservable",{"_index":30,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["createeventobservable('closeclick",{"_index":908,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["createeventobservable('drag",{"_index":1091,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('dragend",{"_index":1094,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('dragstart",{"_index":1085,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('rightclick",{"_index":1081,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable(['click",{"_index":1073,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable(eventname",{"_index":57,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["createeventobservable(obj.name",{"_index":1251,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["createinfowindow",{"_index":309,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createinfowindow(center",{"_index":336,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createmap",{"_index":310,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createmap(el",{"_index":338,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createmarker",{"_index":311,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createmarker(position",{"_index":342,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createpolygon",{"_index":312,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createpolygon(options",{"_index":346,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createpolyline",{"_index":313,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createpolyline(options",{"_index":348,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createrectangle",{"_index":314,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["createrectangle(box",{"_index":350,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["creates",{"_index":257,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["createscriptelement",{"_index":1521,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["createscriptelement(src",{"_index":1530,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["cs",{"_index":1071,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["css",{"_index":1538,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["css3",{"_index":543,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["curvature",{"_index":1144,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["custom",{"_index":733,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["d",{"_index":1090,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["dblclick",{"_index":1189,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["declarations",{"_index":729,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["decorators",{"_index":879,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{}}}],["default",{"_index":91,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":528,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["defined",{"_index":46,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["defines",{"_index":1179,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["degrees",{"_index":209,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["deleteinfowindow",{"_index":241,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["deleteinfowindow(infowindow",{"_index":261,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["deletemarker",{"_index":404,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["deletemarker(marker",{"_index":424,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["deletepolygon",{"_index":1458,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["deletepolygon(paths",{"_index":1465,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["deletepolyline",{"_index":1476,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["deletepolyline(line",{"_index":1484,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["dependencies",{"_index":1645,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":1665,"title":{},"body":{"index.html":{}}}],["described",{"_index":1701,"title":{},"body":{"index.html":{}}}],["description",{"_index":85,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["designates",{"_index":1159,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["details",{"_index":775,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["dev",{"_index":1664,"title":{},"body":{"index.html":{}}}],["dimensions",{"_index":1152,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["directive",{"_index":483,"title":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"coverage.html":{}}}],["directives",{"_index":484,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{},"overview.html":{}}}],["directives/circle",{"_index":98,"title":{},"body":{"injectables/CircleManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/fit",{"_index":710,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["directives/info",{"_index":273,"title":{},"body":{"injectables/InfoWindowManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/map",{"_index":712,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["directives/marker",{"_index":451,"title":{},"body":{"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/polygon",{"_index":714,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"injectables/PolygonManager.html":{}}}],["directives/polyline",{"_index":716,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"injectables/PolylineManager.html":{}}}],["directives/rectangle",{"_index":719,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"injectables/RectangleManager.html":{}}}],["directives/services/pipes",{"_index":706,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["disable",{"_index":826,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["disableautopan",{"_index":818,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["disabledoubleclickzoom",{"_index":278,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["displayed",{"_index":848,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["displaying",{"_index":851,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["distinctuntilchanged",{"_index":761,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["document",{"_index":300,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{}}}],["document.createelement('link",{"_index":1578,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["document.createelement('script",{"_index":1571,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["documentation",{"_index":1598,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":589,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["don't",{"_index":787,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["drag",{"_index":508,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["dragend",{"_index":509,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["draggable",{"_index":279,"title":{},"body":{"interfaces/MapOptions.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["dragged",{"_index":970,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["dragging",{"_index":535,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["drags",{"_index":583,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["dragstart",{"_index":510,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["drop",{"_index":1013,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ds",{"_index":1084,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["duplicate",{"_index":980,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["dynamically",{"_index":1536,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["e",{"_index":60,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["each",{"_index":1136,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["earlier",{"_index":624,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["earth",{"_index":1145,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["earth's",{"_index":558,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["east",{"_index":9,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["edges",{"_index":1141,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["edit",{"_index":534,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["editable",{"_index":503,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["el",{"_index":341,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["element",{"_index":743,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/ScriptLoaderService.html":{}}}],["element.addeventlistener('error",{"_index":1569,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["element.addeventlistener('load",{"_index":1568,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["element.addeventlistener('readystatechange",{"_index":1566,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["elementref",{"_index":813,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["emits",{"_index":860,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["emitted",{"_index":578,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["emitter",{"_index":576,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["error('expected",{"_index":1041,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["errorhandler",{"_index":1570,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["errorhandler(event",{"_index":1564,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["eslint",{"_index":1029,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["eslint/no",{"_index":1032,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ev",{"_index":1234,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["even",{"_index":1200,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["event",{"_index":259,"title":{},"body":{"injectables/InfoWindowManager.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["event.type",{"_index":1562,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["eventemitter",{"_index":570,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["eventemitter.emit",{"_index":693,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["eventemitter.emit(bounds",{"_index":1425,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["eventemitter.emit(radius",{"_index":689,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["eventemitter.emit(value",{"_index":694,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["eventname",{"_index":61,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["events",{"_index":527,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.foreach((eventemitter",{"_index":680,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('bounds_changed",{"_index":1418,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["events.set('center_changed",{"_index":654,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["events.set('click",{"_index":656,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('dblclick",{"_index":658,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('drag",{"_index":660,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('dragend",{"_index":662,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('dragstart",{"_index":664,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('mousedown",{"_index":666,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('mousemove",{"_index":668,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('mouseout",{"_index":670,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('mouseover",{"_index":672,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('mouseup",{"_index":674,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["events.set('radius_changed",{"_index":676,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["events.set('rightclick",{"_index":678,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["example",{"_index":225,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{},"index.html":{}}}],["except",{"_index":545,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["explorer",{"_index":622,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["export",{"_index":16,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{}}}],["exports",{"_index":730,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["extended",{"_index":546,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["extends",{"_index":117,"title":{},"body":{"interfaces/CircleOptions.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["fact",{"_index":230,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["fall",{"_index":223,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["false",{"_index":529,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["feature",{"_index":131,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["features",{"_index":1703,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{}}}],["fill",{"_index":541,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["fillcolor",{"_index":392,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["fillopacity",{"_index":393,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["filter",{"_index":1255,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["find",{"_index":1706,"title":{},"body":{"index.html":{}}}],["fired",{"_index":572,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["first",{"_index":1168,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["fit",{"_index":129,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["fitbounds",{"_index":315,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"index.html":{}}}],["fitbounds(bounds",{"_index":354,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["fitboundsaccessor",{"_index":121,"title":{"classes/FitBoundsAccessor.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["fitboundsdetails",{"_index":146,"title":{"interfaces/FitBoundsDetails.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["fitboundsservice",{"_index":150,"title":{"injectables/FitBoundsService.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"coverage.html":{}}}],["fixme",{"_index":289,"title":{},"body":{"interfaces/MapOptions.html":{},"directives/NgMapsCircleDirective.html":{}}}],["flag",{"_index":978,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["flatmap",{"_index":137,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["follow",{"_index":1143,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"index.html":{}}}],["foreground",{"_index":960,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["forwardref",{"_index":941,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["from(loader.load()).pipe",{"_index":160,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["front",{"_index":852,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["fully",{"_index":828,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["function",{"_index":379,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"modules/NgMapsCoreModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["functions",{"_index":1651,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":987,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["generatebounds",{"_index":168,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["generatebounds(includeinbounds",{"_index":196,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["geodesic",{"_index":1115,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["geopoint",{"_index":101,"title":{"interfaces/GeoPoint.html":{}},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["getbounds",{"_index":31,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{}}}],["getbounds(circle",{"_index":63,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getbounds(rectangle",{"_index":1502,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["getbounds(this",{"_index":1423,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["getcenter",{"_index":32,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{}}}],["getcenter(circle",{"_index":66,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getfitboundsdetails",{"_index":133,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{}}}],["getmaptypeid",{"_index":316,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["getnativemap",{"_index":318,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["getnativemarker",{"_index":405,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["getnativemarker(marker",{"_index":426,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["getradius",{"_index":33,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getradius(circle",{"_index":68,"title":{},"body":{"injectables/CircleManager.html":{}}}],["getradius(this",{"_index":687,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["gets",{"_index":577,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["getting",{"_index":1653,"title":{"index.html":{}},"body":{}}],["getzoom",{"_index":319,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["github",{"_index":1709,"title":{},"body":{"index.html":{}}}],["given",{"_index":73,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"directives/NgMapsFitBoundsDirective.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["globe",{"_index":234,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["google",{"_index":258,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"index.html":{}}}],["google.maps.animation[marker.animation",{"_index":477,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["google.maps.icon",{"_index":957,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["google.maps.infowindowoptions",{"_index":267,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["google.maps.latlng",{"_index":180,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["google.maps.latlngliteral",{"_index":181,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["google.maps.markerlabel",{"_index":480,"title":{},"body":{"interfaces/MarkerOptions.html":{},"components/NgMapsMarkerComponent.html":{}}}],["google.maps.mouseevent",{"_index":1087,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["google.maps.polygonoptions",{"_index":1205,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["google.maps.polymouseevent",{"_index":1235,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["google.maps.rectangleoptions",{"_index":1510,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["google.maps.strokeposition",{"_index":625,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["google.maps.strokeposition.center",{"_index":626,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["googlemaps",{"_index":725,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["graph",{"_index":1710,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":218,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["handleinfowindowupdate",{"_index":946,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["handler",{"_index":1233,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["handlers",{"_index":1232,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["handlers.foreach((obj",{"_index":1248,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["handles",{"_index":525,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["head",{"_index":1519,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["height",{"_index":805,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"index.html":{}}}],["here",{"_index":482,"title":{},"body":{"interfaces/MarkerOptions.html":{},"directives/NgMapsFitBoundsDirective.html":{},"index.html":{}}}],["heremaps",{"_index":727,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["hi",{"_index":808,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["higher",{"_index":850,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["holds",{"_index":882,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["hole",{"_index":1218,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["homepage",{"_index":1721,"title":{},"body":{"properties.html":{}}}],["host",{"_index":887,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["hostmarker",{"_index":814,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["href",{"_index":1528,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["html",{"_index":922,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["htmlelement",{"_index":339,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["htmlheadelement",{"_index":1547,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["htmllinkelement",{"_index":1529,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["htmlscriptelement",{"_index":1533,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["https://github.com/ng",{"_index":1724,"title":{},"body":{"properties.html":{}}}],["https://ng",{"_index":1224,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"properties.html":{}}}],["hybrid",{"_index":1692,"title":{},"body":{"index.html":{}}}],["icon",{"_index":460,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["icon.ts",{"_index":391,"title":{},"body":{"interfaces/MarkerIcon.html":{},"coverage.html":{}}}],["icons",{"_index":1266,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["iconurl",{"_index":948,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["id",{"_index":172,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["identifier",{"_index":1599,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":1559,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["image",{"_index":959,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["implement",{"_index":125,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["implements",{"_index":486,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["import",{"_index":95,"title":{},"body":{"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["important",{"_index":1433,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["improve",{"_index":112,"title":{},"body":{"injectables/CircleManager.html":{}}}],["includeinbounds",{"_index":169,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":285,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["indicates",{"_index":523,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{}}}],["infowindow",{"_index":253,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["infowindow.open(event",{"_index":1077,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["infowindowclose",{"_index":821,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["infowindowid",{"_index":892,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["infowindowid++).tostring",{"_index":875,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["infowindowmanager",{"_index":235,"title":{"injectables/InfoWindowManager.html":{}},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{}}}],["infowindows",{"_index":847,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["inherited",{"_index":1438,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["inject",{"_index":1444,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["injectable",{"_index":19,"title":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":21,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":707,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["injectiontoken('map",{"_index":721,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":614,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{}}}],["input('markerclickable",{"_index":1035,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["input('markerdraggable",{"_index":1034,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["input('polydraggable",{"_index":1226,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["input('polylinedraggable",{"_index":1322,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["input('rectangledraggable",{"_index":1408,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["inputs",{"_index":502,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["inserting",{"_index":1176,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["inside",{"_index":800,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{}}}],["install",{"_index":1662,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1660,"title":{},"body":{"index.html":{}}}],["instance",{"_index":86,"title":{},"body":{"injectables/CircleManager.html":{}}}],["instruction",{"_index":1670,"title":{},"body":{"index.html":{}}}],["integrity",{"_index":1542,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/BoundsLiteral.html":{},"interfaces/CircleOptions.html":{},"interfaces/FitBoundsDetails.html":{},"interfaces/GeoPoint.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerIcon.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Padding.html":{},"interfaces/ShapeOptions.html":{}},"body":{"interfaces/BoundsLiteral.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerIcon.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Padding.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{}}}],["interface/bounds",{"_index":99,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{}}}],["interface/circle",{"_index":100,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{}}}],["interface/geo",{"_index":102,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"injectables/PolylineManager.html":{}}}],["interface/map",{"_index":380,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["interface/marker",{"_index":381,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"components/NgMapsMarkerComponent.html":{}}}],["interface/padding",{"_index":382,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["interface/rectangle",{"_index":383,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"interfaces/CircleOptions.html":{},"interfaces/FitBoundsDetails.html":{},"interfaces/GeoPoint.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerIcon.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Padding.html":{},"interfaces/ShapeOptions.html":{},"overview.html":{}}}],["internal",{"_index":148,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["internet",{"_index":621,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["interpreted",{"_index":1142,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["invisible",{"_index":751,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["isgooglemaps",{"_index":1602,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isgooglemaps(token",{"_index":723,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"miscellaneous/functions.html":{}}}],["isheremaps",{"_index":1603,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isheremaps(token",{"_index":726,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"miscellaneous/functions.html":{}}}],["isn't",{"_index":1672,"title":{},"body":{"index.html":{}}}],["isopen",{"_index":819,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["it's",{"_index":1432,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["javascript",{"_index":961,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["k",{"_index":646,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["key",{"_index":630,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["keywords",{"_index":1718,"title":{},"body":{"properties.html":{}}}],["label",{"_index":457,"title":{},"body":{"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"components/NgMapsMarkerComponent.html":{}}}],["last",{"_index":1170,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["lat",{"_index":206,"title":{},"body":{"interfaces/GeoPoint.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["later",{"_index":1679,"title":{},"body":{"index.html":{}}}],["latestfitboundsdetails",{"_index":788,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["latitude",{"_index":208,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"index.html":{}}}],["latitudes",{"_index":855,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["latlng",{"_index":147,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["latlng.lat}+${latlng.lng",{"_index":186,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["latlngbounds",{"_index":604,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{}}}],["latlngboundsliteral",{"_index":1688,"title":{},"body":{"index.html":{}}}],["latlngs",{"_index":1174,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["layer",{"_index":1700,"title":{},"body":{"index.html":{}}}],["layers",{"_index":1695,"title":{},"body":{"index.html":{}}}],["layertypes",{"_index":1734,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lazy",{"_index":1675,"title":{},"body":{"index.html":{}}}],["left",{"_index":1453,"title":{},"body":{"interfaces/Padding.html":{}}}],["legend",{"_index":921,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["less",{"_index":216,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["level",{"_index":1678,"title":{},"body":{"index.html":{}}}],["library",{"_index":1658,"title":{},"body":{"index.html":{}}}],["license",{"_index":1727,"title":{},"body":{"properties.html":{}}}],["line",{"_index":1030,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolylineManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["line._getpoints().map",{"_index":1490,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["lineclick",{"_index":1268,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linedblclick",{"_index":1269,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linedrag",{"_index":1270,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linedragend",{"_index":1271,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linedragstart",{"_index":1272,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemousedown",{"_index":1273,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemousemove",{"_index":1274,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemouseout",{"_index":1275,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemouseover",{"_index":1276,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linemouseup",{"_index":1277,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["linerightclick",{"_index":1278,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["lines",{"_index":1148,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["link",{"_index":114,"title":{},"body":{"injectables/CircleManager.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["listener",{"_index":260,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["literal",{"_index":600,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["lng",{"_index":207,"title":{},"body":{"interfaces/GeoPoint.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["load",{"_index":295,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["loadcss",{"_index":1522,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loadcss(href",{"_index":1534,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loaded",{"_index":1435,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{}}}],["loader",{"_index":145,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["loader.service.ts",{"_index":1517,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:10",{"_index":1525,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:17",{"_index":1545,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:43",{"_index":1531,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:53",{"_index":1527,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:70",{"_index":1543,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:8",{"_index":1546,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:88",{"_index":1535,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:9",{"_index":1548,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.ts",{"_index":291,"title":{},"body":{"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["loader.ts:13",{"_index":1437,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["loader.ts:5",{"_index":302,"title":{},"body":{"injectables/MapsAPILoader.html":{}}}],["loader.ts:6",{"_index":301,"title":{},"body":{"injectables/MapsAPILoader.html":{}}}],["loader.ts:7",{"_index":299,"title":{},"body":{"injectables/MapsAPILoader.html":{}}}],["loader.ts:8",{"_index":297,"title":{},"body":{"injectables/MapsAPILoader.html":{}}}],["loader/maps",{"_index":144,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"coverage.html":{}}}],["loader/noop",{"_index":1428,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["loading",{"_index":1676,"title":{},"body":{"index.html":{}}}],["loads",{"_index":1537,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loadscript",{"_index":1523,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loadscript(src",{"_index":1541,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["location",{"_index":747,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["longitude",{"_index":219,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"index.html":{}}}],["longitudes",{"_index":231,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["loop",{"_index":1160,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["lower",{"_index":853,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["m",{"_index":452,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["maintained",{"_index":1153,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["make",{"_index":126,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["manager",{"_index":618,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["manager.ts",{"_index":23,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["manager.ts:10",{"_index":1514,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:11",{"_index":1489,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:12",{"_index":94,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:13",{"_index":1498,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:14",{"_index":1479,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:15",{"_index":47,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:17",{"_index":1500,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:21",{"_index":1481,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:22",{"_index":54,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:26",{"_index":1511,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:27",{"_index":71,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:31",{"_index":1483,"title":{},"body":{"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:33",{"_index":84,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolylineManager.html":{}}}],["manager.ts:35",{"_index":1487,"title":{},"body":{"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["manager.ts:37",{"_index":1508,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:38",{"_index":64,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:40",{"_index":1485,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["manager.ts:41",{"_index":1506,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:42",{"_index":67,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/PolylineManager.html":{}}}],["manager.ts:44",{"_index":69,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:45",{"_index":1513,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:46",{"_index":76,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:48",{"_index":80,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:49",{"_index":1501,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["manager.ts:50",{"_index":78,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:52",{"_index":90,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:54",{"_index":88,"title":{},"body":{"injectables/CircleManager.html":{}}}],["manager.ts:56",{"_index":59,"title":{},"body":{"injectables/CircleManager.html":{}}}],["map",{"_index":74,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["map((includeinbounds",{"_index":165,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["map.component.html",{"_index":1021,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["map_provider",{"_index":720,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapfitbounds",{"_index":735,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"index.html":{}}}],["mapfitbounds]'},{'name",{"_index":928,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["mapoptions",{"_index":276,"title":{"interfaces/MapOptions.html":{}},"body":{"interfaces/MapOptions.html":{},"injectables/MapsApiWrapper.html":{},"coverage.html":{}}}],["maps",{"_index":104,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["maps.git",{"_index":1730,"title":{},"body":{"properties.html":{}}}],["maps.github.io/core",{"_index":1722,"title":{},"body":{"properties.html":{}}}],["maps.github.io/core/components/ngmapsviewcomponent.html|ngmapsview",{"_index":1225,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["maps/core",{"_index":1655,"title":{},"body":{"index.html":{}}}],["maps/google",{"_index":1669,"title":{},"body":{"index.html":{}}}],["maps/issues",{"_index":1726,"title":{},"body":{"properties.html":{}}}],["maps/ng",{"_index":1725,"title":{},"body":{"properties.html":{}}}],["mapsapiloader",{"_index":143,"title":{"injectables/MapsAPILoader.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"index.html":{}}}],["mapsapiloader:12",{"_index":1440,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["mapsapiloader:13",{"_index":1439,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["mapsapiloader:21",{"_index":1442,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["mapsapiloader:25",{"_index":1441,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["mapsapiwrapper",{"_index":43,"title":{"injectables/MapsApiWrapper.html":{}},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["maptypecontrol",{"_index":280,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["maptypeid",{"_index":1690,"title":{},"body":{"index.html":{}}}],["marker",{"_index":421,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["marker's",{"_index":972,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["marker'},{'name",{"_index":926,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["marker.animation",{"_index":476,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.clickable",{"_index":473,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.draggable",{"_index":459,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.hostmarker",{"_index":1044,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["marker.iconurl",{"_index":461,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.label",{"_index":458,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.latitude",{"_index":455,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.longitude",{"_index":456,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.manager",{"_index":275,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["marker.opacity",{"_index":463,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.optimized",{"_index":465,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.title",{"_index":471,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.visible",{"_index":467,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.zindex",{"_index":469,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["markerclick",{"_index":952,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["markerclickable",{"_index":949,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markerdraggable",{"_index":950,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markericon",{"_index":389,"title":{"interfaces/MarkerIcon.html":{}},"body":{"interfaces/MarkerIcon.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["markerid",{"_index":1028,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["markerid++).tostring",{"_index":1036,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markermanager",{"_index":247,"title":{"injectables/MarkerManager.html":{}},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["markeroptions",{"_index":343,"title":{"interfaces/MarkerOptions.html":{}},"body":{"injectables/MapsApiWrapper.html":{},"interfaces/MarkerOptions.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["markerrightclick",{"_index":953,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markers",{"_index":858,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["matching",{"_index":18,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":839,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["maxwidth",{"_index":820,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["maxzoom",{"_index":1685,"title":{},"body":{"index.html":{}}}],["means",{"_index":214,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["mergemap",{"_index":138,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["metadata",{"_index":490,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["meters",{"_index":557,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["method",{"_index":1681,"title":{},"body":{"index.html":{}}}],["methods",{"_index":26,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["minzoom",{"_index":1684,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1650,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1728,"title":{},"body":{"properties.html":{}}}],["mode",{"_index":1180,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["modular",{"_index":1656,"title":{},"body":{"index.html":{}}}],["module",{"_index":699,"title":{"modules/NgMapsCoreModule.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":701,"title":{"modules.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"modules.html":{}}}],["more",{"_index":1042,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"index.html":{}}}],["mouse",{"_index":526,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mousedown",{"_index":511,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mouseevent",{"_index":1238,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["mousemove",{"_index":512,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mouseout",{"_index":513,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mouseover",{"_index":514,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mouses",{"_index":996,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["mouseup",{"_index":515,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["mycomponent",{"_index":1022,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["mymapcomponent",{"_index":1214,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["name",{"_index":49,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["named",{"_index":547,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["native",{"_index":883,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["need",{"_index":791,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"index.html":{}}}],["nestedpaths",{"_index":1220,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["nesting",{"_index":1216,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["new",{"_index":93,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newcenter",{"_index":365,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["newfitboundsdetails",{"_index":752,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["next",{"_index":774,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["ng",{"_index":703,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"index.html":{},"properties.html":{}}}],["ng2",{"_index":1719,"title":{},"body":{"properties.html":{}}}],["ngaftercontentinit",{"_index":947,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["ngmapscircledirective",{"_index":53,"title":{"directives/NgMapsCircleDirective.html":{}},"body":{"injectables/CircleManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapscircledirective._mapoptions.indexof(k",{"_index":647,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["ngmapscoremodule",{"_index":700,"title":{"modules/NgMapsCoreModule.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"index.html":{},"modules.html":{}}}],["ngmapsfitboundsdirective",{"_index":709,"title":{"directives/NgMapsFitBoundsDirective.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapsinfowindowcomponent",{"_index":251,"title":{"components/NgMapsInfoWindowComponent.html":{}},"body":{"injectables/InfoWindowManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapsinfowindowcomponent._infowindowoptionsinputs.includes(k",{"_index":914,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["ngmapsmarker",{"_index":1103,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ngmapsmarkercomponent",{"_index":419,"title":{"components/NgMapsMarkerComponent.html":{}},"body":{"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapspolygon",{"_index":1108,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["ngmapspolygondirective",{"_index":713,"title":{"directives/NgMapsPolygonDirective.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"injectables/PolygonManager.html":{},"coverage.html":{}}}],["ngmapspolygondirective._polygonoptionsattributes.indexof(k",{"_index":1256,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["ngmapspolyline",{"_index":715,"title":{"directives/NgMapsPolyline.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["ngmapspolyline._polylineoptionsattributes.indexof(k",{"_index":1332,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["ngmapspolylinepoint",{"_index":717,"title":{"directives/NgMapsPolylinePoint.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["ngmapsrectangledirective",{"_index":718,"title":{"directives/NgMapsRectangleDirective.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["ngmapsrectangledirective._mapoptions.indexof(k",{"_index":1417,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["ngmapsview",{"_index":1110,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["ngmapsviewcomponent",{"_index":711,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmodule",{"_index":708,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["ngonchanges",{"_index":499,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ngonchanges(changes",{"_index":606,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ngondestroy",{"_index":500,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ngoninit",{"_index":501,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ngzone",{"_index":45,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["noopmapsapiloader",{"_index":1427,"title":{"classes/NoOpMapsAPILoader.html":{}},"body":{"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["north",{"_index":10,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["note",{"_index":1150,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["npm",{"_index":1661,"title":{},"body":{"index.html":{}}}],["null",{"_index":757,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{}}}],["number",{"_index":13,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"interfaces/MapOptions.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/Padding.html":{},"interfaces/ShapeOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["number(this.latitude",{"_index":1045,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["number(this.longitude",{"_index":1046,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["obj",{"_index":1259,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["obj[k",{"_index":1258,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["object.keys(changes",{"_index":1254,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["object.keys(changes).filter",{"_index":645,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["object.keys(changes).filter((k",{"_index":913,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["observable",{"_index":62,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["observeload",{"_index":1524,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["observeload(element",{"_index":1544,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["old",{"_index":781,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["once",{"_index":1540,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["onchanges",{"_index":488,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["ondestroy",{"_index":489,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["one",{"_index":782,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["oninit",{"_index":487,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["opacity",{"_index":462,"title":{},"body":{"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["open",{"_index":242,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["open(event",{"_index":872,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["open(infowindow",{"_index":263,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["openinfowindow",{"_index":951,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["opens",{"_index":829,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["optimize",{"_index":977,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["optimized",{"_index":464,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["option",{"_index":286,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["optional",{"_index":50,"title":{},"body":{"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"miscellaneous/functions.html":{}}}],["optionkeys",{"_index":644,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["optionkeys.foreach((k",{"_index":649,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["optionkeys.length",{"_index":652,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["options",{"_index":82,"title":{},"body":{"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"index.html":{}}}],["options.ts",{"_index":116,"title":{},"body":{"interfaces/CircleOptions.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["options.ts:8",{"_index":287,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["options[k",{"_index":650,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["order",{"_index":849,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ordered",{"_index":1156,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["os",{"_index":1249,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["ouside",{"_index":836,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["out",{"_index":1707,"title":{},"body":{"index.html":{},"overview.html":{}}}],["output",{"_index":615,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["outputs",{"_index":504,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"index.html":{}}}],["outside",{"_index":220,"title":{},"body":{"interfaces/GeoPoint.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["over",{"_index":532,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["overlap",{"_index":1219,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["overview",{"_index":1712,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1644,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":356,"title":{"interfaces/Padding.html":{}},"body":{"injectables/MapsApiWrapper.html":{},"interfaces/Padding.html":{},"coverage.html":{}}}],["page",{"_index":1429,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"index.html":{}}}],["pan",{"_index":827,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["panto",{"_index":320,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["panto(newcenter",{"_index":363,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["pantobounds",{"_index":321,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["pantobounds(bounds",{"_index":366,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["param",{"_index":109,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/ScriptLoaderService.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":394,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsPolygonDirective.html":{},"injectables/PolygonManager.html":{}}}],["paths",{"_index":1116,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"injectables/PolygonManager.html":{}}}],["peer",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":766,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["pixels",{"_index":565,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["play",{"_index":1015,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["point",{"_index":103,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"injectables/PolylineManager.html":{}}}],["point'},{'name",{"_index":932,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["point.latitude",{"_index":1491,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["point.longitude",{"_index":1492,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["point.positionchanged.subscribe",{"_index":1325,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["point.ts",{"_index":205,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsPolylinePoint.html":{},"coverage.html":{}}}],["point.ts:21",{"_index":1354,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:26",{"_index":1355,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:32",{"_index":1353,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["point.ts:36",{"_index":1356,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["pointerdown",{"_index":1074,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["pointerenter",{"_index":1097,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["pointerleave",{"_index":1100,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["points",{"_index":537,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["polyclick",{"_index":1118,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polydblclick",{"_index":1119,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polydrag",{"_index":1120,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polydragend",{"_index":1121,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polydraggable",{"_index":1117,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polydragstart",{"_index":1122,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polygon",{"_index":1109,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"injectables/PolygonManager.html":{}}}],["polygon'},{'name",{"_index":929,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["polygonmanager",{"_index":1130,"title":{"injectables/PolygonManager.html":{}},"body":{"directives/NgMapsPolygonDirective.html":{},"injectables/PolygonManager.html":{},"coverage.html":{}}}],["polygons",{"_index":1172,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polyline",{"_index":931,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["polyline'},{'name",{"_index":930,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["polylinedraggable",{"_index":1267,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["polylineid",{"_index":1320,"title":{},"body":{"directives/NgMapsPolyline.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["polylineid++).tostring",{"_index":1321,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["polylinemanager",{"_index":1280,"title":{"injectables/PolylineManager.html":{}},"body":{"directives/NgMapsPolyline.html":{},"injectables/PolylineManager.html":{},"coverage.html":{}}}],["polylines",{"_index":1162,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polymousedown",{"_index":1123,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polymousemove",{"_index":1124,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polymouseout",{"_index":1125,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polymouseover",{"_index":1126,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polymouseup",{"_index":1127,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polyrightclick",{"_index":1128,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["polys",{"_index":569,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["position",{"_index":345,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["positionchanged",{"_index":1352,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["possible",{"_index":749,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["prevent",{"_index":979,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["private",{"_index":492,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{}}}],["proccede",{"_index":1561,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["production",{"_index":1674,"title":{},"body":{"index.html":{}}}],["project",{"_index":1708,"title":{},"body":{"index.html":{}}}],["promise",{"_index":65,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["promise((resolve",{"_index":386,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"injectables/ScriptLoaderService.html":{}}}],["promise.resolve",{"_index":1450,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"properties.html":{}}}],["property",{"_index":620,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["propname",{"_index":643,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{}}}],["protected",{"_index":24,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["provide",{"_index":939,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["provided",{"_index":1704,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":1549,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["provider",{"_index":722,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":938,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["public",{"_index":27,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["querylist",{"_index":1016,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolyline.html":{}}}],["radius",{"_index":119,"title":{},"body":{"interfaces/CircleOptions.html":{},"directives/NgMapsCircleDirective.html":{}}}],["radius_changed",{"_index":686,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["radiuschange",{"_index":516,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["range",{"_index":212,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["rc",{"_index":1080,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["readme",{"_index":935,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["readonly",{"_index":154,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ready",{"_index":1673,"title":{},"body":{"index.html":{}}}],["readystate",{"_index":1557,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["rectangle",{"_index":933,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{}}}],["rectangle's",{"_index":1385,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["rectangleclick",{"_index":1365,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["rectangledblclick",{"_index":1366,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["rectangledraggable",{"_index":1363,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["rectanglemanager",{"_index":1367,"title":{"injectables/RectangleManager.html":{}},"body":{"directives/NgMapsRectangleDirective.html":{},"injectables/RectangleManager.html":{},"coverage.html":{}}}],["rectangleoptions",{"_index":351,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"directives/NgMapsRectangleDirective.html":{},"miscellaneous/typealiases.html":{}}}],["reduce((obj",{"_index":1257,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["reflects",{"_index":229,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["regardless",{"_index":840,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["registered",{"_index":1106,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["reject",{"_index":1554,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["reject(event",{"_index":1565,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["relative",{"_index":1154,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["remove",{"_index":780,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["removecircle",{"_index":34,"title":{},"body":{"injectables/CircleManager.html":{}}}],["removecircle(circle",{"_index":70,"title":{},"body":{"injectables/CircleManager.html":{}}}],["removefrombounds",{"_index":179,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["removefrombounds(latlng",{"_index":199,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["removerectangle",{"_index":1496,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["removerectangle(rectangle",{"_index":1503,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["removes",{"_index":72,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["removing",{"_index":1177,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["rename",{"_index":1033,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["rendered",{"_index":1146,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["rendering",{"_index":981,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["renders",{"_index":799,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["repeat",{"_index":1167,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["repeatedly",{"_index":582,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["replaysubject",{"_index":1007,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["replaysubject(1",{"_index":1008,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["repository",{"_index":1729,"title":{},"body":{"properties.html":{}}}],["represents",{"_index":1351,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["required",{"_index":553,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["reset",{"_index":1713,"title":{},"body":{"overview.html":{}}}],["resolve",{"_index":388,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["resolve(event",{"_index":1563,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["resolved",{"_index":1539,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["responsible",{"_index":151,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["result",{"_index":1164,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["results",{"_index":17,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":175,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolylineManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["returns",{"_index":56,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{}}}],["right",{"_index":596,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/Padding.html":{}}}],["rightclick",{"_index":517,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["rightclicks",{"_index":994,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["roadmap",{"_index":1691,"title":{},"body":{"index.html":{}}}],["root",{"_index":1550,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["rotation",{"_index":395,"title":{},"body":{"interfaces/MarkerIcon.html":{}}}],["rxjs",{"_index":97,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["rxjs/operators",{"_index":142,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["s",{"_index":1329,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["sample",{"_index":139,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["satellite",{"_index":1693,"title":{},"body":{"index.html":{}}}],["scale",{"_index":396,"title":{},"body":{"interfaces/MarkerIcon.html":{}}}],["scalecontrol",{"_index":281,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["screen",{"_index":986,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["script",{"_index":1434,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"injectables/ScriptLoaderService.html":{}}}],["script.async",{"_index":1575,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["script.defer",{"_index":1576,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["script.src",{"_index":1572,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["script.type",{"_index":1573,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptloaderservice",{"_index":1515,"title":{"injectables/ScriptLoaderService.html":{}},"body":{"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["scrollwheel",{"_index":282,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["see",{"_index":962,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["segment",{"_index":1137,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["selector",{"_index":491,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["self",{"_index":759,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["sequence",{"_index":1157,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["service",{"_index":1680,"title":{},"body":{"index.html":{}}}],["services/fit",{"_index":763,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{}}}],["services/managers/circle",{"_index":617,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["services/managers/info",{"_index":890,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["services/managers/marker.manager",{"_index":1027,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["services/managers/polygon.manager",{"_index":1223,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["services/managers/polyline",{"_index":1319,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["services/managers/rectangle",{"_index":1407,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["set",{"_index":217,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["setbounds",{"_index":1497,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setbounds(rectangle",{"_index":1504,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setcenter",{"_index":35,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/MapsApiWrapper.html":{}}}],["setcenter(circle",{"_index":75,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setcenter(newcenter",{"_index":368,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["setdraggable",{"_index":36,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["setdraggable(circle",{"_index":77,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setdraggable(rectangle",{"_index":1505,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["seteditable",{"_index":37,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["seteditable(circle",{"_index":79,"title":{},"body":{"injectables/CircleManager.html":{}}}],["seteditable(rectangle",{"_index":1507,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setmapoptions",{"_index":322,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["setmapoptions(options",{"_index":370,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["setoptions",{"_index":38,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/RectangleManager.html":{}}}],["setoptions(circle",{"_index":81,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setoptions(infowindow",{"_index":266,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setoptions(rectangle",{"_index":1509,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setpolygonoptions",{"_index":1459,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["setpolygonoptions(path",{"_index":1467,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["setpolylineoptions",{"_index":1477,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["setpolylineoptions(line",{"_index":1486,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["setposition",{"_index":243,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setposition(infowindow",{"_index":269,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setradius",{"_index":39,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setradius(circle",{"_index":87,"title":{},"body":{"injectables/CircleManager.html":{}}}],["sets",{"_index":831,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["setvisible",{"_index":40,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/RectangleManager.html":{}}}],["setvisible(circle",{"_index":89,"title":{},"body":{"injectables/CircleManager.html":{}}}],["setvisible(rectangle",{"_index":1512,"title":{},"body":{"injectables/RectangleManager.html":{}}}],["setzindex",{"_index":244,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setzindex(infowindow",{"_index":271,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setzoom",{"_index":323,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["setzoom(zoom",{"_index":372,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["shakable",{"_index":1657,"title":{},"body":{"index.html":{}}}],["shape",{"_index":120,"title":{},"body":{"interfaces/CircleOptions.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["shapeoptions",{"_index":118,"title":{"interfaces/ShapeOptions.html":{}},"body":{"interfaces/CircleOptions.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["sharereplay",{"_index":140,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["sharereplay(1",{"_index":167,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["shown",{"_index":538,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["simple",{"_index":1171,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"index.html":{}}}],["simplechange",{"_index":616,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["simplechanges",{"_index":753,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["single",{"_index":153,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{}}}],["south",{"_index":11,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["space",{"_index":1149,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["specified",{"_index":215,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["specify",{"_index":1165,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src",{"_index":1532,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["src/.../core.module.ts",{"_index":1652,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../fit",{"_index":1733,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../info",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../layers.ts",{"_index":1735,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../marker.ts",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../polyline.ts",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rectangle",{"_index":1736,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/core.module.ts",{"_index":702,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/directives/circle.ts",{"_index":485,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"coverage.html":{}}}],["src/lib/directives/circle.ts:100",{"_index":563,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:105",{"_index":566,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:110",{"_index":567,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:116",{"_index":571,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:122",{"_index":575,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:128",{"_index":580,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:134",{"_index":581,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:140",{"_index":584,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:146",{"_index":586,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:152",{"_index":588,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:158",{"_index":590,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:164",{"_index":591,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:170",{"_index":592,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:176",{"_index":593,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:182",{"_index":594,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:188",{"_index":595,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:190",{"_index":610,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:192",{"_index":613,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:195",{"_index":609,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:202",{"_index":607,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:224",{"_index":601,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:23",{"_index":519,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:239",{"_index":598,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:26",{"_index":612,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:285",{"_index":608,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:293",{"_index":603,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:297",{"_index":605,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:40",{"_index":552,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:45",{"_index":554,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:50",{"_index":522,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:55",{"_index":530,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:61",{"_index":533,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:66",{"_index":540,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:71",{"_index":548,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:76",{"_index":556,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:81",{"_index":560,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/circle.ts:86",{"_index":562,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["src/lib/directives/fit",{"_index":731,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"coverage.html":{}}}],["src/lib/directives/info",{"_index":797,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/directives/map.ts",{"_index":1611,"title":{},"body":{"coverage.html":{}}}],["src/lib/directives/marker.ts",{"_index":936,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/directives/marker.ts:106",{"_index":958,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:108",{"_index":956,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:113",{"_index":983,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:118",{"_index":973,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:123",{"_index":971,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:129",{"_index":976,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:137",{"_index":984,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:143",{"_index":968,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:149",{"_index":1014,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:155",{"_index":992,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:161",{"_index":993,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:167",{"_index":991,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:173",{"_index":989,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:179",{"_index":990,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:185",{"_index":997,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:191",{"_index":995,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:197",{"_index":1018,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:199",{"_index":1011,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:200",{"_index":1010,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:201",{"_index":1019,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:203",{"_index":1009,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:204",{"_index":955,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:213",{"_index":1003,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:218",{"_index":1001,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:230",{"_index":1004,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:290",{"_index":1000,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:294",{"_index":999,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:300",{"_index":998,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:363",{"_index":1002,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:368",{"_index":1006,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:373",{"_index":1005,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:77",{"_index":966,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:82",{"_index":967,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:87",{"_index":982,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:92",{"_index":963,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:98",{"_index":969,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/polygon.ts",{"_index":1107,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"coverage.html":{}}}],["src/lib/directives/polygon.ts:101",{"_index":1181,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:106",{"_index":1182,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:111",{"_index":1183,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:116",{"_index":1184,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:121",{"_index":1185,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:127",{"_index":1186,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:133",{"_index":1188,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:139",{"_index":1190,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:145",{"_index":1191,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:151",{"_index":1192,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:157",{"_index":1193,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:163",{"_index":1194,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:169",{"_index":1195,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:175",{"_index":1196,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:181",{"_index":1197,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:187",{"_index":1199,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:189",{"_index":1210,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:190",{"_index":1211,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:191",{"_index":1213,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:194",{"_index":1207,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:200",{"_index":1208,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:212",{"_index":1202,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:218",{"_index":1201,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:24",{"_index":1131,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:27",{"_index":1212,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:274",{"_index":1204,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:289",{"_index":1206,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:294",{"_index":1209,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:49",{"_index":1133,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:56",{"_index":1178,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:62",{"_index":1134,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:68",{"_index":1138,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:73",{"_index":1139,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:82",{"_index":1140,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polygon.ts:95",{"_index":1155,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["src/lib/directives/polyline",{"_index":1350,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{},"coverage.html":{}}}],["src/lib/directives/polyline.ts",{"_index":1262,"title":{},"body":{"directives/NgMapsPolyline.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/directives/polyline.ts:103",{"_index":1294,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:109",{"_index":1295,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:115",{"_index":1296,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:121",{"_index":1297,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:127",{"_index":1298,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:133",{"_index":1299,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:139",{"_index":1300,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:145",{"_index":1301,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:151",{"_index":1302,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:157",{"_index":1303,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:163",{"_index":1304,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:169",{"_index":1316,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:171",{"_index":1312,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:172",{"_index":1313,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:173",{"_index":1317,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:176",{"_index":1309,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:195",{"_index":1310,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:209",{"_index":1307,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:215",{"_index":1305,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:27",{"_index":1281,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:272",{"_index":1306,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:281",{"_index":1308,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:286",{"_index":1311,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:32",{"_index":1314,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:46",{"_index":1283,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:53",{"_index":1288,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:59",{"_index":1284,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:67",{"_index":1285,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:72",{"_index":1289,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:77",{"_index":1290,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:82",{"_index":1291,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:87",{"_index":1286,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:92",{"_index":1292,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/polyline.ts:97",{"_index":1293,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["src/lib/directives/rectangle.ts",{"_index":1360,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{},"coverage.html":{}}}],["src/lib/directives/rectangle.ts:102",{"_index":1380,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:107",{"_index":1381,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:112",{"_index":1383,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:118",{"_index":1384,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:124",{"_index":1394,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:130",{"_index":1395,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:136",{"_index":1386,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:142",{"_index":1387,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:148",{"_index":1388,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:154",{"_index":1389,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:160",{"_index":1390,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:166",{"_index":1391,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:172",{"_index":1392,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:178",{"_index":1393,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:184",{"_index":1396,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:186",{"_index":1405,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:188",{"_index":1406,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:191",{"_index":1403,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:198",{"_index":1401,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:217",{"_index":1399,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:22",{"_index":1368,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:232",{"_index":1397,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:25",{"_index":1404,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:270",{"_index":1402,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:278",{"_index":1400,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:39",{"_index":1374,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:44",{"_index":1370,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:49",{"_index":1376,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:54",{"_index":1382,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:59",{"_index":1369,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:65",{"_index":1375,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:71",{"_index":1371,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:76",{"_index":1372,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:81",{"_index":1373,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:86",{"_index":1377,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:91",{"_index":1378,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/directives/rectangle.ts:97",{"_index":1379,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["src/lib/interface/bounds.ts",{"_index":6,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"coverage.html":{}}}],["src/lib/interface/circle",{"_index":115,"title":{},"body":{"interfaces/CircleOptions.html":{},"coverage.html":{}}}],["src/lib/interface/geo",{"_index":204,"title":{},"body":{"interfaces/GeoPoint.html":{},"coverage.html":{}}}],["src/lib/interface/layers.ts",{"_index":1737,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/interface/map",{"_index":277,"title":{},"body":{"interfaces/MapOptions.html":{},"coverage.html":{}}}],["src/lib/interface/marker",{"_index":390,"title":{},"body":{"interfaces/MarkerIcon.html":{},"interfaces/MarkerOptions.html":{},"coverage.html":{}}}],["src/lib/interface/padding.ts",{"_index":1451,"title":{},"body":{"interfaces/Padding.html":{},"coverage.html":{}}}],["src/lib/interface/rectangle",{"_index":1738,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/interface/shape",{"_index":1596,"title":{},"body":{"interfaces/ShapeOptions.html":{},"coverage.html":{}}}],["src/lib/services/fit",{"_index":123,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/services/managers/circle",{"_index":22,"title":{},"body":{"injectables/CircleManager.html":{},"coverage.html":{}}}],["src/lib/services/managers/info",{"_index":236,"title":{},"body":{"injectables/InfoWindowManager.html":{},"coverage.html":{}}}],["src/lib/services/managers/marker.manager.ts",{"_index":401,"title":{},"body":{"injectables/MarkerManager.html":{},"coverage.html":{}}}],["src/lib/services/managers/marker.manager.ts:12",{"_index":417,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:19",{"_index":425,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:21",{"_index":441,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:23",{"_index":445,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:25",{"_index":439,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:27",{"_index":433,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:29",{"_index":437,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:30",{"_index":435,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:32",{"_index":443,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:34",{"_index":447,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:36",{"_index":449,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:38",{"_index":431,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:40",{"_index":429,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:42",{"_index":420,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:64",{"_index":427,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:68",{"_index":423,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/marker.manager.ts:9",{"_index":450,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts",{"_index":1455,"title":{},"body":{"injectables/PolygonManager.html":{},"coverage.html":{}}}],["src/lib/services/managers/polygon.manager.ts:12",{"_index":1461,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:19",{"_index":1463,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:21",{"_index":1470,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:23",{"_index":1468,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:28",{"_index":1466,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:30",{"_index":1464,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polygon.manager.ts:9",{"_index":1471,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["src/lib/services/managers/polyline",{"_index":1472,"title":{},"body":{"injectables/PolylineManager.html":{},"coverage.html":{}}}],["src/lib/services/managers/rectangle",{"_index":1493,"title":{},"body":{"injectables/RectangleManager.html":{},"coverage.html":{}}}],["src/lib/services/maps",{"_index":290,"title":{},"body":{"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["src/lib/services/script",{"_index":1516,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["standalone",{"_index":801,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["started",{"_index":1654,"title":{"index.html":{}},"body":{}}],["starts",{"_index":587,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["state",{"_index":750,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["statements",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":494,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["status",{"_index":748,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["still",{"_index":790,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["stops",{"_index":585,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["straight",{"_index":1147,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["string",{"_index":58,"title":{},"body":{"injectables/CircleManager.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stroke",{"_index":561,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["strokecolor",{"_index":397,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["strokeopacity",{"_index":398,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["strokeposition",{"_index":611,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["strokeweight",{"_index":399,"title":{},"body":{"interfaces/MarkerIcon.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["style",{"_index":1577,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["style.href",{"_index":1583,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["style.rel",{"_index":1579,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["style.type",{"_index":1581,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["styles",{"_index":803,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["stylesheet",{"_index":1580,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["subject",{"_index":760,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["submodules",{"_index":1705,"title":{},"body":{"index.html":{}}}],["subscribe",{"_index":773,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["subscribe((e",{"_index":1086,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["subscribe((value",{"_index":683,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["subscribe(obj.handler",{"_index":1252,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["subscribetomapevent",{"_index":324,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["subscribetomapevent(eventname",{"_index":374,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["subscription",{"_index":496,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["subscriptions",{"_index":1261,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["successhandler",{"_index":1567,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["successhandler(event",{"_index":1555,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["super",{"_index":1446,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["supported",{"_index":481,"title":{},"body":{"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["surface",{"_index":559,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["switch",{"_index":684,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["switchmap",{"_index":141,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["t",{"_index":384,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{}}}],["table",{"_index":1643,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1642,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1431,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["takeuntil",{"_index":762,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["template",{"_index":807,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"index.html":{}}}],["templateurl",{"_index":1020,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["terrain",{"_index":1694,"title":{},"body":{"index.html":{}}}],["text/css",{"_index":1582,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["text/javascript",{"_index":1574,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["then((bounds",{"_index":1424,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["then((radius",{"_index":688,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._addeventlisteners",{"_index":1050,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["this._api",{"_index":385,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["this._boundschangesampletime$.next(timems",{"_index":184,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._boundschangesampletime$.pipe(switchmap((time",{"_index":162,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._circleaddedtomanager",{"_index":628,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._createidentifier(latlng",{"_index":173,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._document",{"_index":1447,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["this._document.defaultview",{"_index":1449,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["this._fitboundsaccessor",{"_index":765,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._fitboundsdetails$.asobservable",{"_index":1069,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._fitboundsdetails$.next",{"_index":1070,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._fitboundsservice.addtobounds(this._latestfitboundsdetails.latlng",{"_index":794,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._fitboundsservice.removefrombounds",{"_index":785,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._id",{"_index":918,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["this._id.tostring",{"_index":919,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._includeinbounds",{"_index":161,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.next(bounds",{"_index":178,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.value",{"_index":176,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.value.has(id",{"_index":174,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._infowindowaddedtomanager",{"_index":898,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager",{"_index":907,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.addinfowindow(this).then",{"_index":897,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.close(this",{"_index":917,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.deleteinfowindow(this",{"_index":920,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.open(this",{"_index":916,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setoptions(this",{"_index":915,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setposition(this",{"_index":902,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setzindex(this",{"_index":904,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._init",{"_index":1228,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["this._latestfitboundsdetails",{"_index":784,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._latestfitboundsdetails.latlng",{"_index":786,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._manager",{"_index":682,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.addcircle(this",{"_index":627,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.addrectangle(this",{"_index":1409,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.getbounds(this",{"_index":697,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.getcenter(this",{"_index":698,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.getcenter(this).then((center",{"_index":692,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.removecircle(this",{"_index":696,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.removerectangle(this",{"_index":1426,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.setbounds(this",{"_index":1415,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.setcenter(this",{"_index":633,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.setdraggable(this",{"_index":637,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.seteditable(this",{"_index":635,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.setoptions(this",{"_index":653,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._manager.setradius(this",{"_index":641,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._manager.setvisible(this",{"_index":639,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._mapresolver",{"_index":387,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["this._mapswrapper.createmarker",{"_index":454,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._markeraddedtomanger",{"_index":1047,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._markers.get(marker",{"_index":479,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._markers.set(marker",{"_index":478,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._polygonaddedtomanager",{"_index":1227,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._polygonmanager",{"_index":1250,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._polygonmanager.addpolygon(this",{"_index":1231,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._polygonmanager.deletepolygon(this",{"_index":1260,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._polygonmanager.setpolygonoptions",{"_index":1229,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._polylineaddedtomanager",{"_index":1328,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager",{"_index":1346,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager.addpolyline(this",{"_index":1334,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager.deletepolyline(this",{"_index":1349,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager.setpolylineoptions(this",{"_index":1333,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._polylinemanager.updatepolylinepoints(this",{"_index":1326,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this._rectangleaddedtomanager",{"_index":1410,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this._registereventlisteners",{"_index":629,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this._setinfowindowoptions(changes",{"_index":906,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._updatebounds",{"_index":764,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._updatebounds(details",{"_index":776,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this._updatecircleoptionschanges(changes",{"_index":642,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this._updatefitboundsdetails",{"_index":1049,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._updateopenstate",{"_index":899,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._updatepolygonoptions(changes",{"_index":1230,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this._updaterectangleoptionschanges(changes",{"_index":1416,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this._window",{"_index":1448,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["this.alreadyloaded.get(href",{"_index":1591,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.alreadyloaded.get(src",{"_index":1585,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.alreadyloaded.has(href",{"_index":1590,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.alreadyloaded.has(src",{"_index":1584,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.alreadyloaded.set(href",{"_index":1595,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.alreadyloaded.set(src",{"_index":1589,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.bounds",{"_index":159,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this.boundschange",{"_index":1419,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this.centerchange",{"_index":655,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this.circleclick",{"_index":657,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this.circledblclick",{"_index":659,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this.close",{"_index":912,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.createcsselement(href",{"_index":1592,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.createscriptelement(src",{"_index":1586,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.document",{"_index":1551,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.document.head",{"_index":1553,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.drag",{"_index":661,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.drag.emit(e",{"_index":1092,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.dragend",{"_index":663,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.dragend.emit(e",{"_index":1095,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.dragstart",{"_index":665,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.dragstart.emit(e",{"_index":1088,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.generatebounds(includeinbounds",{"_index":166,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this.handleinfowindowupdate",{"_index":1037,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.head",{"_index":1552,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.head.appendchild(script",{"_index":1588,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.head.appendchild(style",{"_index":1594,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.infowindow.changes.subscribe",{"_index":1038,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.foreach((infowindow",{"_index":1076,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.foreach((marker",{"_index":1043,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.length",{"_index":1039,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindowclose.emit",{"_index":910,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.isopen",{"_index":909,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.latitude",{"_index":900,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["this.lineclick.emit(ev",{"_index":1335,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linedblclick.emit(ev",{"_index":1336,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linedrag.emit(ev",{"_index":1337,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linedragend.emit(ev",{"_index":1338,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linedragstart.emit(ev",{"_index":1339,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemousedown.emit(ev",{"_index":1340,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemousemove.emit(ev",{"_index":1341,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemouseout.emit(ev",{"_index":1342,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemouseover.emit(ev",{"_index":1343,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linemouseup.emit(ev",{"_index":1344,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.linerightclick.emit(ev",{"_index":1345,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.longitude",{"_index":901,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["this.mapfitbounds",{"_index":793,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["this.markerclick.emit(this",{"_index":1078,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager",{"_index":1072,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.addmarker(this).then",{"_index":1048,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.deletemarker(this",{"_index":1104,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateanimation(this",{"_index":1068,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateclickable(this",{"_index":1066,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatedraggable(this",{"_index":1056,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateicon(this",{"_index":1060,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateiconlegacy(this",{"_index":1058,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatelabel(this",{"_index":1055,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatemarkerposition(this",{"_index":1051,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateopacity(this",{"_index":1062,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatetitle(this",{"_index":1053,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatevisible(this",{"_index":1063,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatezindex(this",{"_index":1064,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markerrightclick.emit(null",{"_index":1082,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.mousedown",{"_index":667,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.mousemove",{"_index":669,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.mouseout",{"_index":671,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.mouseout.emit(e",{"_index":1101,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.mouseover",{"_index":673,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.mouseover.emit(e",{"_index":1098,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.mouseup",{"_index":675,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.observeload(script",{"_index":1587,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.observeload(style",{"_index":1593,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.open",{"_index":911,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.openinfowindow",{"_index":1075,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.points",{"_index":1347,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.points.changes.subscribe",{"_index":1330,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.points.foreach((point",{"_index":1324,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.points.length",{"_index":1323,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.points.toarray",{"_index":1348,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.polyclick.emit(ev",{"_index":1236,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polydblclick.emit(ev",{"_index":1237,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polydrag.emit(ev",{"_index":1239,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polydragend.emit(ev",{"_index":1240,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polydragstart.emit(ev",{"_index":1241,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polymousedown.emit(ev",{"_index":1242,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polymousemove.emit(ev",{"_index":1243,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polymouseout.emit(ev",{"_index":1244,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polymouseover.emit(ev",{"_index":1245,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polymouseup.emit(ev",{"_index":1246,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.polyrightclick.emit(ev",{"_index":1247,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["this.positionchanged.emit(position",{"_index":1359,"title":{},"body":{"directives/NgMapsPolylinePoint.html":{}}}],["this.radiuschange",{"_index":677,"title":{},"body":{"directives/NgMapsCircleDirective.html":{}}}],["this.rectangleclick",{"_index":1420,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this.rectangledblclick",{"_index":1421,"title":{},"body":{"directives/NgMapsRectangleDirective.html":{}}}],["this.rightclick",{"_index":679,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.subscription.add",{"_index":681,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["this.subscription.add(cs",{"_index":1079,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(d",{"_index":1093,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(dragend",{"_index":1096,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(ds",{"_index":1089,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(mouseout",{"_index":1102,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(mouseover",{"_index":1099,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(os",{"_index":1253,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["this.subscription.add(rc",{"_index":1083,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.subscription.add(s",{"_index":1331,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.subscription.add(subscription",{"_index":1327,"title":{},"body":{"directives/NgMapsPolyline.html":{}}}],["this.subscription.unsubscribe",{"_index":695,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["throw",{"_index":1040,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["time",{"_index":164,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"index.html":{}}}],["timems",{"_index":195,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["timer",{"_index":136,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["timer(0",{"_index":163,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["title",{"_index":470,"title":{},"body":{"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"components/NgMapsMarkerComponent.html":{}}}],["todo",{"_index":110,"title":{},"body":{"injectables/CircleManager.html":{},"interfaces/MapOptions.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["toggle",{"_index":789,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["token",{"_index":724,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"miscellaneous/functions.html":{}}}],["top",{"_index":1454,"title":{},"body":{"interfaces/Padding.html":{}}}],["tostring",{"_index":817,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["trafficlayer",{"_index":1696,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["transitlayer",{"_index":1697,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["tree",{"_index":796,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["triggermapevent",{"_index":325,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["triggermapevent(eventname",{"_index":376,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["true",{"_index":521,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{}}}],["tslib",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"injectables/CircleManager.html":{},"interfaces/CircleOptions.html":{},"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"interfaces/MapOptions.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"interfaces/MarkerIcon.html":{},"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsPolylinePoint.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"interfaces/Padding.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ShapeOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1731,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":475,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["types/googlemaps",{"_index":1666,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":893,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["typically",{"_index":1686,"title":{},"body":{"index.html":{}}}],["typings",{"_index":896,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"index.html":{}}}],["uievent",{"_index":1556,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["unlike",{"_index":1161,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["unsubscribe",{"_index":1105,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["up",{"_index":988,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["update",{"_index":845,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{}}}],["updateanimation",{"_index":406,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateanimation(marker",{"_index":428,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateclickable",{"_index":407,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateclickable(marker",{"_index":430,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatedraggable",{"_index":408,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatedraggable(marker",{"_index":432,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateicon",{"_index":409,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateicon(marker",{"_index":434,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateiconlegacy",{"_index":410,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateiconlegacy(marker",{"_index":436,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatelabel",{"_index":411,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatelabel(marker",{"_index":438,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatemarkerposition",{"_index":412,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatemarkerposition(marker",{"_index":440,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateopacity",{"_index":413,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateopacity(marker",{"_index":442,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatepolygon",{"_index":1460,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["updatepolygon(polygon",{"_index":1469,"title":{},"body":{"injectables/PolygonManager.html":{}}}],["updatepolylinepoints",{"_index":1478,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["updatepolylinepoints(line",{"_index":1488,"title":{},"body":{"injectables/PolylineManager.html":{}}}],["updatetitle",{"_index":414,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatetitle(marker",{"_index":444,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatevisible",{"_index":415,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatevisible(marker",{"_index":446,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatezindex",{"_index":416,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatezindex(marker",{"_index":448,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["uppercase",{"_index":964,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["url",{"_index":400,"title":{},"body":{"interfaces/MarkerIcon.html":{},"components/NgMapsMarkerComponent.html":{},"injectables/ScriptLoaderService.html":{}}}],["usage",{"_index":1683,"title":{},"body":{"index.html":{}}}],["use",{"_index":835,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["used",{"_index":884,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["useexisting",{"_index":940,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["usefull",{"_index":834,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["user",{"_index":531,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["using",{"_index":1173,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["valid",{"_index":1682,"title":{},"body":{"index.html":{}}}],["value",{"_index":92,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/FitBoundsService.html":{},"interfaces/GeoPoint.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{},"injectables/ScriptLoaderService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":210,"title":{},"body":{"interfaces/GeoPoint.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["var",{"_index":923,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["variable",{"_index":1604,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1739,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1716,"title":{},"body":{"properties.html":{}}}],["vertex",{"_index":1169,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{}}}],["vertical",{"_index":985,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["vertices",{"_index":1135,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["via",{"_index":1430,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["view",{"_index":804,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"index.html":{}}}],["viewchild",{"_index":889,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["viewchild('content",{"_index":880,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["visibility",{"_index":778,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["visible",{"_index":466,"title":{},"body":{"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["void",{"_index":193,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"injectables/MapsApiWrapper.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsCircleDirective.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"classes/NoOpMapsAPILoader.html":{},"injectables/RectangleManager.html":{}}}],["west",{"_index":12,"title":{},"body":{"interfaces/BoundsLiteral.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["whe",{"_index":1198,"title":{},"body":{"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{}}}],["whether",{"_index":524,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["width",{"_index":564,"title":{},"body":{"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{}}}],["window",{"_index":274,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MapsAPILoader.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["window'},{'name",{"_index":925,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["window.manager",{"_index":891,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.manager.ts",{"_index":237,"title":{},"body":{"injectables/InfoWindowManager.html":{},"coverage.html":{}}}],["window.manager.ts:11",{"_index":248,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:19",{"_index":262,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:23",{"_index":270,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:25",{"_index":272,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:27",{"_index":264,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:32",{"_index":255,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:34",{"_index":268,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:39",{"_index":252,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.manager.ts:46",{"_index":256,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["window.ts",{"_index":798,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["window.ts:101",{"_index":886,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:107",{"_index":881,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:112",{"_index":830,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:118",{"_index":859,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:119",{"_index":877,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:120",{"_index":876,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:122",{"_index":871,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:131",{"_index":869,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:151",{"_index":862,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:160",{"_index":865,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:164",{"_index":864,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:178",{"_index":873,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:185",{"_index":866,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:191",{"_index":868,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:196",{"_index":874,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:201",{"_index":870,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:54",{"_index":823,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:58",{"_index":885,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:61",{"_index":878,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:69",{"_index":833,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:75",{"_index":837,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:81",{"_index":825,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:89",{"_index":846,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:96",{"_index":838,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["within",{"_index":224,"title":{},"body":{"interfaces/GeoPoint.html":{},"directives/NgMapsPolylinePoint.html":{}}}],["work",{"_index":127,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBoundsDirective.html":{}}}],["wrap",{"_index":232,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["wrapped",{"_index":222,"title":{},"body":{"interfaces/GeoPoint.html":{}}}],["wrapper",{"_index":106,"title":{},"body":{"injectables/CircleManager.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"injectables/PolygonManager.html":{},"injectables/PolylineManager.html":{},"injectables/RectangleManager.html":{}}}],["wrapper.ts",{"_index":303,"title":{},"body":{"injectables/MapsApiWrapper.html":{},"coverage.html":{}}}],["wrapper.ts:16",{"_index":378,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:17",{"_index":327,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:25",{"_index":340,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:31",{"_index":371,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:33",{"_index":344,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:39",{"_index":329,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:41",{"_index":361,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:45",{"_index":377,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:47",{"_index":359,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:49",{"_index":369,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:51",{"_index":364,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:53",{"_index":367,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:58",{"_index":357,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:63",{"_index":358,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:65",{"_index":362,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:67",{"_index":373,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:69",{"_index":360,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:71",{"_index":375,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:73",{"_index":337,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:75",{"_index":335,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:77",{"_index":331,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:82",{"_index":352,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:87",{"_index":349,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["wrapper.ts:89",{"_index":347,"title":{},"body":{"injectables/MapsApiWrapper.html":{}}}],["x",{"_index":767,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["x.latlng.lat",{"_index":769,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["x.latlng.lng",{"_index":771,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["y",{"_index":768,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["y.latlng.lat",{"_index":770,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["y.latlng.lng",{"_index":772,"title":{},"body":{"directives/NgMapsFitBoundsDirective.html":{}}}],["yarn",{"_index":1663,"title":{},"body":{"index.html":{}}}],["yes",{"_index":265,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MapsApiWrapper.html":{},"directives/NgMapsFitBoundsDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"injectables/ScriptLoaderService.html":{}}}],["zindex",{"_index":468,"title":{},"body":{"injectables/MarkerManager.html":{},"interfaces/MarkerOptions.html":{},"directives/NgMapsCircleDirective.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"directives/NgMapsPolyline.html":{},"directives/NgMapsRectangleDirective.html":{},"interfaces/ShapeOptions.html":{}}}],["zoom",{"_index":283,"title":{},"body":{"interfaces/MapOptions.html":{},"injectables/MapsApiWrapper.html":{},"components/NgMapsMarkerComponent.html":{},"directives/NgMapsPolygonDirective.html":{},"index.html":{},"overview.html":{}}}],["zoomcontrol",{"_index":284,"title":{},"body":{"interfaces/MapOptions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/BoundsLiteral.html":{"url":"interfaces/BoundsLiteral.html","title":"interface - BoundsLiteral","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BoundsLiteral\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/bounds.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            east\n                                        \n                                \n                                \n                                        \n                                            north\n                                        \n                                \n                                \n                                        \n                                            south\n                                        \n                                \n                                \n                                        \n                                            west\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        east\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        east:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        north\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        north:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        south\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        south:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        west\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        west:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BoundsLiteral {\n  east: number;\n  north: number;\n  south: number;\n  west: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CircleManager.html":{"url":"injectables/CircleManager.html","title":"injectable - CircleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CircleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/circle-manager.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _circles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                addCircle\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                getBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                getCenter\n                            \n                            \n                                    Public\n                                    Abstract\n                                getRadius\n                            \n                            \n                                    Public\n                                    Abstract\n                                removeCircle\n                            \n                            \n                                    Public\n                                    Abstract\n                                setCenter\n                            \n                            \n                                    Public\n                                    Abstract\n                                setDraggable\n                            \n                            \n                                    Public\n                                    Abstract\n                                setEditable\n                            \n                            \n                                    Public\n                                    Abstract\n                                setOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                setRadius\n                            \n                            \n                                    Public\n                                    Abstract\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_apiWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/circle-manager.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _apiWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        addCircle\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:56\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getRadius\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        removeCircle\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:27\n                \n            \n\n\n            \n                \n                    Removes the given circle from the map.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setDraggable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setEditable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(circle: NgMapsCircleDirective, options: CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of NgMapsCircleDirective\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        options for the circle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setRadius\n                        \n                    \n                \n            \n            \n                \n                    \n                    setRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setVisible\n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/circle-manager.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _circles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map\n  >()\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/managers/circle-manager.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { NgMapsCircleDirective } from '../../directives/circle';\nimport { BoundsLiteral } from '../../interface/bounds';\nimport { CircleOptions } from '../../interface/circle-options';\nimport { GeoPoint } from '../../interface/geo-point';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\n\n@Injectable()\nexport abstract class CircleManager {\n  protected _circles: Map> = new Map\n  >();\n\n  constructor(protected _apiWrapper: MapsApiWrapper, protected _zone: NgZone) {}\n\n  /**\n   * @param circle\n   */\n  public abstract addCircle(circle: NgMapsCircleDirective);\n\n  /**\n   * Removes the given circle from the map.\n   */\n  public abstract removeCircle(circle: NgMapsCircleDirective): Promise;\n  /**\n   * @todo check how to improve type casting\n   * @param circle instance of {@link NgMapsCircleDirective}\n   * @param options options for the circle\n   */\n  public abstract setOptions(\n    circle: NgMapsCircleDirective,\n    options: CircleOptions,\n  ): Promise;\n\n  public abstract getBounds(\n    circle: NgMapsCircleDirective,\n  ): Promise;\n\n  public abstract getCenter(circle: NgMapsCircleDirective): Promise;\n\n  public abstract getRadius(circle: NgMapsCircleDirective): Promise;\n\n  public abstract setCenter(circle: NgMapsCircleDirective): Promise;\n\n  public abstract setEditable(circle: NgMapsCircleDirective): Promise;\n\n  public abstract setDraggable(circle: NgMapsCircleDirective): Promise;\n\n  public abstract setVisible(circle: NgMapsCircleDirective): Promise;\n\n  public abstract setRadius(circle: NgMapsCircleDirective): Promise;\n\n  public abstract createEventObservable(\n    eventName: string,\n    circle: NgMapsCircleDirective,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CircleOptions.html":{"url":"interfaces/CircleOptions.html","title":"interface - CircleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CircleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/circle-options.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ShapeOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            radius\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        radius:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ShapeOptions } from './shape-options';\n\nexport interface CircleOptions extends ShapeOptions {\n  radius?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FitBoundsAccessor.html":{"url":"classes/FitBoundsAccessor.html","title":"class - FitBoundsAccessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FitBoundsAccessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/fit-bounds.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to implement when you what to be able to make it work with the auto fit bounds feature\nof AGM.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                getFitBoundsDetails$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getFitBoundsDetails$\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFitBoundsDetails$()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport {\n  flatMap,\n  map,\n  mergeMap,\n  sample,\n  shareReplay,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { BoundsLiteral } from '../interface/bounds';\nimport { GeoPoint } from '../interface/geo-point';\n\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: GeoPoint;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  public abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport abstract class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      mergeMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this.generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  protected abstract generateBounds(\n    includeInBounds: Map,\n  ): BoundsLiteral;\n\n  public addToBounds(latLng: GeoPoint) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  public removeFromBounds(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  public changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  public getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FitBoundsDetails.html":{"url":"interfaces/FitBoundsDetails.html","title":"interface - FitBoundsDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FitBoundsDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/fit-bounds.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            latLng\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latLng\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latLng:         GeoPoint\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GeoPoint\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport {\n  flatMap,\n  map,\n  mergeMap,\n  sample,\n  shareReplay,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { BoundsLiteral } from '../interface/bounds';\nimport { GeoPoint } from '../interface/geo-point';\n\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: GeoPoint;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  public abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport abstract class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      mergeMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this.generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  protected abstract generateBounds(\n    includeInBounds: Map,\n  ): BoundsLiteral;\n\n  public addToBounds(latLng: GeoPoint) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  public removeFromBounds(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  public changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  public getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FitBoundsService.html":{"url":"injectables/FitBoundsService.html","title":"injectable - FitBoundsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FitBoundsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/fit-bounds.ts\n        \n\n\n            \n                Description\n            \n            \n                The FitBoundsService is responsible for computing the bounds of the a single map.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                _boundsChangeSampleTime$\n                            \n                            \n                                    Protected\n                                    Readonly\n                                _includeInBounds$\n                            \n                            \n                                    Protected\n                                    Readonly\n                                bounds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _createIdentifier\n                            \n                            \n                                    Public\n                                addToBounds\n                            \n                            \n                                    Public\n                                changeFitBoundsChangeSampleTime\n                            \n                            \n                                    Protected\n                                    Abstract\n                                generateBounds\n                            \n                            \n                                    Public\n                                getBounds$\n                            \n                            \n                                    Public\n                                removeFromBounds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/fit-bounds.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _createIdentifier\n                        \n                    \n                \n            \n            \n                \n                    \n                    _createIdentifier(latLng: google.maps.LatLng | google.maps.LatLngLiteral)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                            google.maps.LatLng | google.maps.LatLngLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addToBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    addToBounds(latLng: GeoPoint)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeFitBoundsChangeSampleTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeFitBoundsChangeSampleTime(timeMs: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeMs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        generateBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateBounds(includeInBounds: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    includeInBounds\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BoundsLiteral\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getBounds$\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds$()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeFromBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFromBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                            google.maps.LatLng | google.maps.LatLngLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        _boundsChangeSampleTime$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    200,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/fit-bounds.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        _includeInBounds$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    new Map(),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/fit-bounds.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        bounds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/fit-bounds.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport {\n  flatMap,\n  map,\n  mergeMap,\n  sample,\n  shareReplay,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { BoundsLiteral } from '../interface/bounds';\nimport { GeoPoint } from '../interface/geo-point';\n\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: GeoPoint;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  public abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport abstract class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      mergeMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this.generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  protected abstract generateBounds(\n    includeInBounds: Map,\n  ): BoundsLiteral;\n\n  public addToBounds(latLng: GeoPoint) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  public removeFromBounds(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  public changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  public getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoPoint.html":{"url":"interfaces/GeoPoint.html","title":"interface - GeoPoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GeoPoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/geo-point.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            lat\n                                        \n                                \n                                \n                                        \n                                            lng\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Latitude in degrees. Values will be clamped to the range [-90, 90]. This\nmeans that if the value specified is less than -90, it will be set to\n-90. And if the value is greater than 90, it will be set to 90.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lng\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lng:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Longitude in degrees. Values outside the range [-180, 180] will be\nwrapped so that they fall within the range. For example, a value of -190\nwill be converted to 170. A value of 190 will be converted to -170. This\nreflects the fact that longitudes wrap around the globe.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface GeoPoint {\n  /**\n   * Latitude in degrees. Values will be clamped to the range [-90, 90]. This\n   * means that if the value specified is less than -90, it will be set to\n   * -90. And if the value is greater than 90, it will be set to 90.\n   */\n  lat: number;\n  /**\n   * Longitude in degrees. Values outside the range [-180, 180] will be\n   * wrapped so that they fall within the range. For example, a value of -190\n   * will be converted to 170. A value of 190 will be converted to -170. This\n   * reflects the fact that longitudes wrap around the globe.\n   */\n  lng: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InfoWindowManager.html":{"url":"injectables/InfoWindowManager.html","title":"injectable - InfoWindowManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InfoWindowManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/info-window.manager.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _infoWindows\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                addInfoWindow\n                            \n                            \n                                    Public\n                                    Abstract\n                                close\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                deleteInfoWindow\n                            \n                            \n                                    Public\n                                    Abstract\n                                open\n                            \n                            \n                                    Public\n                                    Abstract\n                                setOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                setPosition\n                            \n                            \n                                    Public\n                                    Abstract\n                                setZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone, _markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/info-window.manager.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _markerManager\n                                                  \n                                                        \n                                                                        MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        addInfoWindow\n                        \n                    \n                \n            \n            \n                \n                    \n                    addInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:46\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n                    Creates a Google Maps event listener for the given InfoWindow as an Observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        deleteInfoWindow\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open(infoWindow: NgMapsInfoWindowComponent, event?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(infoWindow: NgMapsInfoWindowComponent, options: google.maps.InfoWindowOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.InfoWindowOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPosition(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setZIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    setZIndex(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window.manager.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _infoWindows\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/managers/info-window.manager.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { NgMapsInfoWindowComponent } from '../../directives/info-window';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\n\nimport { MarkerManager } from './marker.manager';\n\n@Injectable()\nexport abstract class InfoWindowManager {\n  protected _infoWindows: Map = new Map();\n\n  constructor(\n    protected _mapsWrapper: MapsApiWrapper,\n    protected _zone: NgZone,\n    protected _markerManager: MarkerManager,\n  ) {}\n\n  public abstract deleteInfoWindow(\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Promise;\n\n  public abstract setPosition(infoWindow: NgMapsInfoWindowComponent): void;\n\n  public abstract setZIndex(infoWindow: NgMapsInfoWindowComponent): void;\n\n  public abstract open(\n    infoWindow: NgMapsInfoWindowComponent,\n    event?: any,\n  ): Promise;\n\n  public abstract close(infoWindow: NgMapsInfoWindowComponent): void;\n\n  public abstract setOptions(\n    infoWindow: NgMapsInfoWindowComponent,\n    options: google.maps.InfoWindowOptions,\n  );\n\n  public abstract addInfoWindow(\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Promise;\n\n  /**\n   * Creates a Google Maps event listener for the given InfoWindow as an Observable\n   */\n  public abstract createEventObservable(\n    eventName: string,\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MapOptions.html":{"url":"interfaces/MapOptions.html","title":"interface - MapOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MapOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/map-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disableDoubleClickZoom\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            draggable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mapTypeControl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scaleControl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scrollwheel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoom\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomControl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [option: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/interface/map-options.ts:8\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableDoubleClickZoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDoubleClickZoom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        draggable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapTypeControl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mapTypeControl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaleControl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scaleControl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollwheel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scrollwheel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomControl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomControl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MapOptions {\n  draggable?: boolean;\n  scrollwheel?: boolean;\n  scaleControl?: boolean;\n  zoomControl?: boolean;\n  mapTypeControl?: boolean;\n  zoom?: number;\n  disableDoubleClickZoom?: boolean;\n\n  /**\n   * @todo fixme\n   */\n  [option: string]: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapsAPILoader.html":{"url":"injectables/MapsAPILoader.html","title":"injectable - MapsAPILoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MapsAPILoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/maps-api-loader/maps-api-loader.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _document\n                            \n                            \n                                    Protected\n                                _window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                configure\n                            \n                            \n                                    Public\n                                    Abstract\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        configure\n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/maps-api-loader.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/maps-api-loader.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/maps-api-loader/maps-api-loader.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _window\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Window\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/maps-api-loader/maps-api-loader.ts:5\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport abstract class MapsAPILoader {\n  protected _window: Window;\n  protected _document: Document;\n  public abstract load(): Promise;\n  public abstract configure(config: any): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapsApiWrapper.html":{"url":"injectables/MapsApiWrapper.html","title":"injectable - MapsApiWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MapsApiWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/maps-api-wrapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _api\n                            \n                            \n                                    Protected\n                                _mapResolver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                clearInstanceListeners\n                            \n                            \n                                    Public\n                                    Abstract\n                                createCircle\n                            \n                            \n                                    Public\n                                    Abstract\n                                createDrawingManager\n                            \n                            \n                                    Public\n                                    Abstract\n                                createInfoWindow\n                            \n                            \n                                    Public\n                                    Abstract\n                                createMap\n                            \n                            \n                                    Public\n                                    Abstract\n                                createMarker\n                            \n                            \n                                    Public\n                                    Abstract\n                                createPolygon\n                            \n                            \n                                    Public\n                                    Abstract\n                                createPolyline\n                            \n                            \n                                    Public\n                                    Abstract\n                                createRectangle\n                            \n                            \n                                    Public\n                                    Abstract\n                                fitBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                getBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                getCenter\n                            \n                            \n                                    Public\n                                    Abstract\n                                getMapTypeId\n                            \n                            \n                                    Public\n                                    Async\n                                getNativeMap\n                            \n                            \n                                    Public\n                                    Abstract\n                                getZoom\n                            \n                            \n                                    Public\n                                    Abstract\n                                panTo\n                            \n                            \n                                    Public\n                                    Abstract\n                                panToBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                setCenter\n                            \n                            \n                                    Public\n                                    Abstract\n                                setMapOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                setZoom\n                            \n                            \n                                    Public\n                                    Abstract\n                                subscribeToMapEvent\n                            \n                            \n                                    Public\n                                    Abstract\n                                triggerMapEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_loader: MapsAPILoader, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/maps-api-wrapper.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _loader\n                                                  \n                                                        \n                                                                        MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        clearInstanceListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearInstanceListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createCircle\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCircle(center: GeoPoint, options: CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    center\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createDrawingManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDrawingManager(param: any, addToMap?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    addToMap\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createInfoWindow\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInfoWindow(center: GeoPoint, options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    center\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createMap\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMap(el: HTMLElement, center: GeoPoint, options: MapOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    center\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                MapOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createMarker\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMarker(position: GeoPoint, options?: MarkerOptions, addToMap?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                MarkerOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    addToMap\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createPolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPolygon(options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createPolyline\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPolyline(options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createRectangle\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRectangle(box: BoundsLiteral, options: RectangleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    box\n                                    \n                                                BoundsLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                RectangleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        fitBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    fitBounds(bounds: BoundsLiteral, boundsPadding?: number | Padding)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bounds\n                                    \n                                                BoundsLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    boundsPadding\n                                    \n                                                number | Padding\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCenter()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getMapTypeId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMapTypeId()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getNativeMap\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNativeMap()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getZoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    getZoom()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        panTo\n                        \n                    \n                \n            \n            \n                \n                    \n                    panTo(newCenter: GeoPoint)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newCenter\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        panToBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    panToBounds(bounds: BoundsLiteral, boundsPadding?: number | Padding)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bounds\n                                    \n                                                BoundsLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    boundsPadding\n                                    \n                                                number | Padding\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCenter(newCenter: GeoPoint)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newCenter\n                                    \n                                                GeoPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setMapOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setMapOptions(options: MapOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MapOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setZoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    setZoom(zoom: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    zoom\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        subscribeToMapEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeToMapEvent(eventName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        triggerMapEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    triggerMapEvent(eventName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-wrapper.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _api\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/maps-api-wrapper.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _mapResolver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/maps-api-wrapper.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { BoundsLiteral } from '../interface/bounds';\nimport { CircleOptions } from '../interface/circle-options';\nimport { GeoPoint } from '../interface/geo-point';\nimport { MapOptions } from '../interface/map-options';\nimport { MarkerOptions } from '../interface/marker-options';\nimport { Padding } from '../interface/padding';\nimport { RectangleOptions } from '../interface/rectangle-options';\n\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\n@Injectable()\nexport abstract class MapsApiWrapper {\n  protected _api: Promise;\n  protected _mapResolver: (value?: T) => void;\n\n  constructor(protected _loader: MapsAPILoader, protected _zone: NgZone) {\n    this._api = new Promise((resolve) => {\n      this._mapResolver = resolve;\n    });\n  }\n\n  public abstract createMap(\n    el: HTMLElement,\n    center: GeoPoint,\n    options: MapOptions,\n  );\n\n  public abstract setMapOptions(options: MapOptions);\n\n  public abstract createMarker(\n    position: GeoPoint,\n    options?: MarkerOptions,\n    addToMap?: boolean,\n  ): Promise;\n\n  public abstract clearInstanceListeners(): void;\n\n  public async getNativeMap(): Promise {\n    return this._api;\n  }\n\n  public abstract triggerMapEvent(eventName: string): Promise;\n\n  public abstract getCenter(): Promise;\n\n  public abstract setCenter(newCenter: GeoPoint): Promise;\n\n  public abstract panTo(newCenter: GeoPoint): Promise;\n\n  public abstract panToBounds(\n    bounds: BoundsLiteral,\n    boundsPadding?: number | Padding,\n  );\n\n  public abstract fitBounds(\n    bounds: BoundsLiteral,\n    boundsPadding?: number | Padding,\n  );\n\n  public abstract getBounds(): Promise;\n\n  public abstract getZoom(): Promise;\n\n  public abstract setZoom(zoom: number): Promise;\n\n  public abstract getMapTypeId(): Promise;\n\n  public abstract subscribeToMapEvent(eventName: string): Observable;\n\n  public abstract createInfoWindow(center: GeoPoint, options: any): Promise;\n\n  public abstract createDrawingManager(param: any, addToMap?: boolean);\n\n  public abstract createCircle(\n    center: GeoPoint,\n    options: CircleOptions,\n  ): Promise;\n\n  public abstract createRectangle(\n    box: BoundsLiteral,\n    options: RectangleOptions,\n  ): Promise;\n\n  public abstract createPolyline(options: any): Promise;\n\n  public abstract createPolygon(options: any): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkerIcon.html":{"url":"interfaces/MarkerIcon.html","title":"interface - MarkerIcon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MarkerIcon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/marker-icon.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fillColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fillOpacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rotation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scale\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strokeColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strokeOpacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strokeWeight\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fillColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillOpacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fillOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scale:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MarkerIcon {\n  url?: string;\n  fillColor?: string;\n  fillOpacity?: number;\n  path?: string;\n  rotation?: number;\n  scale?: number;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarkerManager.html":{"url":"injectables/MarkerManager.html","title":"injectable - MarkerManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MarkerManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/marker.manager.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addMarker\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                deleteMarker\n                            \n                            \n                                    Public\n                                getNativeMarker\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateAnimation\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateClickable\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateDraggable\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateIcon\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateIconLegacy\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateLabel\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateMarkerPosition\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateOpacity\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateTitle\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateVisible\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/marker.manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        addMarker\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string | Array, marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:68\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                            string | Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        deleteMarker\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNativeMarker\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNativeMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateAnimation\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAnimation(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateClickable\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateClickable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateDraggable\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDraggable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateIcon\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIcon(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateIconLegacy\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIconLegacy(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateLabel\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLabel(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateMarkerPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMarkerPosition(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateOpacity\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOpacity(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTitle(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateVisible\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateVisible(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateZIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateZIndex(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker.manager.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _markers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/managers/marker.manager.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { NgMapsMarkerComponent } from '../../directives/marker';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\n\n@Injectable()\nexport abstract class MarkerManager {\n  protected _markers: Map = new Map();\n\n  constructor(\n    protected _mapsWrapper: MapsApiWrapper,\n    protected _zone: NgZone,\n  ) {}\n\n  public abstract deleteMarker(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateMarkerPosition(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateTitle(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateLabel(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateDraggable(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateIconLegacy(marker: NgMapsMarkerComponent): void;\n  public abstract updateIcon(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateOpacity(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateVisible(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateZIndex(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateClickable(marker: NgMapsMarkerComponent): void;\n\n  public abstract updateAnimation(marker: NgMapsMarkerComponent): void;\n\n  public async addMarker(marker: NgMapsMarkerComponent): Promise {\n    const m = await this._mapsWrapper.createMarker(\n      { lat: marker.latitude, lng: marker.longitude },\n      {\n        label: marker.label,\n        draggable: marker.draggable,\n        icon: marker.iconUrl,\n        opacity: marker.opacity,\n        optimized: marker.optimized,\n        visible: marker.visible,\n        zIndex: marker.zIndex,\n        title: marker.title,\n        clickable: marker.clickable,\n        animation:\n          typeof marker.animation === 'string'\n            ? google.maps.Animation[marker.animation]\n            : marker.animation,\n      } as any,\n    );\n    this._markers.set(marker, m);\n  }\n\n  public getNativeMarker(marker: NgMapsMarkerComponent): T {\n    return this._markers.get(marker);\n  }\n\n  public abstract createEventObservable(\n    eventName: string | Array,\n    marker: NgMapsMarkerComponent,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkerOptions.html":{"url":"interfaces/MarkerOptions.html","title":"interface - MarkerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MarkerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/marker-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            clickable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visible\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zIndex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clickable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:     string | google.maps.MarkerLabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | google.maps.MarkerLabel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    not supported by here maps\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    not supported by here maps\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MarkerOptions {\n  /**\n   * not supported by here maps\n   */\n  label?: string | google.maps.MarkerLabel;\n  /**\n   * not supported by here maps\n   */\n  title?: string;\n  visible?: boolean;\n  zIndex?: number;\n  clickable?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsCircleDirective.html":{"url":"directives/NgMapsCircleDirective.html","title":"directive - NgMapsCircleDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgMapsCircleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/circle.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnChanges\n                            OnDestroy\n                            CircleOptions\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map-circle\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _circleAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _mapOptions\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerEventListeners\n                            \n                            \n                                    Private\n                                _updateCircleOptionsChanges\n                            \n                            \n                                    Public\n                                getBounds\n                            \n                            \n                                    Public\n                                getCenter\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                draggable\n                            \n                            \n                                editable\n                            \n                            \n                                fillColor\n                            \n                            \n                                fillOpacity\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                radius\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                centerChange\n                            \n                            \n                                circleClick\n                            \n                            \n                                circleDblClick\n                            \n                            \n                                drag\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragStart\n                            \n                            \n                                mouseDown\n                            \n                            \n                                mouseMove\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                mouseUp\n                            \n                            \n                                radiusChange\n                            \n                            \n                                rightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_manager: CircleManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/circle.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _manager\n                                                  \n                                                        \n                                                                        CircleManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:50\n                            \n                        \n                \n                    \n                        Indicates whether this Circle handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        draggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:55\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this circle over the map. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:61\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this circle by dragging the control points shown at\nthe center and around the circumference of the circle. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:66\n                            \n                        \n                \n                    \n                        The fill color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:71\n                            \n                        \n                \n                    \n                        The fill opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:40\n                            \n                        \n                \n                    \n                        The latitude position of the circle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:45\n                            \n                        \n                \n                    \n                        The clickable position of the circle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:76\n                            \n                        \n                \n                    \n                        The radius in meters on the Earth's surface.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:81\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:86\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:100\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:105\n                            \n                        \n                \n                    \n                        Whether this circle is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:110\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        centerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:116\n                            \n                        \n                \n                    \n                        This event is fired when the circle's center is changed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        circleClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:122\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        circleDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:128\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        drag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:134\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:140\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:146\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:152\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:158\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:164\n                            \n                        \n                \n                    \n                        This event is fired on circle mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:170\n                            \n                        \n                \n                    \n                        This event is fired on circle mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:176\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mouseup event is fired on the circle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:182\n                            \n                        \n                \n                    \n                        This event is fired when the circle's radius is changed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/circle.ts:188\n                            \n                        \n                \n                    \n                        This event is fired when the circle is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _registerEventListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    _registerEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _updateCircleOptionsChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateCircleOptionsChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:224\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:293\n                \n            \n\n\n            \n                \n                    Gets the LatLngBounds of this Circle.\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCenter()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:297\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:285\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/circle.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _circleAddedToManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/circle.ts:190\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        _mapOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/circle.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/circle.ts:192\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { BoundsLiteral } from '../interface/bounds';\nimport { CircleOptions } from '../interface/circle-options';\nimport { GeoPoint } from '../interface/geo-point';\nimport { CircleManager } from '../services/managers/circle-manager';\n\n@Directive({\n  selector: 'map-circle',\n})\nexport class NgMapsCircleDirective\n  implements OnInit, OnChanges, OnDestroy, CircleOptions\n{\n  constructor(private _manager: CircleManager) {}\n\n  private static _mapOptions: Array = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ];\n  /**\n   * The latitude position of the circle (required).\n   */\n  @Input() public latitude: number;\n\n  /**\n   * The clickable position of the circle (required).\n   */\n  @Input() public longitude: number;\n\n  /**\n   * Indicates whether this Circle handles mouse events. Defaults to true.\n   */\n  @Input() public clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this circle over the map. Defaults to false.\n   */\n  @Input() public draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this circle by dragging the control points shown at\n   * the center and around the circumference of the circle. Defaults to false.\n   */\n  @Input() public editable: boolean = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() public fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0.\n   */\n  @Input() public fillOpacity: number;\n\n  /**\n   * The radius in meters on the Earth's surface.\n   */\n  @Input() public radius: number = 0;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() public strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() public strokeOpacity: number;\n\n  /**\n   * The stroke position. Defaults to CENTER.\n   * This property is not supported on Internet Explorer 8 and earlier.\n   *\n   * @fixme\n   */\n  // @Input() strokePosition: google.maps.StrokePosition =\n  //   google.maps.StrokePosition.CENTER;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() public strokeWeight: number = 0;\n\n  /**\n   * Whether this circle is visible on the map. Defaults to true.\n   */\n  @Input() public visible: boolean = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() public zIndex: number;\n\n  /**\n   * This event is fired when the circle's center is changed.\n   */\n  @Output()\n  public centerChange: EventEmitter = new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the circle.\n   */\n  @Output()\n  public circleClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the circle.\n   */\n  @Output()\n  public circleDblClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the circle.\n   */\n  @Output()\n  public drag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the circle.\n   */\n  @Output()\n  public dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the circle.\n   */\n  @Output()\n  public dragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the circle.\n   */\n  @Output()\n  public mouseDown: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the circle.\n   */\n  @Output()\n  public mouseMove: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on circle mouseout.\n   */\n  @Output()\n  public mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on circle mouseover.\n   */\n  @Output()\n  public mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mouseup event is fired on the circle.\n   */\n  @Output()\n  public mouseUp: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the circle's radius is changed.\n   */\n  @Output()\n  public radiusChange: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the circle is right-clicked on.\n   */\n  @Output()\n  public rightClick: EventEmitter = new EventEmitter();\n\n  private _circleAddedToManager: boolean = false;\n\n  private subscription: Subscription = new Subscription();\n\n  /** @internal */\n  public ngOnInit() {\n    this._manager.addCircle(this);\n    this._circleAddedToManager = true;\n    this._registerEventListeners();\n  }\n\n  /** @internal */\n  public ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (!this._circleAddedToManager) {\n      return;\n    }\n    if (changes.latitude || changes.longitude) {\n      this._manager.setCenter(this);\n    }\n    if (changes.editable) {\n      this._manager.setEditable(this);\n    }\n    if (changes.draggable) {\n      this._manager.setDraggable(this);\n    }\n    if (changes.visible) {\n      this._manager.setVisible(this);\n    }\n    if (changes.radius) {\n      this._manager.setRadius(this);\n    }\n    this._updateCircleOptionsChanges(changes);\n  }\n\n  private _updateCircleOptionsChanges(changes: {\n    [propName: string]: SimpleChange;\n  }) {\n    const options: { [propName: string]: any } = {};\n    const optionKeys = Object.keys(changes).filter(\n      (k) => NgMapsCircleDirective._mapOptions.indexOf(k) !== -1,\n    );\n    optionKeys.forEach((k) => {\n      options[k] = changes[k].currentValue;\n    });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  private _registerEventListeners() {\n    const events: Map> = new Map\n    >();\n    events.set('center_changed', this.centerChange);\n    events.set('click', this.circleClick);\n    events.set('dblclick', this.circleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragstart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('radius_changed', this.radiusChange);\n    events.set('rightclick', this.rightClick);\n\n    events.forEach((eventEmitter, eventName) => {\n      this.subscription.add(\n        this._manager\n          .createEventObservable(eventName, this)\n          .subscribe((value) => {\n            switch (eventName) {\n              case 'radius_changed':\n                this._manager\n                  .getRadius(this)\n                  .then((radius) => eventEmitter.emit(radius));\n                break;\n              case 'center_changed':\n                this._manager.getCenter(this).then((center) =>\n                  eventEmitter.emit({\n                    ...center,\n                  }),\n                );\n                break;\n              default:\n                eventEmitter.emit(value);\n            }\n          }),\n      );\n    });\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this._manager.removeCircle(this);\n  }\n\n  /**\n   * Gets the LatLngBounds of this Circle.\n   */\n  public getBounds(): Promise {\n    return this._manager.getBounds(this);\n  }\n\n  public getCenter(): Promise {\n    return this._manager.getCenter(this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgMapsCoreModule.html":{"url":"modules/NgMapsCoreModule.html","title":"module - NgMapsCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    NgMapsCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/core.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The ng-maps core module. Contains all Directives/Services/Pipes\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, NgModule } from '@angular/core';\n\nimport { NgMapsCircleDirective } from './directives/circle';\nimport { NgMapsFitBoundsDirective } from './directives/fit-bounds';\nimport { NgMapsInfoWindowComponent } from './directives/info-window';\nimport { NgMapsViewComponent } from './directives/map';\nimport { NgMapsMarkerComponent } from './directives/marker';\nimport { NgMapsPolygonDirective } from './directives/polygon';\nimport { NgMapsPolyline } from './directives/polyline';\nimport { NgMapsPolylinePoint } from './directives/polyline-point';\nimport { NgMapsRectangleDirective } from './directives/rectangle';\n\nexport const MAP_PROVIDER = new InjectionToken('Map Provider');\n\nexport function isGoogleMaps(token: string) {\n  return token === 'GoogleMaps';\n}\n\nexport function isHereMaps(token: string) {\n  return token === 'HereMaps';\n}\n\n/**\n * @internal\n */\nexport function coreDirectives() {\n  return [\n    NgMapsViewComponent,\n    NgMapsMarkerComponent,\n    NgMapsInfoWindowComponent,\n    NgMapsFitBoundsDirective,\n    NgMapsCircleDirective,\n    NgMapsPolygonDirective,\n    NgMapsPolyline,\n    NgMapsPolylinePoint,\n    NgMapsRectangleDirective,\n  ];\n}\n\n/**\n * The ng-maps core module. Contains all Directives/Services/Pipes\n */\n@NgModule({\n  declarations: coreDirectives(),\n  exports: coreDirectives(),\n})\nexport class NgMapsCoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsFitBoundsDirective.html":{"url":"directives/NgMapsFitBoundsDirective.html","title":"directive - NgMapsFitBoundsDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgMapsFitBoundsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/fit-bounds.ts\n        \n\n\n            \n                Description\n            \n            \n                Adds the given directive to the auto fit bounds feature when the value is true.\nTo make it work with you custom AGM component, you also have to implement the FitBoundsAccessor abstract class.\n\n            \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mapFitBounds]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _latestFitBoundsDetails\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _updateBounds\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapFitBounds\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_fitBoundsAccessor: FitBoundsAccessor, _fitBoundsService: FitBoundsService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/fit-bounds.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fitBoundsAccessor\n                                                  \n                                                        \n                                                                        FitBoundsAccessor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fitBoundsService\n                                                  \n                                                        \n                                                                        FitBoundsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapFitBounds\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/fit-bounds.ts:34\n                            \n                        \n                \n                    \n                        If the value is true, the element gets added to the bounds of the map.\nDefault: true.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _updateBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateBounds(newFitBoundsDetails?: FitBoundsDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:78\n                \n            \n\n\n            \n                \n                    Either the location changed, or visible status changed.\nPossible state changes are\ninvisible -> visible\nvisible -> invisible\nvisible -> visible (new location)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newFitBoundsDetails\n                                    \n                                                FitBoundsDetails\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _latestFitBoundsDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FitBoundsDetails | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/fit-bounds.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/fit-bounds.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Self,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport {\n  FitBoundsAccessor,\n  FitBoundsDetails,\n  FitBoundsService,\n} from '../services/fit-bounds';\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n *\n * @example\n * \n */\n@Directive({\n  selector: '[mapFitBounds]',\n})\nexport class NgMapsFitBoundsDirective implements OnInit, OnDestroy, OnChanges {\n  /**\n   * If the value is true, the element gets added to the bounds of the map.\n   * Default: true.\n   */\n  @Input() public mapFitBounds: boolean = true;\n\n  private _latestFitBoundsDetails: FitBoundsDetails | null = null;\n  private subscription: Subscription = new Subscription();\n\n  constructor(\n    @Self() private readonly _fitBoundsAccessor: FitBoundsAccessor,\n    private readonly _fitBoundsService: FitBoundsService,\n  ) {}\n\n  /**\n   * @internal\n   */\n  public ngOnChanges(changes: SimpleChanges) {\n    this._updateBounds();\n  }\n\n  /**\n   * @internal\n   */\n  public ngOnInit() {\n    this.subscription.add(\n      this._fitBoundsAccessor\n        .getFitBoundsDetails$()\n        .pipe(\n          distinctUntilChanged(\n            (x: FitBoundsDetails, y: FitBoundsDetails) =>\n              x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng,\n          ),\n        )\n        .subscribe({\n          next: (details) => this._updateBounds(details),\n          complete: () => this._updateBounds(),\n        }),\n    );\n  }\n\n  /**\n   * Either the location changed, or visible status changed.\n   * Possible state changes are\n   * invisible -> visible\n   * visible -> invisible\n   * visible -> visible (new location)\n   */\n  private _updateBounds(newFitBoundsDetails?: FitBoundsDetails) {\n    // either visibility will change, or location, so remove the old one anyway\n    if (this._latestFitBoundsDetails) {\n      this._fitBoundsService.removeFromBounds(\n        this._latestFitBoundsDetails.latLng,\n      );\n      // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n      // true -> false -> true, in which case we still need old value cached here\n    }\n\n    if (newFitBoundsDetails) {\n      this._latestFitBoundsDetails = newFitBoundsDetails;\n    }\n    if (this._latestFitBoundsDetails) {\n      if (this.mapFitBounds === true) {\n        this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n      } else {\n        this._fitBoundsService.removeFromBounds(\n          this._latestFitBoundsDetails.latLng,\n        );\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  public ngOnDestroy() {\n    this.subscription.unsubscribe();\n    if (this._latestFitBoundsDetails !== null) {\n      this._fitBoundsService.removeFromBounds(\n        this._latestFitBoundsDetails.latLng,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgMapsInfoWindowComponent.html":{"url":"components/NgMapsInfoWindowComponent.html","title":"component - NgMapsInfoWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NgMapsInfoWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/directives/info-window.ts\n\n\n\n    \n        Description\n    \n    \n        NgMapsInfoWindowComponent renders a info window inside a NgMapsMarkerComponent or standalone.\nExample\nimport { Component } from '@angular/core';\n\n@Component({\n selector: 'my-map-cmp',\n styles: [`\n   map-view {\n     height: 300px;\n   }\n`],\n template: `\n   \n     \n       \n         Hi, this is the content of the info window\n       \n     \n   \n `\n})\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                map-info-window\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _infoWindowAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _infoWindowOptionsInputs\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                    Readonly\n                                elementRef\n                            \n                            \n                                    Public\n                                hostMarker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerEventListeners\n                            \n                            \n                                    Private\n                                _setInfoWindowOptions\n                            \n                            \n                                    Private\n                                _updateOpenState\n                            \n                            \n                                    Public\n                                    Async\n                                close\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                toString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableAutoPan\n                            \n                            \n                                isOpen\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                maxWidth\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                infoWindowClose\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_infoWindowManager: InfoWindowManager, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/info-window.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _infoWindowManager\n                                                  \n                                                        \n                                                                        InfoWindowManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableAutoPan\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:81\n                            \n                        \n                \n                    \n                        Disable auto-pan on open. By default, the info window will pan the map so that it is fully\nvisible when it opens.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:112\n                            \n                        \n                \n                    \n                        Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:69\n                            \n                        \n                \n                    \n                        The latitude position of the info window (only usefull if you use it ouside of a NgMapsMarkerComponent).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:75\n                            \n                        \n                \n                    \n                        The longitude position of the info window (only usefull if you use it ouside of a NgMapsMarkerComponent).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxWidth\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:96\n                            \n                        \n                \n                    \n                        Maximum width of the infowindow, regardless of content's width. This value is only considered\nif it is set before a call to open. To change the maximum width when changing content, call\nclose, update maxWidth, and then open.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:89\n                            \n                        \n                \n                    \n                        All InfoWindows are displayed on the map in order of their zIndex, with higher values\ndisplaying in front of InfoWindows with lower values. By default, InfoWindows are displayed\naccording to their latitude, with InfoWindows of lower latitudes appearing in front of\nInfoWindows at higher latitudes. InfoWindows are always displayed in front of markers.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        infoWindowClose\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:118\n                            \n                        \n                \n                    \n                        Emits an event when the info window is closed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _registerEventListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    _registerEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _setInfoWindowOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    _setInfoWindowOptions(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _updateOpenState\n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateOpenState()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:185\n                \n            \n\n\n            \n                \n                    Closes the info window.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        id\n                        \n                    \n                \n            \n            \n                \n                    \n                    id()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open(event?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:178\n                \n            \n\n\n            \n                \n                    Opens the info window.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toString\n                        \n                    \n                \n            \n            \n                \n                    \n                    toString()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : (infoWindowId++).toString()\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/info-window.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _infoWindowAddedToManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/info-window.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        _infoWindowOptionsInputs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    'disableAutoPan',\n    'maxWidth',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/info-window.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('content', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/info-window.ts:107\n                        \n                    \n\n            \n                \n                    Holds the native element that is used for the info window content.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        elementRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/info-window.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hostMarker\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgMapsMarkerComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/info-window.ts:101\n                        \n                    \n\n            \n                \n                    Holds the marker that is the host of the info window (if available)\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\n\nimport { InfoWindowManager } from '../services/managers/info-window.manager';\n\nimport { NgMapsMarkerComponent } from './marker';\n\nlet infoWindowId = 0;\n\n/**\n * NgMapsInfoWindowComponent renders a info window inside a {@link NgMapsMarkerComponent} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    map-view {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    \n *      \n *        \n *          Hi, this is the content of the info window\n *        \n *      \n *    \n *  `\n * })\n * ```\n */\n@Component({\n  selector: 'map-info-window',\n  template: `\n    \n      \n    \n  `,\n})\nexport class NgMapsInfoWindowComponent implements OnDestroy, OnChanges, OnInit {\n  // @todo how to add correct typings?\n  constructor(\n    protected _infoWindowManager: InfoWindowManager,\n    public readonly elementRef: ElementRef,\n  ) {}\n\n  private static _infoWindowOptionsInputs: Array = [\n    'disableAutoPan',\n    'maxWidth',\n  ];\n  /**\n   * The latitude position of the info window (only usefull if you use it ouside of a {@link\n   * NgMapsMarkerComponent}).\n   */\n  @Input() public latitude: number;\n\n  /**\n   * The longitude position of the info window (only usefull if you use it ouside of a {@link\n   * NgMapsMarkerComponent}).\n   */\n  @Input() public longitude: number;\n\n  /**\n   * Disable auto-pan on open. By default, the info window will pan the map so that it is fully\n   * visible when it opens.\n   */\n  @Input() public disableAutoPan: boolean;\n\n  /**\n   * All InfoWindows are displayed on the map in order of their zIndex, with higher values\n   * displaying in front of InfoWindows with lower values. By default, InfoWindows are displayed\n   * according to their latitude, with InfoWindows of lower latitudes appearing in front of\n   * InfoWindows at higher latitudes. InfoWindows are always displayed in front of markers.\n   */\n  @Input() public zIndex: number;\n\n  /**\n   * Maximum width of the infowindow, regardless of content's width. This value is only considered\n   * if it is set before a call to open. To change the maximum width when changing content, call\n   * close, update maxWidth, and then open.\n   */\n  @Input() public maxWidth: number;\n\n  /**\n   * Holds the marker that is the host of the info window (if available)\n   */\n  public hostMarker: NgMapsMarkerComponent;\n\n  /**\n   * Holds the native element that is used for the info window content.\n   */\n  @ViewChild('content', { static: true })\n  public content: ElementRef;\n\n  /**\n   * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n   */\n  @Input() public isOpen: boolean = false;\n\n  /**\n   * Emits an event when the info window is closed.\n   */\n  @Output()\n  public infoWindowClose: EventEmitter = new EventEmitter();\n  private _infoWindowAddedToManager: boolean = false;\n  private _id: string = (infoWindowId++).toString();\n\n  public ngOnInit() {\n    this._infoWindowManager.addInfoWindow(this).then(() => {\n      this._infoWindowAddedToManager = true;\n      this._updateOpenState();\n      this._registerEventListeners();\n    });\n  }\n\n  /** @internal */\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this._infoWindowAddedToManager) {\n      return;\n    }\n    if (\n      (changes.latitude || changes.longitude) &&\n      typeof this.latitude === 'number' &&\n      typeof this.longitude === 'number'\n    ) {\n      this._infoWindowManager.setPosition(this);\n    }\n    if (changes.zIndex) {\n      this._infoWindowManager.setZIndex(this);\n    }\n    if (changes.isOpen) {\n      this._updateOpenState();\n    }\n    this._setInfoWindowOptions(changes);\n  }\n\n  private _registerEventListeners() {\n    this._infoWindowManager\n      .createEventObservable('closeclick', this)\n      .subscribe(() => {\n        this.isOpen = false;\n        this.infoWindowClose.emit();\n      });\n  }\n\n  private _updateOpenState() {\n    this.isOpen ? this.open() : this.close();\n  }\n\n  private _setInfoWindowOptions(changes: SimpleChanges) {\n    const options: SimpleChanges = {};\n    const optionKeys = Object.keys(changes).filter((k) =>\n      NgMapsInfoWindowComponent._infoWindowOptionsInputs.includes(k),\n    );\n    optionKeys.forEach((k) => {\n      options[k] = changes[k].currentValue;\n    });\n    this._infoWindowManager.setOptions(this, options);\n  }\n\n  /**\n   * Opens the info window.\n   */\n  public open(event?: any): Promise {\n    return this._infoWindowManager.open(this, event);\n  }\n\n  /**\n   * Closes the info window.\n   */\n  public async close(): Promise {\n    await this._infoWindowManager.close(this);\n    return this.infoWindowClose.emit();\n  }\n\n  /** @internal */\n  public id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  public toString(): string {\n    return `NgMapsInfoWindowComponent-${this._id.toString()}`;\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this._infoWindowManager.deleteInfoWindow(this);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'NgMapsInfoWindowComponent', 'selector': 'map-info-window'},{'name': 'NgMapsMarkerComponent', 'selector': 'map-marker'},{'name': 'NgMapsViewComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'NgMapsCircleDirective', 'selector': 'map-circle'},{'name': 'NgMapsFitBoundsDirective', 'selector': '[mapFitBounds]'},{'name': 'NgMapsPolygonDirective', 'selector': 'map-polygon'},{'name': 'NgMapsPolyline', 'selector': 'map-polyline'},{'name': 'NgMapsPolylinePoint', 'selector': 'map-polyline-point'},{'name': 'NgMapsRectangleDirective', 'selector': 'map-rectangle'}];\n    var ACTUAL_COMPONENT = {'name': 'NgMapsInfoWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgMapsMarkerComponent.html":{"url":"components/NgMapsMarkerComponent.html","title":"component - NgMapsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NgMapsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/directives/marker.ts\n\n\n\n    \n        Description\n    \n    \n        NgMapsMarkerComponent renders a map marker inside a NgMapsViewComponent.\n\n              \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n                    AfterContentInit\n                    FitBoundsAccessor\n                    MarkerOptions\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: FitBoundsAccessor, useExisting: forwardRef(() => NgMapsMarkerComponent),\n}\n                \n            \n\n\n            \n                selector\n                map-marker\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                _fitBoundsDetails$\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _markerAddedToManger\n                            \n                            \n                                    Public\n                                animation\n                            \n                            \n                                    Public\n                                infoWindow\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _addEventListeners\n                            \n                            \n                                    Protected\n                                _updateFitBoundsDetails\n                            \n                            \n                                    Public\n                                getFitBoundsDetails$\n                            \n                            \n                                    Private\n                                handleInfoWindowUpdate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                toString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                iconUrl\n                            \n                            \n                                label\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                markerClickable\n                            \n                            \n                                markerDraggable\n                            \n                            \n                                opacity\n                            \n                            \n                                openInfoWindow\n                            \n                            \n                                optimized\n                            \n                            \n                                title\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                drag\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragStart\n                            \n                            \n                                markerClick\n                            \n                            \n                                markerRightClick\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/marker.ts:204\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        markerManager\n                                                  \n                                                        \n                                                                        MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         MarkerIcon\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:108\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconUrl\n                    \n                \n                \n                    \n                        Type :     string | google.maps.Icon\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:106\n                            \n                        \n                \n                    \n                        Icon (the URL of the image) for the foreground.\nCan also be a MarkerIcon (google.maps.Icon in Google Maps Javascript api)\nSee google.maps.Icon\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     string | google.maps.MarkerLabel\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:92\n                            \n                        \n                \n                    \n                        The label (a single uppercase character) for the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:77\n                            \n                        \n                \n                    \n                        The latitude position of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:82\n                            \n                        \n                \n                    \n                        The longitude position of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerClickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:143\n                            \n                        \n                \n                    \n                        If true, the marker can be clicked. Default value is true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:98\n                            \n                        \n                \n                    \n                        If true, the marker can be dragged. Default value is false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:123\n                            \n                        \n                \n                    \n                        The marker's opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        openInfoWindow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:118\n                            \n                        \n                \n                    \n                        Whether to automatically open the child info window when the marker is clicked.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        optimized\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:129\n                            \n                        \n                \n                    \n                        Marker optimize flag. If it is false then it prevent duplicate rendering.\nDefault it is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:87\n                            \n                        \n                \n                    \n                        The title of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:113\n                            \n                        \n                \n                    \n                        If true, the marker is visible\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:137\n                            \n                        \n                \n                    \n                        All markers are displayed on the map in order of their zIndex, with higher values displaying in\nfront of markers with lower values. By default, markers are displayed according to their\nvertical position on screen, with lower markers appearing in front of markers further up the\nscreen.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        drag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:173\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:179\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:167\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:155\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerRightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:161\n                            \n                        \n                \n                    \n                        This event is fired when the user rightclicks on the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:191\n                            \n                        \n                \n                    \n                        This event is fired when the user mouses outside the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:185\n                            \n                        \n                \n                    \n                        This event is fired when the user mouses over the marker.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _addEventListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:300\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _updateFitBoundsDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateFitBoundsDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:294\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFitBoundsDetails$\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFitBoundsDetails$()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:290\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleInfoWindowUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleInfoWindowUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        id\n                        \n                    \n                \n            \n            \n                \n                    \n                    id()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:363\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:213\n                \n            \n\n\n            \n                \n                     @internal\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:373\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toString\n                        \n                    \n                \n            \n            \n                \n                    \n                    toString()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:368\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        _fitBoundsDetails$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/marker.ts:203\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/marker.ts:200\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _markerAddedToManger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/marker.ts:199\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        animation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"BOUNCE\" | \"DROP\" | null\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/marker.ts:149\n                        \n                    \n\n            \n                \n                    Which animation to play when marker is added to a map.\nThis can be 'BOUNCE' or 'DROP'\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        infoWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Default value : new QueryList()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(NgMapsInfoWindowComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/marker.ts:197\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/marker.ts:201\n                        \n                    \n\n\n        \n    \n\n\n\n\n    \n        Component\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-map',\n  styles: [\n    `\n      map-view {\n        height: 300px;\n      }\n    `,\n  ],\n  templateUrl: './my-map.component.html',\n})\nexport class MyComponent {\n  lat: number = 51.678418;\n  lng: number = 7.809007;\n  zoom: number = 10;\n}Template\n\n  \n\n    \n\n    \n        import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  QueryList,\n  SimpleChange,\n} from '@angular/core';\nimport { Observable, ReplaySubject, Subscription } from 'rxjs';\n\nimport { MarkerIcon } from '../interface/marker-icon';\nimport { MarkerOptions } from '../interface/marker-options';\nimport { FitBoundsAccessor, FitBoundsDetails } from '../services/fit-bounds';\nimport { MarkerManager } from '../services/managers/marker.manager';\n\nimport { NgMapsInfoWindowComponent } from './info-window';\n\nlet markerId = 0;\n\n/**\n * NgMapsMarkerComponent renders a map marker inside a {@link NgMapsViewComponent}.\n *\n * @example\n * \n *               \n * \n */\n@Component({\n  selector: 'map-marker',\n  providers: [\n    {\n      provide: FitBoundsAccessor,\n      useExisting: forwardRef(() => NgMapsMarkerComponent),\n    },\n  ],\n  inputs: [\n    'latitude',\n    'longitude',\n    'title',\n    'label',\n    'draggable: markerDraggable',\n    'iconUrl',\n    'icon',\n    'openInfoWindow',\n    'opacity',\n    'optimized',\n    'visible',\n    'zIndex',\n    'animation',\n  ],\n  outputs: [\n    'markerClick',\n    'dragStart',\n    'drag',\n    'dragEnd',\n    'mouseOver',\n    'mouseOut',\n  ],\n  template: '',\n})\nexport class NgMapsMarkerComponent\n  implements\n    OnDestroy,\n    OnChanges,\n    AfterContentInit,\n    FitBoundsAccessor,\n    MarkerOptions\n{\n  /**\n   * The latitude position of the marker.\n   */\n  @Input() public latitude: number;\n\n  /**\n   * The longitude position of the marker.\n   */\n  @Input() public longitude: number;\n\n  /**\n   * The title of the marker.\n   */\n  @Input() public title: string;\n\n  /**\n   * The label (a single uppercase character) for the marker.\n   */\n  @Input() public label: string | google.maps.MarkerLabel;\n\n  /**\n   * If true, the marker can be dragged. Default value is false.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('markerDraggable') public draggable: boolean = false;\n\n  /**\n   * Icon (the URL of the image) for the foreground.\n   * Can also be a MarkerIcon (google.maps.Icon in Google Maps Javascript api)\n   *\n   * @see google.maps.Icon\n   */\n  @Input() public iconUrl: string | google.maps.Icon;\n\n  @Input() public icon: MarkerIcon;\n\n  /**\n   * If true, the marker is visible\n   */\n  @Input() public visible: boolean = true;\n\n  /**\n   * Whether to automatically open the child info window when the marker is clicked.\n   */\n  @Input() public openInfoWindow: boolean = true;\n\n  /**\n   * The marker's opacity between 0.0 and 1.0.\n   */\n  @Input() public opacity: number = 1;\n\n  /**\n   * Marker optimize flag. If it is false then it prevent duplicate rendering.\n   * Default it is true\n   */\n  @Input() public optimized: boolean = true;\n\n  /**\n   * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n   * front of markers with lower values. By default, markers are displayed according to their\n   * vertical position on screen, with lower markers appearing in front of markers further up the\n   * screen.\n   */\n  @Input() public zIndex: number = 1;\n\n  /**\n   * If true, the marker can be clicked. Default value is true.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('markerClickable') public clickable: boolean = true;\n\n  /**\n   * Which animation to play when marker is added to a map.\n   * This can be 'BOUNCE' or 'DROP'\n   */\n  public animation: 'BOUNCE' | 'DROP' | null;\n\n  /**\n   * This event emitter gets emitted when the user clicks on the marker.\n   */\n  @Output()\n  public markerClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user rightclicks on the marker.\n   */\n  @Output()\n  public markerRightClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the marker.\n   */\n  @Output()\n  public dragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the marker.\n   */\n  @Output()\n  public drag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the marker.\n   */\n  @Output()\n  public dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user mouses over the marker.\n   */\n  @Output()\n  public mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user mouses outside the marker.\n   */\n  @Output()\n  public mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * @internal\n   */\n  @ContentChildren(NgMapsInfoWindowComponent)\n  public infoWindow: QueryList = new QueryList();\n\n  private _markerAddedToManger: boolean = false;\n  private _id: string;\n  private subscription: Subscription = new Subscription();\n\n  protected readonly _fitBoundsDetails$: ReplaySubject =\n    new ReplaySubject(1);\n\n  constructor(private markerManager: MarkerManager) {\n    this._id = (markerId++).toString();\n  }\n\n  /**\n   *  @internal\n   */\n  public ngAfterContentInit() {\n    this.handleInfoWindowUpdate();\n    this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n  }\n\n  private handleInfoWindowUpdate() {\n    if (this.infoWindow.length > 1) {\n      throw new Error('Expected no more than one info window.');\n    }\n    this.infoWindow.forEach((marker) => {\n      marker.hostMarker = this;\n    });\n  }\n\n  /**\n   * @internal\n   */\n  public ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (typeof this.latitude === 'string') {\n      this.latitude = Number(this.latitude);\n    }\n    if (typeof this.longitude === 'string') {\n      this.longitude = Number(this.longitude);\n    }\n    if (\n      typeof this.latitude !== 'number' ||\n      typeof this.longitude !== 'number'\n    ) {\n      return;\n    }\n    if (!this._markerAddedToManger) {\n      this.markerManager.addMarker(this).then(() => {\n        this._updateFitBoundsDetails();\n        this._markerAddedToManger = true;\n        this._addEventListeners();\n      });\n      return;\n    }\n    if (changes.latitude || changes.longitude) {\n      this.markerManager.updateMarkerPosition(this);\n      this._updateFitBoundsDetails();\n    }\n    if (changes.title) {\n      this.markerManager.updateTitle(this);\n    }\n    if (changes.label) {\n      this.markerManager.updateLabel(this);\n    }\n    if (changes.draggable) {\n      this.markerManager.updateDraggable(this);\n    }\n    if (changes.iconUrl) {\n      this.markerManager.updateIconLegacy(this);\n    }\n    if (changes.icon) {\n      this.markerManager.updateIcon(this);\n    }\n    if (changes.opacity) {\n      this.markerManager.updateOpacity(this);\n    }\n    if (changes.visible) {\n      this.markerManager.updateVisible(this);\n    }\n    if (changes.zIndex) {\n      this.markerManager.updateZIndex(this);\n    }\n    if (changes.clickable) {\n      this.markerManager.updateClickable(this);\n    }\n    if (changes.animation) {\n      this.markerManager.updateAnimation(this);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  public getFitBoundsDetails$(): Observable {\n    return this._fitBoundsDetails$.asObservable();\n  }\n\n  protected _updateFitBoundsDetails() {\n    this._fitBoundsDetails$.next({\n      latLng: { lat: this.latitude, lng: this.longitude },\n    });\n  }\n\n  protected _addEventListeners() {\n    const cs = this.markerManager\n      .createEventObservable(['click', 'pointerdown'], this)\n      .subscribe({\n        next: (event) => {\n          if (this.openInfoWindow) {\n            this.infoWindow.forEach((infoWindow) => infoWindow.open(event));\n          }\n          this.markerClick.emit(this);\n        },\n      });\n    this.subscription.add(cs);\n\n    const rc = this.markerManager\n      .createEventObservable('rightclick', this)\n      .subscribe(() => {\n        this.markerRightClick.emit(null);\n      });\n    this.subscription.add(rc);\n\n    const ds = this.markerManager\n      .createEventObservable('dragstart', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.dragStart.emit(e);\n      });\n    this.subscription.add(ds);\n\n    const d = this.markerManager\n      .createEventObservable('drag', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.drag.emit(e);\n      });\n    this.subscription.add(d);\n\n    const dragend = this.markerManager\n      .createEventObservable('dragend', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.dragEnd.emit(e);\n      });\n    this.subscription.add(dragend);\n\n    const mouseover = this.markerManager\n      .createEventObservable(\n        ['mouseover', 'pointerenter'],\n        this,\n      )\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.mouseOver.emit(e);\n      });\n    this.subscription.add(mouseover);\n\n    const mouseout = this.markerManager\n      .createEventObservable(\n        ['mouseout', 'pointerleave'],\n        this,\n      )\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.mouseOut.emit(e);\n      });\n    this.subscription.add(mouseout);\n  }\n\n  /** @internal */\n  public id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  public toString(): string {\n    return `NgMapsMarker-${this._id}`;\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this.markerManager.deleteMarker(this);\n    // unsubscribe all registered observable subscription\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgMapsInfoWindowComponent', 'selector': 'map-info-window'},{'name': 'NgMapsMarkerComponent', 'selector': 'map-marker'},{'name': 'NgMapsViewComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'NgMapsCircleDirective', 'selector': 'map-circle'},{'name': 'NgMapsFitBoundsDirective', 'selector': '[mapFitBounds]'},{'name': 'NgMapsPolygonDirective', 'selector': 'map-polygon'},{'name': 'NgMapsPolyline', 'selector': 'map-polyline'},{'name': 'NgMapsPolylinePoint', 'selector': 'map-polyline-point'},{'name': 'NgMapsRectangleDirective', 'selector': 'map-rectangle'}];\n    var ACTUAL_COMPONENT = {'name': 'NgMapsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsPolygonDirective.html":{"url":"directives/NgMapsPolygonDirective.html","title":"directive - NgMapsPolygonDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgMapsPolygonDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/polygon.ts\n        \n\n\n            \n                Description\n            \n            \n                NgMapsPolygon renders a polygon on a NgMapsView\n\n            \n\n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map-polygon\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _polygonAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _polygonOptionsAttributes\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addEventListeners\n                            \n                            \n                                    Private\n                                _init\n                            \n                            \n                                    Private\n                                _updatePolygonOptions\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                editable\n                            \n                            \n                                fillColor\n                            \n                            \n                                fillOpacity\n                            \n                            \n                                geodesic\n                            \n                            \n                                paths\n                            \n                            \n                                polyDraggable\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                polyClick\n                            \n                            \n                                polyDblClick\n                            \n                            \n                                polyDrag\n                            \n                            \n                                polyDragEnd\n                            \n                            \n                                polyDragStart\n                            \n                            \n                                polyMouseDown\n                            \n                            \n                                polyMouseMove\n                            \n                            \n                                polyMouseOut\n                            \n                            \n                                polyMouseOver\n                            \n                            \n                                polyMouseUp\n                            \n                            \n                                polyRightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_polygonManager: PolygonManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/polygon.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _polygonManager\n                                                  \n                                                        \n                                                                        PolygonManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:49\n                            \n                        \n                \n                    \n                        Indicates whether this Polygon handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:62\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this shape by dragging the control\npoints shown at the vertices and on each segment. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:68\n                            \n                        \n                \n                    \n                        The fill color. All CSS3 colors are supported except for extended\nnamed colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:73\n                            \n                        \n                \n                    \n                        The fill opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        geodesic\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:82\n                            \n                        \n                \n                    \n                        When true, edges of the polygon are interpreted as geodesic and will\nfollow the curvature of the Earth. When false, edges of the polygon are\nrendered as straight lines in screen space. Note that the shape of a\ngeodesic polygon may appear to change when dragged, as the dimensions\nare maintained relative to the surface of the earth. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        paths\n                    \n                \n                \n                    \n                        Type :         Array | Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:95\n                            \n                        \n                \n                    \n                        The ordered sequence of coordinates that designates a closed loop.\nUnlike polylines, a polygon may consist of one or more paths.\n As a result, the paths property may specify one or more arrays of\nLatLng coordinates. Paths are closed automatically; do not repeat the\nfirst vertex of the path as the last vertex. Simple polygons may be\ndefined using a single array of LatLngs. More complex polygons may\nspecify an array of arrays. Any simple arrays are converted into Arrays.\nInserting or removing LatLngs from the Array will automatically update\nthe polygon on the map.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:56\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this shape over the map. The geodesic\nproperty defines the mode of dragging. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:101\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended\nnamed colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:106\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:111\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:116\n                            \n                        \n                \n                    \n                        Whether this polygon is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:121\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        polyClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:127\n                            \n                        \n                \n                    \n                        This event is fired when the DOM click event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:133\n                            \n                        \n                \n                    \n                        This event is fired when the DOM dblclick event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDrag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:139\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:145\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyDragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:151\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:157\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:163\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the Polygon.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:169\n                            \n                        \n                \n                    \n                        This event is fired on Polygon mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:175\n                            \n                        \n                \n                    \n                        This event is fired on Polygon mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyMouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:181\n                            \n                        \n                \n                    \n                        This event is fired whe the DOM mouseup event is fired on the Polygon\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polyRightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polygon.ts:187\n                            \n                        \n                \n                    \n                        This even is fired when the Polygon is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _addEventListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _init\n                        \n                    \n                \n            \n            \n                \n                    \n                    _init()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _updatePolygonOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    _updatePolygonOptions(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     google.maps.PolygonOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        id\n                        \n                    \n                \n            \n            \n                \n                    \n                    id()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polygon.ts:294\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polygon.ts:189\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _polygonAddedToManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polygon.ts:190\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        _polygonOptionsAttributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    'clickable',\n    'draggable',\n    'editable',\n    'fillColor',\n    'fillOpacity',\n    'geodesic',\n    'icon',\n    'map',\n    'paths',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'draggable',\n    'editable',\n    'visible',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polygon.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polygon.ts:191\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n    \n        Component\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-map',\n  styles: [\n    `\n      map-view {\n        height: 300px;\n      }\n    `,\n  ],\n  templateUrl: './my-map.component.html',\n})\nexport class MyMapComponent {\n  lat: number = 0;\n  lng: number = 0;\n  zoom: number = 10;\n  paths: Array = [\n    { lat: 0, lng: 10 },\n    { lat: 0, lng: 20 },\n    { lat: 10, lng: 20 },\n    { lat: 10, lng: 10 },\n    { lat: 0, lng: 10 },\n  ];\n  // Nesting paths will create a hole where they overlap;\n  nestedPaths: Array> = [\n    [\n      { lat: 0, lng: 10 },\n      { lat: 0, lng: 20 },\n      { lat: 10, lng: 20 },\n      { lat: 10, lng: 10 },\n      { lat: 0, lng: 10 },\n    ],\n    [\n      { lat: 0, lng: 15 },\n      { lat: 0, lng: 20 },\n      { lat: 5, lng: 20 },\n      { lat: 5, lng: 15 },\n      { lat: 0, lng: 15 },\n    ],\n  ];\n}Template\n\n  \n\n    \n\n    \n        import {\n  AfterContentInit,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { GeoPoint } from '../interface/geo-point';\nimport { PolygonManager } from '../services/managers/polygon.manager';\n\n/**\n * NgMapsPolygon renders a polygon on a {@link https://ng-maps.github.io/core/components/NgMapsViewComponent.html|NgMapsView}\n */\n@Directive({\n  selector: 'map-polygon',\n})\nexport class NgMapsPolygonDirective\n  implements OnDestroy, OnChanges, AfterContentInit\n{\n  constructor(private _polygonManager: PolygonManager) {}\n\n  private static _polygonOptionsAttributes: Array = [\n    'clickable',\n    'draggable',\n    'editable',\n    'fillColor',\n    'fillOpacity',\n    'geodesic',\n    'icon',\n    'map',\n    'paths',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'draggable',\n    'editable',\n    'visible',\n  ];\n  /**\n   * Indicates whether this Polygon handles mouse events. Defaults to true.\n   */\n  @Input() public clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this shape over the map. The geodesic\n   * property defines the mode of dragging. Defaults to false.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('polyDraggable') public draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this shape by dragging the control\n   * points shown at the vertices and on each segment. Defaults to false.\n   */\n  @Input() public editable: boolean = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended\n   * named colors.\n   */\n  @Input() public fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0\n   */\n  @Input() public fillOpacity: number;\n\n  /**\n   * When true, edges of the polygon are interpreted as geodesic and will\n   * follow the curvature of the Earth. When false, edges of the polygon are\n   * rendered as straight lines in screen space. Note that the shape of a\n   * geodesic polygon may appear to change when dragged, as the dimensions\n   * are maintained relative to the surface of the earth. Defaults to false.\n   */\n  @Input() public geodesic: boolean = false;\n\n  /**\n   * The ordered sequence of coordinates that designates a closed loop.\n   * Unlike polylines, a polygon may consist of one or more paths.\n   *  As a result, the paths property may specify one or more arrays of\n   * LatLng coordinates. Paths are closed automatically; do not repeat the\n   * first vertex of the path as the last vertex. Simple polygons may be\n   * defined using a single array of LatLngs. More complex polygons may\n   * specify an array of arrays. Any simple arrays are converted into Arrays.\n   * Inserting or removing LatLngs from the Array will automatically update\n   * the polygon on the map.\n   */\n  @Input() public paths: Array | Array> = [];\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended\n   * named colors.\n   */\n  @Input() public strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() public strokeOpacity: number;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() public strokeWeight: number;\n\n  /**\n   * Whether this polygon is visible on the map. Defaults to true.\n   */\n  @Input() public visible: boolean;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() public zIndex: number;\n\n  /**\n   * This event is fired when the DOM click event is fired on the Polygon.\n   */\n  @Output()\n  public polyClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM dblclick event is fired on the Polygon.\n   */\n  @Output()\n  public polyDblClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the polygon.\n   */\n  @Output()\n  public polyDrag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the polygon.\n   */\n  @Output()\n  public polyDragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the polygon.\n   */\n  @Output()\n  public polyDragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the Polygon.\n   */\n  @Output()\n  public polyMouseDown: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the Polygon.\n   */\n  @Output()\n  public polyMouseMove: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on Polygon mouseout.\n   */\n  @Output()\n  public polyMouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on Polygon mouseover.\n   */\n  @Output()\n  public polyMouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired whe the DOM mouseup event is fired on the Polygon\n   */\n  @Output()\n  public polyMouseUp: EventEmitter = new EventEmitter();\n\n  /**\n   * This even is fired when the Polygon is right-clicked on.\n   */\n  @Output()\n  public polyRightClick: EventEmitter = new EventEmitter();\n\n  private _id: string;\n  private _polygonAddedToManager: boolean = false;\n  private subscription: Subscription = new Subscription();\n\n  /** @internal */\n  public ngAfterContentInit() {\n    if (!this._polygonAddedToManager) {\n      this._init();\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): any {\n    if (!this._polygonAddedToManager) {\n      this._init();\n      return;\n    }\n\n    this._polygonManager.setPolygonOptions(\n      this,\n      this._updatePolygonOptions(changes),\n    );\n  }\n\n  private _init() {\n    this._polygonManager.addPolygon(this);\n    this._polygonAddedToManager = true;\n    this._addEventListeners();\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      {\n        name: 'click',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyClick.emit(ev),\n      },\n      {\n        name: 'dblclick',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyDblClick.emit(ev),\n      },\n      { name: 'drag', handler: (ev: MouseEvent) => this.polyDrag.emit(ev) },\n      {\n        name: 'dragend',\n        handler: (ev: MouseEvent) => this.polyDragEnd.emit(ev),\n      },\n      {\n        name: 'dragstart',\n        handler: (ev: MouseEvent) => this.polyDragStart.emit(ev),\n      },\n      {\n        name: 'mousedown',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyMouseDown.emit(ev),\n      },\n      {\n        name: 'mousemove',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyMouseMove.emit(ev),\n      },\n      {\n        name: 'mouseout',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyMouseOut.emit(ev),\n      },\n      {\n        name: 'mouseover',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyMouseOver.emit(ev),\n      },\n      {\n        name: 'mouseup',\n        handler: (ev: google.maps.PolyMouseEvent) => this.polyMouseUp.emit(ev),\n      },\n      {\n        name: 'rightclick',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.polyRightClick.emit(ev),\n      },\n    ];\n    handlers.forEach((obj) => {\n      const os = this._polygonManager\n        .createEventObservable(obj.name, this)\n        .subscribe(obj.handler);\n      this.subscription.add(os);\n    });\n  }\n\n  private _updatePolygonOptions(\n    changes: SimpleChanges,\n  ): google.maps.PolygonOptions {\n    return Object.keys(changes)\n      .filter(\n        (k) =>\n          NgMapsPolygonDirective._polygonOptionsAttributes.indexOf(k) !== -1,\n      )\n      .reduce((obj: any, k: string) => {\n        obj[k] = changes[k].currentValue;\n        return obj;\n      }, {});\n  }\n\n  /** @internal */\n  public id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this._polygonManager.deletePolygon(this);\n    // unsubscribe all registered observable subscriptions\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsPolyline.html":{"url":"directives/NgMapsPolyline.html","title":"directive - NgMapsPolyline","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgMapsPolyline\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/polyline.ts\n        \n\n\n            \n                Description\n            \n            \n                NgMapsPolyline renders a polyline on a NgMapsView\n\n            \n\n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map-polyline\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _polylineAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _polylineOptionsAttributes\n                            \n                            \n                                    Public\n                                points\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addEventListeners\n                            \n                            \n                                    Public\n                                _getPoints\n                            \n                            \n                                    Private\n                                _init\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                editable\n                            \n                            \n                                geodesic\n                            \n                            \n                                icons\n                            \n                            \n                                polylineDraggable\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                lineClick\n                            \n                            \n                                lineDblClick\n                            \n                            \n                                lineDrag\n                            \n                            \n                                lineDragEnd\n                            \n                            \n                                lineDragStart\n                            \n                            \n                                lineMouseDown\n                            \n                            \n                                lineMouseMove\n                            \n                            \n                                lineMouseOut\n                            \n                            \n                                lineMouseOver\n                            \n                            \n                                lineMouseUp\n                            \n                            \n                                lineRightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_polylineManager: PolylineManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/polyline.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _polylineManager\n                                                  \n                                                        \n                                                                        PolylineManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:46\n                            \n                        \n                \n                    \n                        Indicates whether this Polyline handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:59\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this shape by dragging the control points shown at the\nvertices and on each segment. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        geodesic\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:67\n                            \n                        \n                \n                    \n                        When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\nthe Earth. When false, edges of the polygon are rendered as straight lines in screen space.\nNote that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\nare maintained relative to the surface of the earth. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        icons\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:87\n                            \n                        \n                \n                    \n                        The icons to be rendered along the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        polylineDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:53\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this shape over the map. The geodesic property defines the\nmode of dragging. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:72\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:77\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:82\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:92\n                            \n                        \n                \n                    \n                        Whether this polyline is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:97\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        lineClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:103\n                            \n                        \n                \n                    \n                        This event is fired when the DOM click event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:109\n                            \n                        \n                \n                    \n                        This event is fired when the DOM dblclick event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDrag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:115\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:121\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineDragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:127\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:133\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:139\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the Polyline.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:145\n                            \n                        \n                \n                    \n                        This event is fired on Polyline mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:151\n                            \n                        \n                \n                    \n                        This event is fired on Polyline mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:157\n                            \n                        \n                \n                    \n                        This event is fired whe the DOM mouseup event is fired on the Polyline\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lineRightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline.ts:163\n                            \n                        \n                \n                    \n                        This even is fired when the Polyline is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _addEventListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:215\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        _getPoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    _getPoints()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:272\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _init\n                        \n                    \n                \n            \n            \n                \n                    \n                    _init()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        id\n                        \n                    \n                \n            \n            \n                \n                    \n                    id()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:281\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline.ts:286\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polyline.ts:171\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _polylineAddedToManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polyline.ts:172\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        _polylineOptionsAttributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    'draggable',\n    'editable',\n    'visible',\n    'geodesic',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'zIndex',\n    'icons',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polyline.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        points\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(NgMapsPolylinePoint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polyline.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/polyline.ts:173\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n    \n        Polyline\nExample\nComponent\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-map',\n  styles: [\n    `\n      .agm-map-container {\n        height: 300px;\n      }\n    `,\n  ],\n  templateUrl: './my-map.component.html',\n})\nexport class MyMapComponent {}Template\n\n  \n    \n    \n    \n    \n  \n\n    \n\n    \n        import {\n  AfterContentInit,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  QueryList,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { PolylineManager } from '../services/managers/polyline-manager';\n\nimport { NgMapsPolylinePoint } from './polyline-point';\n\nlet polylineId = 0;\n\n/**\n * NgMapsPolyline renders a polyline on a {@link https://ng-maps.github.io/core/components/NgMapsViewComponent.html|NgMapsView}\n */\n@Directive({\n  selector: 'map-polyline',\n})\nexport class NgMapsPolyline implements OnDestroy, OnChanges, AfterContentInit {\n  constructor(private _polylineManager: PolylineManager) {\n    this._id = (polylineId++).toString();\n  }\n\n  private static _polylineOptionsAttributes: Array = [\n    'draggable',\n    'editable',\n    'visible',\n    'geodesic',\n    'strokeColor',\n    'strokeOpacity',\n    'strokeWeight',\n    'zIndex',\n    'icons',\n  ];\n  /**\n   * Indicates whether this Polyline handles mouse events. Defaults to true.\n   */\n  @Input() public clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this shape over the map. The geodesic property defines the\n   * mode of dragging. Defaults to false.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('polylineDraggable') public draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this shape by dragging the control points shown at the\n   * vertices and on each segment. Defaults to false.\n   */\n  @Input() public editable: boolean = false;\n\n  /**\n   * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n   * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n   * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n   * are maintained relative to the surface of the earth. Defaults to false.\n   */\n  @Input() public geodesic: boolean = false;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() public strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0.\n   */\n  @Input() public strokeOpacity: number;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() public strokeWeight: number;\n\n  /**\n   * The icons to be rendered along the polyline.\n   */\n  @Input() public icons: Array;\n\n  /**\n   * Whether this polyline is visible on the map. Defaults to true.\n   */\n  @Input() public visible: boolean = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() public zIndex: number;\n\n  /**\n   * This event is fired when the DOM click event is fired on the Polyline.\n   */\n  @Output()\n  public lineClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM dblclick event is fired on the Polyline.\n   */\n  @Output()\n  public lineDblClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the polyline.\n   */\n  @Output()\n  public lineDrag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the polyline.\n   */\n  @Output()\n  public lineDragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the polyline.\n   */\n  @Output()\n  public lineDragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the Polyline.\n   */\n  @Output()\n  public lineMouseDown: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the Polyline.\n   */\n  @Output()\n  public lineMouseMove: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on Polyline mouseout.\n   */\n  @Output()\n  public lineMouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on Polyline mouseover.\n   */\n  @Output()\n  public lineMouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired whe the DOM mouseup event is fired on the Polyline\n   */\n  @Output()\n  public lineMouseUp: EventEmitter = new EventEmitter();\n\n  /**\n   * This even is fired when the Polyline is right-clicked on.\n   */\n  @Output()\n  public lineRightClick: EventEmitter = new EventEmitter();\n\n  /**\n   * @internal\n   */\n  @ContentChildren(NgMapsPolylinePoint)\n  public points: QueryList;\n\n  private _id: string;\n  private _polylineAddedToManager: boolean = false;\n  private subscription: Subscription = new Subscription();\n\n  /** @internal */\n  public ngAfterContentInit() {\n    if (this.points.length) {\n      this.points.forEach((point: NgMapsPolylinePoint) => {\n        const subscription = point.positionChanged.subscribe(() => {\n          this._polylineManager.updatePolylinePoints(this);\n        });\n        this.subscription.add(subscription);\n      });\n    }\n    if (!this._polylineAddedToManager) {\n      this._init();\n    }\n    const s = this.points.changes.subscribe(() =>\n      this._polylineManager.updatePolylinePoints(this),\n    );\n    this.subscription.add(s);\n    this._polylineManager.updatePolylinePoints(this);\n  }\n\n  public ngOnChanges(changes: SimpleChanges): any {\n    if (!this._polylineAddedToManager) {\n      this._init();\n      return;\n    }\n\n    const options: { [propName: string]: any } = {};\n    const optionKeys = Object.keys(changes).filter(\n      (k) => NgMapsPolyline._polylineOptionsAttributes.indexOf(k) !== -1,\n    );\n    optionKeys.forEach((k) => (options[k] = changes[k].currentValue));\n    this._polylineManager.setPolylineOptions(this, options);\n  }\n\n  private _init() {\n    this._polylineManager.addPolyline(this);\n    this._polylineAddedToManager = true;\n    this._addEventListeners();\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      {\n        name: 'click',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineClick.emit(ev),\n      },\n      {\n        name: 'dblclick',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineDblClick.emit(ev),\n      },\n      { name: 'drag', handler: (ev: MouseEvent) => this.lineDrag.emit(ev) },\n      {\n        name: 'dragend',\n        handler: (ev: MouseEvent) => this.lineDragEnd.emit(ev),\n      },\n      {\n        name: 'dragstart',\n        handler: (ev: MouseEvent) => this.lineDragStart.emit(ev),\n      },\n      {\n        name: 'mousedown',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineMouseDown.emit(ev),\n      },\n      {\n        name: 'mousemove',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineMouseMove.emit(ev),\n      },\n      {\n        name: 'mouseout',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineMouseOut.emit(ev),\n      },\n      {\n        name: 'mouseover',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineMouseOver.emit(ev),\n      },\n      {\n        name: 'mouseup',\n        handler: (ev: google.maps.PolyMouseEvent) => this.lineMouseUp.emit(ev),\n      },\n      {\n        name: 'rightclick',\n        handler: (ev: google.maps.PolyMouseEvent) =>\n          this.lineRightClick.emit(ev),\n      },\n    ];\n    handlers.forEach((obj) => {\n      const os = this._polylineManager\n        .createEventObservable(obj.name, this)\n        .subscribe(obj.handler);\n      this.subscription.add(os);\n    });\n  }\n\n  /** @internal */\n  public _getPoints(): Array {\n    if (this.points) {\n      return this.points.toArray();\n    } else {\n      return [];\n    }\n  }\n\n  /** @internal */\n  public id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this._polylineManager.deletePolyline(this);\n    // unsubscribe all registered observable subscriptions\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsPolylinePoint.html":{"url":"directives/NgMapsPolylinePoint.html","title":"directive - NgMapsPolylinePoint","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgMapsPolylinePoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/polyline-point.ts\n        \n\n\n            \n                Description\n            \n            \n                NgMapsPolylinePoint represents one element of a polyline within a  NgMapsPolyline\n\n            \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map-polyline-point\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                positionChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/polyline-point.ts:32\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline-point.ts:21\n                            \n                        \n                \n                    \n                        The latitude position of the point.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline-point.ts:26\n                            \n                        \n                \n                    \n                        The longitude position of the point;\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        positionChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/polyline-point.ts:32\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the position of the point changed.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/polyline-point.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\n\n/**\n * NgMapsPolylinePoint represents one element of a polyline within a  {@link\n * NgMapsPolyline}\n */\n@Directive({\n  selector: 'map-polyline-point',\n})\nexport class NgMapsPolylinePoint implements OnChanges {\n  /**\n   * The latitude position of the point.\n   */\n  @Input() public latitude: number;\n\n  /**\n   * The longitude position of the point;\n   */\n  @Input() public longitude: number;\n\n  /**\n   * This event emitter gets emitted when the position of the point changed.\n   */\n  @Output()\n  public positionChanged: EventEmitter = new EventEmitter();\n\n  constructor() {}\n\n  public ngOnChanges(changes: SimpleChanges): any {\n    if (changes.latitude || changes.longitude) {\n      const position: google.maps.LatLngLiteral = {\n        lat: changes.latitude ? changes.latitude.currentValue : this.latitude,\n        lng: changes.longitude\n          ? changes.longitude.currentValue\n          : this.longitude,\n      } as google.maps.LatLngLiteral;\n      this.positionChanged.emit(position);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsRectangleDirective.html":{"url":"directives/NgMapsRectangleDirective.html","title":"directive - NgMapsRectangleDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgMapsRectangleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/rectangle.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnChanges\n                            OnDestroy\n                            RectangleOptions\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map-rectangle\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _mapOptions\n                            \n                            \n                                    Private\n                                _rectangleAddedToManager\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerEventListeners\n                            \n                            \n                                    Private\n                                _updateRectangleOptionsChanges\n                            \n                            \n                                    Public\n                                getBounds\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickable\n                            \n                            \n                                east\n                            \n                            \n                                editable\n                            \n                            \n                                fillColor\n                            \n                            \n                                fillOpacity\n                            \n                            \n                                north\n                            \n                            \n                                rectangleDraggable\n                            \n                            \n                                south\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokePosition\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                visible\n                            \n                            \n                                west\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                boundsChange\n                            \n                            \n                                drag\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragStart\n                            \n                            \n                                mouseDown\n                            \n                            \n                                mouseMove\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                mouseUp\n                            \n                            \n                                rectangleClick\n                            \n                            \n                                rectangleDblClick\n                            \n                            \n                                rightClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_manager: RectangleManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/rectangle.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _manager\n                                                  \n                                                        \n                                                                        RectangleManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        clickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:59\n                            \n                        \n                \n                    \n                        Indicates whether this Rectangle handles mouse events. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        east\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:44\n                            \n                        \n                \n                    \n                        The east position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:71\n                            \n                        \n                \n                    \n                        If set to true, the user can edit this rectangle by dragging the control points shown at\nthe center and around the circumference of the rectangle. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:76\n                            \n                        \n                \n                    \n                        The fill color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fillOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:81\n                            \n                        \n                \n                    \n                        The fill opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        north\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:39\n                            \n                        \n                \n                    \n                        The north position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:65\n                            \n                        \n                \n                    \n                        If set to true, the user can drag this rectangle over the map. Defaults to false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        south\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:49\n                            \n                        \n                \n                    \n                        The south position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:86\n                            \n                        \n                \n                    \n                        The stroke color. All CSS3 colors are supported except for extended named colors.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:91\n                            \n                        \n                \n                    \n                        The stroke opacity between 0.0 and 1.0\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokePosition\n                    \n                \n                \n                    \n                        Type :     \"CENTER\" | \"INSIDE\" | \"OUTSIDE\"\n\n                    \n                \n                \n                    \n                        Default value : 'CENTER'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:97\n                            \n                        \n                \n                    \n                        The stroke position. Defaults to CENTER.\nThis property is not supported on Internet Explorer 8 and earlier.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:102\n                            \n                        \n                \n                    \n                        The stroke width in pixels.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:107\n                            \n                        \n                \n                    \n                        Whether this rectangle is visible on the map. Defaults to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        west\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:54\n                            \n                        \n                \n                    \n                        The west position of the rectangle (required).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:112\n                            \n                        \n                \n                    \n                        The zIndex compared to other polys.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        boundsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:118\n                            \n                        \n                \n                    \n                        This event is fired when the rectangle's is changed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        drag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:136\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:142\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:148\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:154\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousedown event is fired on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:160\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mousemove event is fired on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:166\n                            \n                        \n                \n                    \n                        This event is fired on rectangle mouseout.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:172\n                            \n                        \n                \n                    \n                        This event is fired on rectangle mouseover.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:178\n                            \n                        \n                \n                    \n                        This event is fired when the DOM mouseup event is fired on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:124\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleDblClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:130\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the rectangle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/rectangle.ts:184\n                            \n                        \n                \n                    \n                        This event is fired when the rectangle is right-clicked on.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _registerEventListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    _registerEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:232\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _updateRectangleOptionsChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateRectangleOptionsChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:278\n                \n            \n\n\n            \n                \n                    Gets the LatLngBounds of this Rectangle.\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/rectangle.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        _mapOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/rectangle.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _rectangleAddedToManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/rectangle.ts:186\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/lib/directives/rectangle.ts:188\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { BoundsLiteral } from '../interface/bounds';\nimport { RectangleOptions } from '../interface/rectangle-options';\nimport { RectangleManager } from '../services/managers/rectangle-manager';\n\n@Directive({\n  selector: 'map-rectangle',\n})\nexport class NgMapsRectangleDirective\n  implements OnInit, OnChanges, OnDestroy, RectangleOptions\n{\n  constructor(private _manager: RectangleManager) {}\n\n  private static _mapOptions: Array = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ];\n  /**\n   * The north position of the rectangle (required).\n   */\n  @Input() public north: number;\n\n  /**\n   * The east position of the rectangle (required).\n   */\n  @Input() public east: number;\n\n  /**\n   * The south position of the rectangle (required).\n   */\n  @Input() public south: number;\n\n  /**\n   * The west position of the rectangle (required).\n   */\n  @Input() public west: number;\n\n  /**\n   * Indicates whether this Rectangle handles mouse events. Defaults to true.\n   */\n  @Input() public clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this rectangle over the map. Defaults to false.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('rectangleDraggable') public draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this rectangle by dragging the control points shown at\n   * the center and around the circumference of the rectangle. Defaults to false.\n   */\n  @Input() public editable: boolean = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() public fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0.\n   */\n  @Input() public fillOpacity: number;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() public strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() public strokeOpacity: number;\n\n  /**\n   * The stroke position. Defaults to CENTER.\n   * This property is not supported on Internet Explorer 8 and earlier.\n   */\n  @Input() public strokePosition: 'CENTER' | 'INSIDE' | 'OUTSIDE' = 'CENTER';\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() public strokeWeight: number = 0;\n\n  /**\n   * Whether this rectangle is visible on the map. Defaults to true.\n   */\n  @Input() public visible: boolean = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() public zIndex: number;\n\n  /**\n   * This event is fired when the rectangle's is changed.\n   */\n  @Output()\n  public boundsChange: EventEmitter = new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the rectangle.\n   */\n  @Output()\n  public rectangleClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the rectangle.\n   */\n  @Output()\n  public rectangleDblClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the rectangle.\n   */\n  @Output()\n  public drag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the rectangle.\n   */\n  @Output()\n  public dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the rectangle.\n   */\n  @Output()\n  public dragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the rectangle.\n   */\n  @Output()\n  public mouseDown: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the rectangle.\n   */\n  @Output()\n  public mouseMove: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on rectangle mouseout.\n   */\n  @Output()\n  public mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired on rectangle mouseover.\n   */\n  @Output()\n  public mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the DOM mouseup event is fired on the rectangle.\n   */\n  @Output()\n  public mouseUp: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the rectangle is right-clicked on.\n   */\n  @Output()\n  public rightClick: EventEmitter = new EventEmitter();\n\n  private _rectangleAddedToManager: boolean = false;\n\n  private subscription: Subscription = new Subscription();\n\n  /** @internal */\n  public ngOnInit() {\n    this._manager.addRectangle(this);\n    this._rectangleAddedToManager = true;\n    this._registerEventListeners();\n  }\n\n  /** @internal */\n  public ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (!this._rectangleAddedToManager) {\n      return;\n    }\n    if (changes.north || changes.east || changes.south || changes.west) {\n      this._manager.setBounds(this);\n    }\n    if (changes.editable) {\n      this._manager.setEditable(this);\n    }\n    if (changes.draggable) {\n      this._manager.setDraggable(this);\n    }\n    if (changes.visible) {\n      this._manager.setVisible(this);\n    }\n    this._updateRectangleOptionsChanges(changes);\n  }\n\n  private _updateRectangleOptionsChanges(changes: {\n    [propName: string]: SimpleChange;\n  }) {\n    const options: { [propName: string]: any } = {};\n    const optionKeys = Object.keys(changes).filter(\n      (k) => NgMapsRectangleDirective._mapOptions.indexOf(k) !== -1,\n    );\n    optionKeys.forEach((k) => {\n      options[k] = changes[k].currentValue;\n    });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  private _registerEventListeners() {\n    const events: Map> = new Map\n    >();\n    events.set('bounds_changed', this.boundsChange);\n    events.set('click', this.rectangleClick);\n    events.set('dblclick', this.rectangleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragStart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('rightclick', this.rightClick);\n\n    events.forEach((eventEmitter, eventName) => {\n      this.subscription.add(\n        this._manager\n          .createEventObservable(eventName, this)\n          .subscribe((value) => {\n            switch (eventName) {\n              case 'bounds_changed':\n                this._manager\n                  .getBounds(this)\n                  .then((bounds) => eventEmitter.emit(bounds));\n                break;\n              default:\n                eventEmitter.emit(value);\n            }\n          }),\n      );\n    });\n  }\n\n  /** @internal */\n  public ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this._manager.removeRectangle(this);\n  }\n\n  /**\n   * Gets the LatLngBounds of this Rectangle.\n   */\n  public getBounds(): Promise {\n    return this._manager.getBounds(this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoOpMapsAPILoader.html":{"url":"classes/NoOpMapsAPILoader.html","title":"class - NoOpMapsAPILoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoOpMapsAPILoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/maps-api-loader/noop-maps-api-loader.ts\n        \n\n\n            \n                Description\n            \n            \n                When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a \nTag.\nIt's important that the Google Maps API script gets loaded first on the page.\n\n            \n\n            \n                Extends\n            \n            \n                        MapsAPILoader\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _document\n                            \n                            \n                                    Protected\n                                _window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configure\n                            \n                            \n                                    Public\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/maps-api-loader/noop-maps-api-loader.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                        \n                            \n                                Inherited from         MapsAPILoader\n\n                            \n                        \n                    \n                        \n                                Defined in         MapsAPILoader:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _window\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Window\n\n                    \n                \n                        \n                            \n                                Inherited from         MapsAPILoader\n\n                            \n                        \n                    \n                        \n                                Defined in         MapsAPILoader:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        configure\n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MapsAPILoader\n\n                \n            \n            \n                \n                        Defined in         MapsAPILoader:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Inherited from         MapsAPILoader\n\n                \n            \n            \n                \n                        Defined in         MapsAPILoader:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject } from '@angular/core';\n\nimport { MapsAPILoader } from './maps-api-loader';\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a ``\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nexport class NoOpMapsAPILoader extends MapsAPILoader {\n  protected _window: Window;\n  protected _document: Document;\n\n  constructor(@Inject(DOCUMENT) document: any) {\n    super();\n    this._document = document as Document;\n    this._window = this._document.defaultView;\n  }\n\n  public load(): Promise {\n    return Promise.resolve();\n  }\n\n  public configure(config: any): void {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Padding.html":{"url":"interfaces/Padding.html","title":"interface - Padding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Padding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/padding.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bottom\n                                        \n                                \n                                \n                                        \n                                            left\n                                        \n                                \n                                \n                                        \n                                            right\n                                        \n                                \n                                \n                                        \n                                            top\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bottom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        right:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        top:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Padding {\n  bottom: number;\n  left: number;\n  right: number;\n  top: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PolygonManager.html":{"url":"injectables/PolygonManager.html","title":"injectable - PolygonManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PolygonManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/polygon.manager.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _polygons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                addPolygon\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                deletePolygon\n                            \n                            \n                                    Public\n                                    Abstract\n                                setPolygonOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                updatePolygon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/polygon.manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        addPolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPolygon(path: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polygon.manager.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, path: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polygon.manager.ts:30\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        deletePolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolygon(paths: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polygon.manager.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                                NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setPolygonOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolygonOptions(path: NgMapsPolygonDirective, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polygon.manager.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updatePolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolygon(polygon: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polygon.manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    polygon\n                                    \n                                                NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _polygons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map\n  >()\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/managers/polygon.manager.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { NgMapsPolygonDirective } from '../../directives/polygon';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\n\n@Injectable()\nexport abstract class PolygonManager {\n  protected _polygons: Map> = new Map\n  >();\n\n  constructor(\n    protected _mapsWrapper: MapsApiWrapper,\n    protected _zone: NgZone,\n  ) {}\n\n  public abstract addPolygon(path: NgMapsPolygonDirective);\n\n  public abstract updatePolygon(polygon: NgMapsPolygonDirective): Promise;\n\n  public abstract setPolygonOptions(\n    path: NgMapsPolygonDirective,\n    options: { [propName: string]: any },\n  ): Promise;\n\n  public abstract deletePolygon(paths: NgMapsPolygonDirective): Promise;\n\n  public abstract createEventObservable(\n    eventName: string,\n    path: NgMapsPolygonDirective,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PolylineManager.html":{"url":"injectables/PolylineManager.html","title":"injectable - PolylineManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PolylineManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/polyline-manager.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _polylines\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _convertPoints\n                            \n                            \n                                    Public\n                                    Abstract\n                                addPolyline\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                deletePolyline\n                            \n                            \n                                    Public\n                                    Abstract\n                                setPolylineOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                updatePolylinePoints\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/polyline-manager.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _convertPoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    _convertPoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        addPolyline\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:42\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        deletePolyline\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setPolylineOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolylineOptions(line: NgMapsPolyline, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updatePolylinePoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolylinePoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/polyline-manager.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                                NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _polylines\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map\n  >()\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/managers/polyline-manager.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { NgMapsPolyline } from '../../directives/polyline';\nimport { NgMapsPolylinePoint } from '../../directives/polyline-point';\nimport { GeoPoint } from '../../interface/geo-point';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\n\n@Injectable()\nexport abstract class PolylineManager {\n  protected _polylines: Map> = new Map\n  >();\n\n  constructor(\n    protected _mapsWrapper: MapsApiWrapper,\n    protected _zone: NgZone,\n  ) {}\n\n  protected _convertPoints(line: NgMapsPolyline): Array {\n    return line._getPoints().map(\n      (point: NgMapsPolylinePoint) =>\n        ({\n          lat: point.latitude,\n          lng: point.longitude,\n        } as google.maps.LatLngLiteral),\n    );\n  }\n\n  public abstract addPolyline(line: NgMapsPolyline);\n\n  public abstract updatePolylinePoints(line: NgMapsPolyline): Promise;\n\n  public abstract setPolylineOptions(\n    line: NgMapsPolyline,\n    options: { [propName: string]: any },\n  ): Promise;\n\n  public abstract deletePolyline(line: NgMapsPolyline): Promise;\n\n  public abstract createEventObservable(\n    eventName: string,\n    line: NgMapsPolyline,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RectangleManager.html":{"url":"injectables/RectangleManager.html","title":"injectable - RectangleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RectangleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/rectangle-manager.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _rectangles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                addRectangle\n                            \n                            \n                                    Public\n                                    Abstract\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Abstract\n                                getBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                removeRectangle\n                            \n                            \n                                    Public\n                                    Abstract\n                                setBounds\n                            \n                            \n                                    Public\n                                    Abstract\n                                setDraggable\n                            \n                            \n                                    Public\n                                    Abstract\n                                setEditable\n                            \n                            \n                                    Public\n                                    Abstract\n                                setOptions\n                            \n                            \n                                    Public\n                                    Abstract\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_apiWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/rectangle-manager.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _apiWrapper\n                                                  \n                                                        \n                                                                        MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        addRectangle\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:49\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        removeRectangle\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:22\n                \n            \n\n\n            \n                \n                    Removes the given rectangle from the map.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    setBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setDraggable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setEditable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(rectangle: NgMapsRectangleDirective, options: google.maps.RectangleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                google.maps.RectangleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        setVisible\n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/rectangle-manager.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _rectangles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map\n  >()\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/managers/rectangle-manager.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { NgMapsRectangleDirective } from '../../directives/rectangle';\nimport { BoundsLiteral } from '../../interface/bounds';\nimport { MapsApiWrapper } from '../maps-api-wrapper';\n\n@Injectable()\nexport abstract class RectangleManager {\n  protected _rectangles: Map> = new Map\n  >();\n\n  constructor(protected _apiWrapper: MapsApiWrapper, protected _zone: NgZone) {}\n\n  public abstract addRectangle(rectangle: NgMapsRectangleDirective): void;\n\n  /**\n   * Removes the given rectangle from the map.\n   */\n  public abstract removeRectangle(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise;\n\n  public abstract setOptions(\n    rectangle: NgMapsRectangleDirective,\n    options: google.maps.RectangleOptions,\n  ): Promise;\n\n  public abstract getBounds(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise;\n\n  public abstract setBounds(rectangle: NgMapsRectangleDirective): Promise;\n\n  public abstract setEditable(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise;\n\n  public abstract setDraggable(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise;\n\n  public abstract setVisible(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise;\n\n  public abstract createEventObservable(\n    eventName: string,\n    rectangle: NgMapsRectangleDirective,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScriptLoaderService.html":{"url":"injectables/ScriptLoaderService.html","title":"injectable - ScriptLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScriptLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/script-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alreadyLoaded\n                            \n                            \n                                    Public\n                                document\n                            \n                            \n                                    Private\n                                head\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createCSSElement\n                            \n                            \n                                    Private\n                                createScriptElement\n                            \n                            \n                                    Public\n                                loadCSS\n                            \n                            \n                                    Public\n                                loadScript\n                            \n                            \n                                    Private\n                                observeLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/script-loader.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createCSSElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCSSElement(href: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/script-loader.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    href\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLLinkElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createScriptElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    createScriptElement(src: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/script-loader.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    src\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLScriptElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadCSS\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadCSS(href: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/script-loader.service.ts:88\n                \n            \n\n\n            \n                \n                    Dynamically loads the given CSS file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    href\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The url of the CSS to load dynamically\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Observable Promise that will be resolved once the CSS file has been loaded.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadScript\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadScript(src: string, integrity?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/script-loader.service.ts:70\n                \n            \n\n\n            \n                \n                    Dynamically loads the given script\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    src\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The url of the script to load dynamically\n\n                                    \n                                \n                                \n                                    integrity\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        set integrity check value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Observable Observable that will be resolved once the script has been loaded.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        observeLoad\n                        \n                    \n                \n            \n            \n                \n                    \n                    observeLoad(element: HTMLScriptElement | HTMLLinkElement)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/script-loader.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLScriptElement | HTMLLinkElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alreadyLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/script-loader.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/script-loader.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        head\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLHeadElement\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/script-loader.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScriptLoaderService {\n  public document: Document;\n  private head: HTMLHeadElement;\n  private alreadyLoaded: Map> = new Map();\n\n  constructor(@Inject(DOCUMENT) document: any) {\n    this.document = document as Document;\n    this.head = this.document.head;\n  }\n\n  private observeLoad(\n    element: HTMLScriptElement | HTMLLinkElement,\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      function successHandler(event: UIEvent) {\n        const readyState: string = (element as any).readyState;\n        // For IE we have readyState, other browsers just call the load event and we proccede\n        if (\n          readyState === 'complete' ||\n          readyState === 'loaded' ||\n          event.type === 'load'\n        ) {\n          resolve(event);\n        }\n      }\n\n      function errorHandler(event: UIEvent) {\n        reject(event);\n      }\n\n      element.addEventListener('readystatechange', successHandler);\n      element.addEventListener('load', successHandler);\n      element.addEventListener('error', errorHandler);\n    });\n  }\n\n  private createScriptElement(src: string): HTMLScriptElement {\n    const script = document.createElement('script');\n    script.src = src;\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    return script;\n  }\n\n  // eslint-disable-next-line\n  private createCSSElement(href: string): HTMLLinkElement {\n    const style = document.createElement('link');\n\n    style.rel = 'stylesheet';\n    style.type = 'text/css';\n    style.href = href;\n\n    return style;\n  }\n\n  /**\n   * Dynamically loads the given script\n   *\n   * @param src The url of the script to load dynamically\n   * @param integrity set integrity check value\n   * @returns Observable Observable that will be resolved once the script has been loaded.\n   */\n  public loadScript(src: string, integrity?: string): Promise {\n    if (this.alreadyLoaded.has(src)) {\n      return this.alreadyLoaded.get(src);\n    } else {\n      const script = this.createScriptElement(src);\n      const promise = this.observeLoad(script);\n      this.head.appendChild(script);\n      this.alreadyLoaded.set(src, promise);\n      return promise;\n    }\n  }\n\n  /**\n   * Dynamically loads the given CSS file\n   *\n   * @param href The url of the CSS to load dynamically\n   * @returns Observable Promise that will be resolved once the CSS file has been loaded.\n   */\n  public loadCSS(href: string): Promise {\n    // eslint-disable-line\n    if (this.alreadyLoaded.has(href)) {\n      return this.alreadyLoaded.get(href);\n    } else {\n      const style = this.createCSSElement(href);\n      const promise = this.observeLoad(style);\n      this.head.appendChild(style);\n      this.alreadyLoaded.set(href, promise);\n      return promise;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShapeOptions.html":{"url":"interfaces/ShapeOptions.html","title":"interface - ShapeOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShapeOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interface/shape-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fillColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fillOpacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strokeColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strokeOpacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strokeWeight\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visible\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zIndex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fillColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillOpacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fillOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ShapeOptions {\n  fillColor?: string;\n  fillOpacity?: number;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  visible?: boolean;\n  zIndex?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/core.module.ts\n            \n            function\n            coreDirectives\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/core.module.ts\n            \n            function\n            isGoogleMaps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/core.module.ts\n            \n            function\n            isHereMaps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/core.module.ts\n            \n            variable\n            MAP_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/directives/circle.ts\n            \n            directive\n            NgMapsCircleDirective\n            \n                71 %\n                (27/38)\n            \n        \n        \n            \n                \n                src/lib/directives/fit-bounds.ts\n            \n            directive\n            NgMapsFitBoundsDirective\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/lib/directives/info-window.ts\n            \n            component\n            NgMapsInfoWindowComponent\n            \n                48 %\n                (12/25)\n            \n        \n        \n            \n                \n                src/lib/directives/info-window.ts\n            \n            variable\n            infoWindowId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/directives/map.ts\n            \n            component\n            NgMapsViewComponent\n            \n                68 %\n                (49/72)\n            \n        \n        \n            \n                \n                src/lib/directives/marker.ts\n            \n            component\n            NgMapsMarkerComponent\n            \n                59 %\n                (22/37)\n            \n        \n        \n            \n                \n                src/lib/directives/marker.ts\n            \n            variable\n            markerId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/directives/polygon.ts\n            \n            directive\n            NgMapsPolygonDirective\n            \n                66 %\n                (24/36)\n            \n        \n        \n            \n                \n                src/lib/directives/polyline-point.ts\n            \n            directive\n            NgMapsPolylinePoint\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/lib/directives/polyline.ts\n            \n            directive\n            NgMapsPolyline\n            \n                62 %\n                (22/35)\n            \n        \n        \n            \n                \n                src/lib/directives/polyline.ts\n            \n            variable\n            polylineId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/directives/rectangle.ts\n            \n            directive\n            NgMapsRectangleDirective\n            \n                73 %\n                (28/38)\n            \n        \n        \n            \n                \n                src/lib/interface/bounds.ts\n            \n            interface\n            BoundsLiteral\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/interface/circle-options.ts\n            \n            interface\n            CircleOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/interface/geo-point.ts\n            \n            interface\n            GeoPoint\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/lib/interface/map-options.ts\n            \n            interface\n            MapOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/interface/marker-icon.ts\n            \n            interface\n            MarkerIcon\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/lib/interface/marker-options.ts\n            \n            interface\n            MarkerOptions\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/lib/interface/padding.ts\n            \n            interface\n            Padding\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/interface/shape-options.ts\n            \n            interface\n            ShapeOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/services/fit-bounds.ts\n            \n            class\n            FitBoundsAccessor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/services/fit-bounds.ts\n            \n            injectable\n            FitBoundsService\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/lib/services/fit-bounds.ts\n            \n            interface\n            FitBoundsDetails\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/services/managers/circle-manager.ts\n            \n            injectable\n            CircleManager\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/lib/services/managers/info-window.manager.ts\n            \n            injectable\n            InfoWindowManager\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/lib/services/managers/marker.manager.ts\n            \n            injectable\n            MarkerManager\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/lib/services/managers/polygon.manager.ts\n            \n            injectable\n            PolygonManager\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/services/managers/polyline-manager.ts\n            \n            injectable\n            PolylineManager\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lib/services/managers/rectangle-manager.ts\n            \n            injectable\n            RectangleManager\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-loader/maps-api-loader.ts\n            \n            injectable\n            MapsAPILoader\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-loader/noop-maps-api-loader.ts\n            \n            class\n            NoOpMapsAPILoader\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-wrapper.ts\n            \n            injectable\n            MapsApiWrapper\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/lib/services/script-loader.service.ts\n            \n            injectable\n            ScriptLoaderService\n            \n                20 %\n                (2/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.0.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^14.0.0\n        \n            @angular/core : ^14.0.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            coreDirectives   (src/.../core.module.ts)\n                        \n                        \n                            isGoogleMaps   (src/.../core.module.ts)\n                        \n                        \n                            isHereMaps   (src/.../core.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/core.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        coreDirectives\n                        \n                    \n                \n            \n            \n                \ncoreDirectives()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGoogleMaps\n                        \n                    \n                \n            \n            \n                \nisGoogleMaps(token: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHereMaps\n                        \n                    \n                \n            \n            \n                \nisHereMaps(token: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ng-maps/core\n@ng-maps/core is a simple, modular and tree-shakable library for displaying google-maps inside an angular application\nInstallation\n\nNpm: npm install @ng-maps/core\nYarn: yarn add @ng-maps/core\n\nThen you will need to install typings for google maps as a dev dependency\n\nNpm: npm install -D @types/googlemaps\nYarn: yarn add -D @types/googlemaps\n\nAdd NgMapsCoreModule to your AppModule.\nAdditionally you will need to add the @ng-maps/google module and follow the instruction there. As alternative there is a here maps module which isn't ready for production yet.\nLazy loading configuration\nIf you can not provide configuration at module import level you can load it at a later time.\nYou just need to inject MapsAPILoader into a component or service and call the method configure(config) with a valid configuration.\nUsage\nSimple Map\nAdd the map to your components template\nAdd a height to your components CSS, for example\nmap-view {\n  height: 300px;\n}Input options\n\n\n\nName\nType\nValues\nDescription\n\n\n\n\nlongitude\nNumber\n\n\n\n\nlatitude\nNumber\n\n\n\n\nminZoom\nNumber\n\n\n\n\nmaxZoom\nNumber\n\n\n\n\nzoom\nNumber\nBetween 0 and MaxZoom, typically 18\n\n\n\nfitBounds\nLatLngBoundsLiteral, LatLngBounds or Boolean\nIf set to true attaches to mapFitBounds directives on \n\n\n\nmapTypeId\nroadmap, hybrid, satellite, terrain\n\n\n\n\nlayers\nArray or String\nTrafficLayer or TransitLayer or BicyclingLayer\nActivates layer as described in TrafficLayer Documentation\n\n\n\nMarker\nAdditionally you can add markers\n\n  \nInput options\n\n\n\nName\nType\nValues\nDescription\n\n\n\n\nlongitude\nNumber\n\n\n\n\nlatitude\nNumber\n\n\n\n\n\nOutputs\n\n\n\nName\nValue\nDescription\n\n\n\n\nmarkerClick\nComponent\n\n\n\n\nAdditional features\nOther features are provided in submodules. Find out more on the project page at github\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgMapsCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.0.0\n        \n            Keywords : angular, ng, maps, map, ng2, angular2, agm\n        \n            Homepage : https://ng-maps.github.io/core\n        \n            Bugs : https://github.com/ng-maps/ng-maps/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/ng-maps/ng-maps.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BoundsMap   (src/.../fit-bounds.ts)\n                        \n                        \n                            LayerTypes   (src/.../layers.ts)\n                        \n                        \n                            RectangleOptions   (src/.../rectangle-options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/services/fit-bounds.ts\n    \n    \n        \n            \n                \n                    \n                    BoundsMap\n                \n            \n            \n                \n                            Map\n\n                \n            \n        \n    \n    src/lib/interface/layers.ts\n    \n    \n        \n            \n                \n                    \n                    LayerTypes\n                \n            \n            \n                \n                        \"TrafficLayer\" | \"TransitLayer\" | \"BicyclingLayer\"\n\n                \n            \n        \n    \n    src/lib/interface/rectangle-options.ts\n    \n    \n        \n            \n                \n                    \n                    RectangleOptions\n                \n            \n            \n                \n                            ShapeOptions\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            infoWindowId   (src/.../info-window.ts)\n                        \n                        \n                            MAP_PROVIDER   (src/.../core.module.ts)\n                        \n                        \n                            markerId   (src/.../marker.ts)\n                        \n                        \n                            polylineId   (src/.../polyline.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/directives/info-window.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        infoWindowId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n\n    src/lib/core.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MAP_PROVIDER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Map Provider')\n                    \n                \n\n\n        \n    \n\n    src/lib/directives/marker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        markerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n\n    src/lib/directives/polyline.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        polylineId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
