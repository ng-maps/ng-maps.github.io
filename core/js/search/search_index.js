var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/FitBoundsAccessor.html",[0,0.462,1,1.23]],["body/classes/FitBoundsAccessor.html",[0,0.76,1,1.672,2,2.055,3,0.538,4,0.614,5,0.538,6,2.118,7,1.394,8,1.108,9,2.406,10,2.118,11,2.406,12,1.672,13,2.406,14,2.537,15,2.406,16,1.878,17,0.337,18,1.058,19,2.271,20,2.562,21,0.785,22,2.959,23,0.785,24,0.046,25,2.371,26,1,27,0.827,28,0.614,29,3.129,30,2.055,31,1.108,32,2.767,33,1.5,34,2.767,35,2.055,36,2.055,37,1.787,38,1.332,39,0.538,40,0.724,41,1.394,42,0.882,43,1,44,1.242,45,1.242,46,2.721,47,3.348,48,3.348,49,1.242,50,0.538,51,1.787,52,1.878,53,2.055,54,2.055,55,1.787,56,2.271,57,2.123,58,2.055,59,1,60,2.055,61,2.055,62,2.055,63,2.767,64,2.055,65,2.055,66,2.055,67,2.055,68,2.055,69,2.055,70,2.055,71,2.055,72,1.108,73,2.055,74,2.055,75,1.611,76,2.055,77,2.055,78,2.055,79,1.437,80,2.055,81,1.394,82,2.055,83,2.055,84,2.767,85,2.055,86,2.767,87,2.055,88,2.055,89,2.055,90,1.242,91,2.055,92,2.055,93,2.055,94,0.989,95,2.055,96,0.022,97,0.03,98,0.022]],["title/interfaces/FitBoundsDetails.html",[44,1.23,45,1.23]],["body/interfaces/FitBoundsDetails.html",[0,0.716,1,1.261,3,0.546,4,0.624,5,0.546,6,1.598,7,1.416,9,1.815,10,1.598,11,1.815,12,1.261,13,1.815,14,2.505,15,1.815,16,1.416,17,0.342,19,1.898,20,1.598,24,0.046,25,2.286,26,1.007,27,0.836,28,0.624,29,3.154,30,2.088,31,1.125,32,2.797,33,1.508,34,2.797,35,2.088,36,2.088,37,1.815,38,1.346,39,0.546,40,0.732,41,1.416,42,0.896,43,1.007,44,1.261,45,1.69,46,3.144,47,3.616,48,3.616,49,1.261,50,0.732,51,1.815,52,1.898,53,2.088,54,2.088,55,1.815,56,2.286,57,2.14,58,2.088,59,1.007,60,2.088,61,2.088,62,2.088,63,2.797,64,2.088,65,2.088,66,2.088,67,2.088,68,2.088,69,2.088,70,2.088,71,2.088,72,1.125,73,2.088,74,2.088,75,1.622,76,2.088,77,2.088,78,2.088,79,1.447,80,2.088,81,1.416,82,2.088,83,2.088,84,2.797,85,2.088,86,2.797,87,2.088,88,2.088,89,2.088,90,1.261,91,2.088,92,2.088,93,2.088,94,1.005,95,2.088,96,0.023,97,0.031,98,0.023,99,2.088,100,1.346]],["title/injectables/FitBoundsService.html",[27,0.608,52,1.381]],["body/injectables/FitBoundsService.html",[0,0.633,1,1,3,0.433,4,0.495,5,0.433,6,2.839,7,1.123,8,0.892,9,1.439,10,1.267,11,1.439,12,1,13,1.439,14,2.486,15,1.439,16,1.123,17,0.272,18,0.91,19,1.615,20,1.267,21,1.4,23,1.285,24,0.046,25,2.281,26,0.911,27,0.711,28,0.495,29,3.229,30,1.655,31,0.892,32,2.38,33,1.55,34,2.38,35,1.655,36,1.655,37,1.439,38,1.467,39,0.433,40,0.623,41,1.123,42,1.022,43,0.911,44,1,45,1,46,2.923,47,3.664,48,3.664,49,1,50,0.928,51,1.439,52,2.068,53,2.38,54,2.38,55,2.07,56,2.543,57,2.449,58,2.787,59,1.035,60,2.38,61,2.787,62,2.38,63,2.38,64,1.655,65,1.655,66,1.655,67,1.655,68,1.655,69,1.655,70,1.655,71,1.655,72,1.503,73,2.787,74,2.38,75,1.467,76,1.655,77,1.655,78,1.655,79,1.309,80,2.38,81,1.123,82,1.655,83,1.655,84,2.38,85,1.655,86,2.38,87,2.38,88,1.655,89,2.38,90,1.684,91,1.655,92,3.048,93,2.787,94,1.146,95,1.655,96,0.018,97,0.026,98,0.018,100,1.146,101,1.123,102,3.428,103,3.428,104,3.428,105,1,106,2.384,107,1.813,108,1.618,109,1.618,110,2.384,111,2.384,112,2.384,113,2.384,114,2.384,115,1.684,116,2.384,117,2.384,118,2.384,119,2.384,120,1.146,121,1.146,122,1.945,123,1.945,124,2.384]],["title/injectables/InfoWindowManager.html",[27,0.608,125,1.77]],["body/injectables/InfoWindowManager.html",[0,0.337,3,0.576,4,0.444,5,0.389,17,0.244,18,0.841,21,1.366,23,1.314,24,0.046,25,2.097,26,0.967,27,0.657,28,0.444,31,0.801,33,1.327,39,0.686,40,0.389,43,0.444,50,0.949,59,0.783,72,1.745,75,1.745,79,1.125,90,1.329,94,1.261,96,0.016,97,0.024,98,0.016,100,1.059,101,1.008,105,1.329,107,1.927,108,1.691,109,1.691,115,2.024,120,0.715,121,0.715,125,1.913,126,4.259,127,2.24,128,1.486,129,3.772,130,3.513,131,3.168,132,2.584,133,3.077,134,3.168,135,2.2,136,3.772,137,3.168,138,3.168,139,1.745,140,2.896,141,3.077,142,3.402,143,3.772,144,2.216,145,2.139,146,2.584,147,3.168,148,2.676,149,2.139,150,3.708,151,3.168,152,1.745,153,1.745,154,2.139,155,2.584,156,3.168,157,1.412,158,1.683,159,3.168,160,2.2,161,2.584,162,3.168,163,2.139,164,1.965,165,3.168,166,2.139,167,2.139,168,3.402,169,4.17,170,1.745,171,3.168,172,2.139,173,3.168,174,2.139,175,1.745,176,2.584,177,1.745,178,1.492,179,1.486,180,1.745,181,2.277,182,1.486,183,2.139,184,3.168,185,2.896,186,4.824,187,1.683,188,1.486,189,1.745,190,2.584,191,2.139,192,2.139,193,2.139,194,2.2,195,3.772,196,2.2,197,3.772,198,2.139,199,3.168,200,2.139,201,3.168,202,2.139,203,3.168,204,2.139,205,2.139,206,1.745,207,2.139,208,1.745,209,2.139,210,1.292,211,2.139,212,1.745,213,2.139,214,1.913,215,2.139,216,3.168,217,2.139,218,2.139,219,1.745,220,2.139,221,1.745,222,1.745]],["title/injectables/LazyMapsAPILoader.html",[27,0.608,223,1.381]],["body/injectables/LazyMapsAPILoader.html",[0,0.324,3,0.373,4,0.426,5,0.373,17,0.234,18,0.815,19,1.448,21,1.352,23,1.084,24,0.046,26,0.848,27,0.638,28,0.426,38,1.366,39,0.963,40,1.017,42,0.916,43,0.426,50,0.89,56,2.59,57,2.163,59,0.426,72,1.378,75,1.591,79,1.492,94,1.847,96,0.016,97,0.023,98,0.016,100,1.027,101,0.968,105,1.289,107,1.378,108,1.231,109,1.463,115,0.862,120,1.027,121,1.463,127,1.289,157,0.769,158,1.091,164,2.062,187,1.633,188,1.426,223,1.926,224,2.138,225,2.401,226,1.24,227,3.073,228,3.682,229,3.682,230,3.682,231,3.682,232,4.376,233,3.073,234,3.073,235,2.874,236,2.054,237,2.44,238,4.895,239,3.073,240,2.468,241,3.073,242,3.682,243,2.054,244,2.054,245,3.073,246,2.054,247,2.054,248,2.054,249,2.054,250,2.054,251,2.054,252,3.073,253,2.054,254,2.054,255,1.675,256,2.054,257,2.134,258,1.091,259,2.054,260,2.054,261,2.054,262,2.054,263,3.073,264,2.054,265,2.054,266,2.054,267,1.426,268,1.675,269,1.675,270,4.376,271,2.054,272,2.054,273,2.054,274,2.054,275,2.054,276,3.073,277,2.054,278,2.054,279,1.675,280,2.054,281,2.054,282,2.054,283,2.054,284,1.855,285,2.054,286,2.054,287,2.054,288,2.054,289,2.054,290,2.054,291,2.054,292,2.054,293,2.054,294,2.054,295,2.054,296,2.054,297,1.675,298,2.054,299,3.073,300,2.054,301,3.073,302,3.334,303,2.054,304,3.682,305,2.054,306,3.682,307,2.054,308,1.426,309,1.426,310,1.675,311,2.054,312,2.054,313,2.054,314,3.039,315,2.054,316,2.054,317,2.054,318,2.054,319,2.054,320,2.054,321,1.675,322,2.054,323,1.675,324,2.054,325,1.675,326,2.054,327,1.675,328,2.054,329,1.675,330,2.054,331,2.054,332,2.054,333,3.073,334,3.682,335,2.054,336,2.054,337,3.073,338,3.073,339,2.054,340,1.091,341,2.054,342,3.073,343,2.054,344,2.054,345,2.054,346,2.054,347,3.073,348,2.054,349,2.054,350,2.054,351,2.054]],["title/interfaces/LazyMapsAPILoaderConfigLiteral.html",[44,1.23,237,1.557]],["body/interfaces/LazyMapsAPILoaderConfigLiteral.html",[3,0.405,4,0.463,5,0.405,8,0.835,12,0.935,17,0.254,24,0.045,26,0.463,28,0.463,33,1.268,39,1.011,40,1.011,42,0.665,43,0.802,44,0.935,50,0.945,59,0.463,75,0.745,81,2.361,94,1.901,96,0.017,97,0.025,98,0.017,99,1.548,100,1.092,108,1.092,109,1.876,120,1.422,157,2.072,160,2.268,223,1.821,224,0.935,225,1.051,235,1.972,237,1.735,240,1.346,257,2.954,258,1.735,267,2.268,302,3.86,308,1.548,309,1.548,310,3.47,314,3.481,321,4.089,323,4.24,325,3.86,327,3.86,329,4.089,352,1.346,353,3.266,354,4.254,355,4.254,356,4.254,357,3.86,358,3.266,359,2.664,360,4.731,361,4.254,362,4.254,363,3.266,364,3.266,365,3.266,366,3.266,367,3.266,368,3.266,369,3.266,370,3.266,371,3.266,372,3.266,373,2.268,374,3.266,375,4.731,376,3.266,377,3.266,378,2.664,379,2.664,380,3.266,381,3.47,382,3.47,383,3.266,384,3.266,385,3.266,386,2.268,387,3.266,388,3.266,389,4.254,390,4.254,391,4.731,392,3.266,393,2.568,394,3.266,395,3.266,396,3.266,397,4.254,398,3.266,399,3.266,400,3.266,401,3.266,402,3.266,403,3.266,404,2.23,405,2.23,406,1.346,407,1.548,408,1.548,409,1.819,410,1.548,411,1.346,412,1.819,413,1.972,414,1.548,415,1.819]],["title/injectables/MapsAPILoader.html",[27,0.608,38,0.98]],["body/injectables/MapsAPILoader.html",[0,0.661,3,0.762,4,0.87,5,0.762,17,0.478,18,1.319,19,2.581,21,1.113,23,1.113,24,0.043,26,0.87,27,1.032,28,0.87,38,1.662,40,0.996,41,2.342,43,0.87,96,0.032,97,0.038,98,0.032,101,1.976,164,2.342,224,2.085,226,2.533,235,3.307,416,4.195]],["title/injectables/MarkerManager.html",[27,0.608,144,1.557]],["body/injectables/MarkerManager.html",[0,0.304,3,0.351,4,0.401,5,0.351,17,0.22,18,0.778,21,1.426,23,1.402,24,0.046,25,1.671,26,0.884,27,0.609,28,0.401,31,0.723,33,1.181,39,0.351,40,0.351,43,0.401,50,0.984,56,2.007,59,0.736,75,1.748,79,1.181,94,0.98,96,0.015,97,0.022,98,0.015,100,0.98,101,0.91,105,1.23,107,2.012,108,1.782,109,1.782,115,2.33,120,0.645,121,0.645,128,1.341,130,2.463,133,2.893,139,1.575,140,2.751,141,2.893,142,3.231,144,1.559,146,2.393,152,1.575,153,1.575,155,2.393,157,0.723,161,2.393,164,1.382,170,1.575,175,1.575,176,2.393,178,0.91,179,1.341,180,1.575,181,3.268,185,1.341,187,1.026,188,1.341,189,1.575,190,2.393,194,2.037,196,2.037,210,1.166,214,1.771,219,1.575,221,1.575,222,1.575,417,4.415,418,3.547,419,2.933,420,2.933,421,2.933,422,2.933,423,2.933,424,2.933,425,2.933,426,2.933,427,2.933,428,2.933,429,2.933,430,2.933,431,2.933,432,2.933,433,2.736,434,1.931,435,3.547,436,3.547,437,1.931,438,2.933,439,1.931,440,2.933,441,1.931,442,2.933,443,2.933,444,1.931,445,2.933,446,1.931,447,2.933,448,1.931,449,2.933,450,1.931,451,2.933,452,1.931,453,2.933,454,1.931,455,2.933,456,1.931,457,2.933,458,1.931,459,2.933,460,2.933,461,1.931,462,1.575,463,5.332,464,5.231,465,1.931,466,1.931,467,1.931,468,2.933,469,2.933,470,1.931,471,1.931,472,1.931,473,1.931,474,1.931,475,1.931,476,1.931,477,1.931,478,3.547,479,1.931,480,1.931,481,1.931,482,1.341,483,1.575,484,1.931,485,1.575,486,1.931,487,1.575,488,1.931,489,1.575,490,1.931,491,1.341,492,1.931,493,1.931,494,1.575,495,1.931,496,1.575,497,1.931,498,1.575,499,1.931,500,1.931,501,1.931]],["title/modules/NgMapsCoreModule.html",[502,2.035,503,2.035]],["body/modules/NgMapsCoreModule.html",[0,0.5,3,0.576,4,0.658,5,0.576,8,1.188,14,1.494,18,0.842,21,0.842,23,0.842,24,0.045,26,1.135,28,0.658,38,1.395,39,0.901,40,0.961,41,1.494,42,1.391,43,0.866,49,1.331,50,0.576,79,1.244,96,0.024,97,0.032,98,0.024,107,1.188,108,1.06,109,1.06,127,1.331,148,1.966,157,1.562,177,2.588,178,1.966,179,2.203,223,1.966,225,1.966,237,2.634,240,1.915,258,2.218,393,2.992,410,3.442,411,2.52,414,3.239,433,1.966,462,2.588,502,3.798,503,3.239,504,2.203,505,2.203,506,4.174,507,4.043,508,4.174,509,4.174,510,4.174,511,4.174,512,3.405,513,4.174,514,3.172,515,3.172,516,4.174,517,4.174,518,4.174,519,4.174,520,2.588,521,4.665,522,4.665,523,1.966,524,3.172,525,4.665,526,2.588,527,3.239,528,2.588,529,2.588,530,1.915,531,3.172,532,3.172]],["title/directives/NgMapsFitBounds.html",[523,1.381,533,1.381]],["body/directives/NgMapsFitBounds.html",[0,0.647,1,2.058,3,0.451,4,0.515,5,0.451,7,1.169,8,0.929,9,2.129,10,1.874,11,2.129,12,1.479,13,2.129,14,2.225,15,2.129,16,1.661,17,0.283,18,0.936,19,1.661,20,1.318,21,1.369,23,1.186,24,0.045,26,0.927,28,0.515,31,0.929,33,1.051,37,1.497,43,0.515,45,2.164,49,1.722,50,0.892,52,2.106,57,1.661,59,0.732,72,2.016,96,0.019,97,0.027,98,0.019,100,1.179,105,1.479,107,1.536,108,1.372,109,1.372,115,1.875,120,1.578,121,1.687,122,2.023,123,2.877,160,2.449,187,2.509,284,3.115,413,1.497,520,2.023,523,1.661,533,2.106,534,1.722,535,4.282,536,3.527,537,3.527,538,1.661,539,2.129,540,3.348,541,2.85,542,2.85,543,2.449,544,1.722,545,2.449,546,3.279,547,4.104,548,4.104,549,3.527,550,2.449,551,3.103,552,3.646,553,2.449,554,2.48,555,4.104,556,3.527,557,2.449,558,2.449,559,2.449,560,2.449,561,3.527,562,2.48,563,4.104,564,2.449,565,3.646,566,2.48,567,1.722,568,2.48,569,2.48,570,3.852,571,2.48,572,2.449,573,3.527,574,3.527,575,2.48,576,2.023,577,2.48,578,2.48,579,2.48,580,2.48,581,2.48,582,2.48,583,2.48,584,2.48,585,2.48,586,2.48,587,2.48,588,2.48,589,4.104,590,2.48,591,2.48,592,3.527,593,3.527,594,2.48,595,2.48]],["title/components/NgMapsInfoWindowComponent.html",[148,1.381,538,1.381]],["body/components/NgMapsInfoWindowComponent.html",[0,0.22,3,0.985,4,0.289,5,0.253,8,0.522,12,0.952,16,1.715,17,0.159,18,0.878,21,1.411,23,1.21,24,0.046,26,0.756,28,0.596,33,1.465,43,0.289,49,1.388,50,0.905,59,0.289,72,1.923,75,0.758,79,1.086,81,1.558,90,1.913,94,1.434,96,0.011,97,0.017,98,0.011,100,0.758,105,0.585,107,1.074,108,1.305,109,0.959,115,1.637,120,1.434,121,1.305,125,2.357,127,2.265,130,1.993,132,3.499,135,3.413,148,1.939,150,2.297,158,1.206,164,1.558,168,1.851,178,0.657,181,1.997,182,0.968,185,0.968,206,3.618,208,3.357,210,2.198,212,2.97,214,1.37,284,1.733,340,0.741,379,1.851,381,1.851,386,1.576,393,1.997,413,1.733,433,2.148,482,2.297,491,1.576,512,2.97,523,0.657,530,1.37,533,0.657,534,0.968,538,1.939,539,1.37,540,2.341,541,1.993,542,1.993,543,1.576,544,0.968,545,2.979,546,0.968,550,1.576,551,2.297,552,2.698,553,1.576,557,2.71,558,2.297,564,1.576,565,3.499,567,1.576,572,2.857,596,1.576,597,1.137,598,1.137,599,3.713,600,0.968,601,1.851,602,1.851,603,2.269,604,1.851,605,1.851,606,1.851,607,2.341,608,1.851,609,1.851,610,2.698,611,2.269,612,2.341,613,2.87,614,2.87,615,2.87,616,3.308,617,2.269,618,3.308,619,2.698,620,2.87,621,3.357,622,2.97,623,1.851,624,2.87,625,1.394,626,1.394,627,2.269,628,1.394,629,2.269,630,3.308,631,2.269,632,3.308,633,2.97,634,1.394,635,2.269,636,2.269,637,3.903,638,1.394,639,3.308,640,3.308,641,1.394,642,1.394,643,3.308,644,3.903,645,2.269,646,2.269,647,2.269,648,2.269,649,2.269,650,2.269,651,2.269,652,2.269,653,1.394,654,4.76,655,3.184,656,1.851,657,2.698,658,2.698,659,3.184,660,2.698,661,1.851,662,3.308,663,1.851,664,2.269,665,1.851,666,2.698,667,1.394,668,2.269,669,2.269,670,1.394,671,2.269,672,1.394,673,1.394,674,1.394,675,2.269,676,1.394,677,1.394,678,1.394,679,1.394,680,1.394,681,1.394,682,2.269,683,1.394,684,1.394,685,1.394,686,2.87,687,1.137,688,2.269,689,1.394,690,3.308,691,2.269,692,1.394,693,1.576,694,1.851,695,1.394,696,1.394,697,0.968,698,1.137,699,1.394,700,2.269,701,2.269,702,1.394,703,1.137,704,1.137,705,1.137,706,1.137,707,1.394,708,1.137,709,1.394,710,1.394,711,1.394,712,1.394,713,1.394,714,1.137,715,2.269,716,2.269,717,1.394,718,1.394,719,1.394,720,1.394,721,1.394,722,1.394,723,1.394,724,1.394,725,1.394,726,1.394,727,1.394,728,1.137,729,1.394,730,1.394,731,0.968,732,1.851,733,2.698,734,1.137,735,1.137,736,1.137,737,1.137]],["title/components/NgMapsMarkerComponent.html",[433,1.381,538,1.381]],["body/components/NgMapsMarkerComponent.html",[0,0.17,1,1.325,3,0.666,4,0.224,5,0.196,8,0.404,14,0.508,16,1.726,17,0.123,18,0.486,20,1.498,21,1.424,23,1.067,24,0.046,25,1.328,26,0.76,28,0.496,31,0.404,33,1.409,39,0.333,40,0.333,43,0.224,45,0.453,46,0.651,49,1.537,50,0.951,55,1.107,56,1.618,57,1.126,59,0.912,72,1.743,75,1.225,79,0.942,81,1.328,90,1.746,94,1.556,96,0.008,97,0.014,98,0.008,100,0.613,105,0.453,107,0.686,108,1.056,109,0.613,115,1.441,120,1.579,121,1.53,127,1.325,135,1.273,144,1.825,148,0.864,150,1.66,157,0.686,158,2.433,178,1.126,181,3.29,182,0.749,187,0.974,194,0.749,196,0.749,210,2.074,214,1.702,284,2.811,314,0.749,340,0.573,357,0.88,386,1.273,406,1.907,411,1.107,413,0.651,433,1.817,482,2.385,483,2.802,485,1.495,487,1.495,489,2.802,491,2.385,494,2.802,496,0.88,498,2.802,523,0.508,530,1.107,533,0.508,534,0.749,538,1.726,539,1.107,541,1.66,542,1.66,543,1.273,544,0.749,545,2.678,546,0.749,550,1.273,551,1.958,553,1.66,557,2.89,558,1.273,559,1.273,560,1.273,564,1.273,567,0.749,572,3.052,576,0.88,596,1.273,597,0.88,598,0.88,601,1.495,602,1.495,604,1.495,605,1.495,606,1.495,607,0.88,608,1.495,609,1.495,610,2.3,612,1.95,619,2.3,621,2.802,622,2.802,623,1.95,633,2.802,655,2.3,656,1.495,657,1.495,658,2.3,659,2.3,660,2.3,661,1.495,663,1.495,665,3.395,666,4.107,687,0.88,694,3.146,698,0.88,703,0.88,704,0.88,705,2.3,706,2.3,708,0.88,714,1.495,728,1.95,731,0.749,732,1.495,733,2.3,734,0.88,735,0.88,736,0.88,737,0.88,738,0.749,739,1.833,740,2.391,741,1.833,742,2.391,743,2.391,744,2.391,745,2.391,746,2.819,747,2.819,748,2.819,749,2.819,750,2.819,751,1.833,752,2.391,753,2.819,754,2.819,755,3.159,756,2.819,757,2.819,758,2.391,759,3.159,760,3.159,761,1.079,762,1.079,763,3.159,764,1.079,765,1.833,766,1.833,767,1.833,768,1.833,769,1.833,770,1.833,771,1.079,772,1.833,773,1.833,774,1.079,775,1.079,776,1.079,777,2.819,778,1.079,779,1.833,780,1.079,781,1.833,782,1.833,783,1.833,784,1.833,785,1.079,786,1.495,787,1.833,788,1.833,789,1.079,790,1.079,791,1.079,792,1.833,793,2.819,794,1.833,795,1.833,796,1.079,797,1.833,798,4.395,799,4.578,800,1.833,801,1.079,802,1.833,803,2.819,804,1.079,805,1.833,806,1.079,807,1.833,808,1.833,809,1.833,810,1.079,811,1.833,812,1.079,813,2.819,814,1.833,815,1.079,816,1.833,817,1.079,818,1.079,819,1.079,820,1.079,821,1.079,822,1.079,823,1.833,824,1.079,825,1.079,826,1.079,827,2.391,828,1.833,829,1.079,830,1.079,831,1.079,832,2.391,833,1.079,834,2.819,835,2.819,836,1.079,837,1.833,838,3.159,839,1.833,840,1.079,841,1.079,842,1.833,843,1.079,844,0.749,845,1.833,846,1.833,847,1.833,848,1.833,849,1.079,850,1.079,851,1.079,852,1.833,853,1.079,854,1.079,855,0.88,856,1.079,857,1.079,858,1.079,859,1.079,860,1.079,861,1.079,862,1.079,863,1.833,864,1.079,865,1.833,866,1.079,867,1.079,868,1.079,869,1.079,870,1.079,871,1.079,872,1.079,873,1.079,874,1.079,875,1.079,876,1.079,877,1.079,878,1.079,879,1.079,880,1.079,881,1.079,882,1.079,883,1.079,884,1.079,885,1.079,886,1.079,887,1.079,888,3.664,889,1.079,890,1.079,891,1.079,892,1.079,893,1.079,894,1.079,895,1.079,896,1.079,897,1.079,898,1.079,899,1.079,900,1.079,901,3.159,902,3.159,903,1.079,904,1.079,905,1.079,906,1.079,907,1.079,908,1.079,909,1.079,910,1.079,911,1.079,912,1.079,913,1.079,914,1.079,915,1.079,916,1.079,917,1.079,918,1.079,919,1.079,920,1.079,921,1.079,922,1.079,923,1.079,924,1.079]],["title/classes/NoOpMapsAPILoader.html",[0,0.462,925,2.035]],["body/classes/NoOpMapsAPILoader.html",[0,0.573,2,2.523,3,0.66,4,0.754,5,0.66,8,1.36,10,1.931,17,0.414,18,1.208,21,0.964,23,0.964,24,0.045,26,0.754,38,1.663,39,1.022,40,1.038,42,1.083,43,0.754,59,0.754,79,1.083,96,0.028,97,0.035,98,0.028,157,2.011,164,2.145,224,1.91,226,2.194,235,3.148,267,3.454,268,4.381,269,2.964,279,3.715,297,2.964,382,3.715,539,2.749,559,3.162,560,3.162,693,2.523,855,2.964,925,3.621,926,3.715,927,4.554,928,4.554,929,4.554,930,4.554,931,4.554,932,3.633,933,3.633,934,3.633,935,3.633,936,3.633]],["title/coverage.html",[937,3.23]],["body/coverage.html",[0,0.683,1,1.408,5,0.61,6,2.547,7,2.386,24,0.044,27,1.114,38,1.122,39,0.953,40,1.032,41,1.582,42,1.291,44,1.817,45,1.408,50,0.61,52,1.582,59,0.697,96,0.025,97,0.033,98,0.025,125,2.027,126,2.738,127,1.408,128,3.007,140,2.331,144,1.784,148,1.582,178,1.582,223,1.582,224,2.2,225,2.259,226,2.894,237,1.784,258,1.784,340,2.903,352,2.615,417,2.738,433,1.582,505,2.331,523,1.582,526,2.738,527,2.331,533,1.582,535,2.738,538,2.259,599,3.007,600,3.007,697,2.331,738,3.007,844,2.331,925,2.331,926,2.738,937,2.738,938,2.738,939,3.357,940,3.357,941,4.794,942,3.357,943,3.357,944,4.794,945,3.357,946,4.794,947,3.357,948,3.357,949,3.357,950,3.357,951,3.357,952,4.331,953,4.331,954,4.331,955,4.331,956,3.357,957,3.357,958,3.357,959,3.357,960,3.357,961,4.331,962,3.357,963,3.357,964,3.357,965,3.357,966,3.357]],["title/dependencies.html",[967,2.013,968,2.44]],["body/dependencies.html",[24,0.045,28,0.874,31,1.577,96,0.032,97,0.038,98,0.032,255,3.437,968,2.926,969,4.213,970,5.776,971,4.213,972,4.213,973,4.984,974,4.984,975,4.213,976,4.213,977,4.213,978,4.213,979,4.213,980,4.213,981,4.213,982,4.213,983,4.213]],["title/miscellaneous/enumerations.html",[984,0.924,985,2.867]],["body/miscellaneous/enumerations.html",[12,1.812,17,0.492,24,0.043,39,0.919,40,0.975,42,1.508,96,0.033,97,0.038,98,0.033,121,1.792,224,1.812,225,2.035,257,3.512,308,2.999,309,2.999,352,3.053,406,2.607,407,2.999,408,2.999,984,1.617,985,3.523,986,3.523]],["title/miscellaneous/functions.html",[984,0.924,987,2.867]],["body/miscellaneous/functions.html",[17,0.517,24,0.04,96,0.034,97,0.04,98,0.034,505,3.149,527,3.799,984,1.698,987,3.7,988,4.535]],["title/index.html",[17,0.281,989,2.013,990,2.013]],["body/index.html",[3,0.774,24,0.038,96,0.032,97,0.038,98,0.032,127,1.787,359,3.476,507,3.476,967,3.476,991,4.261,992,5.017,993,4.261,994,4.261,995,4.261,996,4.261,997,4.261,998,4.261,999,4.721,1000,4.261,1001,4.261,1002,4.261,1003,4.261,1004,4.261,1005,4.261,1006,4.261,1007,5.332,1008,4.261,1009,4.261,1010,4.261]],["title/license.html",[373,1.714,989,2.013,990,2.013]],["body/license.html",[24,0.035,39,0.685,96,0.029,97,0.035,98,0.029,158,2.003,373,2.618,378,3.075,393,2.813,570,3.075,786,3.075,938,3.075,999,3.075,1011,3.77,1012,5.058,1013,3.77,1014,3.77,1015,4.66,1016,3.77,1017,3.77,1018,3.77,1019,3.77,1020,3.77,1021,3.77,1022,4.66,1023,5.708,1024,3.77,1025,3.77,1026,3.77,1027,5.058,1028,3.77,1029,4.66,1030,3.77,1031,3.77,1032,3.77,1033,3.77,1034,3.77,1035,3.77,1036,3.77,1037,3.77,1038,3.77,1039,4.66,1040,3.77,1041,3.77,1042,3.77,1043,3.77,1044,3.77,1045,3.77,1046,4.66,1047,4.66,1048,3.77,1049,3.77,1050,3.77,1051,3.77,1052,3.77,1053,3.77,1054,3.77,1055,3.77,1056,3.77,1057,3.77,1058,3.77,1059,3.77,1060,3.77,1061,3.77,1062,3.77,1063,3.77,1064,3.77,1065,3.77,1066,3.77,1067,3.77,1068,3.77,1069,3.77,1070,3.77,1071,3.77,1072,3.77,1073,3.075,1074,3.77,1075,3.77]],["title/modules.html",[504,2.749]],["body/modules.html",[24,0.04,96,0.035,97,0.04,98,0.035,503,3.172,504,3.172,693,3.172,1076,4.568,1077,4.568]],["title/overview.html",[1078,3.23]],["body/overview.html",[2,3.033,24,0.039,96,0.033,97,0.039,98,0.033,99,3.033,101,2.058,406,3.074,407,3.535,408,3.033,502,3.535,528,3.564,529,3.564,530,2.637,533,2.058,596,3.033,731,3.033,968,3.033,1073,3.564,1078,3.564,1079,4.368,1080,5.091,1081,4.368,1082,4.368]],["title/miscellaneous/typealiases.html",[984,0.924,1083,3.514]],["body/miscellaneous/typealiases.html",[6,2.343,7,2.411,17,0.502,24,0.042,33,1.315,50,0.801,51,3.09,96,0.033,97,0.039,98,0.033,984,1.651,1084,4.409,1085,4.409,1086,5.118,1087,4.409,1088,4.409,1089,4.409,1090,4.409,1091,4.409]],["title/miscellaneous/variables.html",[984,0.924,1092,2.867]],["body/miscellaneous/variables.html",[17,0.463,24,0.043,39,0.95,40,0.95,42,1.454,50,0.95,59,0.843,90,2.045,96,0.031,97,0.037,98,0.031,120,1.746,121,1.746,157,1.52,223,1.913,224,1.703,225,1.913,240,2.451,258,2.776,340,2.591,352,2.943,409,3.312,410,2.819,411,2.451,412,3.312,414,2.819,415,3.312,599,2.819,600,3.385,697,3.385,738,2.819,844,3.385,984,1.52,986,3.312,1092,3.312,1093,4.06,1094,4.06]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":340,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":783,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["0.9.1",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":406,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsMarkerComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0",{"_index":784,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["1.0.3",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["12/24",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":407,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["2/9",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["20/35",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":60,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["2019",{"_index":1014,"title":{},"body":{"license.html":{}}}],["22",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":408,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["300px",{"_index":609,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["31",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["48/71",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1082,"title":{},"body":{"overview.html":{}}}],["6.5.2",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["67",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["8.1.0",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["9/29",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["_addeventlisteners",{"_index":746,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_assignscriptloadingpromise",{"_index":233,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_assignscriptloadingpromise(scriptelem",{"_index":241,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_boundschangesampletime",{"_index":58,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_config",{"_index":228,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_createidentifier",{"_index":93,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_createidentifier(latlng",{"_index":110,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["_destroyed",{"_index":547,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_document",{"_index":229,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_fitboundsaccessor",{"_index":556,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_fitboundsdetails",{"_index":743,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_fitboundsservice",{"_index":555,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_generatebounds",{"_index":73,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_generatebounds(includeinbounds",{"_index":112,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["_getscriptsrc",{"_index":234,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_getscriptsrc(callbackname",{"_index":245,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_id",{"_index":612,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["_includeinbounds",{"_index":61,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_infowindowaddedtomanager",{"_index":613,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindowmanager",{"_index":627,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindowoptionsinputs",{"_index":614,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindows",{"_index":129,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["_latestfitboundsdetails",{"_index":548,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_mapswrapper",{"_index":146,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["_markeraddedtomanger",{"_index":744,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_markermanager",{"_index":143,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["_markers",{"_index":418,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["_observablesubscriptions",{"_index":745,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_registereventlisteners",{"_index":616,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_script_id",{"_index":230,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_scriptloadingpromise",{"_index":231,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_setinfowindowoptions",{"_index":617,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_setinfowindowoptions(changes",{"_index":671,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_updatebounds",{"_index":549,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_updatebounds(newfitboundsdetails",{"_index":561,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_updatefitboundsdetails",{"_index":747,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_updateopenstate",{"_index":618,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_zone",{"_index":141,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["above",{"_index":1045,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":19,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"directives/NgMapsFitBounds.html":{}}}],["according",{"_index":661,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["action",{"_index":1068,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":737,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["added",{"_index":560,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["addinfowindow",{"_index":131,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["addinfowindow(infowindow",{"_index":147,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["addmarker",{"_index":419,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["addmarker(marker",{"_index":432,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["adds",{"_index":536,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["addtobounds",{"_index":102,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["addtobounds(latlng",{"_index":80,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["aftercontentinit",{"_index":740,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["agm",{"_index":16,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["aliases",{"_index":1084,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":363,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["already",{"_index":188,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{}}}],["alter",{"_index":398,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["always",{"_index":664,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["and/or",{"_index":1037,"title":{},"body":{"license.html":{}}}],["angular",{"_index":506,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["angular/animations",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":255,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":28,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":498,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["any).google",{"_index":265,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["any).google.maps",{"_index":266,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["api",{"_index":40,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":354,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["apis",{"_index":371,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["apiversion",{"_index":355,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["app",{"_index":511,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["appearing",{"_index":663,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["application",{"_index":375,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["applications",{"_index":370,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["arising",{"_index":1072,"title":{},"body":{"license.html":{}}}],["array",{"_index":315,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["array.isarray(i",{"_index":346,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["array.isarray(queryparams[k",{"_index":338,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["arrays",{"_index":337,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["assigning",{"_index":367,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["associated",{"_index":1024,"title":{},"body":{"license.html":{}}}],["async",{"_index":130,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["authenticate",{"_index":374,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["authors",{"_index":1062,"title":{},"body":{"license.html":{}}}],["auto",{"_index":12,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"miscellaneous/enumerations.html":{}}}],["automatically",{"_index":787,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["available",{"_index":693,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"modules.html":{}}}],["await",{"_index":185,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["before",{"_index":649,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["behavior",{"_index":391,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["behaviorsubject",{"_index":29,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["between",{"_index":782,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["bias",{"_index":397,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["bicyclinglayer",{"_index":1091,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["boolean",{"_index":557,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["bootstrap",{"_index":1079,"title":{},"body":{"overview.html":{}}}],["both",{"_index":377,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["bounce",{"_index":834,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["bounds",{"_index":14,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["bounds.delete(this._createidentifier(latlng",{"_index":88,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["bounds.extend(b",{"_index":78,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["bounds.set(id",{"_index":85,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["bounds.ts",{"_index":7,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["bounds.ts:23",{"_index":22,"title":{},"body":{"classes/FitBoundsAccessor.html":{}}}],["bounds.ts:31",{"_index":124,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:32",{"_index":122,"title":{},"body":{"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:34",{"_index":571,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:35",{"_index":123,"title":{},"body":{"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:37",{"_index":106,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:45",{"_index":566,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:50",{"_index":113,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:52",{"_index":569,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:61",{"_index":114,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:65",{"_index":562,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:71",{"_index":119,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:77",{"_index":116,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:81",{"_index":118,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:83",{"_index":568,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:85",{"_index":111,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["boundsmap",{"_index":51,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"miscellaneous/typealiases.html":{}}}],["break",{"_index":306,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["browse",{"_index":1077,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["browser's",{"_index":384,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["c",{"_index":1013,"title":{},"body":{"license.html":{}}}],["call",{"_index":637,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["callback",{"_index":319,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["callbackname",{"_index":232,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["case",{"_index":304,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["change",{"_index":650,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["changefitboundschangesampletime",{"_index":103,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["changefitboundschangesampletime(timems",{"_index":89,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["changes",{"_index":567,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["changes.animation",{"_index":883,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.clickable",{"_index":881,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.draggable",{"_index":872,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.iconurl",{"_index":874,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.isopen",{"_index":710,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["changes.label",{"_index":870,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.latitude",{"_index":703,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["changes.longitude",{"_index":704,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["changes.opacity",{"_index":876,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.title",{"_index":868,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.visible",{"_index":878,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.zindex",{"_index":708,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["changes[k].currentvalue",{"_index":724,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["changing",{"_index":651,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["channel",{"_index":323,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["character",{"_index":773,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["charge",{"_index":1019,"title":{},"body":{"license.html":{}}}],["child",{"_index":788,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["claim",{"_index":1065,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/FitBoundsAccessor.html":{},"classes/NoOpMapsAPILoader.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"classes/NoOpMapsAPILoader.html":{},"overview.html":{}}}],["clickable",{"_index":496,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["clicked",{"_index":777,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["clicks",{"_index":809,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["client",{"_index":321,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["clientid",{"_index":356,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["close",{"_index":132,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["close(infowindow",{"_index":151,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["closed",{"_index":669,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["closes",{"_index":675,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["clusterer",{"_index":1003,"title":{},"body":{"index.html":{}}}],["cmp",{"_index":605,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["comma",{"_index":343,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["component",{"_index":538,"title":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":734,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["components",{"_index":596,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"overview.html":{}}}],["computing",{"_index":54,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["conditions",{"_index":1044,"title":{},"body":{"license.html":{}}}],["config",{"_index":240,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"miscellaneous/variables.html":{}}}],["config.ts",{"_index":352,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":353,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["connection",{"_index":1074,"title":{},"body":{"license.html":{}}}],["considered",{"_index":647,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["const",{"_index":75,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["constructor",{"_index":105,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["constructor(_fitboundsaccessor",{"_index":554,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["constructor(_infowindowmanager",{"_index":625,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["constructor(_mapswrapper",{"_index":139,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["constructor(config",{"_index":236,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["constructor(loader",{"_index":62,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["constructor(markermanager",{"_index":761,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["constructor(private",{"_index":698,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["container",{"_index":739,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["contains",{"_index":508,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["content",{"_index":206,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["content's",{"_index":646,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["contentchildren",{"_index":841,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["contentchildren(ngmapsinfowindowcomponent",{"_index":839,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["contract",{"_index":1069,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1039,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1022,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1012,"title":{},"body":{"license.html":{}}}],["core",{"_index":507,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"index.html":{}}}],["coredirectives",{"_index":527,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["coverage",{"_index":937,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createeventobservable",{"_index":133,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["createeventobservable('click",{"_index":889,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('closeclick",{"_index":713,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["createeventobservable('drag",{"_index":906,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('dragend",{"_index":909,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('dragstart",{"_index":900,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('mouseout",{"_index":915,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('mouseover",{"_index":912,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('rightclick",{"_index":896,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable(eventname",{"_index":153,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["creates",{"_index":156,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["cs",{"_index":887,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["custom",{"_index":537,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["d",{"_index":905,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["damages",{"_index":1066,"title":{},"body":{"license.html":{}}}],["deal",{"_index":1026,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1075,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":528,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"overview.html":{}}}],["decorators",{"_index":687,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["default",{"_index":120,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["defines",{"_index":396,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["defining",{"_index":402,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["deleted",{"_index":189,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["deleteinfowindow",{"_index":134,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["deleteinfowindow(infowindow",{"_index":162,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["deletemarker",{"_index":420,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["deletemarker(marker",{"_index":438,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["dependencies",{"_index":968,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["different",{"_index":400,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["directive",{"_index":533,"title":{"directives/NgMapsFitBounds.html":{}},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":534,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["directives/fit",{"_index":524,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["directives/info",{"_index":177,"title":{},"body":{"injectables/InfoWindowManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/map",{"_index":179,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/marker",{"_index":462,"title":{},"body":{"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/services/pipes",{"_index":509,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["disable",{"_index":629,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["disableautopan",{"_index":212,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["displayed",{"_index":655,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["displaying",{"_index":386,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["distinct",{"_index":368,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["distinctuntilchanged",{"_index":574,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["distribute",{"_index":1035,"title":{},"body":{"license.html":{}}}],["docs",{"_index":998,"title":{},"body":{"index.html":{}}}],["document",{"_index":238,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["documentation",{"_index":938,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":597,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["drag",{"_index":754,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["dragend",{"_index":755,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["draggable",{"_index":485,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["dragged",{"_index":779,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["dragging",{"_index":803,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["drags",{"_index":800,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["dragstart",{"_index":756,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["drop",{"_index":835,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ds",{"_index":899,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["dynamic",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":221,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["each",{"_index":369,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["editors",{"_index":275,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["element",{"_index":558,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["elementref",{"_index":686,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["emits",{"_index":668,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["emitted",{"_index":808,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["emitter",{"_index":807,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["empty",{"_index":336,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["entry.key}=${entry.value",{"_index":350,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["enum",{"_index":405,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["enumerations",{"_index":985,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":297,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["error('expected",{"_index":856,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["event",{"_index":158,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"license.html":{}}}],["eventemitter",{"_index":666,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["eventname",{"_index":161,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["example",{"_index":543,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["exports",{"_index":529,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"overview.html":{}}}],["express",{"_index":1053,"title":{},"body":{"license.html":{}}}],["extends",{"_index":227,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["fail",{"_index":376,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["false",{"_index":633,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["feature",{"_index":15,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["files",{"_index":1025,"title":{},"body":{"license.html":{}}}],["filter((k",{"_index":333,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["fired",{"_index":798,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["first",{"_index":931,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["fit",{"_index":13,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["fitboundsaccessor",{"_index":1,"title":{"classes/FitBoundsAccessor.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["fitboundsdetails",{"_index":45,"title":{"interfaces/FitBoundsDetails.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["fitboundsservice",{"_index":52,"title":{"injectables/FitBoundsService.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"coverage.html":{}}}],["fitness",{"_index":1058,"title":{},"body":{"license.html":{}}}],["flatmap",{"_index":32,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["following",{"_index":1043,"title":{},"body":{"license.html":{}}}],["force",{"_index":392,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["foreground",{"_index":767,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["forroot",{"_index":513,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["forroot(lazymapsapiloaderconfig",{"_index":514,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["forwardref",{"_index":742,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["free",{"_index":1018,"title":{},"body":{"license.html":{}}}],["from(loader.load()).pipe",{"_index":64,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["front",{"_index":659,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["fully",{"_index":631,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["function",{"_index":526,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{}}}],["functions",{"_index":987,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1042,"title":{},"body":{"license.html":{}}}],["further",{"_index":794,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["getbounds",{"_index":92,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["getfitboundsdetails",{"_index":20,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["getnativemarker",{"_index":421,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["getnativemarker(marker",{"_index":440,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["gets",{"_index":559,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["getting",{"_index":989,"title":{"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":160,"title":{},"body":{"injectables/InfoWindowManager.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"directives/NgMapsFitBounds.html":{}}}],["google",{"_index":157,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"miscellaneous/variables.html":{}}}],["google.maps.animation[marker.animation",{"_index":499,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["google.maps.icon",{"_index":763,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["google.maps.infowindowoptions",{"_index":169,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["google.maps.latlng",{"_index":47,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["google.maps.latlngbounds",{"_index":76,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["google.maps.latlngliteral",{"_index":48,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["google.maps.marker",{"_index":442,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["google.maps.markerchangeoptioneventnames",{"_index":435,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["google.maps.markerlabel",{"_index":770,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["google.maps.markermouseeventnames",{"_index":436,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["google.maps.mouseevent",{"_index":902,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["google/markerclusterer",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["googlemapsapiscript",{"_index":252,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["googlemapsapiwrapper",{"_index":140,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"coverage.html":{}}}],["googlemapsscriptprotocol",{"_index":257,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/enumerations.html":{}}}],["googlemapsscriptprotocol.auto",{"_index":305,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["googlemapsscriptprotocol.http",{"_index":307,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["googlemapsscriptprotocol.https",{"_index":301,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["granted",{"_index":1017,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1076,"title":{},"body":{"modules.html":{}}}],["handleinfowindowupdate",{"_index":748,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["happen",{"_index":271,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["height",{"_index":608,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["hereby",{"_index":1016,"title":{},"body":{"license.html":{}}}],["hi",{"_index":611,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["higher",{"_index":657,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["hmr",{"_index":272,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["holders",{"_index":1063,"title":{},"body":{"license.html":{}}}],["holds",{"_index":690,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["host",{"_index":379,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["hostandpath",{"_index":310,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["hostmarker",{"_index":615,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["hosts",{"_index":996,"title":{},"body":{"index.html":{}}}],["html",{"_index":732,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["htmlelement",{"_index":242,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["http",{"_index":308,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/enumerations.html":{}}}],["https",{"_index":309,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/enumerations.html":{}}}],["https://developers.google.com/maps/documentation/javascript/basics#language",{"_index":395,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["https://developers.google.com/maps/documentation/javascript/basics#region",{"_index":403,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["https://developers.google.com/maps/documentation/javascript/get",{"_index":358,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["i.addlistener(eventname",{"_index":220,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["i.join",{"_index":348,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["i.setoptions(options",{"_index":205,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["i.setposition",{"_index":193,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["i.setzindex(infowindow.zindex",{"_index":198,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["icon",{"_index":487,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["iconurl",{"_index":750,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["id",{"_index":81,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["identifier",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":766,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["implement",{"_index":9,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["implements",{"_index":539,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["implied",{"_index":1054,"title":{},"body":{"license.html":{}}}],["import",{"_index":26,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["important",{"_index":930,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["included",{"_index":378,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"license.html":{}}}],["includeinbounds",{"_index":74,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["includeinbounds.foreach((b",{"_index":77,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["including",{"_index":1029,"title":{},"body":{"license.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"index.html":{}}}],["information",{"_index":388,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["infowindow",{"_index":150,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["infowindow.content.nativeelement",{"_index":207,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.disableautopan",{"_index":213,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.hostmarker",{"_index":201,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.latitude",{"_index":195,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.longitude",{"_index":197,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.maxwidth",{"_index":209,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.open",{"_index":892,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["infowindow.zindex",{"_index":211,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindowclose",{"_index":624,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["infowindowid",{"_index":697,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["infowindowid++).tostring",{"_index":682,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["infowindowmanager",{"_index":125,"title":{"injectables/InfoWindowManager.html":{}},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{}}}],["infowindows",{"_index":654,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["inherited",{"_index":248,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["inject",{"_index":256,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["inject(document",{"_index":261,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["inject(lazy_maps_api_config",{"_index":260,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["injectable",{"_index":27,"title":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"coverage.html":{}}}],["injectables",{"_index":101,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"overview.html":{}}}],["injectiontoken",{"_index":404,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["injectiontoken('angular",{"_index":415,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":572,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["input('markerclickable",{"_index":850,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["input('markerdraggable",{"_index":849,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["inputs",{"_index":553,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["inside",{"_index":602,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["instance",{"_index":216,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["interface",{"_index":44,"title":{"interfaces/FitBoundsDetails.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"coverage.html":{}}}],["interfaces",{"_index":99,"title":{},"body":{"interfaces/FitBoundsDetails.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"overview.html":{}}}],["internal",{"_index":49,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["isopen",{"_index":620,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["it's",{"_index":929,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["iwindow",{"_index":184,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["iwindow.close",{"_index":191,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["javascript",{"_index":769,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["join",{"_index":342,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["k",{"_index":347,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["key",{"_index":314,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsMarkerComponent.html":{}}}],["kind",{"_index":1052,"title":{},"body":{"license.html":{}}}],["label",{"_index":483,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["language",{"_index":329,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["lat",{"_index":194,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["latitude",{"_index":621,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["latitudes",{"_index":662,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["latlng",{"_index":46,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"components/NgMapsMarkerComponent.html":{}}}],["latlng.lat}+${latlng.lng",{"_index":95,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["layer",{"_index":1007,"title":{},"body":{"index.html":{}}}],["layertypes",{"_index":1086,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lazy",{"_index":259,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["lazy_maps_api_config",{"_index":258,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lazymapsapiloader",{"_index":223,"title":{"injectables/LazyMapsAPILoader.html":{}},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lazymapsapiloaderconfig",{"_index":414,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"miscellaneous/variables.html":{}}}],["lazymapsapiloaderconfigliteral",{"_index":237,"title":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"coverage.html":{}}}],["legend",{"_index":731,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"overview.html":{}}}],["level",{"_index":519,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["liability",{"_index":1067,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1064,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":325,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["license",{"_index":373,"title":{"license.html":{}},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"license.html":{}}}],["limitation",{"_index":1030,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1055,"title":{},"body":{"license.html":{}}}],["line:no",{"_index":847,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["link",{"_index":413,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["listener",{"_index":159,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["literal",{"_index":823,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["lng",{"_index":196,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["load",{"_index":235,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["loaded",{"_index":267,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["loader",{"_index":42,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["loader.ts",{"_index":226,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["loader.ts:13",{"_index":254,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:14",{"_index":250,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:15",{"_index":251,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:16",{"_index":253,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:17",{"_index":239,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:30",{"_index":247,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:5",{"_index":416,"title":{},"body":{"injectables/MapsAPILoader.html":{}}}],["loader.ts:58",{"_index":243,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:70",{"_index":246,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:9",{"_index":932,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["loader/lazy",{"_index":225,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["loader/maps",{"_index":41,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsAPILoader.html":{},"modules/NgMapsCoreModule.html":{},"coverage.html":{}}}],["loader/noop",{"_index":926,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["longitude",{"_index":622,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["lower",{"_index":660,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["m",{"_index":463,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.addlistener(eventname",{"_index":501,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setanimation(google.maps.animation[marker.animation",{"_index":479,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setanimation(marker.animation",{"_index":480,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setclickable(marker.clickable",{"_index":477,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setdraggable(marker.draggable",{"_index":472,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.seticon(marker.iconurl",{"_index":473,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setlabel(marker.label",{"_index":471,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setmap(null",{"_index":465,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setopacity(marker.opacity",{"_index":474,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setposition",{"_index":467,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.settitle(marker.title",{"_index":470,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setvisible(marker.visible",{"_index":475,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setzindex(marker.zindex",{"_index":476,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["make",{"_index":10,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["manager",{"_index":182,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["manager.ts",{"_index":128,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"coverage.html":{}}}],["manager.ts:100",{"_index":154,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:107",{"_index":441,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:11",{"_index":461,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:111",{"_index":437,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:14",{"_index":175,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["manager.ts:17",{"_index":145,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:21",{"_index":439,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:25",{"_index":163,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:34",{"_index":454,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:38",{"_index":172,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:39",{"_index":458,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:44",{"_index":452,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:46",{"_index":174,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:49",{"_index":448,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:51",{"_index":166,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:54",{"_index":450,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:59",{"_index":456,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:64",{"_index":152,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["manager.ts:69",{"_index":170,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["manager.ts:74",{"_index":446,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:77",{"_index":149,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:79",{"_index":444,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:88",{"_index":434,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["map",{"_index":33,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["map((entry",{"_index":349,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["map((includeinbounds",{"_index":69,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["map((k",{"_index":341,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["mapfitbounds",{"_index":546,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["maps",{"_index":39,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["maps.googleapis.com/maps/api/js",{"_index":312,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["maps/core",{"_index":1000,"title":{},"body":{"index.html":{}}}],["maps/data",{"_index":1006,"title":{},"body":{"index.html":{}}}],["maps/drawing",{"_index":1009,"title":{},"body":{"index.html":{}}}],["maps/kml",{"_index":1008,"title":{},"body":{"index.html":{}}}],["maps/marker",{"_index":1002,"title":{},"body":{"index.html":{}}}],["maps/places",{"_index":1005,"title":{},"body":{"index.html":{}}}],["maps/shapes",{"_index":1010,"title":{},"body":{"index.html":{}}}],["maps/snazzy",{"_index":1001,"title":{},"body":{"index.html":{}}}],["mapsapiloader",{"_index":38,"title":{"injectables/MapsAPILoader.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"modules/NgMapsCoreModule.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["mapsapiloader:5",{"_index":249,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["marker",{"_index":181,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["marker's",{"_index":781,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["marker'},{'name",{"_index":736,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["marker.animation",{"_index":478,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.clickable",{"_index":497,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.draggable",{"_index":486,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.hostmarker",{"_index":860,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["marker.iconurl",{"_index":488,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.label",{"_index":484,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.latitude",{"_index":468,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.longitude",{"_index":469,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.opacity",{"_index":490,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.title",{"_index":495,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.visible",{"_index":492,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.zindex",{"_index":493,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["markerclick",{"_index":757,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markerclickable",{"_index":751,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markerclusterer",{"_index":1004,"title":{},"body":{"index.html":{}}}],["markerdraggable",{"_index":752,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markericon",{"_index":768,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markerid",{"_index":844,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["markerid++).tostring",{"_index":851,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markermanager",{"_index":144,"title":{"injectables/MarkerManager.html":{}},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["markerrightclick",{"_index":758,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markers",{"_index":665,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["matching",{"_index":97,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":643,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["maxwidth",{"_index":208,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["merchantability",{"_index":1057,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1033,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":544,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["method",{"_index":516,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["methods",{"_index":18,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["miscellaneous",{"_index":984,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1011,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1032,"title":{},"body":{"license.html":{}}}],["module",{"_index":502,"title":{"modules/NgMapsCoreModule.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"overview.html":{}}}],["modules",{"_index":504,"title":{"modules.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":521,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["mono",{"_index":994,"title":{},"body":{"index.html":{}}}],["more",{"_index":857,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["mouseout",{"_index":759,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["mouseover",{"_index":760,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["mouses",{"_index":813,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["multiple",{"_index":997,"title":{},"body":{"index.html":{}}}],["name",{"_index":108,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["native",{"_index":691,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["new",{"_index":59,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newfitboundsdetails",{"_index":563,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["next",{"_index":846,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ng",{"_index":999,"title":{},"body":{"index.html":{},"license.html":{}}}],["ngaftercontentinit",{"_index":749,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ngmaps",{"_index":991,"title":{},"body":{"index.html":{}}}],["ngmapscoremodule",{"_index":503,"title":{"modules/NgMapsCoreModule.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"modules.html":{}}}],["ngmapscoremodule.forroot",{"_index":510,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["ngmapsfitbounds",{"_index":523,"title":{"directives/NgMapsFitBounds.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapsinfowindowcomponent",{"_index":148,"title":{"components/NgMapsInfoWindowComponent.html":{}},"body":{"injectables/InfoWindowManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapsinfowindowcomponent._infowindowoptionsinputs.includes(k",{"_index":721,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["ngmapsmarker",{"_index":918,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ngmapsmarkercomponent",{"_index":433,"title":{"components/NgMapsMarkerComponent.html":{}},"body":{"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapsviewcomponent",{"_index":178,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmodule",{"_index":522,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["ngonchanges",{"_index":550,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ngonchanges(changes",{"_index":564,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ngondestroy",{"_index":551,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ngoninit",{"_index":552,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["ngzone",{"_index":142,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["noninfringement",{"_index":1061,"title":{},"body":{"license.html":{}}}],["noopmapsapiloader",{"_index":925,"title":{"classes/NoOpMapsAPILoader.html":{}},"body":{"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["notice",{"_index":1046,"title":{},"body":{"license.html":{}}}],["null",{"_index":187,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["number",{"_index":90,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"miscellaneous/variables.html":{}}}],["number(this.latitude",{"_index":861,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["number(this.longitude",{"_index":862,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["object",{"_index":412,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/variables.html":{}}}],["object.keys(changes).filter((k",{"_index":720,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["object.keys(queryparams",{"_index":332,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["observable",{"_index":25,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["observable((observer",{"_index":219,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["observer",{"_index":176,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["observer.next(e",{"_index":222,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["obtaining",{"_index":1021,"title":{},"body":{"license.html":{}}}],["onchanges",{"_index":542,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ondestroy",{"_index":541,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["one",{"_index":858,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["oninit",{"_index":540,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["opacity",{"_index":489,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["open",{"_index":135,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["open(infowindow",{"_index":165,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["openinfowindow",{"_index":753,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["opens",{"_index":632,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["optional",{"_index":109,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["optionkeys",{"_index":719,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["optionkeys.foreach((k",{"_index":722,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["options",{"_index":168,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["options.position",{"_index":215,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["options[k",{"_index":723,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["order",{"_index":656,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["otherwise",{"_index":1071,"title":{},"body":{"license.html":{}}}],["ouside",{"_index":640,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["out",{"_index":1073,"title":{},"body":{"license.html":{},"overview.html":{}}}],["output",{"_index":694,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["outputs",{"_index":623,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["outside",{"_index":814,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["over",{"_index":816,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["overview",{"_index":1078,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":390,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["package",{"_index":967,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["packages",{"_index":992,"title":{},"body":{"index.html":{}}}],["page",{"_index":268,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["pan",{"_index":630,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["parameter",{"_index":362,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["parameters",{"_index":107,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["params",{"_index":331,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["particular",{"_index":1059,"title":{},"body":{"license.html":{}}}],["path",{"_index":380,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["permission",{"_index":1015,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1040,"title":{},"body":{"license.html":{}}}],["person",{"_index":1020,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1041,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":579,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["plan",{"_index":372,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["plans",{"_index":361,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["play",{"_index":837,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["please",{"_index":410,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1049,"title":{},"body":{"license.html":{}}}],["position",{"_index":482,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["preferred",{"_index":385,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["premium",{"_index":360,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["private",{"_index":72,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["project",{"_index":993,"title":{},"body":{"index.html":{}}}],["projects/.../core.module.ts",{"_index":988,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../fit",{"_index":1085,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../info",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../layers.ts",{"_index":1087,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../lazy",{"_index":986,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../marker.ts",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/core/src/lib/core.module.ts",{"_index":505,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/core/src/lib/core.module.ts:37",{"_index":515,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["projects/core/src/lib/directives/fit",{"_index":535,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"coverage.html":{}}}],["projects/core/src/lib/directives/info",{"_index":599,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/core/src/lib/directives/map.ts",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["projects/core/src/lib/directives/marker.ts",{"_index":738,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/core/src/lib/directives/marker.ts:101",{"_index":778,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:108",{"_index":764,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:113",{"_index":790,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:118",{"_index":785,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:123",{"_index":780,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:131",{"_index":791,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:137",{"_index":776,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:143",{"_index":836,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:148",{"_index":806,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:155",{"_index":810,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:160",{"_index":804,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:167",{"_index":796,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:174",{"_index":801,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:181",{"_index":815,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:188",{"_index":812,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:195",{"_index":840,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:199",{"_index":831,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:200",{"_index":830,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:201",{"_index":833,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:203",{"_index":829,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:205",{"_index":762,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:214",{"_index":822,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:219",{"_index":820,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:231",{"_index":824,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:288",{"_index":819,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:292",{"_index":818,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:298",{"_index":817,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:353",{"_index":821,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:358",{"_index":826,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:363",{"_index":825,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:80",{"_index":774,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:85",{"_index":775,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:90",{"_index":789,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/directives/marker.ts:95",{"_index":771,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["projects/core/src/lib/interface/layers.ts",{"_index":1088,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/core/src/lib/services/fit",{"_index":6,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["projects/core/src/lib/services/google",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["projects/core/src/lib/services/managers/info",{"_index":126,"title":{},"body":{"injectables/InfoWindowManager.html":{},"coverage.html":{}}}],["projects/core/src/lib/services/managers/marker",{"_index":417,"title":{},"body":{"injectables/MarkerManager.html":{},"coverage.html":{}}}],["projects/core/src/lib/services/maps",{"_index":224,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":164,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["promise((resolve",{"_index":292,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["promise.resolve",{"_index":269,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["properties",{"_index":100,"title":{},"body":{"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["protected",{"_index":56,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["protocol",{"_index":302,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["protocoltype",{"_index":299,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["protocol}//${hostandpath}?${params",{"_index":351,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["provide",{"_index":411,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsMarkerComponent.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1050,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":183,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["providers",{"_index":530,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"overview.html":{}}}],["publish",{"_index":1034,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1060,"title":{},"body":{"license.html":{}}}],["quarterly",{"_index":318,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["querylist",{"_index":838,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["queryparams",{"_index":313,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["queryparams[k",{"_index":334,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["queryparams[k].length",{"_index":339,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["rc",{"_index":895,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["readonly",{"_index":57,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/LazyMapsAPILoader.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["regardless",{"_index":645,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["region",{"_index":327,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["register",{"_index":517,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["registered",{"_index":921,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["reject",{"_index":293,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["reject(error",{"_index":298,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["remove",{"_index":335,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["removefrombounds",{"_index":104,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["removefrombounds(latlng",{"_index":87,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["rename",{"_index":848,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["renders",{"_index":601,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["repeatedly",{"_index":797,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["replaysubject",{"_index":827,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["replaysubject(1",{"_index":828,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["repo",{"_index":995,"title":{},"body":{"index.html":{}}}],["reset",{"_index":1081,"title":{},"body":{"overview.html":{}}}],["resolve",{"_index":295,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["responsible",{"_index":53,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["restriction",{"_index":1028,"title":{},"body":{"license.html":{}}}],["result",{"_index":96,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":98,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":79,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["returns",{"_index":23,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["rightclicks",{"_index":811,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["rights",{"_index":1031,"title":{},"body":{"license.html":{}}}],["root",{"_index":518,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["rxjs",{"_index":31,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":37,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["s.unsubscribe",{"_index":924,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["sample",{"_index":34,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["screen",{"_index":793,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["script",{"_index":279,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["script.async",{"_index":283,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["script.defer",{"_index":285,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["script.id",{"_index":286,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["script.src",{"_index":288,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["script.type",{"_index":281,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["scriptelem",{"_index":244,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["scriptelem.onerror",{"_index":296,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["scriptonpage",{"_index":276,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["see",{"_index":357,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsMarkerComponent.html":{}}}],["selector",{"_index":545,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["self",{"_index":573,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["sell",{"_index":1038,"title":{},"body":{"license.html":{}}}],["seperated",{"_index":344,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["serve",{"_index":399,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["services/fit",{"_index":576,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["services/managers/info",{"_index":696,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["services/managers/marker",{"_index":843,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["services/maps",{"_index":525,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["set",{"_index":648,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["setoptions",{"_index":136,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setoptions(infowindow",{"_index":167,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setposition",{"_index":137,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setposition(infowindow",{"_index":171,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["sets",{"_index":635,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["setting",{"_index":394,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["setzindex",{"_index":138,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setzindex(infowindow",{"_index":173,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["shall",{"_index":1047,"title":{},"body":{"license.html":{}}}],["sharereplay",{"_index":35,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["sharereplay(1",{"_index":71,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["simplechange",{"_index":842,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["simplechanges",{"_index":565,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["single",{"_index":55,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"components/NgMapsMarkerComponent.html":{}}}],["situations",{"_index":273,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["software",{"_index":1023,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["stackblitz.io",{"_index":274,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["standalone",{"_index":603,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["started",{"_index":990,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":805,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["state",{"_index":636,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["statements",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":512,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["stops",{"_index":802,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["string",{"_index":94,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["strings",{"_index":345,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["styles",{"_index":606,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["subject",{"_index":570,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"license.html":{}}}],["sublicense",{"_index":1036,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":714,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["subscribe((details",{"_index":587,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["subscribe((e",{"_index":901,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["subscription",{"_index":832,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["subscriptions",{"_index":922,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["substantial",{"_index":1048,"title":{},"body":{"license.html":{}}}],["super",{"_index":262,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["sure",{"_index":935,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["switch",{"_index":303,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["switchmap",{"_index":36,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["t",{"_index":155,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["table",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":382,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["takeuntil",{"_index":575,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["takeuntil(this._destroyed",{"_index":586,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["template",{"_index":610,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["text/javascript",{"_index":282,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["textual",{"_index":387,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["this._addeventlisteners",{"_index":866,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._assignscriptloadingpromise(script",{"_index":290,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._assignscriptloadingpromise(scriptonpage",{"_index":278,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._boundschangesampletime$.next(timems",{"_index":91,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._boundschangesampletime$.pipe(switchmap((time",{"_index":66,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._config",{"_index":263,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.apikey",{"_index":320,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.apiversion",{"_index":317,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.channel",{"_index":324,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.clientid",{"_index":322,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.hostandpath",{"_index":311,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.language",{"_index":330,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.libraries",{"_index":326,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.protocol",{"_index":300,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.region",{"_index":328,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._createidentifier(latlng",{"_index":82,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._destroyed$.complete",{"_index":595,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._destroyed$.next",{"_index":594,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._document",{"_index":264,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._document.body.appendchild(script",{"_index":291,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._document.createelement('script",{"_index":280,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._document.getelementbyid(this._script_id",{"_index":277,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._fitboundsaccessor",{"_index":578,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._fitboundsdetails$.asobservable",{"_index":885,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._fitboundsdetails$.next",{"_index":886,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._fitboundsservice.addtobounds(this._latestfitboundsdetails.latlng",{"_index":591,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._fitboundsservice.removefrombounds",{"_index":592,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._generatebounds(includeinbounds",{"_index":70,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._getscriptsrc(this.callbackname",{"_index":289,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._id",{"_index":728,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["this._id.tostring",{"_index":729,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._includeinbounds",{"_index":65,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.next(bounds",{"_index":86,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.value",{"_index":84,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.value.has(id",{"_index":83,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._infowindowaddedtomanager",{"_index":700,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager",{"_index":712,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.addinfowindow(this).then",{"_index":699,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.close(this",{"_index":727,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.deleteinfowindow(this",{"_index":730,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.open(this",{"_index":726,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setoptions(this",{"_index":725,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setposition(this",{"_index":707,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setzindex(this",{"_index":709,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindows.delete(infowindow",{"_index":192,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._infowindows.get(infowindow",{"_index":186,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._infowindows.set(infowindow",{"_index":218,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._latestfitboundsdetails",{"_index":589,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._latestfitboundsdetails.latlng",{"_index":593,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._mapswrapper.createinfowindow(options",{"_index":217,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._mapswrapper.createmarker",{"_index":481,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._mapswrapper.getnativemap",{"_index":200,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._markeraddedtomanger",{"_index":863,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._markermanager.getnativemarker",{"_index":202,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._markers.delete(marker",{"_index":466,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._markers.get(marker",{"_index":464,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._markers.set(marker",{"_index":500,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._observablesubscriptions.foreach((s",{"_index":923,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(cs",{"_index":894,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(d",{"_index":908,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(dragend",{"_index":911,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(ds",{"_index":904,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(mouseout",{"_index":917,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(mouseover",{"_index":914,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(rc",{"_index":898,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._registereventlisteners",{"_index":702,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._script_id",{"_index":287,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._scriptloadingpromise",{"_index":270,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._setinfowindowoptions(changes",{"_index":711,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._updatebounds",{"_index":577,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._updatebounds(details",{"_index":588,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._updatefitboundsdetails",{"_index":865,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._updateopenstate",{"_index":701,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._zone.run",{"_index":190,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["this.bounds",{"_index":63,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this.close",{"_index":718,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.drag.emit(e",{"_index":907,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.dragend.emit(e",{"_index":910,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.dragstart.emit(e",{"_index":903,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.handleinfowindowupdate",{"_index":852,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.changes.subscribe",{"_index":853,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.foreach((infowindow",{"_index":891,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.foreach((marker",{"_index":859,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.length",{"_index":854,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindowclose.emit",{"_index":716,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.isopen",{"_index":715,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.latitude",{"_index":705,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["this.longitude",{"_index":706,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["this.mapfitbounds",{"_index":590,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this.markerclick.emit(this",{"_index":893,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager",{"_index":888,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.addmarker(this).then",{"_index":864,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.deletemarker(this",{"_index":919,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateanimation(this",{"_index":884,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateclickable(this",{"_index":882,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatedraggable(this",{"_index":873,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateicon(this",{"_index":875,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatelabel(this",{"_index":871,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatemarkerposition(this",{"_index":867,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateopacity(this",{"_index":877,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatetitle(this",{"_index":869,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatevisible(this",{"_index":879,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatezindex(this",{"_index":880,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markerrightclick.emit(null",{"_index":897,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.mouseout.emit(e",{"_index":916,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.mouseover.emit(e",{"_index":913,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.open",{"_index":717,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.openinfowindow",{"_index":890,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["throw",{"_index":855,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["tiles",{"_index":401,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["time",{"_index":68,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["timems",{"_index":117,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["timer",{"_index":30,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["timer(0",{"_index":67,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["title",{"_index":494,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["token",{"_index":409,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1070,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":619,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["track",{"_index":364,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["trafficlayer",{"_index":1089,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["transitlayer",{"_index":1090,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tree",{"_index":598,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["true",{"_index":284,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["tslib",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":845,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["type",{"_index":50,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1083,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":214,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["typescript",{"_index":604,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["under",{"_index":366,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["unsubscribe",{"_index":920,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["up",{"_index":795,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["update",{"_index":652,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["updateanimation",{"_index":422,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateanimation(marker",{"_index":443,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateclickable",{"_index":423,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateclickable(marker",{"_index":445,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatedraggable",{"_index":424,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatedraggable(marker",{"_index":447,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateicon",{"_index":425,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateicon(marker",{"_index":449,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatelabel",{"_index":426,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatelabel(marker",{"_index":451,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatemarkerposition",{"_index":427,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatemarkerposition(marker",{"_index":453,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateopacity",{"_index":428,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateopacity(marker",{"_index":455,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatetitle",{"_index":429,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatetitle(marker",{"_index":457,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatevisible",{"_index":430,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatevisible(marker",{"_index":459,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatezindex",{"_index":431,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatezindex(marker",{"_index":460,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["uppercase",{"_index":772,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["url",{"_index":765,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["usage",{"_index":365,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["use",{"_index":393,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"license.html":{}}}],["useclass",{"_index":531,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["used",{"_index":381,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["useexisting",{"_index":741,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["usefull",{"_index":639,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["user",{"_index":799,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["uses",{"_index":383,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["usevalue",{"_index":532,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["using",{"_index":927,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["v",{"_index":316,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["value",{"_index":121,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":658,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["var",{"_index":733,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["variable",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1092,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":359,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"index.html":{}}}],["vertical",{"_index":792,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["via",{"_index":928,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["view",{"_index":607,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["viewchild",{"_index":695,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["viewchild('content",{"_index":688,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["visible",{"_index":491,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["void",{"_index":115,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["w",{"_index":199,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["w.close",{"_index":204,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["w.open(map",{"_index":203,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["warranties",{"_index":1056,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1051,"title":{},"body":{"license.html":{}}}],["whether",{"_index":786,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"license.html":{}}}],["width",{"_index":644,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window",{"_index":127,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"index.html":{}}}],["window'},{'name",{"_index":735,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["window).google",{"_index":933,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["window).google.maps",{"_index":934,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["window.google.maps",{"_index":936,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["window.ts",{"_index":600,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["window.ts:104",{"_index":689,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:109",{"_index":634,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:114",{"_index":667,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:115",{"_index":684,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:116",{"_index":683,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:118",{"_index":679,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:127",{"_index":677,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:147",{"_index":670,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:156",{"_index":673,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:160",{"_index":672,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:174",{"_index":680,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:181",{"_index":674,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:187",{"_index":676,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:192",{"_index":681,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:197",{"_index":678,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:55",{"_index":626,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:58",{"_index":685,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:66",{"_index":638,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:72",{"_index":641,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:78",{"_index":628,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:86",{"_index":653,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:93",{"_index":642,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:98",{"_index":692,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window[this.callbackname",{"_index":294,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["wish",{"_index":389,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["without",{"_index":1027,"title":{},"body":{"license.html":{}}}],["work",{"_index":11,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["wrapper",{"_index":180,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["wrapper.ts",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["x",{"_index":580,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["x.latlng.lat",{"_index":582,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["x.latlng.lng",{"_index":584,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["y",{"_index":581,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["y.latlng.lat",{"_index":583,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["y.latlng.lng",{"_index":585,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["yes",{"_index":520,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{}}}],["zindex",{"_index":210,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["zone.js",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1080,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/FitBoundsAccessor.html":{"url":"classes/FitBoundsAccessor.html","title":"class - FitBoundsAccessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FitBoundsAccessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/services/fit-bounds.ts\n        \n\n            \n                Description\n            \n            \n                Class to implement when you what to be able to make it work with the auto fit bounds feature\nof AGM.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getFitBoundsDetails$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getFitBoundsDetails$\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFitBoundsDetails$()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/fit-bounds.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport { flatMap, map, sample, shareReplay, switchMap } from 'rxjs/operators';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: google.maps.LatLng | google.maps.LatLngLiteral;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      flatMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this._generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  private _generateBounds(\n    includeInBounds: Map,\n  ) {\n    const bounds = new google.maps.LatLngBounds();\n    includeInBounds.forEach((b) => bounds.extend(b));\n    return bounds;\n  }\n\n  addToBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  removeFromBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FitBoundsDetails.html":{"url":"interfaces/FitBoundsDetails.html","title":"interface - FitBoundsDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FitBoundsDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/services/fit-bounds.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        latLng\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latLng\n                                    \n                                \n                                \n                                    \n                                        latLng:     google.maps.LatLng | google.maps.LatLngLiteral\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     google.maps.LatLng | google.maps.LatLngLiteral\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport { flatMap, map, sample, shareReplay, switchMap } from 'rxjs/operators';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: google.maps.LatLng | google.maps.LatLngLiteral;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      flatMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this._generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  private _generateBounds(\n    includeInBounds: Map,\n  ) {\n    const bounds = new google.maps.LatLngBounds();\n    includeInBounds.forEach((b) => bounds.extend(b));\n    return bounds;\n  }\n\n  addToBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  removeFromBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FitBoundsService.html":{"url":"injectables/FitBoundsService.html","title":"injectable - FitBoundsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FitBoundsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/services/fit-bounds.ts\n        \n\n            \n                Description\n            \n            \n                The FitBoundsService is responsible for computing the bounds of the a single map.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                _boundsChangeSampleTime$\n                            \n                            \n                                    Protected\n                                    Readonly\n                                _includeInBounds$\n                            \n                            \n                                    Protected\n                                    Readonly\n                                bounds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _createIdentifier\n                            \n                            \n                                    Private\n                                _generateBounds\n                            \n                            \n                                addToBounds\n                            \n                            \n                                changeFitBoundsChangeSampleTime\n                            \n                            \n                                getBounds$\n                            \n                            \n                                removeFromBounds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/services/fit-bounds.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _createIdentifier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _createIdentifier(latLng: google.maps.LatLng | google.maps.LatLngLiteral)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/fit-bounds.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                            google.maps.LatLng | google.maps.LatLngLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _generateBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _generateBounds(includeInBounds: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/fit-bounds.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    includeInBounds\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addToBounds\n                        \n                        \n                    \n                \n            \n            \n                \naddToBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/fit-bounds.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                            google.maps.LatLng | google.maps.LatLngLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeFitBoundsChangeSampleTime\n                        \n                        \n                    \n                \n            \n            \n                \nchangeFitBoundsChangeSampleTime(timeMs: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/fit-bounds.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeMs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds$\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds$()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/fit-bounds.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeFromBounds\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFromBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/fit-bounds.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                            google.maps.LatLng | google.maps.LatLngLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            _boundsChangeSampleTime$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(\n    200,\n  )\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/services/fit-bounds.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            _includeInBounds$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(\n    new Map(),\n  )\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/services/fit-bounds.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            bounds$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/services/fit-bounds.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport { flatMap, map, sample, shareReplay, switchMap } from 'rxjs/operators';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: google.maps.LatLng | google.maps.LatLngLiteral;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      flatMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this._generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  private _generateBounds(\n    includeInBounds: Map,\n  ) {\n    const bounds = new google.maps.LatLngBounds();\n    includeInBounds.forEach((b) => bounds.extend(b));\n    return bounds;\n  }\n\n  addToBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  removeFromBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InfoWindowManager.html":{"url":"injectables/InfoWindowManager.html","title":"injectable - InfoWindowManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InfoWindowManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/services/managers/info-window-manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _infoWindows\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addInfoWindow\n                            \n                            \n                                close\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                    Async\n                                deleteInfoWindow\n                            \n                            \n                                    Async\n                                open\n                            \n                            \n                                setOptions\n                            \n                            \n                                setPosition\n                            \n                            \n                                setZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: GoogleMapsAPIWrapper, _zone: NgZone, _markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/services/managers/info-window-manager.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        GoogleMapsAPIWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _markerManager\n                                                  \n                                                        \n                                                                        MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addInfoWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/info-window-manager.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/info-window-manager.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/info-window-manager.ts:100\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Creates a Google Maps event listener for the given InfoWindow as an Observable\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteInfoWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/info-window-manager.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            open\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    open(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/info-window-manager.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(infoWindow: NgMapsInfoWindowComponent, options: google.maps.InfoWindowOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/info-window-manager.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.InfoWindowOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/info-window-manager.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setZIndex\n                        \n                        \n                    \n                \n            \n            \n                \nsetZIndex(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/info-window-manager.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _infoWindows\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/services/managers/info-window-manager.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable, Observer } from 'rxjs';\nimport { Injectable, NgZone } from '@angular/core';\n\nimport { NgMapsInfoWindowComponent } from '../../directives/info-window';\nimport { NgMapsViewComponent } from '../../directives/map';\n\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport { MarkerManager } from './marker-manager';\n\n@Injectable({\n  providedIn: NgMapsViewComponent,\n})\nexport class InfoWindowManager {\n  private _infoWindows: Map = new Map();\n\n  constructor(\n    private _mapsWrapper: GoogleMapsAPIWrapper,\n    private _zone: NgZone,\n    private _markerManager: MarkerManager,\n  ) {}\n\n  async deleteInfoWindow(infoWindow: NgMapsInfoWindowComponent): Promise {\n    const iWindow = await this._infoWindows.get(infoWindow);\n    if (iWindow == null) {\n      // info window already deleted\n      return;\n    } else {\n      return this._zone.run(() => {\n        iWindow.close();\n        this._infoWindows.delete(infoWindow);\n      });\n    }\n  }\n\n  setPosition(infoWindow: NgMapsInfoWindowComponent): void {\n    const i = this._infoWindows.get(infoWindow);\n    i.setPosition({\n      lat: infoWindow.latitude,\n      lng: infoWindow.longitude,\n    });\n  }\n\n  setZIndex(infoWindow: NgMapsInfoWindowComponent): void {\n    const i = this._infoWindows.get(infoWindow);\n    i.setZIndex(infoWindow.zIndex);\n  }\n\n  async open(infoWindow: NgMapsInfoWindowComponent): Promise {\n    const w = this._infoWindows.get(infoWindow);\n    const map = await this._mapsWrapper.getNativeMap();\n    if (infoWindow.hostMarker != null) {\n      const marker = await this._markerManager.getNativeMarker(\n        infoWindow.hostMarker,\n      );\n      w.open(map, marker);\n    } else {\n      w.open(map);\n    }\n  }\n\n  close(infoWindow: NgMapsInfoWindowComponent): void {\n    const w = this._infoWindows.get(infoWindow);\n    w.close();\n  }\n\n  setOptions(\n    infoWindow: NgMapsInfoWindowComponent,\n    options: google.maps.InfoWindowOptions,\n  ) {\n    const i = this._infoWindows.get(infoWindow);\n    i.setOptions(options);\n  }\n\n  async addInfoWindow(infoWindow: NgMapsInfoWindowComponent) {\n    const options: google.maps.InfoWindowOptions = {\n      content: infoWindow.content.nativeElement,\n      maxWidth: infoWindow.maxWidth,\n      zIndex: infoWindow.zIndex,\n      disableAutoPan: infoWindow.disableAutoPan,\n    };\n    if (\n      typeof infoWindow.latitude === 'number' &&\n      typeof infoWindow.longitude === 'number'\n    ) {\n      options.position = {\n        lat: infoWindow.latitude,\n        lng: infoWindow.longitude,\n      };\n    }\n    const instance = await this._mapsWrapper.createInfoWindow(options);\n    this._infoWindows.set(infoWindow, instance);\n  }\n\n  /**\n   * Creates a Google Maps event listener for the given InfoWindow as an Observable\n   */\n  createEventObservable(\n    eventName: string,\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Observable {\n    const i = this._infoWindows.get(infoWindow);\n    return new Observable((observer: Observer) => {\n      i.addListener(eventName, (e: T) =>\n        this._zone.run(() => observer.next(e)),\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LazyMapsAPILoader.html":{"url":"injectables/LazyMapsAPILoader.html","title":"injectable - LazyMapsAPILoader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LazyMapsAPILoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/services/maps-api-loader/lazy-maps-api-loader.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MapsAPILoader\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                    Protected\n                                _document\n                            \n                            \n                                    Protected\n                                    Readonly\n                                _SCRIPT_ID\n                            \n                            \n                                    Protected\n                                _scriptLoadingPromise\n                            \n                            \n                                    Protected\n                                    Readonly\n                                callbackName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _assignScriptLoadingPromise\n                            \n                            \n                                    Protected\n                                _getScriptSrc\n                            \n                            \n                                load\n                            \n                            \n                                    Abstract\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: LazyMapsAPILoaderConfigLiteral, document: any)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        LazyMapsAPILoaderConfigLiteral\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _assignScriptLoadingPromise\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _assignScriptLoadingPromise(scriptElem: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scriptElem\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _getScriptSrc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getScriptSrc(callbackName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    callbackName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Inherited from         MapsAPILoader\n\n                \n            \n            \n                \n                        Defined in         MapsAPILoader:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LazyMapsAPILoaderConfigLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Document\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            _SCRIPT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'GoogleMapsApiScript'\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _scriptLoadingPromise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            callbackName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : `LazyMapsAPILoader`\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GoogleMapsScriptProtocol,\n  LAZY_MAPS_API_CONFIG,\n  LazyMapsAPILoaderConfigLiteral,\n} from './lazy-maps-api-loader-config';\n\nimport { MapsAPILoader } from './maps-api-loader';\n\n@Injectable()\nexport class LazyMapsAPILoader extends MapsAPILoader {\n  protected _scriptLoadingPromise: Promise;\n  protected _config: LazyMapsAPILoaderConfigLiteral;\n  protected _document: Document;\n  protected readonly _SCRIPT_ID: string = 'GoogleMapsApiScript';\n  protected readonly callbackName: string = `LazyMapsAPILoader`;\n\n  constructor(\n    @Optional()\n    @Inject(LAZY_MAPS_API_CONFIG)\n    config: LazyMapsAPILoaderConfigLiteral = null,\n    @Inject(DOCUMENT) document: any,\n  ) {\n    super();\n    this._config = config || {};\n    this._document = document as Document;\n  }\n\n  load(): Promise {\n    if ((window as any).google && (window as any).google.maps) {\n      // Google maps already loaded on the page.\n      return Promise.resolve();\n    }\n\n    if (this._scriptLoadingPromise) {\n      return this._scriptLoadingPromise;\n    }\n\n    // this can happen in HMR situations or Stackblitz.io editors.\n    const scriptOnPage = this._document.getElementById(this._SCRIPT_ID);\n    if (scriptOnPage) {\n      this._assignScriptLoadingPromise(scriptOnPage);\n      return this._scriptLoadingPromise;\n    }\n\n    const script = this._document.createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.id = this._SCRIPT_ID;\n    script.src = this._getScriptSrc(this.callbackName);\n    this._assignScriptLoadingPromise(script);\n    this._document.body.appendChild(script);\n    return this._scriptLoadingPromise;\n  }\n\n  private _assignScriptLoadingPromise(scriptElem: HTMLElement) {\n    this._scriptLoadingPromise = new Promise((resolve, reject) => {\n      window[this.callbackName] = () => {\n        resolve();\n      };\n\n      scriptElem.onerror = (error: Event) => {\n        reject(error);\n      };\n    });\n  }\n\n  protected _getScriptSrc(callbackName: string): string {\n    const protocolType: GoogleMapsScriptProtocol =\n      (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n    let protocol: string;\n\n    switch (protocolType) {\n      case GoogleMapsScriptProtocol.AUTO:\n        protocol = '';\n        break;\n      case GoogleMapsScriptProtocol.HTTP:\n        protocol = 'http:';\n        break;\n      case GoogleMapsScriptProtocol.HTTPS:\n        protocol = 'https:';\n        break;\n    }\n\n    const hostAndPath: string =\n      this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n    const queryParams: { [key: string]: string | Array } = {\n      v: this._config.apiVersion || 'quarterly',\n      callback: callbackName,\n      key: this._config.apiKey,\n      client: this._config.clientId,\n      channel: this._config.channel,\n      libraries: this._config.libraries,\n      region: this._config.region,\n      language: this._config.language,\n    };\n    const params: string = Object.keys(queryParams)\n      .filter((k: string) => queryParams[k] != null)\n      .filter((k: string) => {\n        // remove empty arrays\n        return (\n          !Array.isArray(queryParams[k]) ||\n          (Array.isArray(queryParams[k]) && queryParams[k].length > 0)\n        );\n      })\n      .map((k: string) => {\n        // join arrays as comma seperated strings\n        const i = queryParams[k];\n        if (Array.isArray(i)) {\n          return { key: k, value: i.join(',') };\n        }\n        return { key: k, value: queryParams[k] };\n      })\n      .map((entry: { key: string; value: string }) => {\n        return `${entry.key}=${entry.value}`;\n      })\n      .join('&');\n    return `${protocol}//${hostAndPath}?${params}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{"url":"interfaces/LazyMapsAPILoaderConfigLiteral.html","title":"interface - LazyMapsAPILoaderConfigLiteral","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LazyMapsAPILoaderConfigLiteral\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/services/maps-api-loader/lazy-maps-api-loader-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the LazyMapsAPILoader.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        apiKey\n                                \n                                \n                                            Optional\n                                        apiVersion\n                                \n                                \n                                            Optional\n                                        channel\n                                \n                                \n                                            Optional\n                                        clientId\n                                \n                                \n                                            Optional\n                                        hostAndPath\n                                \n                                \n                                            Optional\n                                        language\n                                \n                                \n                                            Optional\n                                        libraries\n                                \n                                \n                                            Optional\n                                        protocol\n                                \n                                \n                                            Optional\n                                        region\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps API Key (see:\nhttps://developers.google.com/maps/documentation/javascript/get-api-key)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiVersion\n                                    \n                                \n                                \n                                    \n                                        apiVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Google Maps API version.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channel\n                                    \n                                \n                                \n                                    \n                                        channel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps channel name (for premium plans).\nA channel parameter is an optional parameter that allows you to track usage under your client\nID by assigning a distinct channel to each of your applications.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps client ID (for premium plans).\nWhen you have a Google Maps APIs Premium Plan license, you must authenticate\nyour application with either an API key or a client ID.\nThe Google Maps API will fail to load if both a client ID and an API key are included.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hostAndPath\n                                    \n                                \n                                \n                                    \n                                        hostAndPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Host and Path used for the  tag.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps API uses the browser's preferred language when displaying\ntextual information. If you wish to overwrite this behavior and force the API\nto use a given language, you can use this setting.\nSee https://developers.google.com/maps/documentation/javascript/basics#Language\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        libraries\n                                    \n                                \n                                \n                                    \n                                        libraries:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines which Google Maps libraries should get loaded.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        protocol\n                                    \n                                \n                                \n                                    \n                                        protocol:         GoogleMapsScriptProtocol\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GoogleMapsScriptProtocol\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Protocol used for the  tag.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                    \n                                \n                                \n                                    \n                                        region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The default bias for the map behavior is US.\nIf you wish to alter your application to serve different map tiles or bias the\napplication, you can overwrite the default behavior (US) by defining a region.\nSee https://developers.google.com/maps/documentation/javascript/basics#Region\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nexport enum GoogleMapsScriptProtocol {\n  HTTP = 1,\n  HTTPS = 2,\n  AUTO = 3,\n}\n\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link LazyMapsAPILoaderConfig}.\n */\nexport const LAZY_MAPS_API_CONFIG = new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\n\n/**\n * Configuration for the {@link LazyMapsAPILoader}.\n */\nexport interface LazyMapsAPILoaderConfigLiteral {\n  /**\n   * The Google Maps API Key (see:\n   * https://developers.google.com/maps/documentation/javascript/get-api-key)\n   */\n  apiKey?: string;\n\n  /**\n   * The Google Maps client ID (for premium plans).\n   * When you have a Google Maps APIs Premium Plan license, you must authenticate\n   * your application with either an API key or a client ID.\n   * The Google Maps API will fail to load if both a client ID and an API key are included.\n   */\n  clientId?: string;\n\n  /**\n   * The Google Maps channel name (for premium plans).\n   * A channel parameter is an optional parameter that allows you to track usage under your client\n   * ID by assigning a distinct channel to each of your applications.\n   */\n  channel?: string;\n\n  /**\n   * Google Maps API version.\n   */\n  apiVersion?: string;\n\n  /**\n   * Host and Path used for the `` tag.\n   */\n  hostAndPath?: string;\n\n  /**\n   * Protocol used for the `` tag.\n   */\n  protocol?: GoogleMapsScriptProtocol;\n\n  /**\n   * Defines which Google Maps libraries should get loaded.\n   */\n  libraries?: string[];\n\n  /**\n   * The default bias for the map behavior is US.\n   * If you wish to alter your application to serve different map tiles or bias the\n   * application, you can overwrite the default behavior (US) by defining a `region`.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Region\n   */\n  region?: string;\n\n  /**\n   * The Google Maps API uses the browser's preferred language when displaying\n   * textual information. If you wish to overwrite this behavior and force the API\n   * to use a given language, you can use this setting.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Language\n   */\n  language?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapsAPILoader.html":{"url":"injectables/MapsAPILoader.html","title":"injectable - MapsAPILoader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapsAPILoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/services/maps-api-loader/maps-api-loader.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/maps-api-loader/maps-api-loader.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport abstract class MapsAPILoader {\n  abstract load(): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarkerManager.html":{"url":"injectables/MarkerManager.html","title":"injectable - MarkerManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MarkerManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/services/managers/marker-manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMarker\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                deleteMarker\n                            \n                            \n                                getNativeMarker\n                            \n                            \n                                updateAnimation\n                            \n                            \n                                updateClickable\n                            \n                            \n                                updateDraggable\n                            \n                            \n                                updateIcon\n                            \n                            \n                                updateLabel\n                            \n                            \n                                updateMarkerPosition\n                            \n                            \n                                updateOpacity\n                            \n                            \n                                updateTitle\n                            \n                            \n                                updateVisible\n                            \n                            \n                                updateZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: GoogleMapsAPIWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/services/managers/marker-manager.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        GoogleMapsAPIWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addMarker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/marker-manager.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: google.maps.MarkerChangeOptionEventNames | google.maps.MarkerMouseEventNames, marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/marker-manager.ts:111\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                            google.maps.MarkerChangeOptionEventNames | google.maps.MarkerMouseEventNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteMarker\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/marker-manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNativeMarker\n                        \n                        \n                    \n                \n            \n            \n                \ngetNativeMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/marker-manager.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     google.maps.Marker\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAnimation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAnimation(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/marker-manager.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateClickable\n                        \n                        \n                    \n                \n            \n            \n                \nupdateClickable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/marker-manager.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateDraggable\n                        \n                        \n                    \n                \n            \n            \n                \nupdateDraggable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/marker-manager.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateIcon\n                        \n                        \n                    \n                \n            \n            \n                \nupdateIcon(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/marker-manager.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLabel\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLabel(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/marker-manager.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateMarkerPosition\n                        \n                        \n                    \n                \n            \n            \n                \nupdateMarkerPosition(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/marker-manager.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOpacity\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOpacity(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/marker-manager.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTitle\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTitle(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/marker-manager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateVisible\n                        \n                        \n                    \n                \n            \n            \n                \nupdateVisible(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/marker-manager.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateZIndex\n                        \n                        \n                    \n                \n            \n            \n                \nupdateZIndex(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/managers/marker-manager.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _markers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/services/managers/marker-manager.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { NgMapsViewComponent } from '../../directives/map';\n\nimport { NgMapsMarkerComponent } from '../../directives/marker';\n\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\n\n@Injectable()\nexport class MarkerManager {\n  protected _markers: Map = new Map();\n\n  constructor(\n    protected _mapsWrapper: GoogleMapsAPIWrapper,\n    protected _zone: NgZone,\n  ) {}\n\n  deleteMarker(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    if (m == null) {\n      // marker already deleted\n      return;\n    } else {\n      return this._zone.run(() => {\n        m.setMap(null);\n        this._markers.delete(marker);\n      });\n    }\n  }\n\n  updateMarkerPosition(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setPosition({ lat: marker.latitude, lng: marker.longitude });\n  }\n\n  updateTitle(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setTitle(marker.title);\n  }\n\n  updateLabel(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setLabel(marker.label);\n  }\n\n  updateDraggable(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setDraggable(marker.draggable);\n  }\n\n  updateIcon(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setIcon(marker.iconUrl);\n  }\n\n  updateOpacity(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setOpacity(marker.opacity);\n  }\n\n  updateVisible(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setVisible(marker.visible);\n  }\n\n  updateZIndex(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setZIndex(marker.zIndex);\n  }\n\n  updateClickable(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setClickable(marker.clickable);\n  }\n\n  updateAnimation(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    if (typeof marker.animation === 'string') {\n      m.setAnimation(google.maps.Animation[marker.animation]);\n    } else {\n      m.setAnimation(marker.animation);\n    }\n  }\n\n  async addMarker(marker: NgMapsMarkerComponent): Promise {\n    const m = await this._mapsWrapper.createMarker({\n      position: { lat: marker.latitude, lng: marker.longitude },\n      label: marker.label,\n      draggable: marker.draggable,\n      icon: marker.iconUrl,\n      opacity: marker.opacity,\n      visible: marker.visible,\n      zIndex: marker.zIndex,\n      title: marker.title,\n      clickable: marker.clickable,\n      animation:\n        typeof marker.animation === 'string'\n          ? google.maps.Animation[marker.animation]\n          : marker.animation,\n    });\n    this._markers.set(marker, m);\n  }\n\n  getNativeMarker(marker: NgMapsMarkerComponent): google.maps.Marker {\n    return this._markers.get(marker);\n  }\n\n  createEventObservable(\n    eventName:\n      | google.maps.MarkerChangeOptionEventNames\n      | google.maps.MarkerMouseEventNames,\n    marker: NgMapsMarkerComponent,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      const m = this._markers.get(marker);\n      m.addListener(eventName, (e: T) =>\n        this._zone.run(() => observer.next(e)),\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgMapsCoreModule.html":{"url":"modules/NgMapsCoreModule.html","title":"module - NgMapsCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    NgMapsCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/core/src/lib/core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The angular-google-maps core module. Contains all Directives/Services/Pipes\nof the core module. Please use NgMapsCoreModule.forRoot() in your app module.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(lazyMapsAPILoaderConfig?: LazyMapsAPILoaderConfigLiteral)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/core.module.ts:37\n                \n            \n\n\n            \n                \n                    Please use this method when you register the module at the root level.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lazyMapsAPILoaderConfig\n                                    \n                                                LazyMapsAPILoaderConfigLiteral\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NgMapsFitBounds } from './directives/fit-bounds';\nimport { NgMapsInfoWindowComponent } from './directives/info-window';\nimport { NgMapsViewComponent } from './directives/map';\nimport { NgMapsMarkerComponent } from './directives/marker';\nimport { LazyMapsAPILoader } from './services/maps-api-loader/lazy-maps-api-loader';\nimport {\n  LAZY_MAPS_API_CONFIG,\n  LazyMapsAPILoaderConfigLiteral,\n} from './services/maps-api-loader/lazy-maps-api-loader-config';\nimport { MapsAPILoader } from './services/maps-api-loader/maps-api-loader';\n\n/**\n * @internal\n */\nexport function coreDirectives() {\n  return [\n    NgMapsViewComponent,\n    NgMapsMarkerComponent,\n    NgMapsInfoWindowComponent,\n    NgMapsFitBounds,\n  ];\n}\n\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `NgMapsCoreModule.forRoot()` in your app module.\n */\n@NgModule({\n  declarations: coreDirectives(),\n  exports: coreDirectives(),\n})\nexport class NgMapsCoreModule {\n  /**\n   * Please use this method when you register the module at the root level.\n   */\n  static forRoot(\n    lazyMapsAPILoaderConfig?: LazyMapsAPILoaderConfigLiteral,\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgMapsCoreModule,\n      providers: [\n        { provide: MapsAPILoader, useClass: LazyMapsAPILoader },\n        { provide: LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsFitBounds.html":{"url":"directives/NgMapsFitBounds.html","title":"directive - NgMapsFitBounds","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsFitBounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/directives/fit-bounds.ts\n        \n\n            \n                Description\n            \n            \n                Adds the given directive to the auto fit bounds feature when the value is true.\nTo make it work with you custom AGM component, you also have to implement the FitBoundsAccessor abstract class.\n\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n                            OnChanges\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mapFitBounds]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _destroyed$\n                            \n                            \n                                    Private\n                                _latestFitBoundsDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _updateBounds\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapFitBounds\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_fitBoundsAccessor: FitBoundsAccessor, _fitBoundsService: FitBoundsService)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/directives/fit-bounds.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fitBoundsAccessor\n                                                  \n                                                        \n                                                                        FitBoundsAccessor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fitBoundsService\n                                                  \n                                                        \n                                                                        FitBoundsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapFitBounds\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/fit-bounds.ts:32\n                            \n                        \n                \n                    \n                        If the value is true, the element gets added to the bounds of the map.\nDefault: true.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _updateBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateBounds(newFitBoundsDetails?: FitBoundsDetails)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/fit-bounds.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newFitBoundsDetails\n                                    \n                                                FitBoundsDetails\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/fit-bounds.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/fit-bounds.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/fit-bounds.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _destroyed$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/fit-bounds.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _latestFitBoundsDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FitBoundsDetails | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/fit-bounds.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Self,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport {\n  FitBoundsAccessor,\n  FitBoundsDetails,\n  FitBoundsService,\n} from '../services/fit-bounds';\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * \n */\n@Directive({\n  selector: '[mapFitBounds]',\n})\nexport class NgMapsFitBounds implements OnInit, OnDestroy, OnChanges {\n  /**\n   * If the value is true, the element gets added to the bounds of the map.\n   * Default: true.\n   */\n  @Input() mapFitBounds: boolean = true;\n\n  private _destroyed$: Subject = new Subject();\n  private _latestFitBoundsDetails: FitBoundsDetails | null = null;\n\n  constructor(\n    @Self() private readonly _fitBoundsAccessor: FitBoundsAccessor,\n    private readonly _fitBoundsService: FitBoundsService,\n  ) {}\n\n  /**\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    this._updateBounds();\n  }\n\n  /**\n   * @internal\n   */\n  ngOnInit() {\n    this._fitBoundsAccessor\n      .getFitBoundsDetails$()\n      .pipe(\n        distinctUntilChanged(\n          (x: FitBoundsDetails, y: FitBoundsDetails) =>\n            x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng,\n        ),\n        takeUntil(this._destroyed$),\n      )\n      .subscribe((details) => this._updateBounds(details));\n  }\n\n  private _updateBounds(newFitBoundsDetails?: FitBoundsDetails) {\n    if (newFitBoundsDetails) {\n      this._latestFitBoundsDetails = newFitBoundsDetails;\n    }\n    if (this._latestFitBoundsDetails) {\n      if (this.mapFitBounds) {\n        this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n      } else {\n        this._fitBoundsService.removeFromBounds(\n          this._latestFitBoundsDetails.latLng,\n        );\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy() {\n    this._destroyed$.next();\n    this._destroyed$.complete();\n    if (this._latestFitBoundsDetails !== null) {\n      this._fitBoundsService.removeFromBounds(\n        this._latestFitBoundsDetails.latLng,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgMapsInfoWindowComponent.html":{"url":"components/NgMapsInfoWindowComponent.html","title":"component - NgMapsInfoWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgMapsInfoWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/core/src/lib/directives/info-window.ts\n\n\n    \n        Description\n    \n    \n        NgMapsInfoWindowComponent renders a info window inside a NgMapsMarkerComponent or standalone.\nExample\n```typescript\n\nimport { Component } from '@angular/core';\n\n@Component({\nselector: 'my-map-cmp',\nstyles: [map-view {\n  height: 300px;\n}],\ntemplate: `\n\n  \n  Hi, this is the content of the info window\n  \n\n`\n})\n```\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                InfoWindowManager\n                \n            \n\n\n            \n                selector\n                agm-info-window, map-info-window\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _infoWindowAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _infoWindowOptionsInputs\n                            \n                            \n                                content\n                            \n                            \n                                hostMarker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerEventListeners\n                            \n                            \n                                    Private\n                                _setInfoWindowOptions\n                            \n                            \n                                    Private\n                                _updateOpenState\n                            \n                            \n                                    Async\n                                close\n                            \n                            \n                                id\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableAutoPan\n                            \n                            \n                                isOpen\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                maxWidth\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                infoWindowClose\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_infoWindowManager: InfoWindowManager)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/directives/info-window.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _infoWindowManager\n                                                  \n                                                        \n                                                                        InfoWindowManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableAutoPan\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/info-window.ts:78\n                            \n                        \n                \n                    \n                        Disable auto-pan on open. By default, the info window will pan the map so that it is fully\nvisible when it opens.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/info-window.ts:109\n                            \n                        \n                \n                    \n                        Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/info-window.ts:66\n                            \n                        \n                \n                    \n                        The latitude position of the info window (only usefull if you use it ouside of a NgMapsMarkerComponent).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/info-window.ts:72\n                            \n                        \n                \n                    \n                        The longitude position of the info window (only usefull if you use it ouside of a NgMapsMarkerComponent).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxWidth\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/info-window.ts:93\n                            \n                        \n                \n                    \n                        Maximum width of the infowindow, regardless of content's width. This value is only considered\nif it is set before a call to open. To change the maximum width when changing content, call\nclose, update maxWidth, and then open.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/info-window.ts:86\n                            \n                        \n                \n                    \n                        All InfoWindows are displayed on the map in order of their zIndex, with higher values\ndisplaying in front of InfoWindows with lower values. By default, InfoWindows are displayed\naccording to their latitude, with InfoWindows of lower latitudes appearing in front of\nInfoWindows at higher latitudes. InfoWindows are always displayed in front of markers.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        infoWindowClose\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/info-window.ts:114\n                            \n                        \n                \n                    \n                        Emits an event when the info window is closed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _registerEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _registerEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/info-window.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _setInfoWindowOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _setInfoWindowOptions(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/info-window.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _updateOpenState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateOpenState()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/info-window.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/info-window.ts:181\n                \n            \n\n\n            \n                \n                    Closes the info window.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            id\n                        \n                        \n                    \n                \n            \n            \n                \nid()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/info-window.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/info-window.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/info-window.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/info-window.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/info-window.ts:174\n                \n            \n\n\n            \n                \n                    Opens the info window.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/info-window.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : (infoWindowId++).toString()\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/info-window.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _infoWindowAddedToManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/info-window.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _infoWindowOptionsInputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'disableAutoPan',\n    'maxWidth',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/info-window.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('content', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/info-window.ts:104\n                            \n                        \n\n                \n                    \n                        Holds the native element that is used for the info window content.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hostMarker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgMapsMarkerComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/info-window.ts:98\n                            \n                        \n\n                \n                    \n                        Holds the marker that is the host of the info window (if available)\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\n\nimport { InfoWindowManager } from '../services/managers/info-window-manager';\n\nimport { NgMapsMarkerComponent } from './marker';\n\nlet infoWindowId = 0;\n\n/**\n * NgMapsInfoWindowComponent renders a info window inside a {@link NgMapsMarkerComponent} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    map-view {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    \n *      \n *        \n *          Hi, this is the content of the info window\n *        \n *      \n *    \n *  `\n * })\n * ```\n */\n@Component({\n  selector: 'agm-info-window, map-info-window',\n  template: `\n    \n      \n    \n  `,\n  providers: [InfoWindowManager],\n})\nexport class NgMapsInfoWindowComponent implements OnDestroy, OnChanges, OnInit {\n  constructor(private _infoWindowManager: InfoWindowManager) {}\n\n  private static _infoWindowOptionsInputs: string[] = [\n    'disableAutoPan',\n    'maxWidth',\n  ];\n  /**\n   * The latitude position of the info window (only usefull if you use it ouside of a {@link\n   * NgMapsMarkerComponent}).\n   */\n  @Input() latitude: number;\n\n  /**\n   * The longitude position of the info window (only usefull if you use it ouside of a {@link\n   * NgMapsMarkerComponent}).\n   */\n  @Input() longitude: number;\n\n  /**\n   * Disable auto-pan on open. By default, the info window will pan the map so that it is fully\n   * visible when it opens.\n   */\n  @Input() disableAutoPan: boolean;\n\n  /**\n   * All InfoWindows are displayed on the map in order of their zIndex, with higher values\n   * displaying in front of InfoWindows with lower values. By default, InfoWindows are displayed\n   * according to their latitude, with InfoWindows of lower latitudes appearing in front of\n   * InfoWindows at higher latitudes. InfoWindows are always displayed in front of markers.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * Maximum width of the infowindow, regardless of content's width. This value is only considered\n   * if it is set before a call to open. To change the maximum width when changing content, call\n   * close, update maxWidth, and then open.\n   */\n  @Input() maxWidth: number;\n\n  /**\n   * Holds the marker that is the host of the info window (if available)\n   */\n  hostMarker: NgMapsMarkerComponent;\n\n  /**\n   * Holds the native element that is used for the info window content.\n   */\n  @ViewChild('content', { static: true })\n  content: ElementRef;\n\n  /**\n   * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n   */\n  @Input() isOpen: boolean = false;\n\n  /**\n   * Emits an event when the info window is closed.\n   */\n  @Output() infoWindowClose: EventEmitter = new EventEmitter();\n  private _infoWindowAddedToManager: boolean = false;\n  private _id: string = (infoWindowId++).toString();\n\n  ngOnInit() {\n    this._infoWindowManager.addInfoWindow(this).then(() => {\n      this._infoWindowAddedToManager = true;\n      this._updateOpenState();\n      this._registerEventListeners();\n    });\n  }\n\n  /** @internal */\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this._infoWindowAddedToManager) {\n      return;\n    }\n    if (\n      (changes.latitude || changes.longitude) &&\n      typeof this.latitude === 'number' &&\n      typeof this.longitude === 'number'\n    ) {\n      this._infoWindowManager.setPosition(this);\n    }\n    if (changes.zIndex) {\n      this._infoWindowManager.setZIndex(this);\n    }\n    if (changes.isOpen) {\n      this._updateOpenState();\n    }\n    this._setInfoWindowOptions(changes);\n  }\n\n  private _registerEventListeners() {\n    this._infoWindowManager\n      .createEventObservable('closeclick', this)\n      .subscribe(() => {\n        this.isOpen = false;\n        this.infoWindowClose.emit();\n      });\n  }\n\n  private _updateOpenState() {\n    this.isOpen ? this.open() : this.close();\n  }\n\n  private _setInfoWindowOptions(changes: SimpleChanges) {\n    const options: SimpleChanges = {};\n    const optionKeys = Object.keys(changes).filter((k) =>\n      NgMapsInfoWindowComponent._infoWindowOptionsInputs.includes(k),\n    );\n    optionKeys.forEach((k) => {\n      options[k] = changes[k].currentValue;\n    });\n    this._infoWindowManager.setOptions(this, options);\n  }\n\n  /**\n   * Opens the info window.\n   */\n  open(): Promise {\n    return this._infoWindowManager.open(this);\n  }\n\n  /**\n   * Closes the info window.\n   */\n  async close(): Promise {\n    await this._infoWindowManager.close(this);\n    return this.infoWindowClose.emit();\n  }\n\n  /** @internal */\n  id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  toString(): string {\n    return `NgMapsInfoWindowComponent-${this._id.toString()}`;\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._infoWindowManager.deleteInfoWindow(this);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'NgMapsInfoWindowComponent', 'selector': 'agm-info-window, map-info-window'},{'name': 'NgMapsMarkerComponent', 'selector': 'agm-marker, map-marker'},{'name': 'NgMapsViewComponent', 'selector': 'agm-map, map-view'}];\n    var DIRECTIVES = [{'name': 'NgMapsFitBounds', 'selector': '[mapFitBounds]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgMapsInfoWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgMapsMarkerComponent.html":{"url":"components/NgMapsMarkerComponent.html","title":"component - NgMapsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgMapsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/core/src/lib/directives/marker.ts\n\n\n    \n        Description\n    \n    \n        NgMapsMarkerComponent renders a map marker inside a NgMapsViewComponent.\nExample\n```typescript\n\nimport { Component } from '@angular/core';\n\n@Component({\nselector: 'my-map-cmp',\nstyles: [.agm-map-container {\n  height: 300px;\n}],\ntemplate: `\n\n    \n\n`\n})\n```\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n                    AfterContentInit\n                    FitBoundsAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: FitBoundsAccessor, useExisting: forwardRef(() => NgMapsMarkerComponent),\n}\n                \n            \n\n\n            \n                selector\n                agm-marker, map-marker\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                _fitBoundsDetails$\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _markerAddedToManger\n                            \n                            \n                                    Private\n                                _observableSubscriptions\n                            \n                            \n                                animation\n                            \n                            \n                                infoWindow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addEventListeners\n                            \n                            \n                                    Protected\n                                _updateFitBoundsDetails\n                            \n                            \n                                getFitBoundsDetails$\n                            \n                            \n                                    Private\n                                handleInfoWindowUpdate\n                            \n                            \n                                id\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iconUrl\n                            \n                            \n                                label\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                markerClickable\n                            \n                            \n                                markerDraggable\n                            \n                            \n                                opacity\n                            \n                            \n                                openInfoWindow\n                            \n                            \n                                title\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                drag\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragStart\n                            \n                            \n                                markerClick\n                            \n                            \n                                markerRightClick\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/directives/marker.ts:205\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        markerManager\n                                                  \n                                                        \n                                                                        MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iconUrl\n                    \n                \n                \n                    \n                        Type :     string | google.maps.Icon\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:108\n                            \n                        \n                \n                    \n                        Icon (the URL of the image) for the foreground.\nCan also be a MarkerIcon (google.maps.Icon in Google Maps Javascript api)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     string | google.maps.MarkerLabel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:95\n                            \n                        \n                \n                    \n                        The label (a single uppercase character) for the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:80\n                            \n                        \n                \n                    \n                        The latitude position of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:85\n                            \n                        \n                \n                    \n                        The longitude position of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerClickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:137\n                            \n                        \n                \n                    \n                        If true, the marker can be clicked. Default value is true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:101\n                            \n                        \n                \n                    \n                        If true, the marker can be dragged. Default value is false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:123\n                            \n                        \n                \n                    \n                        The marker's opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        openInfoWindow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:118\n                            \n                        \n                \n                    \n                        Whether to automatically open the child info window when the marker is clicked.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:90\n                            \n                        \n                \n                    \n                        The title of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:113\n                            \n                        \n                \n                    \n                        If true, the marker is visible\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:131\n                            \n                        \n                \n                    \n                        All markers are displayed on the map in order of their zIndex, with higher values displaying in\nfront of markers with lower values. By default, markers are displayed according to their\nvertical position on screen, with lower markers appearing in front of markers further up the\nscreen.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        drag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:167\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:174\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:160\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:148\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerRightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:155\n                            \n                        \n                \n                    \n                        This event is fired when the user rightclicks on the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:188\n                            \n                        \n                \n                    \n                        This event is fired when the user mouses outside the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:181\n                            \n                        \n                \n                    \n                        This event is fired when the user mouses over the marker.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _addEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/marker.ts:298\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _updateFitBoundsDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateFitBoundsDetails()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/marker.ts:292\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFitBoundsDetails$\n                        \n                        \n                    \n                \n            \n            \n                \ngetFitBoundsDetails$()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/marker.ts:288\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleInfoWindowUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleInfoWindowUpdate()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/marker.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            id\n                        \n                        \n                    \n                \n            \n            \n                \nid()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/marker.ts:353\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/marker.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/marker.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/marker.ts:363\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/directives/marker.ts:358\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            _fitBoundsDetails$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:203\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:200\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _markerAddedToManger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:199\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _observableSubscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:201\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"BOUNCE\" | \"DROP\" | null\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:143\n                            \n                        \n\n                \n                    \n                        Which animation to play when marker is added to a map.\nThis can be 'BOUNCE' or 'DROP'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            infoWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Default value : new QueryList()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(NgMapsInfoWindowComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/directives/marker.ts:195\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  QueryList,\n  SimpleChange,\n} from '@angular/core';\nimport { Observable, ReplaySubject, Subscription } from 'rxjs';\nimport { FitBoundsAccessor, FitBoundsDetails } from '../services/fit-bounds';\nimport { MarkerManager } from '../services/managers/marker-manager';\nimport { NgMapsInfoWindowComponent } from './info-window';\n\nlet markerId = 0;\n\n/**\n * NgMapsMarkerComponent renders a map marker inside a {@link NgMapsViewComponent}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    \n *      \n *      \n *    \n *  `\n * })\n * ```\n */\n@Component({\n  selector: 'agm-marker, map-marker',\n  providers: [\n    {\n      provide: FitBoundsAccessor,\n      useExisting: forwardRef(() => NgMapsMarkerComponent),\n    },\n  ],\n  inputs: [\n    'latitude',\n    'longitude',\n    'title',\n    'label',\n    'draggable: markerDraggable',\n    'iconUrl',\n    'openInfoWindow',\n    'opacity',\n    'visible',\n    'zIndex',\n    'animation',\n  ],\n  outputs: [\n    'markerClick',\n    'dragStart',\n    'drag',\n    'dragEnd',\n    'mouseOver',\n    'mouseOut',\n  ],\n  template: '',\n})\nexport class NgMapsMarkerComponent\n  implements OnDestroy, OnChanges, AfterContentInit, FitBoundsAccessor {\n  /**\n   * The latitude position of the marker.\n   */\n  @Input() latitude: number;\n\n  /**\n   * The longitude position of the marker.\n   */\n  @Input() longitude: number;\n\n  /**\n   * The title of the marker.\n   */\n  @Input() title: string;\n\n  /**\n   * The label (a single uppercase character) for the marker.\n   */\n  @Input() label: string | google.maps.MarkerLabel;\n\n  /**\n   * If true, the marker can be dragged. Default value is false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('markerDraggable') draggable: boolean = false;\n\n  /**\n   * Icon (the URL of the image) for the foreground.\n   * Can also be a MarkerIcon (google.maps.Icon in Google Maps Javascript api)\n   * @see google.maps.Icon\n   */\n  @Input() iconUrl: string | google.maps.Icon;\n\n  /**\n   * If true, the marker is visible\n   */\n  @Input() visible: boolean = true;\n\n  /**\n   * Whether to automatically open the child info window when the marker is clicked.\n   */\n  @Input() openInfoWindow: boolean = true;\n\n  /**\n   * The marker's opacity between 0.0 and 1.0.\n   */\n  @Input() opacity: number = 1;\n\n  /**\n   * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n   * front of markers with lower values. By default, markers are displayed according to their\n   * vertical position on screen, with lower markers appearing in front of markers further up the\n   * screen.\n   */\n  @Input() zIndex: number = 1;\n\n  /**\n   * If true, the marker can be clicked. Default value is true.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('markerClickable') clickable: boolean = true;\n\n  /**\n   * Which animation to play when marker is added to a map.\n   * This can be 'BOUNCE' or 'DROP'\n   */\n  animation: 'BOUNCE' | 'DROP' | null;\n\n  /**\n   * This event emitter gets emitted when the user clicks on the marker.\n   */\n  @Output() markerClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user rightclicks on the marker.\n   */\n  @Output() markerRightClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the marker.\n   */\n  @Output() dragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the marker.\n   */\n  @Output() drag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the marker.\n   */\n  @Output() dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user mouses over the marker.\n   */\n  @Output() mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user mouses outside the marker.\n   */\n  @Output() mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * @internal\n   */\n  @ContentChildren(NgMapsInfoWindowComponent) infoWindow: QueryList = new QueryList();\n\n  private _markerAddedToManger: boolean = false;\n  private _id: string;\n  private _observableSubscriptions: Subscription[] = [];\n\n  protected readonly _fitBoundsDetails$: ReplaySubject = new ReplaySubject(1);\n\n  constructor(private markerManager: MarkerManager) {\n    this._id = (markerId++).toString();\n  }\n\n  /**\n   *  @internal\n   */\n  ngAfterContentInit() {\n    this.handleInfoWindowUpdate();\n    this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n  }\n\n  private handleInfoWindowUpdate() {\n    if (this.infoWindow.length > 1) {\n      throw new Error('Expected no more than one info window.');\n    }\n    this.infoWindow.forEach((marker) => {\n      marker.hostMarker = this;\n    });\n  }\n\n  /**\n   * @internal\n   */\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (typeof this.latitude === 'string') {\n      this.latitude = Number(this.latitude);\n    }\n    if (typeof this.longitude === 'string') {\n      this.longitude = Number(this.longitude);\n    }\n    if (\n      typeof this.latitude !== 'number' ||\n      typeof this.longitude !== 'number'\n    ) {\n      return;\n    }\n    if (!this._markerAddedToManger) {\n      this.markerManager.addMarker(this).then(() => {\n        this._updateFitBoundsDetails();\n        this._markerAddedToManger = true;\n        this._addEventListeners();\n      });\n      return;\n    }\n    if (changes.latitude || changes.longitude) {\n      this.markerManager.updateMarkerPosition(this);\n      this._updateFitBoundsDetails();\n    }\n    if (changes.title) {\n      this.markerManager.updateTitle(this);\n    }\n    if (changes.label) {\n      this.markerManager.updateLabel(this);\n    }\n    if (changes.draggable) {\n      this.markerManager.updateDraggable(this);\n    }\n    if (changes.iconUrl) {\n      this.markerManager.updateIcon(this);\n    }\n    if (changes.opacity) {\n      this.markerManager.updateOpacity(this);\n    }\n    if (changes.visible) {\n      this.markerManager.updateVisible(this);\n    }\n    if (changes.zIndex) {\n      this.markerManager.updateZIndex(this);\n    }\n    if (changes.clickable) {\n      this.markerManager.updateClickable(this);\n    }\n    if (changes.animation) {\n      this.markerManager.updateAnimation(this);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  getFitBoundsDetails$(): Observable {\n    return this._fitBoundsDetails$.asObservable();\n  }\n\n  protected _updateFitBoundsDetails() {\n    this._fitBoundsDetails$.next({\n      latLng: { lat: this.latitude, lng: this.longitude },\n    });\n  }\n\n  private _addEventListeners() {\n    const cs = this.markerManager\n      .createEventObservable('click', this)\n      .subscribe(() => {\n        if (this.openInfoWindow) {\n          this.infoWindow.forEach((infoWindow) => infoWindow.open());\n        }\n        this.markerClick.emit(this);\n      });\n    this._observableSubscriptions.push(cs);\n\n    const rc = this.markerManager\n      .createEventObservable('rightclick', this)\n      .subscribe(() => {\n        this.markerRightClick.emit(null);\n      });\n    this._observableSubscriptions.push(rc);\n\n    const ds = this.markerManager\n      .createEventObservable('dragstart', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.dragStart.emit(e);\n      });\n    this._observableSubscriptions.push(ds);\n\n    const d = this.markerManager\n      .createEventObservable('drag', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.drag.emit(e);\n      });\n    this._observableSubscriptions.push(d);\n\n    const dragend = this.markerManager\n      .createEventObservable('dragend', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.dragEnd.emit(e);\n      });\n    this._observableSubscriptions.push(dragend);\n\n    const mouseover = this.markerManager\n      .createEventObservable('mouseover', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.mouseOver.emit(e);\n      });\n    this._observableSubscriptions.push(mouseover);\n\n    const mouseout = this.markerManager\n      .createEventObservable('mouseout', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.mouseOut.emit(e);\n      });\n    this._observableSubscriptions.push(mouseout);\n  }\n\n  /** @internal */\n  id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  toString(): string {\n    return `NgMapsMarker-${this._id}`;\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this.markerManager.deleteMarker(this);\n    // unsubscribe all registered observable subscriptions\n    this._observableSubscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgMapsInfoWindowComponent', 'selector': 'agm-info-window, map-info-window'},{'name': 'NgMapsMarkerComponent', 'selector': 'agm-marker, map-marker'},{'name': 'NgMapsViewComponent', 'selector': 'agm-map, map-view'}];\n    var DIRECTIVES = [{'name': 'NgMapsFitBounds', 'selector': '[mapFitBounds]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgMapsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoOpMapsAPILoader.html":{"url":"classes/NoOpMapsAPILoader.html","title":"class - NoOpMapsAPILoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoOpMapsAPILoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/services/maps-api-loader/noop-maps-api-loader.ts\n        \n\n            \n                Description\n            \n            \n                When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a \nTag.\nIt's important that the Google Maps API script gets loaded first on the page.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MapsAPILoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/services/maps-api-loader/noop-maps-api-loader.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MapsAPILoader } from './maps-api-loader';\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a ``\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nexport class NoOpMapsAPILoader implements MapsAPILoader {\n  load(): Promise {\n    if (!(window).google || !(window).google.maps) {\n      throw new Error(\n        'Google Maps API not loaded on page. Make sure window.google.maps is available!',\n      );\n    }\n    return Promise.resolve();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/core/src/lib/core.module.ts\n            \n            function\n            coreDirectives\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/directives/fit-bounds.ts\n            \n            directive\n            NgMapsFitBounds\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                projects/core/src/lib/directives/info-window.ts\n            \n            component\n            NgMapsInfoWindowComponent\n            \n                50 %\n                (12/24)\n            \n        \n        \n            \n                \n                projects/core/src/lib/directives/info-window.ts\n            \n            variable\n            infoWindowId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/directives/map.ts\n            \n            component\n            NgMapsViewComponent\n            \n                67 %\n                (48/71)\n            \n        \n        \n            \n                \n                projects/core/src/lib/directives/marker.ts\n            \n            component\n            NgMapsMarkerComponent\n            \n                57 %\n                (20/35)\n            \n        \n        \n            \n                \n                projects/core/src/lib/directives/marker.ts\n            \n            variable\n            markerId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/services/fit-bounds.ts\n            \n            class\n            FitBoundsAccessor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/services/fit-bounds.ts\n            \n            injectable\n            FitBoundsService\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                projects/core/src/lib/services/fit-bounds.ts\n            \n            interface\n            FitBoundsDetails\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/services/google-maps-api-wrapper.ts\n            \n            injectable\n            GoogleMapsAPIWrapper\n            \n                31 %\n                (9/29)\n            \n        \n        \n            \n                \n                projects/core/src/lib/services/managers/info-window-manager.ts\n            \n            injectable\n            InfoWindowManager\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                projects/core/src/lib/services/managers/marker-manager.ts\n            \n            injectable\n            MarkerManager\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/core/src/lib/services/maps-api-loader/lazy-maps-api-loader-config.ts\n            \n            interface\n            LazyMapsAPILoaderConfigLiteral\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/core/src/lib/services/maps-api-loader/lazy-maps-api-loader-config.ts\n            \n            variable\n            LAZY_MAPS_API_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/services/maps-api-loader/lazy-maps-api-loader.ts\n            \n            injectable\n            LazyMapsAPILoader\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/core/src/lib/services/maps-api-loader/maps-api-loader.ts\n            \n            injectable\n            MapsAPILoader\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/services/maps-api-loader/noop-maps-api-loader.ts\n            \n            class\n            NoOpMapsAPILoader\n            \n                50 %\n                (1/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.1.0\n        \n            @angular/common : ~8.1.0\n        \n            @angular/compiler : ~8.1.0\n        \n            @angular/core : ~8.1.0\n        \n            @angular/forms : ~8.1.0\n        \n            @angular/platform-browser : ~8.1.0\n        \n            @angular/platform-browser-dynamic : ~8.1.0\n        \n            @angular/router : ~8.1.0\n        \n            @google/markerclusterer : ^1.0.3\n        \n            rxjs : ~6.5.2\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GoogleMapsScriptProtocol   (projects/.../lazy-maps-api-loader-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/services/maps-api-loader/lazy-maps-api-loader-config.ts\n    \n        \n            \n                \n                    \n                        \n                        GoogleMapsScriptProtocol\n                    \n                \n                        \n                            \n                                 HTTP\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 HTTPS\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 AUTO\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            coreDirectives   (projects/.../core.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/core.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            coreDirectives\n                        \n                        \n                    \n                \n            \n            \n                \ncoreDirectives()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgMaps\n\n\n\nPackages\nThis project is a mono repo and hosts multiple packages:\n\n\n\nPackage\nVersion\nDocs\n\n\n\n\n@ng-maps/core\n\nCore\n\n\n@ng-maps/snazzy-info-window\n\n\n\n\n@ng-maps/marker-clusterer\n\nMarkerClusterer\n\n\n@ng-maps/places\n\n\n\n\n@ng-maps/data-layer\n\n\n\n\n@ng-maps/kml-layer\n\n\n\n\n@ng-maps/drawing-layer\n\n\n\n\n@ng-maps/shapes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 ng-maps\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgMapsCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BoundsMap   (projects/.../fit-bounds.ts)\n                        \n                        \n                            LayerTypes   (projects/.../layers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/services/fit-bounds.ts\n    \n    \n        \n            \n                \n                    \n                    BoundsMap\n                \n            \n            \n                \n                        Map\n\n                \n            \n        \n    \n    projects/core/src/lib/interface/layers.ts\n    \n    \n        \n            \n                \n                    \n                    LayerTypes\n                \n            \n            \n                \n                        \"TrafficLayer\" | \"TransitLayer\" | \"BicyclingLayer\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            infoWindowId   (projects/.../info-window.ts)\n                        \n                        \n                            LAZY_MAPS_API_CONFIG   (projects/.../lazy-maps-api-loader-config.ts)\n                        \n                        \n                            markerId   (projects/.../marker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/directives/info-window.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            infoWindowId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n    projects/core/src/lib/services/maps-api-loader/lazy-maps-api-loader-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LAZY_MAPS_API_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG')\n                        \n                    \n\n                \n                    \n                        Token for the config of the LazyMapsAPILoader. Please provide an object of type LazyMapsAPILoaderConfig.\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/directives/marker.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            markerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
