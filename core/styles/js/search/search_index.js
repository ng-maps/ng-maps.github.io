var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/FitBoundsAccessor.html",[0,0.415,1,1.178]],["body/classes/FitBoundsAccessor.html",[0,0.692,1,1.632,2,2.049,3,0.58,4,0.58,5,0.502,6,2.084,7,1.376,8,0.962,9,2.376,10,2.084,11,2.376,12,1.632,13,2.376,14,2.465,15,2.376,16,1.84,17,0.297,18,1.009,19,2.215,20,2.508,21,0.754,22,2.972,23,0.754,24,0.048,25,2.309,26,0.934,27,0.776,28,0.58,29,3.09,30,2.049,31,1.22,32,2.742,33,1.266,34,2.742,35,2.049,36,2.049,37,1.776,38,1.288,39,0.502,40,0.672,41,1.376,42,0.854,43,0.934,44,1.22,45,1.22,46,2.678,47,3.3,48,3.3,49,1.22,50,0.43,51,1.776,52,1.84,53,2.049,54,2.049,55,1.776,56,2.215,57,2.074,58,2.049,59,0.934,60,2.049,61,2.049,62,2.049,63,2.742,64,2.049,65,2.049,66,2.049,67,2.049,68,2.049,69,2.049,70,2.049,71,2.049,72,1.084,73,2.049,74,2.049,75,1.55,76,2.049,77,2.049,78,2.049,79,1.374,80,2.049,81,1.376,82,2.049,83,2.049,84,2.742,85,2.049,86,2.742,87,2.049,88,2.049,89,2.049,90,1.084,91,2.049,92,2.049,93,2.049,94,0.854,95,2.049,96,0.024,97,0.032,98,0.024]],["title/interfaces/FitBoundsDetails.html",[44,1.178,45,1.178]],["body/interfaces/FitBoundsDetails.html",[0,0.653,1,1.238,3,0.589,4,0.589,5,0.51,6,1.581,7,1.397,9,1.803,10,1.581,11,1.803,12,1.238,13,1.803,14,2.435,15,1.803,16,1.397,17,0.302,19,1.859,20,1.581,24,0.048,25,2.228,26,0.939,27,0.784,28,0.589,29,3.114,30,2.081,31,1.238,32,2.77,33,1.273,34,2.77,35,2.081,36,2.081,37,1.803,38,1.301,39,0.51,40,0.679,41,1.397,42,0.867,43,0.939,44,1.238,45,1.649,46,3.08,47,3.555,48,3.555,49,1.238,50,0.581,51,1.803,52,1.859,53,2.081,54,2.081,55,1.803,56,2.228,57,2.09,58,2.081,59,0.939,60,2.081,61,2.081,62,2.081,63,2.77,64,2.081,65,2.081,66,2.081,67,2.081,68,2.081,69,2.081,70,2.081,71,2.081,72,1.1,73,2.081,74,2.081,75,1.559,76,2.081,77,2.081,78,2.081,79,1.383,80,2.081,81,1.397,82,2.081,83,2.081,84,2.77,85,2.081,86,2.77,87,2.081,88,2.081,89,2.081,90,1.1,91,2.081,92,2.081,93,2.081,94,0.867,95,2.081,96,0.024,97,0.032,98,0.024,99,2.081,100,1.301]],["title/injectables/FitBoundsService.html",[27,0.56,52,1.329]],["body/injectables/FitBoundsService.html",[0,0.58,1,0.989,3,0.47,4,0.47,5,0.407,6,2.772,7,1.115,8,0.78,9,1.44,10,1.263,11,1.44,12,0.989,13,1.44,14,2.419,15,1.44,16,1.115,17,0.241,18,0.873,19,1.592,20,1.263,21,1.327,23,1.221,24,0.048,25,2.226,26,0.854,27,0.671,28,0.47,29,3.19,30,1.662,31,0.989,32,2.372,33,1.308,34,2.372,35,1.662,36,1.662,37,1.44,38,1.417,39,0.407,40,0.581,41,1.115,42,0.988,43,0.854,44,0.989,45,0.989,46,2.874,47,3.604,48,3.604,49,0.989,50,0.732,51,1.44,52,2.025,53,2.372,54,2.372,55,2.055,56,2.473,57,2.385,58,2.766,59,0.966,60,2.372,61,2.766,62,2.372,63,2.372,64,1.662,65,1.662,66,1.662,67,1.662,68,1.662,69,1.662,70,1.662,71,1.662,72,1.462,73,2.766,74,2.372,75,1.417,76,1.662,77,1.662,78,1.662,79,1.256,80,2.372,81,1.115,82,1.662,83,1.662,84,2.372,85,1.662,86,2.372,87,2.372,88,1.662,89,2.372,90,1.462,91,1.662,92,3.016,93,2.766,94,0.988,95,1.662,96,0.019,97,0.028,98,0.019,100,1.114,101,1.115,102,3.439,103,3.439,104,3.439,105,0.989,106,2.409,107,1.754,108,1.381,109,1.558,110,2.409,111,2.409,112,2.409,113,2.409,114,2.409,115,1.646,116,2.409,117,2.409,118,2.409,119,2.409,120,1.114,121,0.988,122,1.959,123,1.959,124,2.409]],["title/injectables/InfoWindowManager.html",[27,0.56,125,1.716]],["body/injectables/InfoWindowManager.html",[0,0.313,3,0.622,4,0.423,5,0.366,17,0.217,18,0.809,21,1.296,23,1.249,24,0.048,25,2.053,26,0.905,27,0.622,28,0.423,31,0.89,33,1.126,39,0.638,40,0.366,43,0.423,50,0.748,59,0.737,72,1.691,75,1.676,79,1.085,90,1.162,94,1.085,96,0.017,97,0.026,98,0.017,100,1.032,101,1.004,105,1.308,107,1.861,108,1.442,109,1.626,115,1.968,120,0.702,121,0.623,125,1.904,126,4.206,127,2.447,128,1.495,129,3.778,130,3.461,131,3.186,132,2.59,133,3.071,134,3.186,135,2.198,136,3.778,137,3.186,138,3.186,139,1.763,140,2.872,141,3.071,142,3.385,143,3.778,144,2.182,145,2.168,146,2.59,147,3.186,148,2.596,149,2.168,150,3.646,151,3.186,152,1.763,153,1.763,154,2.168,155,2.59,156,3.186,157,1.223,158,1.904,159,3.186,160,2.198,161,2.59,162,3.186,163,2.168,164,1.927,165,3.186,166,2.168,167,2.168,168,2.872,169,4.164,170,1.763,171,3.186,172,2.168,173,3.186,174,2.168,175,1.763,176,2.59,177,1.763,178,1.475,179,1.495,180,1.763,181,1.98,182,1.495,183,2.168,184,3.186,185,2.872,186,4.794,187,1.67,188,1.495,189,1.763,190,2.59,191,2.168,192,2.168,193,2.168,194,2.198,195,3.778,196,2.198,197,3.778,198,2.168,199,3.186,200,2.168,201,3.186,202,2.168,203,3.186,204,2.168,205,2.168,206,1.763,207,2.168,208,1.763,209,2.168,210,1.296,211,2.168,212,1.763,213,2.168,214,1.904,215,2.168,216,3.186,217,2.168,218,2.168,219,1.763,220,2.168,221,1.763,222,1.763]],["title/injectables/LazyMapsAPILoader.html",[27,0.56,223,1.329]],["body/injectables/LazyMapsAPILoader.html",[0,0.301,3,0.407,4,0.407,5,0.352,17,0.209,18,0.786,19,1.432,21,1.283,23,1.037,24,0.048,26,0.797,27,0.604,28,0.407,38,1.323,39,0.887,40,0.935,42,0.889,43,0.407,50,0.703,56,2.517,57,2.116,59,0.407,72,1.346,75,1.533,79,1.427,94,1.57,96,0.017,97,0.025,98,0.017,100,1.002,101,0.965,105,1.27,107,1.346,108,1.06,109,1.413,115,0.855,120,1.002,121,1.253,127,1.432,157,0.675,158,1.245,164,2.02,187,1.622,188,1.437,223,1.891,224,2.075,225,2.34,226,1.245,227,3.094,228,3.691,229,3.691,230,3.691,231,3.691,232,4.363,233,3.094,234,3.094,235,2.829,236,2.084,237,2.396,238,4.862,239,3.094,240,2.441,241,3.094,242,3.691,243,2.084,244,2.084,245,3.094,246,2.084,247,2.084,248,2.084,249,2.084,250,2.084,251,2.084,252,3.094,253,2.084,254,2.084,255,1.694,256,2.084,257,2.134,258,1.092,259,2.084,260,2.084,261,2.084,262,2.084,263,3.094,264,2.084,265,2.084,266,2.084,267,1.437,268,1.437,269,1.694,270,4.363,271,2.084,272,2.084,273,2.084,274,2.084,275,2.084,276,3.094,277,2.084,278,2.084,279,1.694,280,2.084,281,2.084,282,2.084,283,2.084,284,1.622,285,2.084,286,2.084,287,2.084,288,2.084,289,2.084,290,2.084,291,2.084,292,2.084,293,2.084,294,2.084,295,2.084,296,2.084,297,1.694,298,2.084,299,3.094,300,2.084,301,3.094,302,3.32,303,2.084,304,3,305,2.084,306,3.691,307,2.084,308,1.437,309,1.437,310,1.694,311,2.084,312,2.084,313,2.084,314,3.009,315,1.694,316,2.084,317,2.084,318,2.084,319,2.084,320,2.084,321,1.694,322,2.084,323,1.694,324,2.084,325,1.694,326,2.084,327,1.694,328,2.084,329,1.694,330,2.084,331,2.084,332,2.084,333,3.094,334,3.691,335,1.694,336,2.084,337,3.094,338,3.094,339,2.084,340,0.965,341,2.084,342,3.094,343,2.084,344,2.084,345,2.084,346,2.084,347,3.094,348,2.084,349,2.084,350,2.084,351,2.084]],["title/interfaces/LazyMapsAPILoaderConfigLiteral.html",[44,1.178,237,1.505]],["body/interfaces/LazyMapsAPILoaderConfigLiteral.html",[3,0.436,4,0.436,5,0.378,8,0.724,12,0.917,17,0.224,24,0.047,26,0.436,28,0.436,33,1.072,39,0.928,40,0.928,42,0.642,43,0.75,44,0.917,50,0.743,59,0.436,75,0.724,81,2.296,94,1.612,96,0.018,97,0.026,98,0.018,99,1.541,100,1.055,108,0.936,109,1.794,120,1.368,157,1.77,160,2.246,223,1.779,224,0.917,225,1.034,235,1.947,237,1.707,240,1.335,257,2.913,258,1.707,267,2.246,302,3.811,308,1.541,309,1.541,310,3.434,314,3.42,321,4.032,323,4.177,325,4.032,327,3.811,329,4.032,352,1.335,353,2.648,354,4.224,355,4.224,356,4.224,357,4.032,358,3.257,359,3.257,360,4.688,361,4.224,362,4.224,363,3.257,364,3.257,365,2.648,366,3.257,367,3.257,368,3.257,369,3.257,370,3.257,371,3.257,372,3.257,373,3.257,374,3.257,375,3.811,376,3.257,377,3.257,378,3.257,379,2.648,380,3.257,381,3.434,382,3.434,383,3.257,384,3.257,385,3.257,386,1.947,387,3.257,388,3.257,389,4.224,390,4.224,391,4.688,392,3.257,393,2.524,394,3.257,395,3.257,396,3.257,397,1.947,398,3.257,399,4.224,400,3.257,401,3.257,402,3.257,403,3.257,404,3.257,405,3.257,406,2.235,407,2.235,408,1.335,409,1.541,410,1.541,411,1.817,412,1.541,413,1.335,414,1.817,415,1.707,416,1.541,417,1.817]],["title/injectables/MapsAPILoader.html",[27,0.56,38,0.93]],["body/injectables/MapsAPILoader.html",[0,0.6,3,0.811,4,0.811,5,0.702,17,0.416,18,1.247,19,2.501,21,1.055,23,1.055,24,0.045,26,0.811,27,0.958,28,0.811,38,1.591,40,0.913,41,2.273,43,0.811,96,0.033,97,0.04,98,0.033,101,1.923,164,2.273,224,2.016,226,2.482,235,3.229,418,4.153]],["title/injectables/MarkerManager.html",[27,0.56,144,1.505]],["body/injectables/MarkerManager.html",[0,0.284,3,0.383,4,0.383,5,0.331,17,0.196,18,0.751,21,1.351,23,1.329,24,0.048,25,1.648,26,0.83,27,0.577,28,0.383,31,0.805,33,1.006,39,0.331,40,0.331,43,0.383,50,0.774,56,1.968,59,0.695,75,1.679,79,1.138,94,0.849,96,0.016,97,0.024,98,0.016,100,0.958,101,0.908,105,1.214,107,1.94,108,1.517,109,1.71,115,2.254,120,0.635,121,0.563,128,1.353,130,2.455,133,2.894,139,1.595,140,2.733,141,2.894,142,3.222,144,1.55,146,2.404,152,1.595,153,1.595,155,2.404,157,0.635,161,2.404,164,1.369,170,1.595,175,1.595,176,2.404,178,0.908,179,1.353,180,1.595,181,2.807,185,1.353,187,1.028,188,1.353,189,1.595,190,2.404,194,2.039,196,2.039,210,1.172,214,1.767,219,1.595,221,1.595,222,1.595,419,4.354,420,3.56,421,2.957,422,2.957,423,2.957,424,2.957,425,2.957,426,2.957,427,2.957,428,2.957,429,2.957,430,2.957,431,2.957,432,2.957,433,2.957,434,2.957,435,2.653,436,1.962,437,3.56,438,3.56,439,1.962,440,2.957,441,1.962,442,2.957,443,1.962,444,2.957,445,2.957,446,1.962,447,2.957,448,1.962,449,2.957,450,1.962,451,2.957,452,1.962,453,2.957,454,1.962,455,2.957,456,1.962,457,2.957,458,1.962,459,2.957,460,1.962,461,2.957,462,2.957,463,1.962,464,1.595,465,5.28,466,5.184,467,1.962,468,1.962,469,1.962,470,2.957,471,2.957,472,1.962,473,1.962,474,1.962,475,1.962,476,1.962,477,1.962,478,1.962,479,1.962,480,3.56,481,1.962,482,1.962,483,1.962,484,1.353,485,1.595,486,1.962,487,1.595,488,1.962,489,1.595,490,1.962,491,1.595,492,1.962,493,1.172,494,1.962,495,1.962,496,1.595,497,1.962,498,1.595,499,1.962,500,1.595,501,1.962,502,1.962,503,1.962]],["title/modules/NgMapsCoreModule.html",[504,1.98,505,1.98]],["body/modules/NgMapsCoreModule.html",[0,0.45,3,0.607,4,0.607,5,0.526,8,1.008,14,1.441,18,0.79,21,1.164,23,0.79,24,0.047,26,1.05,28,0.607,38,1.328,39,0.824,40,0.879,41,1.441,42,1.317,43,0.8,49,1.277,50,0.45,79,1.178,96,0.025,97,0.033,98,0.025,107,1.135,108,0.894,109,1.008,127,1.441,148,1.898,157,1.328,177,2.53,178,1.898,179,2.146,223,1.898,225,1.898,237,2.725,240,1.86,258,2.149,353,3.333,393,2.912,412,3.361,413,2.912,415,1.631,416,3.162,435,1.898,464,2.53,504,3.711,505,3.162,506,2.146,507,2.146,508,3.333,509,4.873,510,4.1,511,4.1,512,4.1,513,4.1,514,2.45,515,3.333,516,4.1,517,3.112,518,3.112,519,4.1,520,4.1,521,4.1,522,4.1,523,2.53,524,4.585,525,4.585,526,1.898,527,3.112,528,4.585,529,2.53,530,3.162,531,2.53,532,2.53,533,1.86,534,3.112,535,3.112]],["title/directives/NgMapsFitBounds.html",[526,1.329,536,1.329]],["body/directives/NgMapsFitBounds.html",[0,0.561,1,1.936,3,0.444,4,0.444,5,0.385,7,1.054,8,0.737,9,1.973,10,1.73,11,1.973,12,1.355,13,1.973,14,2.094,15,1.973,16,1.528,17,0.228,18,0.838,19,1.528,20,1.193,21,1.266,23,1.082,24,0.048,26,0.831,28,0.444,31,0.934,33,0.838,37,1.36,43,0.444,45,2.046,49,1.594,50,0.682,52,1.972,57,1.528,59,0.831,72,1.906,96,0.018,97,0.027,98,0.018,100,1.069,105,1.355,107,1.416,108,1.116,109,1.258,115,1.749,120,1.465,121,1.432,122,1.85,123,2.683,160,2.277,187,2.472,284,2.739,304,1.85,335,1.85,415,1.193,493,3.084,523,1.85,526,1.528,536,1.972,537,1.36,538,4.13,539,3.301,540,3.301,541,1.355,542,1.973,543,3.157,544,2.679,545,2.679,546,1.973,547,1.57,548,2.277,549,2.703,550,3.884,551,3.884,552,3.301,553,2.277,554,2.938,555,3.463,556,2.277,557,2.276,558,3.884,559,3.301,560,1.973,561,2.277,562,2.277,563,2.277,564,3.301,565,2.276,566,4.523,567,4.26,568,3.301,569,3.301,570,2.683,571,2.679,572,4.26,573,3.884,574,2.277,575,3.463,576,2.276,577,2.276,578,2.276,579,4.523,580,2.276,581,1.973,582,3.301,583,3.301,584,2.276,585,1.85,586,2.276,587,2.276,588,2.276,589,2.276,590,2.276,591,2.276,592,2.276,593,2.276,594,2.276,595,2.276,596,2.276,597,2.276,598,3.301,599,1.85,600,3.301,601,1.85,602,2.276,603,4.26,604,2.276,605,2.276,606,1.57,607,2.276,608,2.276,609,1.57,610,2.276,611,1.85,612,2.276,613,2.276,614,2.276,615,2.276,616,3.301,617,3.301,618,2.276,619,2.276]],["title/components/NgMapsInfoWindowComponent.html",[148,1.329,541,1.178]],["body/components/NgMapsInfoWindowComponent.html",[0,0.206,3,1.047,4,0.278,5,0.241,8,0.461,12,0.945,16,1.692,17,0.143,18,0.845,21,1.338,23,1.154,24,0.048,26,0.713,28,0.566,33,1.24,43,0.278,49,1.367,50,0.715,59,0.278,72,1.858,75,0.746,79,1.05,81,1.541,90,1.657,94,1.231,96,0.011,97,0.019,98,0.011,100,0.746,105,0.585,107,1.057,108,1.123,109,0.939,115,1.605,120,1.388,121,1.123,125,2.337,127,2.474,130,1.999,132,3.483,135,3.368,148,1.905,150,2.296,158,1.376,164,1.541,168,1.588,178,0.66,181,1.745,182,0.983,185,0.983,206,3.597,208,3.346,210,2.184,212,2.972,214,1.376,284,1.519,340,0.66,379,1.872,381,1.872,386,1.376,393,1.99,397,1.376,415,1.519,435,2.104,484,2.296,493,1.376,514,1.99,515,2.972,526,0.66,533,1.376,536,0.66,537,0.851,541,1.689,542,1.376,543,2.357,544,1.999,545,1.999,546,1.376,547,0.983,548,2.955,549,0.851,553,1.588,554,2.296,555,2.707,556,1.588,560,2.337,561,2.296,570,1.872,571,1.588,574,1.588,575,3.483,581,2.459,599,1.872,606,1.588,609,2.521,620,1.376,621,1.158,622,0.983,623,3.653,624,0.983,625,1.872,626,1.588,627,2.303,628,2.303,629,2.303,630,1.872,631,1.999,632,1.588,633,1.588,634,2.296,635,2.303,636,2.357,637,2.899,638,2.899,639,2.899,640,3.33,641,2.303,642,3.33,643,2.707,644,2.899,645,2.838,646,2.521,647,1.588,648,2.899,649,1.425,650,1.425,651,2.303,652,1.425,653,2.303,654,3.33,655,2.303,656,3.33,657,1.425,658,2.303,659,3.911,660,1.425,661,3.33,662,3.33,663,1.425,664,1.425,665,3.33,666,3.911,667,2.303,668,2.303,669,2.303,670,2.303,671,2.303,672,2.303,673,1.425,674,4.737,675,3.179,676,1.872,677,2.707,678,3.179,679,2.707,680,1.872,681,3.33,682,1.872,683,2.303,684,1.588,685,2.707,686,1.425,687,2.303,688,2.303,689,1.425,690,2.303,691,1.425,692,1.425,693,1.425,694,2.303,695,1.425,696,1.425,697,1.425,698,1.425,699,1.425,700,1.425,701,2.303,702,1.425,703,1.425,704,1.425,705,2.899,706,1.158,707,2.303,708,1.425,709,3.33,710,2.303,711,1.425,712,1.872,713,1.425,714,1.425,715,0.983,716,1.158,717,1.425,718,2.303,719,2.303,720,1.425,721,1.158,722,1.158,723,1.158,724,1.158,725,1.425,726,1.158,727,1.425,728,1.425,729,1.425,730,1.425,731,1.425,732,1.158,733,2.303,734,2.303,735,1.425,736,1.425,737,1.425,738,1.425,739,1.425,740,1.425,741,1.425,742,1.425,743,1.425,744,1.425,745,1.425,746,1.158,747,1.425,748,1.425,749,0.983,750,1.872,751,2.707,752,1.158,753,1.158,754,1.158,755,1.158]],["title/components/NgMapsMarkerComponent.html",[435,1.329,541,1.178]],["body/components/NgMapsMarkerComponent.html",[0,0.273,1,1.318,3,0.723,4,0.219,5,0.19,8,0.364,14,0.52,16,1.487,17,0.112,18,0.48,20,1.508,21,1.352,23,1.028,24,0.048,25,1.332,26,0.68,28,0.369,31,0.461,33,1.163,39,0.32,40,0.32,43,0.369,45,0.461,46,0.671,49,1.52,50,0.751,55,1.13,56,1.612,57,1.135,59,0.86,72,1.698,75,1.2,79,0.922,81,1.332,90,1.641,94,1.337,96,0.009,97,0.015,98,0.009,100,0.613,105,0.461,107,0.69,108,0.922,109,0.613,115,1.429,120,1.529,121,1.316,127,1.487,135,1.305,144,1.825,148,0.876,150,1.691,157,0.613,158,2.738,178,1.135,181,2.832,182,0.774,187,0.991,194,1.305,196,1.305,210,2.081,214,1.719,284,2.44,314,0.774,340,0.52,357,0.913,386,1.13,408,1.919,413,1.13,415,0.588,435,1.801,484,2.401,485,2.83,487,1.538,489,1.538,491,2.83,493,2.081,496,2.83,498,0.913,500,2.83,514,1.719,526,0.52,533,1.13,536,0.52,537,0.671,541,1.429,542,1.13,544,1.691,545,1.691,546,1.13,547,0.774,548,2.555,549,0.671,553,1.305,554,1.984,556,1.691,560,2.501,561,1.305,562,1.305,563,1.305,571,0.774,574,1.305,581,2.634,585,0.913,601,0.913,609,2.401,620,1.13,621,0.913,622,0.774,625,1.538,626,1.305,630,0.913,631,1.305,632,0.774,633,0.774,634,1.691,636,1.993,643,2.339,645,2.401,646,2.401,647,1.691,675,2.339,676,1.538,677,1.538,678,2.339,679,2.339,680,1.538,682,1.538,684,2.886,685,4.076,706,0.913,712,3.163,716,0.913,721,0.913,722,0.913,723,2.339,724,2.339,726,0.913,732,1.538,746,1.993,749,0.774,750,1.538,751,2.339,752,0.913,753,0.913,754,0.913,755,0.913,756,1.123,757,0.774,758,2.451,759,1.892,760,2.451,761,2.451,762,2.451,763,2.451,764,2.877,765,2.877,766,2.877,767,2.877,768,2.877,769,1.892,770,2.451,771,2.877,772,2.877,773,3.212,774,2.877,775,2.339,776,2.451,777,3.212,778,3.212,779,1.123,780,1.123,781,3.212,782,1.123,783,1.892,784,1.892,785,1.892,786,1.892,787,1.892,788,1.892,789,1.123,790,1.892,791,1.892,792,1.123,793,1.123,794,1.123,795,2.877,796,1.123,797,1.892,798,1.123,799,1.892,800,1.538,801,1.892,802,1.892,803,1.123,804,1.892,805,1.892,806,1.892,807,1.123,808,1.123,809,1.123,810,1.892,811,2.877,812,1.892,813,1.892,814,1.123,815,1.892,816,4.408,817,4.582,818,1.892,819,1.123,820,1.892,821,2.877,822,1.123,823,1.892,824,1.123,825,1.892,826,1.892,827,1.892,828,1.123,829,1.892,830,1.123,831,2.877,832,1.892,833,1.123,834,1.892,835,1.123,836,1.123,837,1.123,838,1.123,839,1.123,840,1.123,841,1.892,842,1.123,843,1.123,844,1.123,845,2.451,846,1.892,847,1.123,848,1.123,849,1.123,850,2.451,851,1.123,852,2.877,853,2.877,854,1.123,855,1.892,856,3.212,857,1.892,858,1.123,859,1.123,860,1.123,861,1.123,862,1.123,863,1.123,864,0.774,865,1.123,866,1.123,867,1.892,868,1.123,869,0.774,870,1.892,871,1.892,872,1.892,873,1.892,874,1.123,875,1.123,876,1.123,877,1.892,878,1.123,879,1.123,880,0.913,881,1.123,882,0.913,883,1.123,884,1.123,885,1.123,886,1.123,887,1.892,888,1.123,889,1.892,890,1.123,891,1.123,892,1.123,893,1.123,894,1.123,895,1.123,896,1.123,897,1.123,898,1.123,899,1.123,900,1.123,901,1.123,902,1.123,903,1.123,904,1.123,905,1.123,906,1.123,907,1.123,908,1.123,909,1.123,910,1.123,911,1.123,912,3.704,913,1.123,914,1.123,915,1.123,916,1.123,917,1.123,918,1.123,919,1.123,920,1.123,921,1.123,922,1.123,923,1.123,924,1.123,925,3.212,926,3.212,927,1.123,928,1.123,929,0.913,930,1.123,931,1.123,932,1.123,933,1.123,934,1.123,935,1.123,936,1.123,937,1.123,938,1.123,939,1.123,940,1.123,941,1.123,942,1.123,943,1.123,944,1.123,945,1.123,946,1.123,947,1.123,948,1.123]],["title/classes/NoOpMapsAPILoader.html",[0,0.415,949,1.98]],["body/classes/NoOpMapsAPILoader.html",[0,0.523,2,2.497,3,0.707,4,0.707,5,0.612,8,1.172,10,1.897,17,0.362,18,1.147,21,0.919,23,0.919,24,0.047,26,0.707,38,1.595,39,0.938,40,0.952,42,1.04,43,0.707,59,0.707,79,1.04,96,0.029,97,0.036,98,0.029,157,1.719,164,2.091,224,1.854,226,2.163,235,3.081,267,3.396,268,3.66,269,2.943,279,3.672,297,2.943,382,3.672,397,2.163,542,2.7,562,3.115,563,3.115,880,2.943,949,3.556,950,3.672,951,4.517,952,4.517,953,4.517,954,4.517,955,4.517,956,3.62,957,3.62,958,3.62,959,3.62,960,3.62]],["title/coverage.html",[961,3.158]],["body/coverage.html",[0,0.622,1,1.377,5,0.567,6,2.492,7,2.322,24,0.047,27,1.036,38,1.087,39,0.876,40,0.947,41,1.553,42,1.237,44,1.767,45,1.377,50,0.485,52,1.553,59,0.655,96,0.027,97,0.035,98,0.027,125,2.005,126,2.728,127,1.553,128,2.969,140,2.314,144,1.759,148,1.553,178,1.553,223,1.553,224,2.129,225,2.201,226,2.841,237,1.759,258,1.759,340,2.498,352,2.573,419,2.728,435,1.553,507,2.314,526,1.553,529,2.728,530,2.314,536,1.553,538,2.728,541,1.951,623,2.969,624,2.969,715,2.314,757,2.969,869,2.314,949,2.314,950,2.728,961,2.728,962,2.728,963,3.356,964,3.356,965,4.754,966,3.356,967,3.356,968,4.754,969,3.356,970,4.754,971,3.356,972,3.356,973,3.356,974,3.356,975,3.356,976,4.306,977,4.306,978,4.306,979,4.306,980,3.356,981,3.356,982,3.356,983,3.356,984,3.356,985,4.306,986,3.356,987,3.356,988,3.356,989,3.356,990,3.356]],["title/dependencies.html",[991,2.414,992,2.375]],["body/dependencies.html",[24,0.045,28,0.867,96,0.036,97,0.041,98,0.036,255,3.612,992,3.064,993,4.443,994,5.108,995,3.612,996,4.443]],["title/miscellaneous/enumerations.html",[997,0.88,998,2.799]],["body/miscellaneous/enumerations.html",[12,1.753,17,0.427,24,0.045,39,0.844,40,0.894,42,1.434,96,0.034,97,0.04,98,0.034,121,1.519,224,1.753,225,1.977,257,3.442,308,2.945,309,2.945,352,2.983,408,2.552,409,2.945,410,2.945,997,1.557,998,3.471,999,3.471]],["title/miscellaneous/functions.html",[997,0.88,1000,2.799]],["body/miscellaneous/functions.html",[17,0.448,24,0.041,96,0.036,97,0.041,98,0.036,507,3.085,530,3.717,997,1.631,1000,3.636,1001,4.473]],["title/index.html",[17,0.242,1002,2.414,1003,2.414]],["body/index.html",[8,1.549,24,0.038,33,1.279,39,0.733,50,0.627,90,1.973,94,0.975,96,0.027,97,0.035,98,0.027,108,1.373,121,0.975,157,1.405,168,2.992,181,1.78,268,2.342,284,1.78,315,2.761,340,1.572,365,2.761,375,2.761,386,2.029,393,2.029,508,2.761,514,2.593,537,2.029,541,1.394,546,2.029,549,2.029,560,2.029,581,2.593,606,2.342,611,2.761,620,2.857,622,2.342,626,2.342,631,2.342,632,2.992,633,2.342,634,2.342,645,2.992,646,2.992,647,2.342,684,2.342,775,2.761,800,2.761,864,2.342,882,2.761,929,3.527,962,2.761,995,3.527,1004,5.038,1005,5.038,1006,4.339,1007,3.396,1008,3.396,1009,3.396,1010,3.396,1011,5.038,1012,4.781,1013,5.038,1014,5.324,1015,3.396,1016,3.396,1017,3.396,1018,4.339,1019,3.396,1020,3.396,1021,3.396,1022,3.396,1023,3.396,1024,3.396,1025,3.396,1026,4.339,1027,3.396,1028,3.396,1029,3.396,1030,3.396,1031,3.396,1032,3.396,1033,3.396,1034,3.396,1035,3.396,1036,3.396,1037,3.396,1038,3.396,1039,3.527,1040,2.761,1041,2.761,1042,3.396,1043,3.396,1044,3.396,1045,3.396,1046,3.396,1047,4.339,1048,3.396,1049,3.396,1050,3.396,1051,2.761,1052,3.396,1053,3.396]],["title/modules.html",[506,2.679]],["body/modules.html",[24,0.041,96,0.036,97,0.041,98,0.036,397,2.692,505,3.106,506,3.106,1054,4.504,1055,4.504]],["title/overview.html",[1056,3.158]],["body/overview.html",[2,2.977,24,0.04,96,0.035,97,0.04,98,0.035,99,2.977,101,1.998,408,3.002,409,3.464,410,2.977,504,3.464,531,3.509,532,3.509,533,2.58,536,1.998,620,2.58,749,2.977,864,3.464,992,2.977,1051,3.509,1056,3.509,1057,4.317,1058,4.317,1059,4.317]],["title/miscellaneous/typealiases.html",[997,0.88,1060,3.444]],["body/miscellaneous/typealiases.html",[6,2.282,7,2.337,17,0.436,24,0.044,33,1.106,50,0.63,51,3.017,96,0.035,97,0.041,98,0.035,997,1.588,1039,3.54,1040,3.54,1041,3.54,1061,4.355,1062,4.355,1063,5.049,1064,4.355,1065,4.355]],["title/miscellaneous/variables.html",[997,0.88,1066,2.799]],["body/miscellaneous/variables.html",[17,0.403,24,0.045,39,0.872,40,0.872,42,1.385,50,0.746,59,0.786,90,1.758,96,0.032,97,0.039,98,0.032,120,1.671,121,1.482,157,1.304,223,1.864,224,1.653,225,1.864,240,2.406,258,2.704,340,2.232,352,2.881,411,3.273,412,2.777,413,2.406,414,3.273,416,2.777,417,3.273,623,2.777,624,3.325,715,3.325,757,2.777,869,3.325,997,1.468,999,3.273,1066,3.273,1067,4.026,1068,4.026]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":340,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":801,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["0/1",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":408,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsMarkerComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0",{"_index":802,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["1/1",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":865,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["10/10",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":985,"title":{},"body":{"coverage.html":{}}}],["12/24",{"_index":969,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1028,"title":{},"body":{"index.html":{}}}],["2",{"_index":409,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["20/35",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":60,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["3",{"_index":410,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["3.37.4",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["3/9",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":633,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["31",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["49/73",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["51.678418",{"_index":862,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["57",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1059,"title":{},"body":{"overview.html":{}}}],["67",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["7.809007",{"_index":863,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["8.0.0",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["9/29",{"_index":983,"title":{},"body":{"coverage.html":{}}}],["_addeventlisteners",{"_index":764,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_assignscriptloadingpromise",{"_index":233,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_assignscriptloadingpromise(scriptelem",{"_index":241,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_boundschangesampletime",{"_index":58,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_config",{"_index":228,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_createidentifier",{"_index":93,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_createidentifier(latlng",{"_index":110,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["_destroyed",{"_index":550,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_document",{"_index":229,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_fitboundsaccessor",{"_index":559,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_fitboundsdetails",{"_index":761,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_fitboundsservice",{"_index":558,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_generatebounds",{"_index":73,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_generatebounds(includeinbounds",{"_index":112,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["_getscriptsrc",{"_index":234,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_getscriptsrc(callbackname",{"_index":245,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_id",{"_index":636,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["_includeinbounds",{"_index":61,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["_infowindowaddedtomanager",{"_index":637,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindowmanager",{"_index":651,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindowoptionsinputs",{"_index":638,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_infowindows",{"_index":129,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["_latestfitboundsdetails",{"_index":551,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_mapswrapper",{"_index":146,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["_markeraddedtomanger",{"_index":762,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_markermanager",{"_index":143,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["_markers",{"_index":420,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["_observablesubscriptions",{"_index":763,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_registereventlisteners",{"_index":640,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_script_id",{"_index":230,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_scriptloadingpromise",{"_index":231,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["_setinfowindowoptions",{"_index":641,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_setinfowindowoptions(changes",{"_index":690,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_updatebounds",{"_index":552,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_updatebounds(newfitboundsdetails",{"_index":564,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["_updatefitboundsdetails",{"_index":765,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["_updateopenstate",{"_index":642,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["_zone",{"_index":141,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["abstract",{"_index":19,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"directives/NgMapsFitBounds.html":{}}}],["according",{"_index":680,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["activates",{"_index":1042,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":755,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["add",{"_index":1014,"title":{},"body":{"index.html":{}}}],["added",{"_index":563,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["addinfowindow",{"_index":131,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["addinfowindow(infowindow",{"_index":147,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["additional",{"_index":1046,"title":{},"body":{"index.html":{}}}],["additionally",{"_index":1045,"title":{},"body":{"index.html":{}}}],["addmarker",{"_index":421,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["addmarker(marker",{"_index":434,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["adds",{"_index":539,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["addtobounds",{"_index":102,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["addtobounds(latlng",{"_index":80,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["aftercontentinit",{"_index":758,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["agm",{"_index":16,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["aliases",{"_index":1061,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":363,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["already",{"_index":188,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{}}}],["alter",{"_index":400,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["always",{"_index":683,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["angular",{"_index":508,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"index.html":{}}}],["angular/common",{"_index":255,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"dependencies.html":{}}}],["angular/core",{"_index":28,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":500,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["any).google",{"_index":265,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["any).google.maps",{"_index":266,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["anyway",{"_index":602,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["api",{"_index":40,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":354,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["apis",{"_index":371,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["apiversion",{"_index":355,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["app",{"_index":513,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["appearing",{"_index":682,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["application",{"_index":375,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"index.html":{}}}],["applications",{"_index":370,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["appmodule",{"_index":1023,"title":{},"body":{"index.html":{}}}],["array",{"_index":315,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"index.html":{}}}],["array.isarray(i",{"_index":346,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["array.isarray(queryparams[k",{"_index":338,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["arrays",{"_index":337,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["assigning",{"_index":367,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["async",{"_index":130,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["attaches",{"_index":1032,"title":{},"body":{"index.html":{}}}],["authenticate",{"_index":374,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["auto",{"_index":12,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"miscellaneous/enumerations.html":{}}}],["automatically",{"_index":805,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["available",{"_index":397,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsInfoWindowComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"modules.html":{}}}],["await",{"_index":185,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["before",{"_index":670,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["behavior",{"_index":391,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["behaviorsubject",{"_index":29,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["between",{"_index":800,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["bias",{"_index":399,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["bicyclinglayer",{"_index":1041,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["boolean",{"_index":560,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["bootstrap",{"_index":1057,"title":{},"body":{"overview.html":{}}}],["both",{"_index":377,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["bounce",{"_index":852,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["bounds",{"_index":14,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["bounds.delete(this._createidentifier(latlng",{"_index":88,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["bounds.extend(b",{"_index":78,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["bounds.set(id",{"_index":85,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["bounds.ts",{"_index":7,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["bounds.ts:23",{"_index":22,"title":{},"body":{"classes/FitBoundsAccessor.html":{}}}],["bounds.ts:31",{"_index":124,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:32",{"_index":122,"title":{},"body":{"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:34",{"_index":580,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:35",{"_index":123,"title":{},"body":{"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:37",{"_index":106,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:45",{"_index":576,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:50",{"_index":113,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:52",{"_index":578,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:61",{"_index":114,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:71",{"_index":119,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:72",{"_index":565,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["bounds.ts:77",{"_index":116,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:81",{"_index":118,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:85",{"_index":111,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["bounds.ts:97",{"_index":577,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["boundsmap",{"_index":51,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"miscellaneous/typealiases.html":{}}}],["break",{"_index":306,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["browse",{"_index":1055,"title":{},"body":{"modules.html":{}}}],["browser's",{"_index":384,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["cached",{"_index":612,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["call",{"_index":659,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["callback",{"_index":319,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["callbackname",{"_index":232,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["case",{"_index":304,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"directives/NgMapsFitBounds.html":{}}}],["change",{"_index":599,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["changed",{"_index":567,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["changefitboundschangesampletime",{"_index":103,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["changefitboundschangesampletime(timems",{"_index":89,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["changes",{"_index":571,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["changes.animation",{"_index":907,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.clickable",{"_index":905,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.draggable",{"_index":896,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.iconurl",{"_index":898,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.isopen",{"_index":728,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["changes.label",{"_index":894,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.latitude",{"_index":721,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["changes.longitude",{"_index":722,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["changes.opacity",{"_index":900,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.title",{"_index":892,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.visible",{"_index":902,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["changes.zindex",{"_index":726,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["changes[k].currentvalue",{"_index":742,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["changing",{"_index":671,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["channel",{"_index":323,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["character",{"_index":791,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["child",{"_index":806,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["class",{"_index":0,"title":{"classes/FitBoundsAccessor.html":{},"classes/NoOpMapsAPILoader.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"classes/NoOpMapsAPILoader.html":{},"overview.html":{}}}],["clickable",{"_index":498,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["clicked",{"_index":795,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["clicks",{"_index":827,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["client",{"_index":321,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["clientid",{"_index":356,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["close",{"_index":132,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["close(infowindow",{"_index":151,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["closed",{"_index":688,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["closes",{"_index":694,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["cmp",{"_index":629,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["comma",{"_index":343,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["component",{"_index":541,"title":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":752,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["components",{"_index":620,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{},"overview.html":{}}}],["computing",{"_index":54,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["config",{"_index":240,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"miscellaneous/variables.html":{}}}],["config.ts",{"_index":352,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":353,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{}}}],["considered",{"_index":669,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["const",{"_index":75,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["constructor",{"_index":105,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["constructor(_fitboundsaccessor",{"_index":557,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["constructor(_infowindowmanager",{"_index":649,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["constructor(_mapswrapper",{"_index":139,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["constructor(config",{"_index":236,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["constructor(loader",{"_index":62,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["constructor(markermanager",{"_index":779,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["constructor(private",{"_index":716,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["contains",{"_index":510,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["content",{"_index":206,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["content's",{"_index":668,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["contentchildren",{"_index":866,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["contentchildren(ngmapsinfowindowcomponent",{"_index":857,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["core",{"_index":509,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["coredirectives",{"_index":530,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["coverage",{"_index":961,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createeventobservable",{"_index":133,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["createeventobservable('click",{"_index":913,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('closeclick",{"_index":731,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["createeventobservable('drag",{"_index":930,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('dragend",{"_index":933,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('dragstart",{"_index":924,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('mouseout",{"_index":939,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('mouseover",{"_index":936,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable('rightclick",{"_index":920,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["createeventobservable(eventname",{"_index":153,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["creates",{"_index":156,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["cs",{"_index":911,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["css",{"_index":1024,"title":{},"body":{"index.html":{}}}],["custom",{"_index":540,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["d",{"_index":929,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["declarations",{"_index":531,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"overview.html":{}}}],["decorators",{"_index":706,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["default",{"_index":120,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["defines",{"_index":396,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["defining",{"_index":404,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["deleted",{"_index":189,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["deleteinfowindow",{"_index":134,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["deleteinfowindow(infowindow",{"_index":162,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["deletemarker",{"_index":422,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["deletemarker(marker",{"_index":440,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["dependencies",{"_index":992,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":1017,"title":{},"body":{"index.html":{}}}],["described",{"_index":1044,"title":{},"body":{"index.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"index.html":{}}}],["dev",{"_index":1016,"title":{},"body":{"index.html":{}}}],["different",{"_index":402,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["directive",{"_index":536,"title":{"directives/NgMapsFitBounds.html":{}},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":537,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["directives/fit",{"_index":527,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["directives/info",{"_index":177,"title":{},"body":{"injectables/InfoWindowManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/map",{"_index":179,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/marker",{"_index":464,"title":{},"body":{"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{}}}],["directives/services/pipes",{"_index":511,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["disable",{"_index":653,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["disableautopan",{"_index":212,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["displayed",{"_index":675,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["displaying",{"_index":386,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["distinct",{"_index":368,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["distinctuntilchanged",{"_index":583,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["document",{"_index":238,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["documentation",{"_index":962,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":621,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["don't",{"_index":605,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["drag",{"_index":772,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["dragend",{"_index":773,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["draggable",{"_index":487,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["dragged",{"_index":797,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["dragging",{"_index":821,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["drags",{"_index":818,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["dragstart",{"_index":774,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["drop",{"_index":853,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ds",{"_index":923,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["e",{"_index":221,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["each",{"_index":369,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["editors",{"_index":275,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["element",{"_index":561,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["elementref",{"_index":705,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["emits",{"_index":687,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["emitted",{"_index":826,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["emitter",{"_index":825,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["empty",{"_index":336,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["entry.key}=${entry.value",{"_index":350,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["enum",{"_index":407,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["enumerations",{"_index":998,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":297,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["error('expected",{"_index":881,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["event",{"_index":158,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["eventemitter",{"_index":685,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["eventname",{"_index":161,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["example",{"_index":546,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["exports",{"_index":532,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"overview.html":{}}}],["extends",{"_index":227,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["fail",{"_index":376,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["false",{"_index":609,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["feature",{"_index":15,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["features",{"_index":1047,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["filter((k",{"_index":333,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["find",{"_index":1050,"title":{},"body":{"index.html":{}}}],["fired",{"_index":816,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["first",{"_index":955,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["fit",{"_index":13,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["fitbounds",{"_index":1029,"title":{},"body":{"index.html":{}}}],["fitboundsaccessor",{"_index":1,"title":{"classes/FitBoundsAccessor.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["fitboundsdetails",{"_index":45,"title":{"interfaces/FitBoundsDetails.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["fitboundsservice",{"_index":52,"title":{"injectables/FitBoundsService.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"coverage.html":{}}}],["flatmap",{"_index":32,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["force",{"_index":392,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["foreground",{"_index":785,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["forroot",{"_index":516,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["forroot(lazymapsapiloaderconfig",{"_index":517,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["forwardref",{"_index":760,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["from(loader.load()).pipe",{"_index":64,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["front",{"_index":678,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["fully",{"_index":655,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["function",{"_index":529,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{}}}],["functions",{"_index":1000,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":812,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["getbounds",{"_index":92,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["getfitboundsdetails",{"_index":20,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["getnativemarker",{"_index":423,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["getnativemarker(marker",{"_index":442,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["gets",{"_index":562,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["getting",{"_index":1002,"title":{"index.html":{}},"body":{}}],["github",{"_index":1053,"title":{},"body":{"index.html":{}}}],["given",{"_index":160,"title":{},"body":{"injectables/InfoWindowManager.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"directives/NgMapsFitBounds.html":{}}}],["google",{"_index":157,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["google.maps.animation[marker.animation",{"_index":501,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["google.maps.icon",{"_index":781,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["google.maps.infowindowoptions",{"_index":169,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["google.maps.latlng",{"_index":47,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["google.maps.latlngbounds",{"_index":76,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["google.maps.latlngliteral",{"_index":48,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["google.maps.marker",{"_index":444,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["google.maps.markerchangeoptioneventnames",{"_index":437,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["google.maps.markerlabel",{"_index":788,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["google.maps.markermouseeventnames",{"_index":438,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["google.maps.mouseevent",{"_index":926,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["googlemapsapiscript",{"_index":252,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["googlemapsapiwrapper",{"_index":140,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"coverage.html":{}}}],["googlemapsscriptprotocol",{"_index":257,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/enumerations.html":{}}}],["googlemapsscriptprotocol.auto",{"_index":305,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["googlemapsscriptprotocol.http",{"_index":307,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["googlemapsscriptprotocol.https",{"_index":301,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["graph",{"_index":1054,"title":{},"body":{"modules.html":{}}}],["handleinfowindowupdate",{"_index":766,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["happen",{"_index":271,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["height",{"_index":632,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["here",{"_index":613,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["hi",{"_index":635,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["higher",{"_index":677,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["hmr",{"_index":272,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["holds",{"_index":709,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["host",{"_index":379,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["hostandpath",{"_index":310,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["hostmarker",{"_index":639,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["html",{"_index":750,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["htmlelement",{"_index":242,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["http",{"_index":308,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/enumerations.html":{}}}],["https",{"_index":309,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/enumerations.html":{}}}],["https://developers.google.com/maps/documentation/javascript/basics#language",{"_index":395,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["https://developers.google.com/maps/documentation/javascript/basics#region",{"_index":405,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["https://developers.google.com/maps/documentation/javascript/get",{"_index":358,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["https://developers.google.com/maps/documentation/javascript/libraries",{"_index":398,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["hybrid",{"_index":1035,"title":{},"body":{"index.html":{}}}],["i.addlistener(eventname",{"_index":220,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["i.join",{"_index":348,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["i.setoptions(options",{"_index":205,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["i.setposition",{"_index":193,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["i.setzindex(infowindow.zindex",{"_index":198,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["icon",{"_index":489,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["iconurl",{"_index":768,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["id",{"_index":81,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["identifier",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":784,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["implement",{"_index":9,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["implements",{"_index":542,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["import",{"_index":26,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["important",{"_index":954,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["included",{"_index":378,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["includeinbounds",{"_index":74,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["includeinbounds.foreach((b",{"_index":77,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["information",{"_index":388,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["infowindow",{"_index":150,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["infowindow.content.nativeelement",{"_index":207,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.disableautopan",{"_index":213,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.hostmarker",{"_index":201,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.latitude",{"_index":195,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.longitude",{"_index":197,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.maxwidth",{"_index":209,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindow.open",{"_index":916,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["infowindow.zindex",{"_index":211,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["infowindowclose",{"_index":648,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["infowindowid",{"_index":715,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["infowindowid++).tostring",{"_index":701,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["infowindowmanager",{"_index":125,"title":{"injectables/InfoWindowManager.html":{}},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{}}}],["infowindows",{"_index":674,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["inherited",{"_index":248,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["inject",{"_index":256,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["inject(document",{"_index":261,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["inject(lazy_maps_api_config",{"_index":260,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["injectable",{"_index":27,"title":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"coverage.html":{}}}],["injectables",{"_index":101,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"overview.html":{}}}],["injectiontoken",{"_index":406,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["injectiontoken('angular",{"_index":417,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":581,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["input('markerclickable",{"_index":875,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["input('markerdraggable",{"_index":874,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["inputs",{"_index":556,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["inside",{"_index":626,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["install",{"_index":1012,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1010,"title":{},"body":{"index.html":{}}}],["instance",{"_index":216,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["interface",{"_index":44,"title":{"interfaces/FitBoundsDetails.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"coverage.html":{}}}],["interfaces",{"_index":99,"title":{},"body":{"interfaces/FitBoundsDetails.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"overview.html":{}}}],["internal",{"_index":49,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["invisible",{"_index":572,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["isopen",{"_index":644,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["it's",{"_index":953,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["iwindow",{"_index":184,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["iwindow.close",{"_index":191,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["javascript",{"_index":787,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["join",{"_index":342,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["k",{"_index":347,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["key",{"_index":314,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsMarkerComponent.html":{}}}],["label",{"_index":485,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["language",{"_index":329,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["lat",{"_index":194,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["latestfitboundsdetails",{"_index":607,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["latitude",{"_index":645,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["latitudes",{"_index":681,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["latlng",{"_index":46,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"components/NgMapsMarkerComponent.html":{}}}],["latlng.lat}+${latlng.lng",{"_index":95,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["latlngbounds",{"_index":1031,"title":{},"body":{"index.html":{}}}],["latlngboundsliteral",{"_index":1030,"title":{},"body":{"index.html":{}}}],["layer",{"_index":1043,"title":{},"body":{"index.html":{}}}],["layers",{"_index":1038,"title":{},"body":{"index.html":{}}}],["layertypes",{"_index":1063,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lazy",{"_index":259,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["lazy_maps_api_config",{"_index":258,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lazymapsapiloader",{"_index":223,"title":{"injectables/LazyMapsAPILoader.html":{}},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lazymapsapiloaderconfig",{"_index":416,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"miscellaneous/variables.html":{}}}],["lazymapsapiloaderconfigliteral",{"_index":237,"title":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"coverage.html":{}}}],["legend",{"_index":749,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"overview.html":{}}}],["level",{"_index":522,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["libraries",{"_index":325,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["library",{"_index":1009,"title":{},"body":{"index.html":{}}}],["license",{"_index":373,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["line:no",{"_index":872,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["link",{"_index":415,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["listener",{"_index":159,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["literal",{"_index":841,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["lng",{"_index":196,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["load",{"_index":235,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["loaded",{"_index":267,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["loader",{"_index":42,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["loader.ts",{"_index":226,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["loader.ts:13",{"_index":254,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:14",{"_index":250,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:15",{"_index":251,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:16",{"_index":253,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:17",{"_index":239,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:30",{"_index":247,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:5",{"_index":418,"title":{},"body":{"injectables/MapsAPILoader.html":{}}}],["loader.ts:58",{"_index":243,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:70",{"_index":246,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["loader.ts:9",{"_index":956,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["loader/lazy",{"_index":225,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["loader/maps",{"_index":41,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/MapsAPILoader.html":{},"modules/NgMapsCoreModule.html":{},"coverage.html":{}}}],["loader/noop",{"_index":950,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["location",{"_index":566,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["longitude",{"_index":646,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["lower",{"_index":679,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["m",{"_index":465,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.addlistener(eventname",{"_index":503,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setanimation(google.maps.animation[marker.animation",{"_index":481,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setanimation(marker.animation",{"_index":482,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setclickable(marker.clickable",{"_index":479,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setdraggable(marker.draggable",{"_index":474,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.seticon(marker.iconurl",{"_index":475,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setlabel(marker.label",{"_index":473,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setmap(null",{"_index":467,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setopacity(marker.opacity",{"_index":476,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setposition",{"_index":469,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.settitle(marker.title",{"_index":472,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setvisible(marker.visible",{"_index":477,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["m.setzindex(marker.zindex",{"_index":478,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["make",{"_index":10,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["manager",{"_index":182,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["manager.ts",{"_index":128,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"coverage.html":{}}}],["manager.ts:100",{"_index":154,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:107",{"_index":443,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:11",{"_index":463,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:111",{"_index":439,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:14",{"_index":175,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["manager.ts:17",{"_index":145,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:21",{"_index":441,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:25",{"_index":163,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:34",{"_index":456,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:38",{"_index":172,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:39",{"_index":460,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:44",{"_index":454,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:46",{"_index":174,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:49",{"_index":450,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:51",{"_index":166,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:54",{"_index":452,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:59",{"_index":458,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:64",{"_index":152,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["manager.ts:69",{"_index":170,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["manager.ts:74",{"_index":448,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:77",{"_index":149,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["manager.ts:79",{"_index":446,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["manager.ts:88",{"_index":436,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["map",{"_index":33,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["map((entry",{"_index":349,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["map((includeinbounds",{"_index":69,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["map((k",{"_index":341,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["map.component.html",{"_index":860,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["mapfitbounds",{"_index":549,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["maps",{"_index":39,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["maps.googleapis.com/maps/api/js",{"_index":312,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["maps/core",{"_index":1005,"title":{},"body":{"index.html":{}}}],["mapsapiloader",{"_index":38,"title":{"injectables/MapsAPILoader.html":{}},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"modules/NgMapsCoreModule.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["mapsapiloader:5",{"_index":249,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["maptypeid",{"_index":1033,"title":{},"body":{"index.html":{}}}],["marker",{"_index":181,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["marker's",{"_index":799,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["marker'},{'name",{"_index":754,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["marker.animation",{"_index":480,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.clickable",{"_index":499,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.draggable",{"_index":488,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.hostmarker",{"_index":884,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["marker.iconurl",{"_index":490,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.label",{"_index":486,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.latitude",{"_index":470,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.longitude",{"_index":471,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.opacity",{"_index":492,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.title",{"_index":497,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.visible",{"_index":494,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["marker.zindex",{"_index":495,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["markerclick",{"_index":775,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["markerclickable",{"_index":769,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markerdraggable",{"_index":770,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markericon",{"_index":786,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markerid",{"_index":869,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["markerid++).tostring",{"_index":876,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markermanager",{"_index":144,"title":{"injectables/MarkerManager.html":{}},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["markerrightclick",{"_index":776,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["markers",{"_index":684,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["matching",{"_index":97,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":665,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["maxwidth",{"_index":208,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["maxzoom",{"_index":1026,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":547,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["method",{"_index":519,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["methods",{"_index":18,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["minzoom",{"_index":1025,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":997,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modular",{"_index":1007,"title":{},"body":{"index.html":{}}}],["module",{"_index":504,"title":{"modules/NgMapsCoreModule.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"overview.html":{}}}],["modules",{"_index":506,"title":{"modules.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":524,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["more",{"_index":882,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["mouseout",{"_index":777,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["mouseover",{"_index":778,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["mouses",{"_index":831,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["mycomponent",{"_index":861,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["name",{"_index":108,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["native",{"_index":710,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["need",{"_index":611,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"index.html":{}}}],["new",{"_index":59,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newfitboundsdetails",{"_index":573,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["next",{"_index":871,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ng",{"_index":1004,"title":{},"body":{"index.html":{}}}],["ngaftercontentinit",{"_index":767,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ngmapscoremodule",{"_index":505,"title":{"modules/NgMapsCoreModule.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"modules.html":{}}}],["ngmapscoremodule.forroot",{"_index":512,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["ngmapscoremodule.forroot({apikey",{"_index":1021,"title":{},"body":{"index.html":{}}}],["ngmapsfitbounds",{"_index":526,"title":{"directives/NgMapsFitBounds.html":{}},"body":{"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapsinfowindowcomponent",{"_index":148,"title":{"components/NgMapsInfoWindowComponent.html":{}},"body":{"injectables/InfoWindowManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapsinfowindowcomponent._infowindowoptionsinputs.includes(k",{"_index":739,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["ngmapsmarker",{"_index":942,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["ngmapsmarkercomponent",{"_index":435,"title":{"components/NgMapsMarkerComponent.html":{}},"body":{"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmapsviewcomponent",{"_index":178,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["ngmodule",{"_index":525,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["ngonchanges",{"_index":553,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ngonchanges(changes",{"_index":574,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ngondestroy",{"_index":554,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ngoninit",{"_index":555,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["ngzone",{"_index":142,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["noopmapsapiloader",{"_index":949,"title":{"classes/NoOpMapsAPILoader.html":{}},"body":{"classes/NoOpMapsAPILoader.html":{},"coverage.html":{}}}],["now",{"_index":1018,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1011,"title":{},"body":{"index.html":{}}}],["null",{"_index":187,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["number",{"_index":90,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["number(this.latitude",{"_index":885,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["number(this.longitude",{"_index":886,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["object",{"_index":414,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/variables.html":{}}}],["object.keys(changes).filter((k",{"_index":738,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["object.keys(queryparams",{"_index":332,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["observable",{"_index":25,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["observable((observer",{"_index":219,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["observer",{"_index":176,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["observer.next(e",{"_index":222,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["old",{"_index":600,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["onchanges",{"_index":545,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ondestroy",{"_index":544,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["one",{"_index":601,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["oninit",{"_index":543,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["opacity",{"_index":491,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["open",{"_index":135,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["open(infowindow",{"_index":165,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["openinfowindow",{"_index":771,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["opens",{"_index":656,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["optional",{"_index":109,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["optionkeys",{"_index":737,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["optionkeys.foreach((k",{"_index":740,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["options",{"_index":168,"title":{},"body":{"injectables/InfoWindowManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"index.html":{}}}],["options.position",{"_index":215,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["options[k",{"_index":741,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["order",{"_index":676,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ouside",{"_index":662,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["out",{"_index":1051,"title":{},"body":{"index.html":{},"overview.html":{}}}],["output",{"_index":712,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["outputs",{"_index":647,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["outside",{"_index":832,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["over",{"_index":834,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["overview",{"_index":1056,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":390,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["package",{"_index":991,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":268,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"index.html":{}}}],["pan",{"_index":654,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["parameter",{"_index":362,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["parameters",{"_index":107,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["params",{"_index":331,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["path",{"_index":380,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["peer",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":588,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["plan",{"_index":372,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["plans",{"_index":361,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["play",{"_index":855,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["please",{"_index":412,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"miscellaneous/variables.html":{}}}],["position",{"_index":484,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["possible",{"_index":569,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["preferred",{"_index":385,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["premium",{"_index":360,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["private",{"_index":72,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["project",{"_index":1052,"title":{},"body":{"index.html":{}}}],["promise",{"_index":164,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["promise((resolve",{"_index":292,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["promise.resolve",{"_index":269,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["properties",{"_index":100,"title":{},"body":{"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["protected",{"_index":56,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["protocol",{"_index":302,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["protocoltype",{"_index":299,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["protocol}//${hostandpath}?${params",{"_index":351,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["provide",{"_index":413,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsMarkerComponent.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1048,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":183,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["providers",{"_index":533,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"overview.html":{}}}],["quarterly",{"_index":318,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["querylist",{"_index":856,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["queryparams",{"_index":313,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["queryparams[k",{"_index":334,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["queryparams[k].length",{"_index":339,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["rc",{"_index":919,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["readme",{"_index":756,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["readonly",{"_index":57,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/LazyMapsAPILoader.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["ready",{"_index":1019,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":667,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["region",{"_index":327,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["register",{"_index":520,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["registered",{"_index":945,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["reject",{"_index":293,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["reject(error",{"_index":298,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["remove",{"_index":335,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"directives/NgMapsFitBounds.html":{}}}],["removefrombounds",{"_index":104,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["removefrombounds(latlng",{"_index":87,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["rename",{"_index":873,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["renders",{"_index":625,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["repeatedly",{"_index":815,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["replaysubject",{"_index":845,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["replaysubject(1",{"_index":846,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["reset",{"_index":1058,"title":{},"body":{"overview.html":{}}}],["resolve",{"_index":295,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["responsible",{"_index":53,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["result",{"_index":96,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":98,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":79,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["returns",{"_index":23,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["rightclicks",{"_index":829,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["roadmap",{"_index":1034,"title":{},"body":{"index.html":{}}}],["root",{"_index":521,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["rxjs",{"_index":31,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["rxjs/operators",{"_index":37,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["s.unsubscribe",{"_index":948,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["sample",{"_index":34,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["satellite",{"_index":1036,"title":{},"body":{"index.html":{}}}],["screen",{"_index":811,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["script",{"_index":279,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["script.async",{"_index":283,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["script.defer",{"_index":285,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["script.id",{"_index":286,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["script.src",{"_index":288,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["script.type",{"_index":281,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["scriptelem",{"_index":244,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["scriptelem.onerror",{"_index":296,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["scriptonpage",{"_index":276,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["see",{"_index":357,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsMarkerComponent.html":{}}}],["selector",{"_index":548,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["self",{"_index":582,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["seperated",{"_index":344,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["serve",{"_index":401,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["services/fit",{"_index":585,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsMarkerComponent.html":{}}}],["services/managers/info",{"_index":714,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["services/managers/marker",{"_index":868,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["services/maps",{"_index":528,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["set",{"_index":606,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"index.html":{}}}],["setoptions",{"_index":136,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setoptions(infowindow",{"_index":167,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setposition",{"_index":137,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setposition(infowindow",{"_index":171,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["sets",{"_index":658,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["setting",{"_index":394,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["setzindex",{"_index":138,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["setzindex(infowindow",{"_index":173,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["shakable",{"_index":1008,"title":{},"body":{"index.html":{}}}],["sharereplay",{"_index":35,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["sharereplay(1",{"_index":71,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["simple",{"_index":1006,"title":{},"body":{"index.html":{}}}],["simplechange",{"_index":867,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["simplechanges",{"_index":575,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["single",{"_index":55,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"components/NgMapsMarkerComponent.html":{}}}],["situations",{"_index":273,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["src/.../core.module.ts",{"_index":1001,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../fit",{"_index":1062,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../info",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../layers.ts",{"_index":1064,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../lazy",{"_index":999,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../marker.ts",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/core.module.ts",{"_index":507,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/core.module.ts:39",{"_index":518,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["src/lib/directives/fit",{"_index":538,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"coverage.html":{}}}],["src/lib/directives/info",{"_index":623,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/directives/map.ts",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["src/lib/directives/marker.ts",{"_index":757,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/directives/marker.ts:103",{"_index":803,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:108",{"_index":798,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:116",{"_index":809,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:122",{"_index":794,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:128",{"_index":854,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:133",{"_index":824,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:140",{"_index":828,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:145",{"_index":822,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:152",{"_index":814,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:159",{"_index":819,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:166",{"_index":833,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:173",{"_index":830,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:180",{"_index":858,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:184",{"_index":849,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:185",{"_index":848,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:186",{"_index":851,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:188",{"_index":847,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:190",{"_index":780,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:199",{"_index":840,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:204",{"_index":838,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:216",{"_index":842,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:273",{"_index":837,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:277",{"_index":836,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:283",{"_index":835,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:338",{"_index":839,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:343",{"_index":844,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:348",{"_index":843,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:65",{"_index":792,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:70",{"_index":793,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:75",{"_index":807,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:80",{"_index":789,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:86",{"_index":796,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:93",{"_index":782,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/directives/marker.ts:98",{"_index":808,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["src/lib/interface/layers.ts",{"_index":1065,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/services/fit",{"_index":6,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/services/google",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["src/lib/services/managers/info",{"_index":126,"title":{},"body":{"injectables/InfoWindowManager.html":{},"coverage.html":{}}}],["src/lib/services/managers/marker",{"_index":419,"title":{},"body":{"injectables/MarkerManager.html":{},"coverage.html":{}}}],["src/lib/services/maps",{"_index":224,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MapsAPILoader.html":{},"classes/NoOpMapsAPILoader.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["stackblitz.io",{"_index":274,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["standalone",{"_index":627,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["start",{"_index":1020,"title":{},"body":{"index.html":{}}}],["started",{"_index":1003,"title":{"index.html":{}},"body":{}}],["starts",{"_index":823,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["state",{"_index":570,"title":{},"body":{"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["statements",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":515,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["status",{"_index":568,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["still",{"_index":610,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["stops",{"_index":820,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["string",{"_index":94,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["strings",{"_index":345,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["styles",{"_index":630,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["subject",{"_index":579,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["submodules",{"_index":1049,"title":{},"body":{"index.html":{}}}],["subscribe",{"_index":732,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["subscribe((details",{"_index":596,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["subscribe((e",{"_index":925,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["subscription",{"_index":850,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["subscriptions",{"_index":946,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["super",{"_index":262,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["sure",{"_index":959,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["switch",{"_index":303,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["switchmap",{"_index":36,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["t",{"_index":155,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["table",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":382,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["takeuntil",{"_index":584,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["takeuntil(this._destroyed",{"_index":595,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["template",{"_index":634,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["templateurl",{"_index":859,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["terrain",{"_index":1037,"title":{},"body":{"index.html":{}}}],["text/javascript",{"_index":282,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["textual",{"_index":387,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["this._addeventlisteners",{"_index":890,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._assignscriptloadingpromise(script",{"_index":290,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._assignscriptloadingpromise(scriptonpage",{"_index":278,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._boundschangesampletime$.next(timems",{"_index":91,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._boundschangesampletime$.pipe(switchmap((time",{"_index":66,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._config",{"_index":263,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.apikey",{"_index":320,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.apiversion",{"_index":317,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.channel",{"_index":324,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.clientid",{"_index":322,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.hostandpath",{"_index":311,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.language",{"_index":330,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.libraries",{"_index":326,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.protocol",{"_index":300,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._config.region",{"_index":328,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._createidentifier(latlng",{"_index":82,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._destroyed$.complete",{"_index":619,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._destroyed$.next",{"_index":618,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._document",{"_index":264,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._document.body.appendchild(script",{"_index":291,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._document.createelement('script",{"_index":280,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._document.getelementbyid(this._script_id",{"_index":277,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._fitboundsaccessor",{"_index":587,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._fitboundsdetails$.asobservable",{"_index":909,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._fitboundsdetails$.next",{"_index":910,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._fitboundsservice.addtobounds(this._latestfitboundsdetails.latlng",{"_index":615,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._fitboundsservice.removefrombounds",{"_index":616,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._fitboundsservice.removefrombounds(this._latestfitboundsdetails.latlng",{"_index":604,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._generatebounds(includeinbounds",{"_index":70,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._getscriptsrc(this.callbackname",{"_index":289,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._id",{"_index":746,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["this._id.tostring",{"_index":747,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._includeinbounds",{"_index":65,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.next(bounds",{"_index":86,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.value",{"_index":84,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._includeinbounds$.value.has(id",{"_index":83,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this._infowindowaddedtomanager",{"_index":718,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager",{"_index":730,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.addinfowindow(this).then",{"_index":717,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.close(this",{"_index":745,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.deleteinfowindow(this",{"_index":748,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.open(this",{"_index":744,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setoptions(this",{"_index":743,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setposition(this",{"_index":725,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindowmanager.setzindex(this",{"_index":727,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._infowindows.delete(infowindow",{"_index":192,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._infowindows.get(infowindow",{"_index":186,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._infowindows.set(infowindow",{"_index":218,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._latestfitboundsdetails",{"_index":603,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._latestfitboundsdetails.latlng",{"_index":617,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._mapswrapper.createinfowindow(options",{"_index":217,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._mapswrapper.createmarker",{"_index":483,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._mapswrapper.getnativemap",{"_index":200,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._markeraddedtomanger",{"_index":887,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._markermanager.getnativemarker",{"_index":202,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["this._markers.delete(marker",{"_index":468,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._markers.get(marker",{"_index":466,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._markers.set(marker",{"_index":502,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["this._observablesubscriptions.foreach((s",{"_index":947,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(cs",{"_index":918,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(d",{"_index":932,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(dragend",{"_index":935,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(ds",{"_index":928,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(mouseout",{"_index":941,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(mouseover",{"_index":938,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._observablesubscriptions.push(rc",{"_index":922,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._registereventlisteners",{"_index":720,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._script_id",{"_index":287,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._scriptloadingpromise",{"_index":270,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["this._setinfowindowoptions(changes",{"_index":729,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._updatebounds",{"_index":586,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._updatebounds(details",{"_index":597,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this._updatefitboundsdetails",{"_index":889,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this._updateopenstate",{"_index":719,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this._zone.run",{"_index":190,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["this.bounds",{"_index":63,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["this.close",{"_index":736,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.drag.emit(e",{"_index":931,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.dragend.emit(e",{"_index":934,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.dragstart.emit(e",{"_index":927,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.handleinfowindowupdate",{"_index":877,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.changes.subscribe",{"_index":878,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.foreach((infowindow",{"_index":915,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.foreach((marker",{"_index":883,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindow.length",{"_index":879,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.infowindowclose.emit",{"_index":734,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.isopen",{"_index":733,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.latitude",{"_index":723,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["this.longitude",{"_index":724,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["this.mapfitbounds",{"_index":614,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["this.markerclick.emit(this",{"_index":917,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager",{"_index":912,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.addmarker(this).then",{"_index":888,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.deletemarker(this",{"_index":943,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateanimation(this",{"_index":908,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateclickable(this",{"_index":906,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatedraggable(this",{"_index":897,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateicon(this",{"_index":899,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatelabel(this",{"_index":895,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatemarkerposition(this",{"_index":891,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updateopacity(this",{"_index":901,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatetitle(this",{"_index":893,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatevisible(this",{"_index":903,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markermanager.updatezindex(this",{"_index":904,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.markerrightclick.emit(null",{"_index":921,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.mouseout.emit(e",{"_index":940,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.mouseover.emit(e",{"_index":937,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["this.open",{"_index":735,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["this.openinfowindow",{"_index":914,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["throw",{"_index":880,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"classes/NoOpMapsAPILoader.html":{}}}],["tiles",{"_index":403,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["time",{"_index":68,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["timems",{"_index":117,"title":{},"body":{"injectables/FitBoundsService.html":{}}}],["timer",{"_index":30,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["timer(0",{"_index":67,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{}}}],["title",{"_index":496,"title":{},"body":{"injectables/MarkerManager.html":{},"components/NgMapsMarkerComponent.html":{}}}],["toggle",{"_index":608,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["token",{"_index":411,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"miscellaneous/variables.html":{}}}],["tostring",{"_index":643,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["track",{"_index":364,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["trafficlayer",{"_index":1039,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["transitlayer",{"_index":1040,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["tree",{"_index":622,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["true",{"_index":284,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["tslint:disable",{"_index":870,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["type",{"_index":50,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"injectables/MarkerManager.html":{},"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1060,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":214,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["types/googlemaps",{"_index":995,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["typescript",{"_index":628,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["typically",{"_index":1027,"title":{},"body":{"index.html":{}}}],["typings",{"_index":1015,"title":{},"body":{"index.html":{}}}],["under",{"_index":366,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["unsubscribe",{"_index":944,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["up",{"_index":813,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["update",{"_index":672,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["updateanimation",{"_index":424,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateanimation(marker",{"_index":445,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateclickable",{"_index":425,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateclickable(marker",{"_index":447,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatedraggable",{"_index":426,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatedraggable(marker",{"_index":449,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateicon",{"_index":427,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateicon(marker",{"_index":451,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatelabel",{"_index":428,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatelabel(marker",{"_index":453,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatemarkerposition",{"_index":429,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatemarkerposition(marker",{"_index":455,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateopacity",{"_index":430,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updateopacity(marker",{"_index":457,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatetitle",{"_index":431,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatetitle(marker",{"_index":459,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatevisible",{"_index":432,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatevisible(marker",{"_index":461,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatezindex",{"_index":433,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["updatezindex(marker",{"_index":462,"title":{},"body":{"injectables/MarkerManager.html":{}}}],["uppercase",{"_index":790,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["url",{"_index":783,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["usage",{"_index":365,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"index.html":{}}}],["use",{"_index":393,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"index.html":{}}}],["useclass",{"_index":534,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["used",{"_index":381,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{},"components/NgMapsInfoWindowComponent.html":{}}}],["useexisting",{"_index":759,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["usefull",{"_index":661,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["user",{"_index":817,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["uses",{"_index":383,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["usevalue",{"_index":535,"title":{},"body":{"modules/NgMapsCoreModule.html":{}}}],["using",{"_index":951,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["v",{"_index":316,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["value",{"_index":121,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":514,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["var",{"_index":751,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["variable",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1066,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":359,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["vertical",{"_index":810,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["via",{"_index":952,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["view",{"_index":631,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"index.html":{}}}],["viewchild",{"_index":713,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["viewchild('content",{"_index":707,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["visibility",{"_index":598,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["visible",{"_index":493,"title":{},"body":{"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["void",{"_index":115,"title":{},"body":{"injectables/FitBoundsService.html":{},"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"injectables/MarkerManager.html":{},"directives/NgMapsFitBounds.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["w",{"_index":199,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["w.close",{"_index":204,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["w.open(map",{"_index":203,"title":{},"body":{"injectables/InfoWindowManager.html":{}}}],["whether",{"_index":804,"title":{},"body":{"components/NgMapsMarkerComponent.html":{}}}],["width",{"_index":666,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window",{"_index":127,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/LazyMapsAPILoader.html":{},"modules/NgMapsCoreModule.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{},"coverage.html":{}}}],["window'},{'name",{"_index":753,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["window).google",{"_index":957,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["window).google.maps",{"_index":958,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["window.google.maps",{"_index":960,"title":{},"body":{"classes/NoOpMapsAPILoader.html":{}}}],["window.ts",{"_index":624,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["window.ts:104",{"_index":708,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:109",{"_index":657,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:114",{"_index":686,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:115",{"_index":703,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:116",{"_index":702,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:118",{"_index":698,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:127",{"_index":696,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:147",{"_index":689,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:156",{"_index":692,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:160",{"_index":691,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:174",{"_index":699,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:181",{"_index":693,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:187",{"_index":695,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:192",{"_index":700,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:197",{"_index":697,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:55",{"_index":650,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:58",{"_index":704,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:66",{"_index":660,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:72",{"_index":663,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:78",{"_index":652,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:86",{"_index":673,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:93",{"_index":664,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window.ts:98",{"_index":711,"title":{},"body":{"components/NgMapsInfoWindowComponent.html":{}}}],["window[this.callbackname",{"_index":294,"title":{},"body":{"injectables/LazyMapsAPILoader.html":{}}}],["wish",{"_index":389,"title":{},"body":{"interfaces/LazyMapsAPILoaderConfigLiteral.html":{}}}],["work",{"_index":11,"title":{},"body":{"classes/FitBoundsAccessor.html":{},"interfaces/FitBoundsDetails.html":{},"injectables/FitBoundsService.html":{},"directives/NgMapsFitBounds.html":{}}}],["wrapper",{"_index":180,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{}}}],["wrapper.ts",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["x",{"_index":589,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["x.latlng.lat",{"_index":591,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["x.latlng.lng",{"_index":593,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["y",{"_index":590,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["y.latlng.lat",{"_index":592,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["y.latlng.lng",{"_index":594,"title":{},"body":{"directives/NgMapsFitBounds.html":{}}}],["yarn",{"_index":1013,"title":{},"body":{"index.html":{}}}],["yes",{"_index":523,"title":{},"body":{"modules/NgMapsCoreModule.html":{},"directives/NgMapsFitBounds.html":{}}}],["your_api_key",{"_index":1022,"title":{},"body":{"index.html":{}}}],["zindex",{"_index":210,"title":{},"body":{"injectables/InfoWindowManager.html":{},"injectables/MarkerManager.html":{},"components/NgMapsInfoWindowComponent.html":{},"components/NgMapsMarkerComponent.html":{}}}],["zoom",{"_index":864,"title":{},"body":{"components/NgMapsMarkerComponent.html":{},"index.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/FitBoundsAccessor.html":{"url":"classes/FitBoundsAccessor.html","title":"class - FitBoundsAccessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FitBoundsAccessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/fit-bounds.ts\n        \n\n            \n                Description\n            \n            \n                Class to implement when you what to be able to make it work with the auto fit bounds feature\nof AGM.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getFitBoundsDetails$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getFitBoundsDetails$\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFitBoundsDetails$()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport { flatMap, map, sample, shareReplay, switchMap } from 'rxjs/operators';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: google.maps.LatLng | google.maps.LatLngLiteral;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      flatMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this._generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  private _generateBounds(\n    includeInBounds: Map,\n  ) {\n    const bounds = new google.maps.LatLngBounds();\n    includeInBounds.forEach((b) => bounds.extend(b));\n    return bounds;\n  }\n\n  addToBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  removeFromBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FitBoundsDetails.html":{"url":"interfaces/FitBoundsDetails.html","title":"interface - FitBoundsDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FitBoundsDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/fit-bounds.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        latLng\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latLng\n                                    \n                                \n                                \n                                    \n                                        latLng:     google.maps.LatLng | google.maps.LatLngLiteral\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     google.maps.LatLng | google.maps.LatLngLiteral\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport { flatMap, map, sample, shareReplay, switchMap } from 'rxjs/operators';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: google.maps.LatLng | google.maps.LatLngLiteral;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      flatMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this._generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  private _generateBounds(\n    includeInBounds: Map,\n  ) {\n    const bounds = new google.maps.LatLngBounds();\n    includeInBounds.forEach((b) => bounds.extend(b));\n    return bounds;\n  }\n\n  addToBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  removeFromBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FitBoundsService.html":{"url":"injectables/FitBoundsService.html","title":"injectable - FitBoundsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FitBoundsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/fit-bounds.ts\n        \n\n            \n                Description\n            \n            \n                The FitBoundsService is responsible for computing the bounds of the a single map.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                _boundsChangeSampleTime$\n                            \n                            \n                                    Protected\n                                    Readonly\n                                _includeInBounds$\n                            \n                            \n                                    Protected\n                                    Readonly\n                                bounds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _createIdentifier\n                            \n                            \n                                    Private\n                                _generateBounds\n                            \n                            \n                                addToBounds\n                            \n                            \n                                changeFitBoundsChangeSampleTime\n                            \n                            \n                                getBounds$\n                            \n                            \n                                removeFromBounds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/fit-bounds.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _createIdentifier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _createIdentifier(latLng: google.maps.LatLng | google.maps.LatLngLiteral)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                            google.maps.LatLng | google.maps.LatLngLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _generateBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _generateBounds(includeInBounds: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    includeInBounds\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addToBounds\n                        \n                        \n                    \n                \n            \n            \n                \naddToBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                            google.maps.LatLng | google.maps.LatLngLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeFitBoundsChangeSampleTime\n                        \n                        \n                    \n                \n            \n            \n                \nchangeFitBoundsChangeSampleTime(timeMs: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeMs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds$\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds$()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeFromBounds\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFromBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/fit-bounds.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                            google.maps.LatLng | google.maps.LatLngLiteral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            _boundsChangeSampleTime$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(\n    200,\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/fit-bounds.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            _includeInBounds$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(\n    new Map(),\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/fit-bounds.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            bounds$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/fit-bounds.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport { flatMap, map, sample, shareReplay, switchMap } from 'rxjs/operators';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\nexport interface FitBoundsDetails {\n  latLng: google.maps.LatLng | google.maps.LatLngLiteral;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  abstract getFitBoundsDetails$(): Observable;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport class FitBoundsService {\n  protected readonly bounds$: Observable;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject(\n    200,\n  );\n  protected readonly _includeInBounds$ = new BehaviorSubject(\n    new Map(),\n  );\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      flatMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap((time) => timer(0, time))),\n      ),\n      map((includeInBounds) => this._generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  private _generateBounds(\n    includeInBounds: Map,\n  ) {\n    const bounds = new google.maps.LatLngBounds();\n    includeInBounds.forEach((b) => bounds.extend(b));\n    return bounds;\n  }\n\n  addToBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const bounds = this._includeInBounds$.value;\n    bounds.set(id, latLng);\n    this._includeInBounds$.next(bounds);\n  }\n\n  removeFromBounds(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    const bounds = this._includeInBounds$.value;\n    bounds.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(bounds);\n  }\n\n  changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  getBounds$(): Observable {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(\n    latLng: google.maps.LatLng | google.maps.LatLngLiteral,\n  ): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InfoWindowManager.html":{"url":"injectables/InfoWindowManager.html","title":"injectable - InfoWindowManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InfoWindowManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/info-window-manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _infoWindows\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addInfoWindow\n                            \n                            \n                                close\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                    Async\n                                deleteInfoWindow\n                            \n                            \n                                    Async\n                                open\n                            \n                            \n                                setOptions\n                            \n                            \n                                setPosition\n                            \n                            \n                                setZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: GoogleMapsAPIWrapper, _zone: NgZone, _markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/info-window-manager.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        GoogleMapsAPIWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _markerManager\n                                                  \n                                                        \n                                                                        MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addInfoWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window-manager.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window-manager.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: string, infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window-manager.ts:100\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Creates a Google Maps event listener for the given InfoWindow as an Observable\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteInfoWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window-manager.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            open\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    open(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window-manager.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(infoWindow: NgMapsInfoWindowComponent, options: google.maps.InfoWindowOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window-manager.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.InfoWindowOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window-manager.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setZIndex\n                        \n                        \n                    \n                \n            \n            \n                \nsetZIndex(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/info-window-manager.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _infoWindows\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/managers/info-window-manager.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable, Observer } from 'rxjs';\nimport { Injectable, NgZone } from '@angular/core';\n\nimport { NgMapsInfoWindowComponent } from '../../directives/info-window';\nimport { NgMapsViewComponent } from '../../directives/map';\n\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport { MarkerManager } from './marker-manager';\n\n@Injectable({\n  providedIn: NgMapsViewComponent,\n})\nexport class InfoWindowManager {\n  private _infoWindows: Map = new Map();\n\n  constructor(\n    private _mapsWrapper: GoogleMapsAPIWrapper,\n    private _zone: NgZone,\n    private _markerManager: MarkerManager,\n  ) {}\n\n  async deleteInfoWindow(infoWindow: NgMapsInfoWindowComponent): Promise {\n    const iWindow = await this._infoWindows.get(infoWindow);\n    if (iWindow == null) {\n      // info window already deleted\n      return;\n    } else {\n      return this._zone.run(() => {\n        iWindow.close();\n        this._infoWindows.delete(infoWindow);\n      });\n    }\n  }\n\n  setPosition(infoWindow: NgMapsInfoWindowComponent): void {\n    const i = this._infoWindows.get(infoWindow);\n    i.setPosition({\n      lat: infoWindow.latitude,\n      lng: infoWindow.longitude,\n    });\n  }\n\n  setZIndex(infoWindow: NgMapsInfoWindowComponent): void {\n    const i = this._infoWindows.get(infoWindow);\n    i.setZIndex(infoWindow.zIndex);\n  }\n\n  async open(infoWindow: NgMapsInfoWindowComponent): Promise {\n    const w = this._infoWindows.get(infoWindow);\n    const map = await this._mapsWrapper.getNativeMap();\n    if (infoWindow.hostMarker != null) {\n      const marker = await this._markerManager.getNativeMarker(\n        infoWindow.hostMarker,\n      );\n      w.open(map, marker);\n    } else {\n      w.open(map);\n    }\n  }\n\n  close(infoWindow: NgMapsInfoWindowComponent): void {\n    const w = this._infoWindows.get(infoWindow);\n    w.close();\n  }\n\n  setOptions(\n    infoWindow: NgMapsInfoWindowComponent,\n    options: google.maps.InfoWindowOptions,\n  ) {\n    const i = this._infoWindows.get(infoWindow);\n    i.setOptions(options);\n  }\n\n  async addInfoWindow(infoWindow: NgMapsInfoWindowComponent) {\n    const options: google.maps.InfoWindowOptions = {\n      content: infoWindow.content.nativeElement,\n      maxWidth: infoWindow.maxWidth,\n      zIndex: infoWindow.zIndex,\n      disableAutoPan: infoWindow.disableAutoPan,\n    };\n    if (\n      typeof infoWindow.latitude === 'number' &&\n      typeof infoWindow.longitude === 'number'\n    ) {\n      options.position = {\n        lat: infoWindow.latitude,\n        lng: infoWindow.longitude,\n      };\n    }\n    const instance = await this._mapsWrapper.createInfoWindow(options);\n    this._infoWindows.set(infoWindow, instance);\n  }\n\n  /**\n   * Creates a Google Maps event listener for the given InfoWindow as an Observable\n   */\n  createEventObservable(\n    eventName: string,\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Observable {\n    const i = this._infoWindows.get(infoWindow);\n    return new Observable((observer: Observer) => {\n      i.addListener(eventName, (e: T) =>\n        this._zone.run(() => observer.next(e)),\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LazyMapsAPILoader.html":{"url":"injectables/LazyMapsAPILoader.html","title":"injectable - LazyMapsAPILoader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LazyMapsAPILoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/maps-api-loader/lazy-maps-api-loader.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MapsAPILoader\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                    Protected\n                                _document\n                            \n                            \n                                    Protected\n                                    Readonly\n                                _SCRIPT_ID\n                            \n                            \n                                    Protected\n                                _scriptLoadingPromise\n                            \n                            \n                                    Protected\n                                    Readonly\n                                callbackName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _assignScriptLoadingPromise\n                            \n                            \n                                    Protected\n                                _getScriptSrc\n                            \n                            \n                                load\n                            \n                            \n                                    Abstract\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: LazyMapsAPILoaderConfigLiteral, document: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        LazyMapsAPILoaderConfigLiteral\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _assignScriptLoadingPromise\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _assignScriptLoadingPromise(scriptElem: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scriptElem\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _getScriptSrc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getScriptSrc(callbackName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    callbackName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Inherited from         MapsAPILoader\n\n                \n            \n            \n                \n                        Defined in         MapsAPILoader:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LazyMapsAPILoaderConfigLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Document\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            _SCRIPT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'GoogleMapsApiScript'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _scriptLoadingPromise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            callbackName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : `LazyMapsAPILoader`\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/maps-api-loader/lazy-maps-api-loader.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GoogleMapsScriptProtocol,\n  LAZY_MAPS_API_CONFIG,\n  LazyMapsAPILoaderConfigLiteral,\n} from './lazy-maps-api-loader-config';\n\nimport { MapsAPILoader } from './maps-api-loader';\n\n@Injectable()\nexport class LazyMapsAPILoader extends MapsAPILoader {\n  protected _scriptLoadingPromise: Promise;\n  protected _config: LazyMapsAPILoaderConfigLiteral;\n  protected _document: Document;\n  protected readonly _SCRIPT_ID: string = 'GoogleMapsApiScript';\n  protected readonly callbackName: string = `LazyMapsAPILoader`;\n\n  constructor(\n    @Optional()\n    @Inject(LAZY_MAPS_API_CONFIG)\n    config: LazyMapsAPILoaderConfigLiteral = null,\n    @Inject(DOCUMENT) document: any,\n  ) {\n    super();\n    this._config = config || {};\n    this._document = document as Document;\n  }\n\n  load(): Promise {\n    if ((window as any).google && (window as any).google.maps) {\n      // Google maps already loaded on the page.\n      return Promise.resolve();\n    }\n\n    if (this._scriptLoadingPromise) {\n      return this._scriptLoadingPromise;\n    }\n\n    // this can happen in HMR situations or Stackblitz.io editors.\n    const scriptOnPage = this._document.getElementById(this._SCRIPT_ID);\n    if (scriptOnPage) {\n      this._assignScriptLoadingPromise(scriptOnPage);\n      return this._scriptLoadingPromise;\n    }\n\n    const script = this._document.createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.id = this._SCRIPT_ID;\n    script.src = this._getScriptSrc(this.callbackName);\n    this._assignScriptLoadingPromise(script);\n    this._document.body.appendChild(script);\n    return this._scriptLoadingPromise;\n  }\n\n  private _assignScriptLoadingPromise(scriptElem: HTMLElement) {\n    this._scriptLoadingPromise = new Promise((resolve, reject) => {\n      window[this.callbackName] = () => {\n        resolve();\n      };\n\n      scriptElem.onerror = (error: Event) => {\n        reject(error);\n      };\n    });\n  }\n\n  protected _getScriptSrc(callbackName: string): string {\n    const protocolType: GoogleMapsScriptProtocol =\n      (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n    let protocol: string;\n\n    switch (protocolType) {\n      case GoogleMapsScriptProtocol.AUTO:\n        protocol = '';\n        break;\n      case GoogleMapsScriptProtocol.HTTP:\n        protocol = 'http:';\n        break;\n      case GoogleMapsScriptProtocol.HTTPS:\n        protocol = 'https:';\n        break;\n    }\n\n    const hostAndPath: string =\n      this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n    const queryParams: { [key: string]: string | Array } = {\n      v: this._config.apiVersion || 'quarterly',\n      callback: callbackName,\n      key: this._config.apiKey,\n      client: this._config.clientId,\n      channel: this._config.channel,\n      libraries: this._config.libraries,\n      region: this._config.region,\n      language: this._config.language,\n    };\n    const params: string = Object.keys(queryParams)\n      .filter((k: string) => queryParams[k] != null)\n      .filter((k: string) => {\n        // remove empty arrays\n        return (\n          !Array.isArray(queryParams[k]) ||\n          (Array.isArray(queryParams[k]) && queryParams[k].length > 0)\n        );\n      })\n      .map((k: string) => {\n        // join arrays as comma seperated strings\n        const i = queryParams[k];\n        if (Array.isArray(i)) {\n          return { key: k, value: i.join(',') };\n        }\n        return { key: k, value: queryParams[k] };\n      })\n      .map((entry: { key: string; value: string }) => {\n        return `${entry.key}=${entry.value}`;\n      })\n      .join('&');\n    return `${protocol}//${hostAndPath}?${params}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LazyMapsAPILoaderConfigLiteral.html":{"url":"interfaces/LazyMapsAPILoaderConfigLiteral.html","title":"interface - LazyMapsAPILoaderConfigLiteral","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LazyMapsAPILoaderConfigLiteral\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/maps-api-loader/lazy-maps-api-loader-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the LazyMapsAPILoader.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        apiKey\n                                \n                                \n                                            Optional\n                                        apiVersion\n                                \n                                \n                                            Optional\n                                        channel\n                                \n                                \n                                            Optional\n                                        clientId\n                                \n                                \n                                            Optional\n                                        hostAndPath\n                                \n                                \n                                            Optional\n                                        language\n                                \n                                \n                                            Optional\n                                        libraries\n                                \n                                \n                                            Optional\n                                        protocol\n                                \n                                \n                                            Optional\n                                        region\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps API Key (see:\nhttps://developers.google.com/maps/documentation/javascript/get-api-key)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiVersion\n                                    \n                                \n                                \n                                    \n                                        apiVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Google Maps API version.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channel\n                                    \n                                \n                                \n                                    \n                                        channel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps channel name (for premium plans).\nA channel parameter is an optional parameter that allows you to track usage under your client\nID by assigning a distinct channel to each of your applications.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps client ID (for premium plans).\nWhen you have a Google Maps APIs Premium Plan license, you must authenticate\nyour application with either an API key or a client ID.\nThe Google Maps API will fail to load if both a client ID and an API key are included.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hostAndPath\n                                    \n                                \n                                \n                                    \n                                        hostAndPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Host and Path used for the  tag.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps API uses the browser's preferred language when displaying\ntextual information. If you wish to overwrite this behavior and force the API\nto use a given language, you can use this setting.\nSee https://developers.google.com/maps/documentation/javascript/basics#Language\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        libraries\n                                    \n                                \n                                \n                                    \n                                        libraries:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines which Google Maps libraries should get loaded.\nFor available libraries see: https://developers.google.com/maps/documentation/javascript/libraries\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        protocol\n                                    \n                                \n                                \n                                    \n                                        protocol:         GoogleMapsScriptProtocol\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GoogleMapsScriptProtocol\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Protocol used for the  tag.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                    \n                                \n                                \n                                    \n                                        region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The default bias for the map behavior is US.\nIf you wish to alter your application to serve different map tiles or bias the\napplication, you can overwrite the default behavior (US) by defining a region.\nSee https://developers.google.com/maps/documentation/javascript/basics#Region\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nexport enum GoogleMapsScriptProtocol {\n  HTTP = 1,\n  HTTPS = 2,\n  AUTO = 3,\n}\n\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link LazyMapsAPILoaderConfig}.\n */\nexport const LAZY_MAPS_API_CONFIG = new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\n\n/**\n * Configuration for the {@link LazyMapsAPILoader}.\n */\nexport interface LazyMapsAPILoaderConfigLiteral {\n  /**\n   * The Google Maps API Key (see:\n   * https://developers.google.com/maps/documentation/javascript/get-api-key)\n   */\n  apiKey?: string;\n\n  /**\n   * The Google Maps client ID (for premium plans).\n   * When you have a Google Maps APIs Premium Plan license, you must authenticate\n   * your application with either an API key or a client ID.\n   * The Google Maps API will fail to load if both a client ID and an API key are included.\n   */\n  clientId?: string;\n\n  /**\n   * The Google Maps channel name (for premium plans).\n   * A channel parameter is an optional parameter that allows you to track usage under your client\n   * ID by assigning a distinct channel to each of your applications.\n   */\n  channel?: string;\n\n  /**\n   * Google Maps API version.\n   */\n  apiVersion?: string;\n\n  /**\n   * Host and Path used for the `` tag.\n   */\n  hostAndPath?: string;\n\n  /**\n   * Protocol used for the `` tag.\n   */\n  protocol?: GoogleMapsScriptProtocol;\n\n  /**\n   * Defines which Google Maps libraries should get loaded.\n   * For available libraries see: https://developers.google.com/maps/documentation/javascript/libraries\n   */\n  libraries?: string[];\n\n  /**\n   * The default bias for the map behavior is US.\n   * If you wish to alter your application to serve different map tiles or bias the\n   * application, you can overwrite the default behavior (US) by defining a `region`.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Region\n   */\n  region?: string;\n\n  /**\n   * The Google Maps API uses the browser's preferred language when displaying\n   * textual information. If you wish to overwrite this behavior and force the API\n   * to use a given language, you can use this setting.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Language\n   */\n  language?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapsAPILoader.html":{"url":"injectables/MapsAPILoader.html","title":"injectable - MapsAPILoader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapsAPILoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/maps-api-loader/maps-api-loader.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/maps-api-loader.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport abstract class MapsAPILoader {\n  abstract load(): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarkerManager.html":{"url":"injectables/MarkerManager.html","title":"injectable - MarkerManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MarkerManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/managers/marker-manager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMarker\n                            \n                            \n                                createEventObservable\n                            \n                            \n                                deleteMarker\n                            \n                            \n                                getNativeMarker\n                            \n                            \n                                updateAnimation\n                            \n                            \n                                updateClickable\n                            \n                            \n                                updateDraggable\n                            \n                            \n                                updateIcon\n                            \n                            \n                                updateLabel\n                            \n                            \n                                updateMarkerPosition\n                            \n                            \n                                updateOpacity\n                            \n                            \n                                updateTitle\n                            \n                            \n                                updateVisible\n                            \n                            \n                                updateZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: GoogleMapsAPIWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/managers/marker-manager.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                        GoogleMapsAPIWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addMarker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEventObservable(eventName: google.maps.MarkerChangeOptionEventNames | google.maps.MarkerMouseEventNames, marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:111\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                            google.maps.MarkerChangeOptionEventNames | google.maps.MarkerMouseEventNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteMarker\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNativeMarker\n                        \n                        \n                    \n                \n            \n            \n                \ngetNativeMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     google.maps.Marker\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAnimation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAnimation(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateClickable\n                        \n                        \n                    \n                \n            \n            \n                \nupdateClickable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateDraggable\n                        \n                        \n                    \n                \n            \n            \n                \nupdateDraggable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateIcon\n                        \n                        \n                    \n                \n            \n            \n                \nupdateIcon(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLabel\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLabel(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateMarkerPosition\n                        \n                        \n                    \n                \n            \n            \n                \nupdateMarkerPosition(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOpacity\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOpacity(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTitle\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTitle(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateVisible\n                        \n                        \n                    \n                \n            \n            \n                \nupdateVisible(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateZIndex\n                        \n                        \n                    \n                \n            \n            \n                \nupdateZIndex(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/managers/marker-manager.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _markers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/managers/marker-manager.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { NgMapsViewComponent } from '../../directives/map';\n\nimport { NgMapsMarkerComponent } from '../../directives/marker';\n\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\n\n@Injectable()\nexport class MarkerManager {\n  protected _markers: Map = new Map();\n\n  constructor(\n    protected _mapsWrapper: GoogleMapsAPIWrapper,\n    protected _zone: NgZone,\n  ) {}\n\n  deleteMarker(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    if (m == null) {\n      // marker already deleted\n      return;\n    } else {\n      return this._zone.run(() => {\n        m.setMap(null);\n        this._markers.delete(marker);\n      });\n    }\n  }\n\n  updateMarkerPosition(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setPosition({ lat: marker.latitude, lng: marker.longitude });\n  }\n\n  updateTitle(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setTitle(marker.title);\n  }\n\n  updateLabel(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setLabel(marker.label);\n  }\n\n  updateDraggable(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setDraggable(marker.draggable);\n  }\n\n  updateIcon(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setIcon(marker.iconUrl);\n  }\n\n  updateOpacity(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setOpacity(marker.opacity);\n  }\n\n  updateVisible(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setVisible(marker.visible);\n  }\n\n  updateZIndex(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setZIndex(marker.zIndex);\n  }\n\n  updateClickable(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setClickable(marker.clickable);\n  }\n\n  updateAnimation(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    if (typeof marker.animation === 'string') {\n      m.setAnimation(google.maps.Animation[marker.animation]);\n    } else {\n      m.setAnimation(marker.animation);\n    }\n  }\n\n  async addMarker(marker: NgMapsMarkerComponent): Promise {\n    const m = await this._mapsWrapper.createMarker({\n      position: { lat: marker.latitude, lng: marker.longitude },\n      label: marker.label,\n      draggable: marker.draggable,\n      icon: marker.iconUrl,\n      opacity: marker.opacity,\n      visible: marker.visible,\n      zIndex: marker.zIndex,\n      title: marker.title,\n      clickable: marker.clickable,\n      animation:\n        typeof marker.animation === 'string'\n          ? google.maps.Animation[marker.animation]\n          : marker.animation,\n    });\n    this._markers.set(marker, m);\n  }\n\n  getNativeMarker(marker: NgMapsMarkerComponent): google.maps.Marker {\n    return this._markers.get(marker);\n  }\n\n  createEventObservable(\n    eventName:\n      | google.maps.MarkerChangeOptionEventNames\n      | google.maps.MarkerMouseEventNames,\n    marker: NgMapsMarkerComponent,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      const m = this._markers.get(marker);\n      m.addListener(eventName, (e: T) =>\n        this._zone.run(() => observer.next(e)),\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgMapsCoreModule.html":{"url":"modules/NgMapsCoreModule.html","title":"module - NgMapsCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    NgMapsCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The angular-google-maps core module. Contains all Directives/Services/Pipes\nof the core module. Please use NgMapsCoreModule.forRoot() in your app module.\nProvide configuration with values defined by LazyMapsAPILoaderConfigLiteral\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(lazyMapsAPILoaderConfig?: LazyMapsAPILoaderConfigLiteral)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/core.module.ts:39\n                \n            \n\n\n            \n                \n                    Please use this method when you register the module at the root level.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lazyMapsAPILoaderConfig\n                                    \n                                                LazyMapsAPILoaderConfigLiteral\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NgMapsFitBounds } from './directives/fit-bounds';\nimport { NgMapsInfoWindowComponent } from './directives/info-window';\nimport { NgMapsViewComponent } from './directives/map';\nimport { NgMapsMarkerComponent } from './directives/marker';\nimport { LazyMapsAPILoader } from './services/maps-api-loader/lazy-maps-api-loader';\nimport {\n  LAZY_MAPS_API_CONFIG,\n  LazyMapsAPILoaderConfigLiteral,\n} from './services/maps-api-loader/lazy-maps-api-loader-config';\nimport { MapsAPILoader } from './services/maps-api-loader/maps-api-loader';\n\n/**\n * @internal\n */\nexport function coreDirectives() {\n  return [\n    NgMapsViewComponent,\n    NgMapsMarkerComponent,\n    NgMapsInfoWindowComponent,\n    NgMapsFitBounds,\n  ];\n}\n\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `NgMapsCoreModule.forRoot()` in your app module.\n *\n * Provide configuration with values defined by {@link LazyMapsAPILoaderConfigLiteral}\n */\n@NgModule({\n  declarations: coreDirectives(),\n  exports: coreDirectives(),\n})\nexport class NgMapsCoreModule {\n  /**\n   * Please use this method when you register the module at the root level.\n   */\n  static forRoot(\n    lazyMapsAPILoaderConfig?: LazyMapsAPILoaderConfigLiteral,\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgMapsCoreModule,\n      providers: [\n        { provide: MapsAPILoader, useClass: LazyMapsAPILoader },\n        { provide: LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgMapsFitBounds.html":{"url":"directives/NgMapsFitBounds.html","title":"directive - NgMapsFitBounds","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgMapsFitBounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/fit-bounds.ts\n        \n\n            \n                Description\n            \n            \n                Adds the given directive to the auto fit bounds feature when the value is true.\nTo make it work with you custom AGM component, you also have to implement the FitBoundsAccessor abstract class.\n\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n                            OnChanges\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mapFitBounds]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _destroyed$\n                            \n                            \n                                    Private\n                                _latestFitBoundsDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _updateBounds\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapFitBounds\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_fitBoundsAccessor: FitBoundsAccessor, _fitBoundsService: FitBoundsService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/fit-bounds.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fitBoundsAccessor\n                                                  \n                                                        \n                                                                        FitBoundsAccessor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fitBoundsService\n                                                  \n                                                        \n                                                                        FitBoundsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapFitBounds\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/fit-bounds.ts:32\n                            \n                        \n                \n                    \n                        If the value is true, the element gets added to the bounds of the map.\nDefault: true.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _updateBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateBounds(newFitBoundsDetails?: FitBoundsDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:72\n                \n            \n\n\n            \n                \n                    Either the location changed, or visible status changed.\nPossible state changes are\ninvisible -> visible\nvisible -> invisible\nvisible -> visible (new location)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newFitBoundsDetails\n                                    \n                                                FitBoundsDetails\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/fit-bounds.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _destroyed$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/fit-bounds.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _latestFitBoundsDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FitBoundsDetails | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/fit-bounds.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Self,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport {\n  FitBoundsAccessor,\n  FitBoundsDetails,\n  FitBoundsService,\n} from '../services/fit-bounds';\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * \n */\n@Directive({\n  selector: '[mapFitBounds]',\n})\nexport class NgMapsFitBounds implements OnInit, OnDestroy, OnChanges {\n  /**\n   * If the value is true, the element gets added to the bounds of the map.\n   * Default: true.\n   */\n  @Input() mapFitBounds: boolean = true;\n\n  private _destroyed$: Subject = new Subject();\n  private _latestFitBoundsDetails: FitBoundsDetails | null = null;\n\n  constructor(\n    @Self() private readonly _fitBoundsAccessor: FitBoundsAccessor,\n    private readonly _fitBoundsService: FitBoundsService,\n  ) {}\n\n  /**\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    this._updateBounds();\n  }\n\n  /**\n   * @internal\n   */\n  ngOnInit() {\n    this._fitBoundsAccessor\n      .getFitBoundsDetails$()\n      .pipe(\n        distinctUntilChanged(\n          (x: FitBoundsDetails, y: FitBoundsDetails) =>\n            x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng,\n        ),\n        takeUntil(this._destroyed$),\n      )\n      .subscribe((details) => this._updateBounds(details));\n  }\n\n  /**\n   * Either the location changed, or visible status changed.\n   * Possible state changes are\n   * invisible -> visible\n   * visible -> invisible\n   * visible -> visible (new location)\n   */\n  private _updateBounds(newFitBoundsDetails?: FitBoundsDetails) {\n    // either visibility will change, or location, so remove the old one anyway\n    if (this._latestFitBoundsDetails) {\n      this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n      // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n      // true -> false -> true, in which case we still need old value cached here\n    }\n\n    if (newFitBoundsDetails) {\n      this._latestFitBoundsDetails = newFitBoundsDetails;\n    }\n    if (this._latestFitBoundsDetails) {\n      if (this.mapFitBounds === true) {\n        this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n      } else {\n        this._fitBoundsService.removeFromBounds(\n          this._latestFitBoundsDetails.latLng,\n        );\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy() {\n    this._destroyed$.next();\n    this._destroyed$.complete();\n    if (this._latestFitBoundsDetails !== null) {\n      this._fitBoundsService.removeFromBounds(\n        this._latestFitBoundsDetails.latLng,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgMapsInfoWindowComponent.html":{"url":"components/NgMapsInfoWindowComponent.html","title":"component - NgMapsInfoWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgMapsInfoWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/directives/info-window.ts\n\n\n    \n        Description\n    \n    \n        NgMapsInfoWindowComponent renders a info window inside a NgMapsMarkerComponent or standalone.\nExample\n```typescript\n\nimport { Component } from '@angular/core';\n\n@Component({\nselector: 'my-map-cmp',\nstyles: [map-view {\n  height: 300px;\n}],\ntemplate: `\n\n  \n  Hi, this is the content of the info window\n  \n\n`\n})\n```\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                InfoWindowManager\n                \n            \n\n\n            \n                selector\n                agm-info-window, map-info-window\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _infoWindowAddedToManager\n                            \n                            \n                                    Private\n                                    Static\n                                _infoWindowOptionsInputs\n                            \n                            \n                                content\n                            \n                            \n                                hostMarker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerEventListeners\n                            \n                            \n                                    Private\n                                _setInfoWindowOptions\n                            \n                            \n                                    Private\n                                _updateOpenState\n                            \n                            \n                                    Async\n                                close\n                            \n                            \n                                id\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableAutoPan\n                            \n                            \n                                isOpen\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                maxWidth\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                infoWindowClose\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_infoWindowManager: InfoWindowManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/info-window.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _infoWindowManager\n                                                  \n                                                        \n                                                                        InfoWindowManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableAutoPan\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:78\n                            \n                        \n                \n                    \n                        Disable auto-pan on open. By default, the info window will pan the map so that it is fully\nvisible when it opens.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:109\n                            \n                        \n                \n                    \n                        Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:66\n                            \n                        \n                \n                    \n                        The latitude position of the info window (only usefull if you use it ouside of a NgMapsMarkerComponent).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:72\n                            \n                        \n                \n                    \n                        The longitude position of the info window (only usefull if you use it ouside of a NgMapsMarkerComponent).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxWidth\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:93\n                            \n                        \n                \n                    \n                        Maximum width of the infowindow, regardless of content's width. This value is only considered\nif it is set before a call to open. To change the maximum width when changing content, call\nclose, update maxWidth, and then open.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:86\n                            \n                        \n                \n                    \n                        All InfoWindows are displayed on the map in order of their zIndex, with higher values\ndisplaying in front of InfoWindows with lower values. By default, InfoWindows are displayed\naccording to their latitude, with InfoWindows of lower latitudes appearing in front of\nInfoWindows at higher latitudes. InfoWindows are always displayed in front of markers.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        infoWindowClose\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:114\n                            \n                        \n                \n                    \n                        Emits an event when the info window is closed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _registerEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _registerEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _setInfoWindowOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _setInfoWindowOptions(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _updateOpenState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateOpenState()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:181\n                \n            \n\n\n            \n                \n                    Closes the info window.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            id\n                        \n                        \n                    \n                \n            \n            \n                \nid()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:174\n                \n            \n\n\n            \n                \n                    Opens the info window.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/info-window.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : (infoWindowId++).toString()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _infoWindowAddedToManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _infoWindowOptionsInputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'disableAutoPan',\n    'maxWidth',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('content', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:104\n                            \n                        \n\n                \n                    \n                        Holds the native element that is used for the info window content.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hostMarker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgMapsMarkerComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/info-window.ts:98\n                            \n                        \n\n                \n                    \n                        Holds the marker that is the host of the info window (if available)\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\n\nimport { InfoWindowManager } from '../services/managers/info-window-manager';\n\nimport { NgMapsMarkerComponent } from './marker';\n\nlet infoWindowId = 0;\n\n/**\n * NgMapsInfoWindowComponent renders a info window inside a {@link NgMapsMarkerComponent} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    map-view {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    \n *      \n *        \n *          Hi, this is the content of the info window\n *        \n *      \n *    \n *  `\n * })\n * ```\n */\n@Component({\n  selector: 'agm-info-window, map-info-window',\n  template: `\n    \n      \n    \n  `,\n  providers: [InfoWindowManager],\n})\nexport class NgMapsInfoWindowComponent implements OnDestroy, OnChanges, OnInit {\n  constructor(private _infoWindowManager: InfoWindowManager) {}\n\n  private static _infoWindowOptionsInputs: string[] = [\n    'disableAutoPan',\n    'maxWidth',\n  ];\n  /**\n   * The latitude position of the info window (only usefull if you use it ouside of a {@link\n   * NgMapsMarkerComponent}).\n   */\n  @Input() latitude: number;\n\n  /**\n   * The longitude position of the info window (only usefull if you use it ouside of a {@link\n   * NgMapsMarkerComponent}).\n   */\n  @Input() longitude: number;\n\n  /**\n   * Disable auto-pan on open. By default, the info window will pan the map so that it is fully\n   * visible when it opens.\n   */\n  @Input() disableAutoPan: boolean;\n\n  /**\n   * All InfoWindows are displayed on the map in order of their zIndex, with higher values\n   * displaying in front of InfoWindows with lower values. By default, InfoWindows are displayed\n   * according to their latitude, with InfoWindows of lower latitudes appearing in front of\n   * InfoWindows at higher latitudes. InfoWindows are always displayed in front of markers.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * Maximum width of the infowindow, regardless of content's width. This value is only considered\n   * if it is set before a call to open. To change the maximum width when changing content, call\n   * close, update maxWidth, and then open.\n   */\n  @Input() maxWidth: number;\n\n  /**\n   * Holds the marker that is the host of the info window (if available)\n   */\n  hostMarker: NgMapsMarkerComponent;\n\n  /**\n   * Holds the native element that is used for the info window content.\n   */\n  @ViewChild('content', { static: true })\n  content: ElementRef;\n\n  /**\n   * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n   */\n  @Input() isOpen: boolean = false;\n\n  /**\n   * Emits an event when the info window is closed.\n   */\n  @Output() infoWindowClose: EventEmitter = new EventEmitter();\n  private _infoWindowAddedToManager: boolean = false;\n  private _id: string = (infoWindowId++).toString();\n\n  ngOnInit() {\n    this._infoWindowManager.addInfoWindow(this).then(() => {\n      this._infoWindowAddedToManager = true;\n      this._updateOpenState();\n      this._registerEventListeners();\n    });\n  }\n\n  /** @internal */\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this._infoWindowAddedToManager) {\n      return;\n    }\n    if (\n      (changes.latitude || changes.longitude) &&\n      typeof this.latitude === 'number' &&\n      typeof this.longitude === 'number'\n    ) {\n      this._infoWindowManager.setPosition(this);\n    }\n    if (changes.zIndex) {\n      this._infoWindowManager.setZIndex(this);\n    }\n    if (changes.isOpen) {\n      this._updateOpenState();\n    }\n    this._setInfoWindowOptions(changes);\n  }\n\n  private _registerEventListeners() {\n    this._infoWindowManager\n      .createEventObservable('closeclick', this)\n      .subscribe(() => {\n        this.isOpen = false;\n        this.infoWindowClose.emit();\n      });\n  }\n\n  private _updateOpenState() {\n    this.isOpen ? this.open() : this.close();\n  }\n\n  private _setInfoWindowOptions(changes: SimpleChanges) {\n    const options: SimpleChanges = {};\n    const optionKeys = Object.keys(changes).filter((k) =>\n      NgMapsInfoWindowComponent._infoWindowOptionsInputs.includes(k),\n    );\n    optionKeys.forEach((k) => {\n      options[k] = changes[k].currentValue;\n    });\n    this._infoWindowManager.setOptions(this, options);\n  }\n\n  /**\n   * Opens the info window.\n   */\n  open(): Promise {\n    return this._infoWindowManager.open(this);\n  }\n\n  /**\n   * Closes the info window.\n   */\n  async close(): Promise {\n    await this._infoWindowManager.close(this);\n    return this.infoWindowClose.emit();\n  }\n\n  /** @internal */\n  id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  toString(): string {\n    return `NgMapsInfoWindowComponent-${this._id.toString()}`;\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._infoWindowManager.deleteInfoWindow(this);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'NgMapsInfoWindowComponent', 'selector': 'agm-info-window, map-info-window'},{'name': 'NgMapsMarkerComponent', 'selector': 'agm-marker, map-marker'},{'name': 'NgMapsViewComponent', 'selector': 'agm-map, map-view'}];\n    var DIRECTIVES = [{'name': 'NgMapsFitBounds', 'selector': '[mapFitBounds]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgMapsInfoWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgMapsMarkerComponent.html":{"url":"components/NgMapsMarkerComponent.html","title":"component - NgMapsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgMapsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/directives/marker.ts\n\n\n    \n        Description\n    \n    \n        NgMapsMarkerComponent renders a map marker inside a NgMapsViewComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n                    AfterContentInit\n                    FitBoundsAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n   \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: FitBoundsAccessor, useExisting: forwardRef(() => NgMapsMarkerComponent),\n}\n                \n            \n\n\n            \n                selector\n                agm-marker, map-marker\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                _fitBoundsDetails$\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _markerAddedToManger\n                            \n                            \n                                    Private\n                                _observableSubscriptions\n                            \n                            \n                                animation\n                            \n                            \n                                infoWindow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addEventListeners\n                            \n                            \n                                    Protected\n                                _updateFitBoundsDetails\n                            \n                            \n                                getFitBoundsDetails$\n                            \n                            \n                                    Private\n                                handleInfoWindowUpdate\n                            \n                            \n                                id\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iconUrl\n                            \n                            \n                                label\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                markerClickable\n                            \n                            \n                                markerDraggable\n                            \n                            \n                                opacity\n                            \n                            \n                                openInfoWindow\n                            \n                            \n                                title\n                            \n                            \n                                visible\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                drag\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragStart\n                            \n                            \n                                markerClick\n                            \n                            \n                                markerRightClick\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/marker.ts:190\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        markerManager\n                                                  \n                                                        \n                                                                        MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iconUrl\n                    \n                \n                \n                    \n                        Type :     string | google.maps.Icon\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:93\n                            \n                        \n                \n                    \n                        Icon (the URL of the image) for the foreground.\nCan also be a MarkerIcon (google.maps.Icon in Google Maps Javascript api)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     string | google.maps.MarkerLabel\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:80\n                            \n                        \n                \n                    \n                        The label (a single uppercase character) for the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        latitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:65\n                            \n                        \n                \n                    \n                        The latitude position of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        longitude\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:70\n                            \n                        \n                \n                    \n                        The longitude position of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerClickable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:122\n                            \n                        \n                \n                    \n                        If true, the marker can be clicked. Default value is true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerDraggable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:86\n                            \n                        \n                \n                    \n                        If true, the marker can be dragged. Default value is false.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:108\n                            \n                        \n                \n                    \n                        The marker's opacity between 0.0 and 1.0.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        openInfoWindow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:103\n                            \n                        \n                \n                    \n                        Whether to automatically open the child info window when the marker is clicked.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:75\n                            \n                        \n                \n                    \n                        The title of the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:98\n                            \n                        \n                \n                    \n                        If true, the marker is visible\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:116\n                            \n                        \n                \n                    \n                        All markers are displayed on the map in order of their zIndex, with higher values displaying in\nfront of markers with lower values. By default, markers are displayed according to their\nvertical position on screen, with lower markers appearing in front of markers further up the\nscreen.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        drag\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:152\n                            \n                        \n                \n                    \n                        This event is repeatedly fired while the user drags the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:159\n                            \n                        \n                \n                    \n                        This event is fired when the user stops dragging the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:145\n                            \n                        \n                \n                    \n                        This event is fired when the user starts dragging the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:133\n                            \n                        \n                \n                    \n                        This event emitter gets emitted when the user clicks on the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        markerRightClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:140\n                            \n                        \n                \n                    \n                        This event is fired when the user rightclicks on the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:173\n                            \n                        \n                \n                    \n                        This event is fired when the user mouses outside the marker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:166\n                            \n                        \n                \n                    \n                        This event is fired when the user mouses over the marker.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _addEventListeners\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _addEventListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _updateFitBoundsDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _updateFitBoundsDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFitBoundsDetails$\n                        \n                        \n                    \n                \n            \n            \n                \ngetFitBoundsDetails$()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:273\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleInfoWindowUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleInfoWindowUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            id\n                        \n                        \n                    \n                \n            \n            \n                \nid()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:338\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:348\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/marker.ts:343\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            _fitBoundsDetails$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:188\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:185\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _markerAddedToManger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:184\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _observableSubscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:186\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"BOUNCE\" | \"DROP\" | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:128\n                            \n                        \n\n                \n                    \n                        Which animation to play when marker is added to a map.\nThis can be 'BOUNCE' or 'DROP'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            infoWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Default value : new QueryList()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(NgMapsInfoWindowComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/directives/marker.ts:180\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Component\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-map',\n  styles: [`\n    map-view {\n      height: 300px;\n    }\n  `],\n  templateUrl: './my-map.component.html'\n})\nexport class MyComponent {\n  lat: number = 51.678418;\n  lng: number = 7.809007;\n  zoom: number = 10;\n}Template\n\n  \n\n    \n\n    \n        import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  QueryList,\n  SimpleChange,\n} from '@angular/core';\nimport { Observable, ReplaySubject, Subscription } from 'rxjs';\nimport { FitBoundsAccessor, FitBoundsDetails } from '../services/fit-bounds';\nimport { MarkerManager } from '../services/managers/marker-manager';\nimport { NgMapsInfoWindowComponent } from './info-window';\n\nlet markerId = 0;\n\n/**\n * NgMapsMarkerComponent renders a map marker inside a {@link NgMapsViewComponent}.\n *\n * @example\n * \n *               \n * \n */\n@Component({\n  selector: 'agm-marker, map-marker',\n  providers: [\n    {\n      provide: FitBoundsAccessor,\n      useExisting: forwardRef(() => NgMapsMarkerComponent),\n    },\n  ],\n  inputs: [\n    'latitude',\n    'longitude',\n    'title',\n    'label',\n    'draggable: markerDraggable',\n    'iconUrl',\n    'openInfoWindow',\n    'opacity',\n    'visible',\n    'zIndex',\n    'animation',\n  ],\n  outputs: [\n    'markerClick',\n    'dragStart',\n    'drag',\n    'dragEnd',\n    'mouseOver',\n    'mouseOut',\n  ],\n  template: '',\n})\nexport class NgMapsMarkerComponent\n  implements OnDestroy, OnChanges, AfterContentInit, FitBoundsAccessor {\n  /**\n   * The latitude position of the marker.\n   */\n  @Input() latitude: number;\n\n  /**\n   * The longitude position of the marker.\n   */\n  @Input() longitude: number;\n\n  /**\n   * The title of the marker.\n   */\n  @Input() title: string;\n\n  /**\n   * The label (a single uppercase character) for the marker.\n   */\n  @Input() label: string | google.maps.MarkerLabel;\n\n  /**\n   * If true, the marker can be dragged. Default value is false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('markerDraggable') draggable: boolean = false;\n\n  /**\n   * Icon (the URL of the image) for the foreground.\n   * Can also be a MarkerIcon (google.maps.Icon in Google Maps Javascript api)\n   * @see google.maps.Icon\n   */\n  @Input() iconUrl: string | google.maps.Icon;\n\n  /**\n   * If true, the marker is visible\n   */\n  @Input() visible: boolean = true;\n\n  /**\n   * Whether to automatically open the child info window when the marker is clicked.\n   */\n  @Input() openInfoWindow: boolean = true;\n\n  /**\n   * The marker's opacity between 0.0 and 1.0.\n   */\n  @Input() opacity: number = 1;\n\n  /**\n   * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n   * front of markers with lower values. By default, markers are displayed according to their\n   * vertical position on screen, with lower markers appearing in front of markers further up the\n   * screen.\n   */\n  @Input() zIndex: number = 1;\n\n  /**\n   * If true, the marker can be clicked. Default value is true.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('markerClickable') clickable: boolean = true;\n\n  /**\n   * Which animation to play when marker is added to a map.\n   * This can be 'BOUNCE' or 'DROP'\n   */\n  animation: 'BOUNCE' | 'DROP' | null;\n\n  /**\n   * This event emitter gets emitted when the user clicks on the marker.\n   */\n  @Output() markerClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user rightclicks on the marker.\n   */\n  @Output() markerRightClick: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user starts dragging the marker.\n   */\n  @Output() dragStart: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is repeatedly fired while the user drags the marker.\n   */\n  @Output() drag: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user stops dragging the marker.\n   */\n  @Output() dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user mouses over the marker.\n   */\n  @Output() mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * This event is fired when the user mouses outside the marker.\n   */\n  @Output() mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * @internal\n   */\n  @ContentChildren(NgMapsInfoWindowComponent) infoWindow: QueryList = new QueryList();\n\n  private _markerAddedToManger: boolean = false;\n  private _id: string;\n  private _observableSubscriptions: Subscription[] = [];\n\n  protected readonly _fitBoundsDetails$: ReplaySubject = new ReplaySubject(1);\n\n  constructor(private markerManager: MarkerManager) {\n    this._id = (markerId++).toString();\n  }\n\n  /**\n   *  @internal\n   */\n  ngAfterContentInit() {\n    this.handleInfoWindowUpdate();\n    this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n  }\n\n  private handleInfoWindowUpdate() {\n    if (this.infoWindow.length > 1) {\n      throw new Error('Expected no more than one info window.');\n    }\n    this.infoWindow.forEach((marker) => {\n      marker.hostMarker = this;\n    });\n  }\n\n  /**\n   * @internal\n   */\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (typeof this.latitude === 'string') {\n      this.latitude = Number(this.latitude);\n    }\n    if (typeof this.longitude === 'string') {\n      this.longitude = Number(this.longitude);\n    }\n    if (\n      typeof this.latitude !== 'number' ||\n      typeof this.longitude !== 'number'\n    ) {\n      return;\n    }\n    if (!this._markerAddedToManger) {\n      this.markerManager.addMarker(this).then(() => {\n        this._updateFitBoundsDetails();\n        this._markerAddedToManger = true;\n        this._addEventListeners();\n      });\n      return;\n    }\n    if (changes.latitude || changes.longitude) {\n      this.markerManager.updateMarkerPosition(this);\n      this._updateFitBoundsDetails();\n    }\n    if (changes.title) {\n      this.markerManager.updateTitle(this);\n    }\n    if (changes.label) {\n      this.markerManager.updateLabel(this);\n    }\n    if (changes.draggable) {\n      this.markerManager.updateDraggable(this);\n    }\n    if (changes.iconUrl) {\n      this.markerManager.updateIcon(this);\n    }\n    if (changes.opacity) {\n      this.markerManager.updateOpacity(this);\n    }\n    if (changes.visible) {\n      this.markerManager.updateVisible(this);\n    }\n    if (changes.zIndex) {\n      this.markerManager.updateZIndex(this);\n    }\n    if (changes.clickable) {\n      this.markerManager.updateClickable(this);\n    }\n    if (changes.animation) {\n      this.markerManager.updateAnimation(this);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  getFitBoundsDetails$(): Observable {\n    return this._fitBoundsDetails$.asObservable();\n  }\n\n  protected _updateFitBoundsDetails() {\n    this._fitBoundsDetails$.next({\n      latLng: { lat: this.latitude, lng: this.longitude },\n    });\n  }\n\n  private _addEventListeners() {\n    const cs = this.markerManager\n      .createEventObservable('click', this)\n      .subscribe(() => {\n        if (this.openInfoWindow) {\n          this.infoWindow.forEach((infoWindow) => infoWindow.open());\n        }\n        this.markerClick.emit(this);\n      });\n    this._observableSubscriptions.push(cs);\n\n    const rc = this.markerManager\n      .createEventObservable('rightclick', this)\n      .subscribe(() => {\n        this.markerRightClick.emit(null);\n      });\n    this._observableSubscriptions.push(rc);\n\n    const ds = this.markerManager\n      .createEventObservable('dragstart', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.dragStart.emit(e);\n      });\n    this._observableSubscriptions.push(ds);\n\n    const d = this.markerManager\n      .createEventObservable('drag', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.drag.emit(e);\n      });\n    this._observableSubscriptions.push(d);\n\n    const dragend = this.markerManager\n      .createEventObservable('dragend', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.dragEnd.emit(e);\n      });\n    this._observableSubscriptions.push(dragend);\n\n    const mouseover = this.markerManager\n      .createEventObservable('mouseover', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.mouseOver.emit(e);\n      });\n    this._observableSubscriptions.push(mouseover);\n\n    const mouseout = this.markerManager\n      .createEventObservable('mouseout', this)\n      .subscribe((e: google.maps.MouseEvent) => {\n        this.mouseOut.emit(e);\n      });\n    this._observableSubscriptions.push(mouseout);\n  }\n\n  /** @internal */\n  id(): string {\n    return this._id;\n  }\n\n  /** @internal */\n  toString(): string {\n    return `NgMapsMarker-${this._id}`;\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this.markerManager.deleteMarker(this);\n    // unsubscribe all registered observable subscriptions\n    this._observableSubscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgMapsInfoWindowComponent', 'selector': 'agm-info-window, map-info-window'},{'name': 'NgMapsMarkerComponent', 'selector': 'agm-marker, map-marker'},{'name': 'NgMapsViewComponent', 'selector': 'agm-map, map-view'}];\n    var DIRECTIVES = [{'name': 'NgMapsFitBounds', 'selector': '[mapFitBounds]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgMapsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoOpMapsAPILoader.html":{"url":"classes/NoOpMapsAPILoader.html","title":"class - NoOpMapsAPILoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoOpMapsAPILoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/maps-api-loader/noop-maps-api-loader.ts\n        \n\n            \n                Description\n            \n            \n                When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a \nTag.\nIt's important that the Google Maps API script gets loaded first on the page.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MapsAPILoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/maps-api-loader/noop-maps-api-loader.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MapsAPILoader } from './maps-api-loader';\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a ``\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nexport class NoOpMapsAPILoader implements MapsAPILoader {\n  load(): Promise {\n    if (!(window).google || !(window).google.maps) {\n      throw new Error(\n        'Google Maps API not loaded on page. Make sure window.google.maps is available!',\n      );\n    }\n    return Promise.resolve();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/core.module.ts\n            \n            function\n            coreDirectives\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/directives/fit-bounds.ts\n            \n            directive\n            NgMapsFitBounds\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/lib/directives/info-window.ts\n            \n            component\n            NgMapsInfoWindowComponent\n            \n                50 %\n                (12/24)\n            \n        \n        \n            \n                \n                src/lib/directives/info-window.ts\n            \n            variable\n            infoWindowId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/directives/map.ts\n            \n            component\n            NgMapsViewComponent\n            \n                67 %\n                (49/73)\n            \n        \n        \n            \n                \n                src/lib/directives/marker.ts\n            \n            component\n            NgMapsMarkerComponent\n            \n                57 %\n                (20/35)\n            \n        \n        \n            \n                \n                src/lib/directives/marker.ts\n            \n            variable\n            markerId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/services/fit-bounds.ts\n            \n            class\n            FitBoundsAccessor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/services/fit-bounds.ts\n            \n            injectable\n            FitBoundsService\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/lib/services/fit-bounds.ts\n            \n            interface\n            FitBoundsDetails\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/services/google-maps-api-wrapper.ts\n            \n            injectable\n            GoogleMapsAPIWrapper\n            \n                31 %\n                (9/29)\n            \n        \n        \n            \n                \n                src/lib/services/managers/info-window-manager.ts\n            \n            injectable\n            InfoWindowManager\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/lib/services/managers/marker-manager.ts\n            \n            injectable\n            MarkerManager\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-loader/lazy-maps-api-loader-config.ts\n            \n            interface\n            LazyMapsAPILoaderConfigLiteral\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-loader/lazy-maps-api-loader-config.ts\n            \n            variable\n            LAZY_MAPS_API_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-loader/lazy-maps-api-loader.ts\n            \n            injectable\n            LazyMapsAPILoader\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-loader/maps-api-loader.ts\n            \n            injectable\n            MapsAPILoader\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/services/maps-api-loader/noop-maps-api-loader.ts\n            \n            class\n            NoOpMapsAPILoader\n            \n                50 %\n                (1/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^8.0.0\n        \n            @angular/core : ^8.0.0\n        \n            @types/googlemaps : ^3.37.4\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GoogleMapsScriptProtocol   (src/.../lazy-maps-api-loader-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/services/maps-api-loader/lazy-maps-api-loader-config.ts\n    \n        \n            \n                \n                    \n                        \n                        GoogleMapsScriptProtocol\n                    \n                \n                        \n                            \n                                 HTTP\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 HTTPS\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 AUTO\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            coreDirectives   (src/.../core.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/core.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            coreDirectives\n                        \n                        \n                    \n                \n            \n            \n                \ncoreDirectives()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ng-maps/core\n@ng-maps/core is a simple, modular and tree-shakable library for displaying google-maps inside an angular application\nInstallation\n\nNpm: npm install @ng-maps/core\nYarn: yarn add @ng-maps/core\n\nThen you will need to install typings for google maps as a dev dependency\n\nNpm: npm install -D @types/googlemaps\nYarn: yarn add -D @types/googlemaps\n\nNow you are ready to start. Add NgMapsCoreModule.forRoot({apiKey: 'YOUR_API_KEY'}) to your AppModule. Now you can use map components.\nUsage\nSimple Map\nAdd the map to your components template\nAdd a height to your components CSS, for example\nmap-view {\n  height: 300px;\n}Input options\n\n\n\nName\nType\nValues\nDescription\n\n\n\n\nlongitude\nNumber\n\n\n\n\nlatitude\nNumber\n\n\n\n\nminZoom\nNumber\n\n\n\n\nmaxZoom\nNumber\n\n\n\n\nzoom\nNumber\nBetween 0 and MaxZoom, typically 18\n\n\n\nfitBounds\nLatLngBoundsLiteral, LatLngBounds or Boolean\nIf set to true attaches to mapFitBounds directives on \n\n\n\nmapTypeId\nroadmap, hybrid, satellite, terrain\n\n\n\n\nlayers\nArray or String\nTrafficLayer or TransitLayer or BicyclingLayer\nActivates layer as described in TrafficLayer Documentation\n\n\n\nMarker\nAdditionally you can add markers\n\n  \nInput options\n\n\n\nName\nType\nValues\nDescription\n\n\n\n\nlongitude\nNumber\n\n\n\n\nlatitude\nNumber\n\n\n\n\n\nOutputs\n\n\n\nName\nValue\nDescription\n\n\n\n\nmarkerClick\nComponent\n\n\n\n\nAdditional features\nOther features are provided in submodules. Find out more on the project page at github\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgMapsCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BoundsMap   (src/.../fit-bounds.ts)\n                        \n                        \n                            LayerTypes   (src/.../layers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/services/fit-bounds.ts\n    \n    \n        \n            \n                \n                    \n                    BoundsMap\n                \n            \n            \n                \n                        Map\n\n                \n            \n        \n    \n    src/lib/interface/layers.ts\n    \n    \n        \n            \n                \n                    \n                    LayerTypes\n                \n            \n            \n                \n                        \"TrafficLayer\" | \"TransitLayer\" | \"BicyclingLayer\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            infoWindowId   (src/.../info-window.ts)\n                        \n                        \n                            LAZY_MAPS_API_CONFIG   (src/.../lazy-maps-api-loader-config.ts)\n                        \n                        \n                            markerId   (src/.../marker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/directives/info-window.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            infoWindowId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n    src/lib/services/maps-api-loader/lazy-maps-api-loader-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LAZY_MAPS_API_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG')\n                        \n                    \n\n                \n                    \n                        Token for the config of the LazyMapsAPILoader. Please provide an object of type LazyMapsAPILoaderConfig.\n\n                    \n                \n\n            \n        \n\n    src/lib/directives/marker.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            markerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
