var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/GoogleCircleManager.html",[0,0.193,1,1.627]],["body/injectables/GoogleCircleManager.html",[0,0.178,1,1.507,2,0.499,3,0.379,4,0.379,5,0.278,6,1.339,7,0.776,8,2.555,9,0.278,10,0.678,11,1.861,12,2.106,13,2.582,14,1.408,15,2.555,16,3.168,17,3.168,18,2.582,19,2.582,20,2.082,21,2.082,22,2.151,23,2.582,24,2.082,25,0.499,26,1.007,27,1.394,28,1.394,29,1.394,30,1.279,31,1.66,32,1.294,33,0.052,34,1.111,35,0.833,36,1.111,37,0.648,38,2.582,39,5.457,40,1.66,41,5.259,42,1.262,43,0.738,44,1.074,45,1.66,46,1.147,47,1.147,48,1.408,49,1.66,50,1.66,51,2.294,52,1.66,53,1.66,54,1.66,55,1.66,56,2.582,57,1.66,58,2.082,59,1.507,60,0.776,61,2.582,62,1.66,63,2.582,64,1.66,65,2.582,66,1.66,67,1.66,68,1.599,69,3.168,70,1.66,71,1.127,72,2.082,73,2.582,74,1.66,75,2.582,76,1.66,77,0.723,78,0.326,79,1.147,80,0.648,81,1.127,82,1.127,83,0.278,84,0.379,85,0.379,86,0.436,87,0.648,88,1.339,89,1.66,90,1.66,91,0.738,92,3.574,93,3.574,94,1.366,95,1.66,96,1.66,97,1.311,98,1.311,99,0.969,100,1.66,101,0.969,102,1.66,103,0.969,104,1.66,105,1.127,106,1.66,107,1.127,108,1.66,109,1.66,110,1.66,111,0.969,112,1.66,113,0.969,114,1.66,115,1.339,116,1.66,117,0.969,118,1.66,119,0.969,120,1.66,121,0.843,122,1.66,123,1.262,124,4.732,125,2.064,126,4.646,127,1.66,128,1.66,129,1.339,130,1.66,131,1.66,132,1.66,133,1.753,134,1.127,135,0.969,136,3.168,137,2.582,138,1.66,139,1.67,140,1.753,141,1.66,142,1.127,143,1.753,144,1.66,145,1.66,146,1.66,147,1.66,148,1.66,149,1.66,150,1.66,151,1.66,152,0.379,153,0.738,154,2.151,155,1.339,156,1.66,157,1.66,158,0.738,159,0.738,160,0.738,161,1.339,162,0.024,163,0.024]],["title/components/GoogleComponent.html",[164,1.627,165,1.415]],["body/components/GoogleComponent.html",[1,1.917,3,0.401,4,0.401,5,0.294,7,0.811,8,2.649,9,0.294,10,0.709,12,1.637,25,0.811,26,0.686,27,1.637,28,1.438,29,1.438,30,1.184,32,0.462,33,0.052,34,0.997,35,0.294,36,0.401,37,1.053,42,1.147,44,0.528,60,1.39,77,1.077,78,0.346,83,0.294,84,0.401,85,0.401,86,0.462,87,0.686,97,1.37,98,1.37,123,1.214,143,1.194,162,0.025,163,0.025,164,1.917,165,1.871,166,2.699,167,3.285,168,1.758,169,1.418,170,1.418,171,3.285,172,1.758,173,2.176,174,2.255,175,4.093,176,2.972,177,3.384,178,1.917,179,2.23,180,1.917,181,2.649,182,1.917,183,2.649,184,1.917,185,2.649,186,1.917,187,2.649,188,1.917,189,3.285,190,3.285,191,3.285,192,3.285,193,3.285,194,4.196,195,3.285,196,2.649,197,3.285,198,3.285,199,2.699,200,2.656,201,3.685,202,3.685,203,3.685,204,3.685,205,3.685,206,3.685,207,3.685,208,3.685,209,1.758,210,1.758,211,1.438,212,1.758,213,1.758,214,1.758,215,1.758,216,1.758,217,1.758,218,0.811,219,0.709,220,0.892,221,1.758,222,1.194,223,1.758,224,1.758,225,1.758,226,1.758,227,1.758,228,1.758,229,1.758,230,1.758,231,2.966,232,4.369,233,4.196,234,1.758,235,3.975,236,1.758,237,2.699,238,1.758,239,2.699,240,1.758,241,1.758,242,1.418,243,4.369,244,1.758,245,1.758,246,1.758,247,1.758,248,1.758,249,1.758,250,1.758,251,1.758,252,1.758,253,1.758,254,1.418,255,1.758,256,1.758,257,1.758,258,1.575,259,1.758,260,1.758,261,1.37,262,4.196,263,1.758,264,1.832,265,1.758,266,0.781,267,1.758,268,1.758,269,1.758,270,1.758,271,1.758,272,1.758,273,1.758,274,1.758,275,1.758,276,0.781,277,1.758,278,1.758,279,1.758,280,1.758,281,1.758,282,2.699,283,2.699,284,1.758,285,3.685,286,1.758,287,1.758,288,1.758]],["title/injectables/GoogleInfoWindowManager.html",[0,0.193,188,1.627]],["body/injectables/GoogleInfoWindowManager.html",[0,0.205,2,0.598,3,0.677,4,0.454,5,0.333,7,0.891,9,0.333,10,0.779,11,1.843,12,1.868,14,1.574,22,2.405,25,0.891,26,0.777,27,1.531,28,1.531,29,1.531,30,1.257,32,1.28,33,0.052,34,1.092,35,0.816,36,1.092,37,1.157,42,1.23,43,0.885,44,1.065,46,1.318,47,1.318,48,1.865,51,1.744,59,1.731,60,0.598,68,1.638,72,2.391,77,0.808,78,0.391,79,1.318,80,0.777,82,2.013,83,0.333,84,0.454,85,0.454,86,0.523,87,0.777,94,1.262,97,1.505,98,1.505,121,1.011,123,1.315,125,1.744,135,1.731,139,1.531,143,2.405,152,0.454,153,0.885,154,2.013,158,0.885,159,1.318,160,0.885,162,0.027,163,0.027,179,2.665,187,2.857,188,1.731,196,1.606,211,1.562,218,0.891,219,0.779,264,2.013,289,3.929,290,1.606,291,2.965,292,2.965,293,3.543,294,2.965,295,2.965,296,2.965,297,3.925,298,1.991,299,2.965,300,5.393,301,1.991,302,5.107,303,2.965,304,1.991,305,1.991,306,2.965,307,1.991,308,1.991,309,2.965,310,1.991,311,1.991,312,3.925,313,1.991,314,2.965,315,1.991,316,2.965,317,1.991,318,2.965,319,4.558,320,1.991,321,1.352,322,1.606,323,1.991,324,1.991,325,3.925,326,3.925,327,1.991,328,2.965,329,1.991,330,2.965,331,1.991,332,2.965,333,2.013,334,1.991,335,2.965,336,1.991,337,1.991,338,1.991,339,1.991,340,1.991,341,1.991,342,1.991,343,2.965,344,1.991,345,1.991,346,1.991]],["title/injectables/GoogleMapsFitBoundsService.html",[0,0.193,178,1.627]],["body/injectables/GoogleMapsFitBoundsService.html",[0,0.294,2,1.011,3,0.767,4,0.767,5,0.563,7,1.28,9,0.563,10,1.118,25,1.011,30,1.118,32,1.118,33,0.052,34,0.972,35,0.713,36,0.972,42,0.883,60,1.524,71,2.283,77,0.972,78,0.661,81,3.173,82,2.283,83,0.563,84,0.767,85,0.767,86,0.883,94,1.28,123,0.883,140,3.173,142,2.283,152,0.972,162,0.039,163,0.039,177,4.088,178,2.486,200,2.373,219,1.228,222,3.173,258,1.963,347,3.173,348,2.712,349,4.259,350,4.259,351,4.259,352,4.674,353,4.259,354,3.336,355,3.362,356,3.362,357,3.362,358,3.362,359,4.259,360,3.362,361,3.362,362,3.362,363,3.362,364,3.362,365,3.362]],["title/injectables/GoogleMapsMarkerManager.html",[0,0.193,180,1.627]],["body/injectables/GoogleMapsMarkerManager.html",[0,0.191,2,0.547,3,0.415,4,0.415,5,0.305,7,0.833,9,0.305,10,0.728,11,1.884,14,1.491,25,0.547,26,1.081,27,1.463,28,1.463,29,1.463,30,1.331,32,1.331,33,0.052,34,1.145,35,0.855,36,1.145,37,0.71,42,1.305,43,0.808,44,1.213,46,1.231,47,1.794,48,1.491,60,1.127,77,0.766,78,0.358,79,1.231,80,0.71,83,0.305,84,0.415,85,0.415,86,0.478,87,0.71,91,1.231,94,1.127,97,0.923,98,0.923,123,1.305,129,1.467,135,1.617,139,0.71,152,0.766,153,0.808,158,0.808,159,1.231,160,0.808,162,0.025,163,0.025,179,2.278,180,1.617,200,1.703,211,1.823,231,1.235,266,1.491,276,0.808,321,1.235,322,1.467,333,3.467,366,1.467,367,3.355,368,2.77,369,2.77,370,2.77,371,2.77,372,2.77,373,2.77,374,2.77,375,2.77,376,2.77,377,2.77,378,2.77,379,2.77,380,1.819,381,5.504,382,1.819,383,2.77,384,1.819,385,2.77,386,1.819,387,2.77,388,1.819,389,2.77,390,1.819,391,2.77,392,1.819,393,2.77,394,1.819,395,2.77,396,1.819,397,2.77,398,1.819,399,2.77,400,1.819,401,2.77,402,1.819,403,2.77,404,1.819,405,2.77,406,1.819,407,1.062,408,1.819,409,3.439,410,4.968,411,1.819,412,1.819,413,2.77,414,2.77,415,1.819,416,1.819,417,1.819,418,1.819,419,1.819,420,1.819,421,1.819,422,1.819,423,1.819,424,1.819,425,1.819,426,1.819,427,1.819,428,1.819,429,1.819,430,1.819,431,1.467,432,1.467,433,1.467,434,1.819]],["title/injectables/GoogleMapsScriptLoader.html",[0,0.193,435,1.627]],["body/injectables/GoogleMapsScriptLoader.html",[0,0.178,2,0.497,3,0.377,4,0.377,5,0.277,7,0.774,9,0.277,10,0.676,11,1.403,12,1.771,25,0.774,30,1.261,32,0.937,33,0.052,34,0.814,35,0.74,36,1.008,42,1.075,44,1.521,51,2.101,60,0.497,68,0.645,71,1.123,77,0.882,78,0.325,80,0.645,83,0.277,84,0.377,85,0.377,86,0.434,88,2.549,91,1.144,94,1.364,123,1.122,125,1.404,133,1.123,134,1.123,135,0.965,139,1.004,152,0.882,162,0.024,163,0.024,174,1.144,200,2.668,211,0.567,218,0.497,219,1.278,258,0.965,264,1.123,266,0.735,276,1.819,321,1.123,347,3.26,354,2.146,407,1.845,432,2.549,433,2.549,435,1.503,436,3.342,437,1.334,438,3.161,439,4.093,440,3.161,441,3.161,442,3.865,443,2.574,444,3.161,445,3.567,446,2.076,447,3.567,448,3.301,449,1.654,450,2.017,451,4.093,452,2.574,453,2.65,454,2.574,455,1.654,456,1.654,457,3.865,458,1.654,459,3.865,460,1.654,461,2.574,462,1.654,463,4.539,464,3.865,465,3.567,466,2.076,467,2.076,468,2.574,469,2.574,470,2.574,471,2.574,472,2.574,473,2.574,474,1.654,475,1.654,476,1.654,477,3.161,478,2.574,479,1.654,480,2.574,481,1.654,482,1.654,483,2.574,484,1.334,485,1.654,486,1.654,487,1.748,488,0.735,489,1.654,490,1.654,491,1.654,492,1.654,493,1.654,494,1.654,495,1.123,496,1.654,497,2.574,498,3.161,499,1.654,500,1.654,501,1.654,502,1.654,503,1.654,504,1.334,505,1.654,506,1.123,507,3.567,508,1.654,509,1.654,510,2.574,511,1.654,512,1.654,513,1.654,514,1.654,515,1.654,516,1.654,517,1.654,518,1.654,519,1.654,520,1.654,521,2.574,522,1.654,523,1.654,524,1.654,525,1.654,526,1.654,527,2.574,528,1.654,529,1.654,530,1.654,531,1.654,532,1.654,533,1.654,534,2.574,535,1.654,536,2.574,537,2.876,538,1.654,539,3.161,540,1.654,541,3.161,542,1.654,543,1.123,544,1.123,545,1.334,546,1.654,547,1.654,548,1.654,549,2.624,550,1.654,551,1.654,552,1.654,553,1.654,554,1.654,555,1.334,556,1.654,557,1.334,558,1.654,559,1.334,560,1.654,561,1.334,562,1.654,563,1.334,564,1.654,565,1.654,566,1.654,567,1.654,568,3.161,569,1.654,570,3.161,571,1.334,572,1.654,573,2.574,574,2.574,575,1.654,576,1.654,577,2.574,578,1.654,579,1.654,580,1.654,581,1.654,582,1.654,583,1.654,584,1.654,585,1.654]],["title/interfaces/GoogleModuleOptions.html",[261,1.415,450,1.239]],["body/interfaces/GoogleModuleOptions.html",[3,0.474,4,0.474,5,0.348,9,0.348,33,0.052,34,0.698,35,0.824,36,1.216,44,1.608,59,1.786,60,1.205,77,0.474,78,0.408,85,0.829,91,1.36,123,0.546,134,1.41,152,0.474,162,0.028,163,0.028,174,0.923,218,1.587,219,1.387,220,2.65,261,1.054,266,1.614,407,2.339,448,2.467,450,1.614,453,1.212,466,3.232,487,2.721,488,1.36,495,1.41,504,2.467,537,3.604,543,1.41,544,1.41,545,3.232,549,3.219,555,3.824,557,3.969,559,3.824,561,3.604,563,3.824,586,2.077,587,1.212,588,3.232,589,4.007,590,4.007,591,4.742,592,3.06,593,2.467,594,4.469,595,4.007,596,4.007,597,3.06,598,3.06,599,2.467,600,3.06,601,4.742,602,3.06,603,3.06,604,3.06,605,3.06,606,3.06,607,3.06,608,2.467,609,3.06,610,3.604,611,3.06,612,3.06,613,3.06,614,3.06,615,2.077,616,4.007,617,4.007,618,3.06,619,3.06,620,3.06,621,2.467,622,3.06,623,3.06,624,4.007,625,4.007,626,4.469,627,3.06,628,3.06,629,3.06,630,3.06,631,3.06,632,3.06,633,4.007,634,3.06,635,3.06,636,3.06,637,3.06,638,3.06,639,3.06,640,2.467,641,2.077,642,1.41,643,1.675,644,1.675,645,1.675,646,1.41,647,1.212,648,1.675,649,1.212]],["title/injectables/GooglePolygonManager.html",[0,0.193,182,1.627]],["body/injectables/GooglePolygonManager.html",[0,0.239,2,0.742,3,0.563,4,0.563,5,0.413,7,1.041,9,0.413,10,0.91,11,1.825,12,1.849,14,1.779,25,0.742,26,1.352,27,1.693,28,1.693,29,1.693,30,1.245,32,1.278,33,0.052,34,1.081,35,0.845,36,1.081,37,0.963,42,1.2,43,1.097,44,1.304,46,1.54,47,1.54,48,1.779,51,2.106,68,1.562,77,0.913,78,0.485,79,1.54,80,0.963,83,0.413,84,0.563,85,0.563,86,0.648,87,0.963,94,1.203,99,1.441,101,1.441,103,1.441,105,1.676,107,1.676,111,1.441,113,1.441,117,1.441,119,1.441,121,1.253,123,1.14,125,1.54,139,1.352,152,0.563,153,1.097,158,1.097,159,1.779,160,1.097,162,0.032,163,0.032,181,3.228,182,2.022,211,0.846,409,2.352,506,1.676,615,3.217,650,1.991,651,3.464,652,3.464,653,4.003,654,3.464,655,2.469,656,3.464,657,5.354,658,2.469,659,2.469,660,3.464,661,2.469,662,3.464,663,2.469,664,2.794,665,2.469,666,3.464,667,2.469,668,2.469,669,3.464,670,2.469,671,2.469,672,2.469,673,2.469,674,2.469,675,2.469,676,1.991,677,2.469,678,2.469,679,2.469,680,2.469,681,2.469,682,2.469,683,2.469,684,2.469,685,3.464,686,2.469,687,2.469,688,1.991,689,1.991,690,2.469,691,1.991,692,2.469,693,1.991,694,3.464,695,1.991,696,2.469,697,2.469,698,1.991]],["title/injectables/GooglePolylineManager.html",[0,0.193,184,1.627]],["body/injectables/GooglePolylineManager.html",[0,0.228,2,0.694,3,0.526,4,0.526,5,0.386,7,0.993,9,0.386,10,0.867,11,1.807,12,1.505,14,1.714,25,0.694,26,1.288,27,1.643,28,1.643,29,1.643,30,1.253,32,1.282,33,0.052,34,1.089,35,0.844,36,1.089,37,0.9,42,1.217,43,1.025,44,1.265,46,1.467,47,1.467,48,1.714,51,2.059,68,1.505,77,0.88,78,0.454,79,1.467,80,0.9,83,0.386,84,0.526,85,0.526,86,0.606,87,0.9,94,1.393,97,1.171,98,1.171,99,1.347,101,1.347,103,1.347,111,1.347,113,1.347,117,1.347,119,1.347,121,1.171,123,1.217,125,1.025,139,1.288,152,0.526,153,1.025,158,1.025,159,1.714,160,1.025,162,0.03,163,0.03,183,3.11,184,1.928,200,1.958,211,0.791,231,1.567,242,1.861,266,1.467,409,2.858,506,2.242,615,2.618,664,2.663,676,1.861,688,1.861,689,1.861,691,1.861,693,2.663,695,1.861,698,1.861,699,1.861,700,3.857,701,3.302,702,3.302,703,3.857,704,3.302,705,2.307,706,2.307,707,5.377,708,2.307,709,5.041,710,3.302,711,2.307,712,2.307,713,3.302,714,2.307,715,2.307,716,2.307,717,3.302,718,2.307,719,3.302,720,2.307,721,2.307,722,2.307,723,2.307,724,3.302,725,3.302,726,2.307,727,2.307,728,2.307,729,2.307,730,2.307,731,2.307,732,2.307,733,2.307,734,2.307,735,2.307,736,2.307,737,2.307,738,2.307,739,3.857,740,3.857,741,2.307,742,2.307,743,2.307]],["title/injectables/GoogleRectangleManager.html",[0,0.193,186,1.627]],["body/injectables/GoogleRectangleManager.html",[0,0.2,2,0.581,3,0.441,4,0.441,5,0.324,7,0.872,9,0.324,10,0.762,11,1.852,12,2.068,14,1.547,15,2.807,20,2.807,21,2.339,22,2.363,24,2.339,25,0.581,26,1.132,27,1.509,28,1.509,29,1.509,30,1.27,32,1.29,33,0.052,34,1.104,35,0.822,36,1.104,37,0.754,42,1.247,43,0.859,44,1.046,46,1.289,47,1.289,48,1.547,51,2.257,58,2.339,59,1.693,60,0.872,68,1.358,77,0.794,78,0.38,79,1.289,80,0.754,81,1.312,83,0.324,84,0.441,85,0.441,86,0.508,87,0.754,94,1.454,99,1.128,101,1.128,103,1.128,105,1.312,107,1.312,111,1.128,113,1.128,115,1.559,117,1.128,119,1.128,121,0.981,123,0.914,125,1.289,139,1.509,140,1.969,142,1.312,152,0.441,153,0.859,154,2.363,155,1.559,158,0.859,159,0.859,160,0.859,161,1.559,162,0.026,163,0.026,185,2.807,186,1.693,211,0.662,744,1.559,745,2.9,746,3.481,747,2.9,748,1.933,749,2.9,750,5.418,751,1.933,752,5.224,753,1.933,754,1.933,755,1.933,756,1.933,757,1.933,758,2.9,759,1.933,760,1.933,761,1.933,762,2.9,763,1.933,764,1.933,765,3.481,766,1.933,767,2.9,768,1.933,769,3.868,770,3.868,771,3.868,772,3.868,773,1.933,774,1.933,775,2.9,776,2.9,777,2.9,778,2.9,779,1.933,780,1.933,781,1.933,782,1.933,783,1.933,784,1.933,785,1.933,786,1.933,787,1.933,788,1.933,789,1.933,790,3.481,791,1.933,792,1.933,793,1.933,794,2.9,795,2.9,796,1.933,797,1.933,798,3.481,799,3.481,800,3.481,801,1.933,802,1.933,803,1.933,804,1.933]],["title/modules/NgMapsGoogleModule.html",[647,1.627,805,1.415]],["body/modules/NgMapsGoogleModule.html",[3,0.656,4,0.656,5,0.481,10,0.755,11,1.318,30,1.01,32,1.01,33,0.052,34,0.878,35,0.644,36,0.878,42,1.01,68,1.122,77,1.1,78,0.565,83,0.481,84,0.656,85,0.656,86,0.755,94,1.156,133,2.611,162,0.035,163,0.035,165,2.717,173,3.495,174,2.056,175,2.319,211,0.986,218,0.864,219,0.755,266,2.143,276,1.709,354,2.611,435,2.245,436,1.952,446,3.731,450,2.143,453,2.701,467,2.319,488,1.926,805,2.733,806,1.952,807,1.953,808,2.319,809,2.319,810,2.319,811,3.102,812,2.319,813,2.319,814,2.876,815,3.846,816,3.846,817,4.627,818,3.846,819,2.876,820,2.876,821,4.823,822,3.846,823,2.876,824,3.846,825,3.731,826,2.876,827,4.963,828,2.876,829,4.627,830,3.846,831,2.876,832,2.876,833,3.102,834,2.319,835,2.876]],["title/changelog.html",[836,1.893,837,1.893,838,1.893]],["body/changelog.html",[5,0.609,33,0.046,162,0.041,163,0.041,218,1.094,220,1.847,333,2.47,571,2.934,599,2.934,807,1.847,825,3.608,838,2.934,839,3.639,840,3.639,841,3.639,842,2.934,843,5.053,844,5.053,845,3.639,846,5.053,847,5.053,848,5.053,849,2.934,850,3.639,851,3.639,852,2.934,853,3.639,854,4.474,855,4.474,856,4.474,857,4.474,858,4.474,859,4.474,860,3.639,861,3.639,862,4.474,863,3.639,864,3.639,865,3.639,866,3.639,867,2.934,868,4.474,869,3.639,870,3.639,871,3.639,872,3.639,873,4.474,874,3.639,875,3.639,876,3.639,877,3.639,878,3.639,879,3.639,880,2.934,881,3.639,882,3.639,883,3.639,884,3.639]],["title/coverage.html",[885,3.038]],["body/coverage.html",[0,0.375,1,2.084,5,0.598,6,2.88,33,0.051,35,0.598,152,0.815,162,0.04,163,0.04,164,2.084,165,1.813,170,2.88,176,2.88,178,2.084,180,2.084,182,2.084,184,2.084,186,2.084,188,2.084,219,1.262,220,1.813,222,2.424,254,2.88,258,2.93,261,1.813,289,2.88,290,2.88,347,3.261,348,2.88,366,2.88,435,2.084,436,2.424,437,2.88,450,1.587,488,1.587,587,2.581,650,2.88,699,2.88,744,2.88,880,2.88,885,2.88,886,3.571,887,3.571,888,3.571,889,3.571,890,3.571,891,3.571,892,3.571,893,3.571,894,3.571,895,3.571,896,3.571,897,3.571,898,3.571,899,3.571,900,3.571,901,3.571,902,2.88,903,3.571,904,3.571,905,3.571,906,3.571,907,3.571,908,3.571,909,3.571,910,3.571]],["title/dependencies.html",[807,1.697,911,1.893]],["body/dependencies.html",[33,0.051,78,0.798,83,0.679,84,0.926,162,0.044,163,0.044,484,3.272,807,2.425,849,3.272,852,3.272,867,3.272,912,4.057,913,4.057,914,4.776,915,4.776,916,4.776,917,4.057,918,4.057,919,4.057,920,4.057]],["title/miscellaneous/enumerations.html",[921,1.37,922,2.696]],["body/miscellaneous/enumerations.html",[9,0.702,33,0.049,162,0.044,163,0.044,276,2.287,487,3.307,543,2.848,544,2.848,587,2.449,642,2.848,643,3.383,644,3.383,645,3.383,921,2.449,922,3.383,923,3.383]],["title/index.html",[9,0.393,836,1.893,837,1.893]],["body/index.html",[33,0.049,83,0.86,162,0.042,163,0.042,169,3.077,174,2.046,218,1.384,219,1.209,220,1.937,431,3.077,488,1.695,549,2.59,588,3.077,610,3.077,621,3.077,646,2.59,649,2.227,805,1.937,833,3.077,924,5.136,925,3.815,926,3.815,927,3.815,928,3.815,929,3.815,930,3.815,931,5.136,932,4.946,933,5.136,934,4.946,935,3.815,936,3.815,937,3.815,938,4.605,939,4.605,940,3.815,941,3.815,942,3.815]],["title/modules.html",[806,2.557]],["body/modules.html",[33,0.045,162,0.045,163,0.045,805,2.199,806,2.941,943,4.332,944,4.332,945,4.332,946,4.332]],["title/overview.html",[947,3.038]],["body/overview.html",[2,1.222,33,0.048,162,0.044,163,0.044,164,2.374,165,2.778,261,2.065,642,3.45,647,2.374,805,2.715,807,2.428,808,3.28,809,3.28,810,3.28,811,3.857,812,3.28,813,3.28,902,3.28,947,3.28]],["title/properties.html",[91,1.485,911,1.893]],["body/properties.html",[33,0.05,60,1.217,83,0.678,91,1.799,162,0.044,163,0.044,218,1.434,219,1.253,593,3.264,608,3.264,649,2.363,834,3.264,842,3.264,948,4.048,949,4.048,950,4.048,951,4.048,952,4.048,953,4.048,954,4.048,955,4.048,956,4.77,957,4.77,958,4.048,959,4.048,960,4.048,961,4.048]],["title/miscellaneous/variables.html",[921,1.37,962,2.696]],["body/miscellaneous/variables.html",[9,0.691,33,0.047,35,0.691,152,0.941,162,0.044,163,0.044,174,1.833,218,1.45,219,1.267,276,1.833,407,2.408,450,1.833,453,2.408,488,2.271,495,2.801,587,2.408,640,3.326,646,2.801,647,2.408,648,3.326,649,2.408,921,2.408,923,3.326,962,3.326]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":258,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{},"coverage.html":{}}}],["0/16",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":642,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1/1",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":880,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["100",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["14.0.0",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["14b3c93",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["15.0.0",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["16.0.0",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["1d7c3d7",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":643,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.0",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["2022",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":890,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":645,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.1",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["3.51.0",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["3.52.0",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["3.53.0",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":867,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["4.0.1",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["4.0.2",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["5.0.0",{"_index":852,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["5.0.1",{"_index":842,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["69d7cbc",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":896,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":254,"title":{},"body":{"components/GoogleComponent.html":{},"coverage.html":{}}}],["8/29",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["8d70d41",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":902,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["9/10",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["_config",{"_index":438,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_convertpoints",{"_index":700,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["_convertpoints(line",{"_index":706,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["_fitboundsservice",{"_index":208,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_getscriptsrc",{"_index":443,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_getscriptsrc(callbackname",{"_index":454,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_handleboundschange",{"_index":201,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handleidleevent",{"_index":202,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handlemapcenterchange",{"_index":203,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handlemapmouseevents",{"_index":204,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handlemaptypeidchange",{"_index":205,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handlemapzoomchange",{"_index":206,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handletilesloadedevent",{"_index":207,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_loader",{"_index":356,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["_mapswrapper",{"_index":37,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["_markermanager",{"_index":297,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["_markers",{"_index":367,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["_script_id",{"_index":440,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_scriptloadingpromise",{"_index":441,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_zone",{"_index":28,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["a7fb44a",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":288,"title":{},"body":{"components/GoogleComponent.html":{}}}],["add",{"_index":934,"title":{},"body":{"index.html":{}}}],["addcircle",{"_index":13,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["addcircle(circle",{"_index":38,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["addinfowindow",{"_index":291,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["addinfowindow(infowindow",{"_index":299,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["addpolygon",{"_index":651,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["addpolygon(path",{"_index":656,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["addpolyline",{"_index":701,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["addpolyline(line",{"_index":710,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["addrectangle",{"_index":745,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["addrectangle(rectangle",{"_index":749,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["adjust",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["agm",{"_index":951,"title":{},"body":{"properties.html":{}}}],["allows",{"_index":597,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["already",{"_index":321,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["alter",{"_index":634,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["angular",{"_index":649,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":484,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"dependencies.html":{}}}],["angular/core",{"_index":78,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":950,"title":{},"body":{"properties.html":{}}}],["any).google",{"_index":502,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["any).google.maps",{"_index":503,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["api",{"_index":220,"title":{},"body":{"components/GoogleComponent.html":{},"interfaces/GoogleModuleOptions.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["apikey",{"_index":588,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{}}}],["apis",{"_index":606,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["apiversion",{"_index":589,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["application",{"_index":610,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{}}}],["applications",{"_index":605,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["appmodule",{"_index":940,"title":{},"body":{"index.html":{}}}],["args",{"_index":824,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["array",{"_index":266,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolylineManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["array.isarray(i",{"_index":581,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["array.isarray(queryparams[k",{"_index":574,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["arrays",{"_index":573,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["assigning",{"_index":602,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["assignscriptloadingpromise",{"_index":444,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["assignscriptloadingpromise(scriptelement",{"_index":456,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["async",{"_index":12,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["authenticate",{"_index":609,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["auto",{"_index":644,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["available",{"_index":631,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["await",{"_index":125,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["behavior",{"_index":626,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["bias",{"_index":633,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["bootstrapping",{"_index":473,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["both",{"_index":612,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["bounds",{"_index":140,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleRectangleManager.html":{}}}],["bounds.extend(b",{"_index":365,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["bounds.service",{"_index":223,"title":{},"body":{"components/GoogleComponent.html":{}}}],["bounds.service.ts",{"_index":348,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{},"coverage.html":{}}}],["bounds.service.ts:14",{"_index":355,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["bounds.service.ts:19",{"_index":358,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["bounds.tojson",{"_index":142,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleRectangleManager.html":{}}}],["boundsliteral",{"_index":81,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleRectangleManager.html":{}}}],["break",{"_index":541,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["breaking",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":946,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":943,"title":{},"body":{"modules.html":{}}}],["browser's",{"_index":619,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["bug",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":955,"title":{},"body":{"properties.html":{}}}],["build",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":124,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.addlistener(eventname",{"_index":157,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.getbounds",{"_index":141,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c?.getcenter",{"_index":144,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c?.getradius",{"_index":146,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c?.setcenter",{"_index":147,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c?.setdraggable(circle.draggable",{"_index":149,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c?.seteditable(circle.editable",{"_index":148,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c?.setmap(null",{"_index":127,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c?.setoptions(options",{"_index":138,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c?.setradius(circle.radius",{"_index":151,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c?.setvisible(circle.visible",{"_index":150,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["callback",{"_index":553,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["callbackname",{"_index":442,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["case",{"_index":539,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["casting",{"_index":132,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["center",{"_index":143,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{}}}],["center.lat",{"_index":238,"title":{},"body":{"components/GoogleComponent.html":{}}}],["center.lng",{"_index":240,"title":{},"body":{"components/GoogleComponent.html":{}}}],["center.tojson",{"_index":145,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["change",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":838,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["channel",{"_index":557,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["check",{"_index":130,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["checkscriptelement",{"_index":445,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["circle",{"_index":41,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.clickable",{"_index":100,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.draggable",{"_index":102,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.editable",{"_index":104,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.fillcolor",{"_index":106,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.fillopacity",{"_index":108,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.latitude",{"_index":92,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.longitude",{"_index":93,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.radius",{"_index":110,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.strokecolor",{"_index":112,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.strokeopacity",{"_index":114,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.strokeposition",{"_index":116,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.strokeweight",{"_index":118,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.visible",{"_index":120,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.zindex",{"_index":122,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circlemanager",{"_index":8,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{}}}],["class",{"_index":86,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["click",{"_index":267,"title":{},"body":{"components/GoogleComponent.html":{}}}],["clickable",{"_index":99,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["client",{"_index":555,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["clientid",{"_index":590,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["close",{"_index":292,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["close(infowindow",{"_index":303,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["cluster_ngmapsgooglemodule",{"_index":808,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["cluster_ngmapsgooglemodule_declarations",{"_index":810,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["cluster_ngmapsgooglemodule_exports",{"_index":809,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["code",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["comma",{"_index":578,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["commented",{"_index":90,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["component",{"_index":164,"title":{"components/GoogleComponent.html":{}},"body":{"components/GoogleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_template",{"_index":286,"title":{},"body":{"components/GoogleComponent.html":{}}}],["components",{"_index":166,"title":{},"body":{"components/GoogleComponent.html":{}}}],["computing",{"_index":350,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["config",{"_index":453,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"miscellaneous/variables.html":{}}}],["config.apikey",{"_index":554,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.apiversion",{"_index":551,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.channel",{"_index":558,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.clientid",{"_index":556,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.hostandpath",{"_index":546,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.language",{"_index":564,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.libraries",{"_index":560,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.protocol",{"_index":535,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.region",{"_index":562,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.then((c",{"_index":493,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["configuration",{"_index":463,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["configure",{"_index":446,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{}}}],["configure(config",{"_index":461,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["console.log",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["const",{"_index":123,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["constructor(_loader",{"_index":353,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["constructor(_mapswrapper",{"_index":26,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["constructor(config",{"_index":449,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["container",{"_index":191,"title":{},"body":{"components/GoogleComponent.html":{}}}],["content",{"_index":196,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{}}}],["coords",{"_index":277,"title":{},"body":{"components/GoogleComponent.html":{}}}],["correct",{"_index":430,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["coverage",{"_index":885,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createeventobservable",{"_index":14,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["createeventobservable(eventname",{"_index":43,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["creates",{"_index":306,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["createscriptelement",{"_index":447,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["d",{"_index":938,"title":{},"body":{"index.html":{}}}],["dblclick",{"_index":271,"title":{},"body":{"components/GoogleComponent.html":{}}}],["declarations",{"_index":815,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["default",{"_index":407,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["defines",{"_index":630,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["defining",{"_index":638,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["deleted",{"_index":322,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{}}}],["deleteinfowindow",{"_index":293,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["deleteinfowindow(infowindow",{"_index":307,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["deletemarker",{"_index":368,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["deletemarker(marker",{"_index":383,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["deletepolygon",{"_index":652,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["deletepolygon(paths",{"_index":660,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["deletepolyline",{"_index":702,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["deletepolyline(line",{"_index":713,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["dependencies",{"_index":807,"title":{"dependencies.html":{}},"body":{"modules/NgMapsGoogleModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":937,"title":{},"body":{"index.html":{}}}],["deps",{"_index":825,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"changelog.html":{}}}],["description",{"_index":71,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["dev",{"_index":936,"title":{},"body":{"index.html":{}}}],["different",{"_index":636,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["directive",{"_index":284,"title":{},"body":{"components/GoogleComponent.html":{}}}],["directives",{"_index":287,"title":{},"body":{"components/GoogleComponent.html":{}}}],["disableautopan",{"_index":341,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["display",{"_index":197,"title":{},"body":{"components/GoogleComponent.html":{}}}],["displaying",{"_index":621,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{}}}],["distinct",{"_index":603,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["document",{"_index":451,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["documentation",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":168,"title":{},"body":{"components/GoogleComponent.html":{}}}],["draggable",{"_index":101,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["e",{"_index":158,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["e.emitter.emit(value",{"_index":280,"title":{},"body":{"components/GoogleComponent.html":{}}}],["e52e6e2",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":604,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["east",{"_index":776,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["editable",{"_index":103,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["element",{"_index":283,"title":{},"body":{"components/GoogleComponent.html":{}}}],["emit(value",{"_index":263,"title":{},"body":{"components/GoogleComponent.html":{}}}],["emitter",{"_index":262,"title":{},"body":{"components/GoogleComponent.html":{}}}],["empty",{"_index":572,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["entry",{"_index":583,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["entry.key}=${entry.value",{"_index":584,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["enum",{"_index":641,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["enumerations",{"_index":922,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":519,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["error('document",{"_index":522,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["error('no",{"_index":533,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["event",{"_index":264,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["event[0].latlng.lat",{"_index":278,"title":{},"body":{"components/GoogleComponent.html":{}}}],["event[0].latlng.lng",{"_index":279,"title":{},"body":{"components/GoogleComponent.html":{}}}],["eventname",{"_index":47,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["eventname.foreach((event",{"_index":427,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["events",{"_index":265,"title":{},"body":{"components/GoogleComponent.html":{}}}],["events.foreach((e",{"_index":273,"title":{},"body":{"components/GoogleComponent.html":{}}}],["export",{"_index":85,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["exports",{"_index":816,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["extends",{"_index":7,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["factory",{"_index":827,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["fail",{"_index":611,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"changelog.html":{},"coverage.html":{}}}],["fillcolor",{"_index":105,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["fillopacity",{"_index":107,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["filter",{"_index":569,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["filter((k",{"_index":567,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["firstvaluefrom",{"_index":486,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["firstvaluefrom(this._config",{"_index":532,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["fit",{"_index":222,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"coverage.html":{}}}],["fitboundsservice",{"_index":177,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{}}}],["fixes",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["fixme",{"_index":88,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["force",{"_index":627,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["forroot",{"_index":818,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["forroot(config",{"_index":819,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["forrootfactory",{"_index":822,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["forrootfactory(factory",{"_index":823,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["function",{"_index":467,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{}}}],["generatebounds",{"_index":352,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["generatebounds(includeinbounds",{"_index":357,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["generated",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["geodesic",{"_index":676,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["geopoint",{"_index":82,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{}}}],["get(rectangle",{"_index":799,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["getbounds",{"_index":15,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["getbounds(circle",{"_index":49,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getbounds(rectangle",{"_index":754,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["getcenter",{"_index":16,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getcenter(circle",{"_index":52,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getradius",{"_index":17,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getradius(circle",{"_index":54,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getting",{"_index":836,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["given",{"_index":59,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GoogleRectangleManager.html":{}}}],["google",{"_index":218,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["google.component",{"_index":832,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["google.maps",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["google.maps.circleoptions",{"_index":69,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["google.maps.infowindowoptions",{"_index":312,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["google.maps.latlngbounds",{"_index":363,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["google.maps.latlngbounds().tojson",{"_index":362,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["google.maps.latlngliteral",{"_index":242,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolylineManager.html":{}}}],["google.maps.mapseventlistener",{"_index":155,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["google.maps.polygon",{"_index":694,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["google.maps.polyline",{"_index":740,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["google.maps.rectangleoptions",{"_index":765,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["google.maps.strokeposition",{"_index":137,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["google_maps_api_config",{"_index":488,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["googlecirclemanager",{"_index":1,"title":{"injectables/GoogleCircleManager.html":{}},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"coverage.html":{}}}],["googlecomponent",{"_index":165,"title":{"components/GoogleComponent.html":{}},"body":{"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googleinfowindowmanager",{"_index":188,"title":{"injectables/GoogleInfoWindowManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"coverage.html":{}}}],["googlemaps",{"_index":834,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"properties.html":{}}}],["googlemapsapiscript",{"_index":480,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["googlemapsapiwrapper",{"_index":176,"title":{},"body":{"components/GoogleComponent.html":{},"coverage.html":{}}}],["googlemapsfitboundsservice",{"_index":178,"title":{"injectables/GoogleMapsFitBoundsService.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"coverage.html":{}}}],["googlemapsmarkermanager",{"_index":180,"title":{"injectables/GoogleMapsMarkerManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsMarkerManager.html":{},"coverage.html":{}}}],["googlemapsscriptloader",{"_index":435,"title":{"injectables/GoogleMapsScriptLoader.html":{}},"body":{"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{}}}],["googlemapsscriptprotocol",{"_index":487,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["googlemapsscriptprotocol.auto",{"_index":540,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["googlemapsscriptprotocol.http",{"_index":542,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["googlemapsscriptprotocol.https",{"_index":536,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["googlemoduleoptions",{"_index":450,"title":{"interfaces/GoogleModuleOptions.html":{}},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["googlepolygonmanager",{"_index":182,"title":{"injectables/GooglePolygonManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolygonManager.html":{},"coverage.html":{}}}],["googlepolylinemanager",{"_index":184,"title":{"injectables/GooglePolylineManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolylineManager.html":{},"coverage.html":{}}}],["googlerectanglemanager",{"_index":186,"title":{"injectables/GoogleRectangleManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GoogleRectangleManager.html":{},"coverage.html":{}}}],["height",{"_index":195,"title":{},"body":{"components/GoogleComponent.html":{}}}],["homepage",{"_index":952,"title":{},"body":{"properties.html":{}}}],["host",{"_index":614,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["hostandpath",{"_index":545,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["html",{"_index":282,"title":{},"body":{"components/GoogleComponent.html":{}}}],["htmlscriptelement",{"_index":457,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["http",{"_index":543,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["https",{"_index":544,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["https://developers.google.com/maps/documentation/javascript/basics#language",{"_index":629,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["https://developers.google.com/maps/documentation/javascript/basics#region",{"_index":639,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["https://developers.google.com/maps/documentation/javascript/get",{"_index":592,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["https://developers.google.com/maps/documentation/javascript/libraries",{"_index":632,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["https://github.com/ng",{"_index":956,"title":{},"body":{"properties.html":{}}}],["https://ng",{"_index":953,"title":{},"body":{"properties.html":{}}}],["i.join",{"_index":582,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["i?.addlistener(eventname",{"_index":346,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["i?.setoptions(options",{"_index":337,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["i?.setposition",{"_index":327,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["i?.setzindex(infowindow.zindex",{"_index":329,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["icon",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["icons",{"_index":736,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["id",{"_index":601,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["identifier",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":433,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["implement",{"_index":89,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["implementation",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["import",{"_index":77,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["improve",{"_index":131,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["included",{"_index":613,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["includeinbounds",{"_index":359,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["includeinbounds.foreach((b",{"_index":364,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["includeinbounds.size",{"_index":361,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["information",{"_index":623,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["infowindow",{"_index":302,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.content?.nativeelement",{"_index":338,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.disableautopan",{"_index":342,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.hostmarker",{"_index":332,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.latitude",{"_index":325,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.longitude",{"_index":326,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.maxwidth",{"_index":340,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.zindex",{"_index":328,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindowmanager",{"_index":187,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{}}}],["inherit",{"_index":194,"title":{},"body":{"components/GoogleComponent.html":{}}}],["inject",{"_index":485,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["inject(document",{"_index":490,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["inject(google_maps_api_config",{"_index":489,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["injectable",{"_index":0,"title":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"overview.html":{}}}],["injectiontoken",{"_index":640,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["inner",{"_index":192,"title":{},"body":{"components/GoogleComponent.html":{}}}],["inside",{"_index":929,"title":{},"body":{"index.html":{}}}],["install",{"_index":932,"title":{},"body":{"index.html":{}}}],["installation",{"_index":930,"title":{},"body":{"index.html":{}}}],["instance",{"_index":72,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{}}}],["instanceof",{"_index":492,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["interface",{"_index":261,"title":{"interfaces/GoogleModuleOptions.html":{}},"body":{"components/GoogleComponent.html":{},"interfaces/GoogleModuleOptions.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":586,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["issues",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":685,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["item.setpaths(polygon.paths",{"_index":687,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["iwindow",{"_index":318,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["iwindow.close",{"_index":323,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["join",{"_index":577,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["jscutlery/semver",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["k",{"_index":570,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["key",{"_index":549,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"index.html":{}}}],["keywords",{"_index":948,"title":{},"body":{"properties.html":{}}}],["l",{"_index":689,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["l.addlistener(eventname",{"_index":698,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["l.setmap(null",{"_index":695,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["l.setpath(path",{"_index":741,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["l?.setoptions(options",{"_index":691,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["language",{"_index":563,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["lat",{"_index":97,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["lazymapsapiloader",{"_index":483,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["legend",{"_index":281,"title":{},"body":{"components/GoogleComponent.html":{}}}],["libraries",{"_index":559,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["library",{"_index":928,"title":{},"body":{"index.html":{}}}],["license",{"_index":608,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"properties.html":{}}}],["line",{"_index":709,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line._getpoints().map",{"_index":720,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.clickable",{"_index":727,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.draggable",{"_index":728,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.editable",{"_index":729,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.geodesic",{"_index":730,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.icons",{"_index":737,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.strokecolor",{"_index":731,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.strokeopacity",{"_index":732,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.strokeweight",{"_index":733,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.visible",{"_index":734,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.zindex",{"_index":735,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["link",{"_index":134,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["listener",{"_index":154,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["listener.remove",{"_index":161,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["literal",{"_index":664,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["lng",{"_index":98,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["load",{"_index":448,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["loaded",{"_index":504,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["loader.service",{"_index":831,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["loader.service.ts",{"_index":437,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"coverage.html":{}}}],["loader.service.ts:100",{"_index":455,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:15",{"_index":482,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:16",{"_index":479,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:18",{"_index":481,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:19",{"_index":452,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:45",{"_index":462,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:50",{"_index":476,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:62",{"_index":460,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:72",{"_index":458,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:87",{"_index":474,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loading",{"_index":468,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["m",{"_index":409,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["m.seticon(marker.icon",{"_index":434,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setmap(null",{"_index":411,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.then((l",{"_index":693,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["m?.addlistener(event",{"_index":428,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m?.setanimation(google.maps.animation[marker.animation",{"_index":425,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m?.setanimation(marker.animation",{"_index":426,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m?.setclickable(marker.clickable",{"_index":423,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m?.setdraggable(marker.draggable",{"_index":418,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m?.seticon(marker.iconurl",{"_index":419,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m?.setlabel(marker.label",{"_index":417,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m?.setopacity(marker.opacity",{"_index":420,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m?.setposition",{"_index":415,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m?.settitle(marker.title",{"_index":416,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m?.setvisible(marker.visible",{"_index":421,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m?.setzindex(marker.zindex",{"_index":422,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["managers/circle.manager",{"_index":224,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/info",{"_index":225,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/marker.manager",{"_index":227,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/polygon.manager",{"_index":228,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/polyline.manager",{"_index":229,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/rectangle.manager",{"_index":230,"title":{},"body":{"components/GoogleComponent.html":{}}}],["map",{"_index":60,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GoogleRectangleManager.html":{},"properties.html":{}}}],["map((k",{"_index":576,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["map_provider",{"_index":830,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["maps",{"_index":219,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maps.git",{"_index":961,"title":{},"body":{"properties.html":{}}}],["maps.github.io/core",{"_index":954,"title":{},"body":{"properties.html":{}}}],["maps.googleapis.com/maps/api/js",{"_index":547,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["maps/core",{"_index":84,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"dependencies.html":{}}}],["maps/google",{"_index":924,"title":{},"body":{"index.html":{}}}],["maps/issues",{"_index":958,"title":{},"body":{"properties.html":{}}}],["maps/ng",{"_index":957,"title":{},"body":{"properties.html":{}}}],["mapsapiloader",{"_index":354,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{}}}],["mapsapiwrapper",{"_index":27,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["marker",{"_index":333,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"changelog.html":{}}}],["marker.animation",{"_index":424,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["marker.icon?.path",{"_index":429,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["marker.latitude",{"_index":413,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["marker.longitude",{"_index":414,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["markermanager",{"_index":179,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{}}}],["matching",{"_index":163,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxwidth",{"_index":339,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["metadata",{"_index":172,"title":{},"body":{"components/GoogleComponent.html":{}}}],["methods",{"_index":10,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["miscellaneous",{"_index":921,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":959,"title":{},"body":{"properties.html":{}}}],["modular",{"_index":926,"title":{},"body":{"index.html":{}}}],["module",{"_index":647,"title":{"modules/NgMapsGoogleModule.html":{}},"body":{"interfaces/GoogleModuleOptions.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":806,"title":{"modules.html":{}},"body":{"modules/NgMapsGoogleModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":821,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["name",{"_index":34,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["need",{"_index":935,"title":{},"body":{"index.html":{}}}],["needed",{"_index":472,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["new",{"_index":152,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":83,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"dependencies.html":{},"index.html":{},"properties.html":{}}}],["ng2",{"_index":949,"title":{},"body":{"properties.html":{}}}],["ngmapscircledirective",{"_index":39,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["ngmapsgooglemodule",{"_index":805,"title":{"modules/NgMapsGoogleModule.html":{}},"body":{"modules/NgMapsGoogleModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ngmapsinfowindowcomponent",{"_index":300,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["ngmapsmarkercomponent",{"_index":381,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["ngmapspolygondirective",{"_index":657,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["ngmapspolyline",{"_index":707,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["ngmapspolylinepoint",{"_index":719,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["ngmapsrectangledirective",{"_index":750,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["ngmapsviewcomponent",{"_index":171,"title":{},"body":{"components/GoogleComponent.html":{}}}],["ngmodule",{"_index":829,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["ngzone",{"_index":29,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["none",{"_index":198,"title":{},"body":{"components/GoogleComponent.html":{}}}],["north",{"_index":775,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["npm",{"_index":931,"title":{},"body":{"index.html":{}}}],["null",{"_index":139,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["number",{"_index":343,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["object",{"_index":495,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["object.keys(queryparams",{"_index":566,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["observable",{"_index":48,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["observable((observer",{"_index":153,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["observer",{"_index":79,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["observer.next(e",{"_index":160,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["open",{"_index":294,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["open(infowindow",{"_index":309,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["optional",{"_index":36,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["options",{"_index":68,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["options.strokeposition",{"_index":136,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["out",{"_index":813,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["override",{"_index":231,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["overview",{"_index":947,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":625,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["package",{"_index":911,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":505,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["param",{"_index":133,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{}}}],["parameter",{"_index":596,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["params",{"_index":565,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["path",{"_index":615,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["path.clickable",{"_index":671,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.draggable",{"_index":672,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.editable",{"_index":673,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.fillcolor",{"_index":674,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.fillopacity",{"_index":675,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.geodesic",{"_index":677,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.paths",{"_index":678,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.strokecolor",{"_index":679,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.strokeopacity",{"_index":680,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.strokeweight",{"_index":681,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.visible",{"_index":682,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.zindex",{"_index":683,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["paths",{"_index":662,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["peer",{"_index":849,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["plan",{"_index":607,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["plans",{"_index":595,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["please",{"_index":648,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["point",{"_index":721,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["point.latitude",{"_index":722,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["point.longitude",{"_index":723,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["polygon",{"_index":668,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["polygonmanager",{"_index":181,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolygonManager.html":{}}}],["polygonpromise",{"_index":669,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["polylinemanager",{"_index":183,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolylineManager.html":{}}}],["polylinepromise",{"_index":725,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["postponed",{"_index":470,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["preferred",{"_index":620,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["premium",{"_index":594,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["promise",{"_index":51,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["promise((resolve",{"_index":514,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["promise.resolve",{"_index":506,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["properties",{"_index":91,"title":{"properties.html":{}},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"properties.html":{}}}],["propname",{"_index":688,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["protected",{"_index":200,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolylineManager.html":{}}}],["protocol",{"_index":537,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["protocoltype",{"_index":534,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["protocol}//${hostandpath}?${params",{"_index":585,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["provide",{"_index":174,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":464,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["provider",{"_index":941,"title":{},"body":{"index.html":{}}}],["providers",{"_index":173,"title":{},"body":{"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{}}}],["public",{"_index":11,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["quarterly",{"_index":552,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["queryparams",{"_index":548,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["queryparams[k",{"_index":568,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["queryparams[k].length",{"_index":575,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["r",{"_index":794,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.addlistener(eventname",{"_index":804,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setdraggable(rectangle.draggable",{"_index":802,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.seteditable(rectangle.editable",{"_index":801,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setmap(null",{"_index":791,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setoptions(options",{"_index":793,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setvisible(rectangle.visible",{"_index":803,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r?.getbounds",{"_index":796,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r?.setbounds",{"_index":797,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["radius",{"_index":109,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["readonly",{"_index":439,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["rectangle",{"_index":752,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.clickable",{"_index":779,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.draggable",{"_index":780,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.east",{"_index":770,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.editable",{"_index":781,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.fillcolor",{"_index":782,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.fillopacity",{"_index":783,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.north",{"_index":769,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.south",{"_index":771,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.strokecolor",{"_index":784,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.strokeopacity",{"_index":785,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.strokeposition",{"_index":786,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.strokeweight",{"_index":787,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.visible",{"_index":788,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.west",{"_index":772,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.zindex",{"_index":789,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectanglemanager",{"_index":185,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleRectangleManager.html":{}}}],["refactoring",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["region",{"_index":561,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["reject",{"_index":515,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["reject(error",{"_index":520,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["remove",{"_index":571,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"changelog.html":{}}}],["removecircle",{"_index":18,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["removecircle(circle",{"_index":56,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["removerectangle",{"_index":746,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["removerectangle(rectangle",{"_index":756,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["removes",{"_index":58,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["replaysubject",{"_index":477,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["replaysubject(1",{"_index":478,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["repository",{"_index":960,"title":{},"body":{"properties.html":{}}}],["reset",{"_index":812,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["resolve",{"_index":517,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["responsible",{"_index":349,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["results",{"_index":162,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":94,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["returns",{"_index":42,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["rightclick",{"_index":269,"title":{},"body":{"components/GoogleComponent.html":{}}}],["rxjs",{"_index":80,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["s",{"_index":232,"title":{},"body":{"components/GoogleComponent.html":{}}}],["script",{"_index":436,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{}}}],["script.async",{"_index":526,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["script.defer",{"_index":528,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["script.id",{"_index":529,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["script.src",{"_index":530,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["script.type",{"_index":524,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["scriptelement",{"_index":459,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["scriptelement.onerror",{"_index":518,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["scripts",{"_index":469,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["see",{"_index":591,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["selector",{"_index":189,"title":{},"body":{"components/GoogleComponent.html":{}}}],["seperated",{"_index":579,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["serve",{"_index":635,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["setbounds",{"_index":747,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setbounds(rectangle",{"_index":758,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setcenter",{"_index":19,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setcenter(circle",{"_index":61,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setdraggable",{"_index":20,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["setdraggable(circle",{"_index":63,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setdraggable(rectangle",{"_index":760,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["seteditable",{"_index":21,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["seteditable(circle",{"_index":65,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["seteditable(rectangle",{"_index":762,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setoptions",{"_index":22,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["setoptions(circle",{"_index":67,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setoptions(infowindow",{"_index":311,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["setoptions(rectangle",{"_index":764,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setpolygonoptions",{"_index":653,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["setpolygonoptions(path",{"_index":663,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["setpolylineoptions",{"_index":703,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["setpolylineoptions(line",{"_index":715,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["setposition",{"_index":295,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["setposition(infowindow",{"_index":314,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["setradius",{"_index":23,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setradius(circle",{"_index":73,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setting",{"_index":628,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["setvisible",{"_index":24,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["setvisible(circle",{"_index":75,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setvisible(rectangle",{"_index":767,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setzindex",{"_index":296,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["setzindex(infowindow",{"_index":316,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["shakable",{"_index":927,"title":{},"body":{"index.html":{}}}],["simple",{"_index":925,"title":{},"body":{"index.html":{}}}],["single",{"_index":351,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["south",{"_index":777,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/.../options.ts",{"_index":923,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/lib/google",{"_index":347,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{},"coverage.html":{}}}],["src/lib/google.component.ts",{"_index":170,"title":{},"body":{"components/GoogleComponent.html":{},"coverage.html":{}}}],["src/lib/google.component.ts:104",{"_index":216,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:116",{"_index":212,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:123",{"_index":217,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:130",{"_index":214,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:55",{"_index":209,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:64",{"_index":213,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:82",{"_index":210,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:93",{"_index":215,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.module.ts",{"_index":814,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["src/lib/google.module.ts:25",{"_index":820,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["src/lib/google.module.ts:43",{"_index":826,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["src/lib/managers/circle.manager.ts",{"_index":6,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"coverage.html":{}}}],["src/lib/managers/circle.manager.ts:101",{"_index":62,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:109",{"_index":66,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:114",{"_index":64,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:119",{"_index":76,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:124",{"_index":74,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:129",{"_index":45,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:13",{"_index":31,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:21",{"_index":40,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:50",{"_index":57,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:61",{"_index":70,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:75",{"_index":50,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:86",{"_index":53,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:94",{"_index":55,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/info",{"_index":289,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"coverage.html":{}}}],["src/lib/managers/marker.manager.ts",{"_index":366,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{},"coverage.html":{}}}],["src/lib/managers/marker.manager.ts:104",{"_index":392,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:12",{"_index":408,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:13",{"_index":380,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:19",{"_index":384,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:32",{"_index":398,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:40",{"_index":402,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:45",{"_index":396,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:50",{"_index":390,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:55",{"_index":394,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:60",{"_index":400,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:65",{"_index":404,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:70",{"_index":406,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:75",{"_index":388,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:80",{"_index":386,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:89",{"_index":382,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/polygon.manager.ts",{"_index":650,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"coverage.html":{}}}],["src/lib/managers/polygon.manager.ts:11",{"_index":655,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:16",{"_index":658,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:34",{"_index":667,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:43",{"_index":665,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:51",{"_index":661,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:64",{"_index":659,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polyline.manager.ts",{"_index":699,"title":{},"body":{"injectables/GooglePolylineManager.html":{},"coverage.html":{}}}],["src/lib/managers/polyline.manager.ts:12",{"_index":705,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:17",{"_index":708,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:29",{"_index":711,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:47",{"_index":718,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:60",{"_index":716,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:68",{"_index":714,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:81",{"_index":712,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/rectangle.manager.ts",{"_index":744,"title":{},"body":{"injectables/GoogleRectangleManager.html":{},"coverage.html":{}}}],["src/lib/managers/rectangle.manager.ts:104",{"_index":761,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:112",{"_index":768,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:118",{"_index":753,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:12",{"_index":748,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:17",{"_index":751,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:56",{"_index":757,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:65",{"_index":766,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:72",{"_index":755,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:80",{"_index":759,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:98",{"_index":763,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/options.ts",{"_index":587,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":837,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["statements",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":817,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["strict",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":44,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["strings",{"_index":580,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["strokecolor",{"_index":111,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["strokeopacity",{"_index":113,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["strokeposition",{"_index":115,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["strokeweight",{"_index":117,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["styles",{"_index":167,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribe",{"_index":235,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribe((event",{"_index":275,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('bounds_changed",{"_index":244,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('center_changed",{"_index":234,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('maptypeid_changed",{"_index":247,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('tilesloaded",{"_index":259,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('zoom_changed",{"_index":250,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent(e.name",{"_index":274,"title":{},"body":{"components/GoogleComponent.html":{}}}],["super",{"_index":491,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["super(_loader",{"_index":360,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["super(_mapswrapper",{"_index":87,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["support",{"_index":944,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":945,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":538,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["t",{"_index":46,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["table",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":617,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["template",{"_index":199,"title":{},"body":{"components/GoogleComponent.html":{}}}],["text/javascript",{"_index":525,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["textual",{"_index":622,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["then((r",{"_index":800,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._apiwrapper.createcircle",{"_index":96,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._apiwrapper.createrectangle",{"_index":774,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._circles.delete(circle",{"_index":128,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._circles.get(circle",{"_index":126,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._circles.set",{"_index":95,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._circles?.get(circle)?.then((c",{"_index":156,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._config.complete",{"_index":501,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._config.next(config",{"_index":500,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._convertpoints(line",{"_index":724,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._document",{"_index":497,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._document.createelement('script",{"_index":523,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._document.defaultview",{"_index":499,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._document?.body.appendchild(scriptelement",{"_index":513,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._document?.getelementbyid",{"_index":509,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._getscriptsrc(this.callbackname",{"_index":531,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._infowindows.delete(infowindow",{"_index":324,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._infowindows.get(infowindow",{"_index":319,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._infowindows.set(infowindow",{"_index":345,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._mapswrapper",{"_index":233,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._mapswrapper.createinfowindow",{"_index":344,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._mapswrapper.createpolygon",{"_index":670,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._mapswrapper.createpolyline",{"_index":726,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._mapswrapper.getbounds().then((bounds",{"_index":245,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._mapswrapper.getcenter().then((center",{"_index":236,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._mapswrapper.getmaptypeid().then((maptypeid",{"_index":248,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._mapswrapper.getnativemap",{"_index":331,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._mapswrapper.getzoom().then((z",{"_index":251,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._mapswrapper.subscribetomapevent('idle').subscribe",{"_index":256,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._markermanager.getnativemarker",{"_index":334,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._markers.delete(marker",{"_index":412,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["this._markers.get(marker",{"_index":410,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["this._polygons.delete(paths",{"_index":696,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polygons.get(path",{"_index":690,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polygons.get(path)?.then((l",{"_index":697,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polygons.get(paths",{"_index":692,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polygons.get(polygon",{"_index":686,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polygons.set(path",{"_index":684,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polylines.delete(line",{"_index":742,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._polylines.get(line",{"_index":739,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._polylines.get(line)?.then((l",{"_index":743,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._polylines.set(line",{"_index":738,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._rectangles",{"_index":798,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._rectangles.delete(rectangle",{"_index":792,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._rectangles.get(rectangle",{"_index":795,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._rectangles.get(rectangle)?.then((r",{"_index":790,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._rectangles.set",{"_index":773,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._script_id",{"_index":510,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._scriptloadingpromise",{"_index":507,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._window",{"_index":498,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._window[this.callbackname",{"_index":516,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._zone.run",{"_index":159,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["this.assignscriptloadingpromise(scriptelement",{"_index":512,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.boundschange.emit(bounds",{"_index":246,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.centerchange.emit",{"_index":241,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.checkscriptelement",{"_index":508,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.configure(c",{"_index":494,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.configure(config",{"_index":496,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.createscriptelement",{"_index":511,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.idle.emit(void",{"_index":257,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.latitude",{"_index":237,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.longitude",{"_index":239,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.mapclick",{"_index":268,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.mapdblclick",{"_index":272,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.maprightclick",{"_index":270,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.maptypeidchange.emit(maptypeid",{"_index":249,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.subscription.add(s",{"_index":243,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.tilesloaded.emit(void",{"_index":260,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.zoom",{"_index":252,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.zoomchange.emit(z",{"_index":255,"title":{},"body":{"components/GoogleComponent.html":{}}}],["throw",{"_index":521,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["tiles",{"_index":637,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["time",{"_index":465,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["todo",{"_index":129,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsMarkerManager.html":{}}}],["token",{"_index":646,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":598,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["tree",{"_index":169,"title":{},"body":{"components/GoogleComponent.html":{},"index.html":{}}}],["true",{"_index":527,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["ts",{"_index":432,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["tslib",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":35,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typechecking",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["typeof",{"_index":135,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["types",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["types/google.maps",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["types/googlemaps",{"_index":939,"title":{},"body":{"index.html":{}}}],["typings",{"_index":431,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{},"index.html":{}}}],["under",{"_index":600,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["unknown",{"_index":475,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["until",{"_index":471,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["update",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["updateanimation",{"_index":369,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateanimation(marker",{"_index":385,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateclickable",{"_index":370,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateclickable(marker",{"_index":387,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updated",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["updatedraggable",{"_index":371,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatedraggable(marker",{"_index":389,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateicon",{"_index":372,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateicon(marker",{"_index":391,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateiconlegacy",{"_index":373,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateiconlegacy(marker",{"_index":393,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatelabel",{"_index":374,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatelabel(marker",{"_index":395,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatemarkerposition",{"_index":375,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatemarkerposition(marker",{"_index":397,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateopacity",{"_index":376,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateopacity(marker",{"_index":399,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatepolygon",{"_index":654,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["updatepolygon(polygon",{"_index":666,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["updatepolylinepoints",{"_index":704,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["updatepolylinepoints(line",{"_index":717,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["updatetitle",{"_index":377,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatetitle(marker",{"_index":401,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatevisible",{"_index":378,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatevisible(marker",{"_index":403,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatezindex",{"_index":379,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatezindex(marker",{"_index":405,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["usage",{"_index":599,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"changelog.html":{}}}],["use",{"_index":466,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["useclass",{"_index":175,"title":{},"body":{"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{}}}],["used",{"_index":616,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["usefactory",{"_index":835,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["uses",{"_index":618,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["usevalue",{"_index":833,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"index.html":{}}}],["using",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["v",{"_index":550,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["v5",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":276,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":285,"title":{},"body":{"components/GoogleComponent.html":{}}}],["variable",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":962,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":593,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"properties.html":{}}}],["view",{"_index":190,"title":{},"body":{"components/GoogleComponent.html":{}}}],["visible",{"_index":119,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["void",{"_index":211,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["w",{"_index":330,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["w?.close",{"_index":336,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["w?.open(map",{"_index":335,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["west",{"_index":778,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["width",{"_index":193,"title":{},"body":{"components/GoogleComponent.html":{}}}],["window",{"_index":320,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager",{"_index":226,"title":{},"body":{"components/GoogleComponent.html":{}}}],["window.manager.ts",{"_index":290,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"coverage.html":{}}}],["window.manager.ts:109",{"_index":305,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:13",{"_index":298,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:22",{"_index":308,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:37",{"_index":315,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:48",{"_index":317,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:56",{"_index":310,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:69",{"_index":304,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:74",{"_index":313,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:82",{"_index":301,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["wish",{"_index":624,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["wrapper",{"_index":221,"title":{},"body":{"components/GoogleComponent.html":{}}}],["wrapper.ts",{"_index":889,"title":{},"body":{"coverage.html":{}}}],["yarn",{"_index":933,"title":{},"body":{"index.html":{}}}],["yes",{"_index":828,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["your_api_key",{"_index":942,"title":{},"body":{"index.html":{}}}],["z",{"_index":253,"title":{},"body":{"components/GoogleComponent.html":{}}}],["zindex",{"_index":121,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["zoom",{"_index":811,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/GoogleCircleManager.html":{"url":"injectables/GoogleCircleManager.html","title":"injectable - GoogleCircleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleCircleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/circle.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    CircleManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addCircle\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Async\n                                getBounds\n                            \n                            \n                                    Public\n                                    Async\n                                getCenter\n                            \n                            \n                                    Public\n                                    Async\n                                getRadius\n                            \n                            \n                                    Public\n                                    Async\n                                removeCircle\n                            \n                            \n                                    Public\n                                    Async\n                                setCenter\n                            \n                            \n                                    Public\n                                    Async\n                                setDraggable\n                            \n                            \n                                    Public\n                                    Async\n                                setEditable\n                            \n                            \n                                    Public\n                                    Async\n                                setOptions\n                            \n                            \n                                    Public\n                                    Async\n                                setRadius\n                            \n                            \n                                    Public\n                                    Async\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/circle.manager.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        addCircle\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:129\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getRadius\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        removeCircle\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:50\n                \n            \n\n\n            \n                \n                    Removes the given circle from the map.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setDraggable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setEditable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(circle: NgMapsCircleDirective, options: google.maps.CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of NgMapsCircleDirective\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                            google.maps.CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        options for the circle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setRadius\n                        \n                    \n                \n            \n            \n                \n                    \n                    setRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setVisible\n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  BoundsLiteral,\n  CircleManager,\n  GeoPoint,\n  MapsApiWrapper,\n  NgMapsCircleDirective,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GoogleCircleManager extends CircleManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  /**\n   * @fixme implement commented properties\n   */\n  public async addCircle(circle: NgMapsCircleDirective) {\n    if (!circle.latitude || !circle.longitude) {\n      return;\n    }\n    this._circles.set(\n      circle,\n      this._apiWrapper.createCircle(\n        { lat: circle.latitude, lng: circle.longitude },\n        {\n          // clickable: circle.clickable,\n          // draggable: circle.draggable,\n          // editable: circle.editable,\n          fillColor: circle.fillColor,\n          fillOpacity: circle.fillOpacity,\n          radius: circle.radius,\n          strokeColor: circle.strokeColor,\n          strokeOpacity: circle.strokeOpacity,\n          // strokePosition: circle.strokePosition,\n          strokeWeight: circle.strokeWeight,\n          visible: circle.visible,\n          zIndex: circle.zIndex,\n        },\n      ),\n    );\n  }\n\n  /**\n   * Removes the given circle from the map.\n   */\n  public async removeCircle(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    c?.setMap(null);\n    this._circles.delete(circle);\n  }\n\n  /**\n   * @todo check how to improve type casting\n   * @param circle instance of {@link NgMapsCircleDirective}\n   * @param options options for the circle\n   */\n  public async setOptions(\n    circle: NgMapsCircleDirective,\n    options: google.maps.CircleOptions,\n  ): Promise {\n    const c = await this._circles.get(circle);\n\n    if (typeof options.strokePosition === 'string') {\n      options.strokePosition = google.maps.StrokePosition[\n        options.strokePosition\n      ] as any as google.maps.StrokePosition;\n    }\n    return c?.setOptions(options);\n  }\n\n  public async getBounds(\n    circle: NgMapsCircleDirective,\n  ): Promise {\n    const c = await this._circles.get(circle);\n    if (!c) {\n      return null;\n    }\n    const bounds = c.getBounds();\n    return bounds ? bounds.toJSON() : null;\n  }\n\n  public async getCenter(\n    circle: NgMapsCircleDirective,\n  ): Promise {\n    const c = await this._circles.get(circle);\n    const center = c?.getCenter();\n    return center ? center.toJSON() : null;\n  }\n\n  public async getRadius(\n    circle: NgMapsCircleDirective,\n  ): Promise {\n    const c = await this._circles.get(circle);\n    return c?.getRadius() ?? null;\n  }\n\n  public async setCenter(circle: NgMapsCircleDirective): Promise {\n    if (!circle.latitude || !circle.longitude) {\n      return;\n    }\n    const c = await this._circles.get(circle);\n    c?.setCenter({ lat: circle.latitude, lng: circle.longitude });\n  }\n\n  public async setEditable(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    c?.setEditable(circle.editable);\n  }\n\n  public async setDraggable(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    c?.setDraggable(circle.draggable);\n  }\n\n  public async setVisible(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    c?.setVisible(circle.visible);\n  }\n\n  public async setRadius(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    c?.setRadius(circle.radius);\n  }\n\n  public createEventObservable(\n    eventName: string,\n    circle: NgMapsCircleDirective,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      let listener: google.maps.MapsEventListener | null = null;\n      this._circles?.get(circle)?.then((c) => {\n        listener = c.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GoogleComponent.html":{"url":"components/GoogleComponent.html","title":"component - GoogleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GoogleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/google.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NgMapsViewComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }\n                                { provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }\n                                { provide: MarkerManager, useClass: GoogleMapsMarkerManager }\n                                { provide: CircleManager, useClass: GoogleCircleManager }\n                                { provide: PolygonManager, useClass: GooglePolygonManager }\n                                { provide: PolylineManager, useClass: GooglePolylineManager }\n                                { provide: RectangleManager, useClass: GoogleRectangleManager }\n                                { provide: InfoWindowManager, useClass: GoogleInfoWindowManager }\n                \n            \n\n\n            \n                selector\n                map-view\n            \n\n\n            \n                styles\n                \n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    \n            \n\n            \n                template\n                \n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    \n                                _handleBoundsChange\n                            \n                            \n                                    Protected\n                                    \n                                _handleIdleEvent\n                            \n                            \n                                    Protected\n                                    \n                                    Async\n                                _handleMapCenterChange\n                            \n                            \n                                    Protected\n                                    \n                                _handleMapMouseEvents\n                            \n                            \n                                    Protected\n                                    \n                                    Async\n                                _handleMapTypeIdChange\n                            \n                            \n                                    Protected\n                                    \n                                _handleMapZoomChange\n                            \n                            \n                                    Protected\n                                    \n                                _handleTilesLoadedEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _fitBoundsService: FitBoundsService, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/google.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fitBoundsService\n                                                  \n                                                        \n                                                                    FitBoundsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        \n                        _handleBoundsChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleBoundsChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        \n                        _handleIdleEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleIdleEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        \n                        Async\n                        _handleMapCenterChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapCenterChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        \n                        _handleMapMouseEvents\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapMouseEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        \n                        Async\n                        _handleMapTypeIdChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapTypeIdChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        \n                        _handleMapZoomChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapZoomChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        \n                        _handleTilesLoadedEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleTilesLoadedEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, NgZone } from '@angular/core';\n\nimport {\n  CircleManager,\n  FitBoundsService,\n  InfoWindowManager,\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsViewComponent,\n  PolygonManager,\n  PolylineManager,\n  RectangleManager,\n} from '@ng-maps/core';\n\nimport { GoogleMapsAPIWrapper } from './google-maps-api-wrapper';\nimport { GoogleMapsFitBoundsService } from './google-maps-fit-bounds.service';\nimport { GoogleCircleManager } from './managers/circle.manager';\nimport { GoogleInfoWindowManager } from './managers/info-window.manager';\nimport { GoogleMapsMarkerManager } from './managers/marker.manager';\nimport { GooglePolygonManager } from './managers/polygon.manager';\nimport { GooglePolylineManager } from './managers/polyline.manager';\nimport { GoogleRectangleManager } from './managers/rectangle.manager';\n\n@Component({\n  selector: 'map-view',\n  providers: [\n    { provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper },\n    { provide: FitBoundsService, useClass: GoogleMapsFitBoundsService },\n    { provide: MarkerManager, useClass: GoogleMapsMarkerManager },\n    { provide: CircleManager, useClass: GoogleCircleManager },\n    { provide: PolygonManager, useClass: GooglePolygonManager },\n    { provide: PolylineManager, useClass: GooglePolylineManager },\n    { provide: RectangleManager, useClass: GoogleRectangleManager },\n    { provide: InfoWindowManager, useClass: GoogleInfoWindowManager },\n  ],\n  styles: [\n    `\n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    `,\n  ],\n  template: `\n    \n    \n      \n    \n  `,\n})\nexport class GoogleComponent extends NgMapsViewComponent {\n  constructor(\n    _mapsWrapper: MapsApiWrapper,\n    _fitBoundsService: FitBoundsService,\n    _zone: NgZone,\n  ) {\n    super(_mapsWrapper, _fitBoundsService, _zone);\n  }\n\n  protected override async _handleMapCenterChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('center_changed')\n      .subscribe(() => {\n        this._mapsWrapper.getCenter().then((center) => {\n          if (center) {\n            this.latitude = center.lat;\n            this.longitude = center.lng;\n            this.centerChange.emit({\n              lat: this.latitude,\n              lng: this.longitude,\n            } as google.maps.LatLngLiteral);\n          }\n        });\n      });\n    this.subscription.add(s);\n  }\n\n  protected override _handleBoundsChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('bounds_changed')\n      .subscribe(() => {\n        this._mapsWrapper.getBounds().then((bounds) => {\n          this.boundsChange.emit(bounds);\n        });\n      });\n    this.subscription.add(s);\n  }\n\n  protected override async _handleMapTypeIdChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('maptypeid_changed')\n      .subscribe(() => {\n        this._mapsWrapper.getMapTypeId().then((mapTypeId) => {\n          this.mapTypeIdChange.emit(mapTypeId);\n        });\n      });\n    this.subscription.add(s);\n  }\n\n  protected override _handleMapZoomChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('zoom_changed')\n      .subscribe(() => {\n        this._mapsWrapper.getZoom().then((z) => {\n          this.zoom = z ?? 8;\n          this.zoomChange.emit(z);\n        });\n      });\n    this.subscription.add(s);\n  }\n\n  protected override _handleIdleEvent() {\n    const s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(() => {\n      this.idle.emit(void 0);\n    });\n    this.subscription.add(s);\n  }\n\n  protected override _handleTilesLoadedEvent() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('tilesloaded')\n      .subscribe(() => this.tilesLoaded.emit(void 0));\n    this.subscription.add(s);\n  }\n\n  protected override _handleMapMouseEvents() {\n    interface Emitter {\n      emit(value: any): void;\n    }\n\n    interface Event {\n      name: string;\n      emitter: Emitter;\n    }\n\n    const events: Array = [\n      { name: 'click', emitter: this.mapClick },\n      { name: 'rightclick', emitter: this.mapRightClick },\n      { name: 'dblclick', emitter: this.mapDblClick },\n    ];\n\n    events.forEach((e: Event) => {\n      const s = (this._mapsWrapper as GoogleMapsAPIWrapper)\n        .subscribeToMapEvent(e.name)\n        .subscribe((event) => {\n          const value = {\n            coords: { lat: event[0].latLng.lat(), lng: event[0].latLng.lng() },\n          };\n          e.emitter.emit(value);\n        });\n      this.subscription.add(s);\n    });\n  }\n}\n\n    \n\n\n    \n            \n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'GoogleComponent', 'selector': 'map-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GoogleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleInfoWindowManager.html":{"url":"injectables/GoogleInfoWindowManager.html","title":"injectable - GoogleInfoWindowManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleInfoWindowManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/info-window.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    InfoWindowManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addInfoWindow\n                            \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Async\n                                deleteInfoWindow\n                            \n                            \n                                    Public\n                                    Async\n                                open\n                            \n                            \n                                    Public\n                                setOptions\n                            \n                            \n                                    Public\n                                setPosition\n                            \n                            \n                                    Public\n                                setZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone, _markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/info-window.manager.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _markerManager\n                                                  \n                                                        \n                                                                    MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        addInfoWindow\n                        \n                    \n                \n            \n            \n                \n                    \n                    addInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:109\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Creates a Google Maps event listener for the given InfoWindow as an Observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteInfoWindow\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(infoWindow: NgMapsInfoWindowComponent, options: google.maps.InfoWindowOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.InfoWindowOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPosition(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setZIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    setZIndex(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  GeoPoint,\n  InfoWindowManager,\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsInfoWindowComponent,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GoogleInfoWindowManager extends InfoWindowManager {\n  constructor(\n    _mapsWrapper: MapsApiWrapper,\n    _zone: NgZone,\n    _markerManager: MarkerManager,\n  ) {\n    super(_mapsWrapper, _zone, _markerManager);\n  }\n\n  public async deleteInfoWindow(\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Promise {\n    const iWindow = await this._infoWindows.get(infoWindow);\n    if (iWindow == null) {\n      // info window already deleted\n      return;\n    } else {\n      return this._zone.run(() => {\n        iWindow.close();\n        this._infoWindows.delete(infoWindow);\n      });\n    }\n  }\n\n  public setPosition(infoWindow: NgMapsInfoWindowComponent): void {\n    if (!infoWindow.latitude || !infoWindow.longitude) {\n      return;\n    }\n    const i = this._infoWindows.get(infoWindow);\n    i?.setPosition({\n      lat: infoWindow.latitude,\n      lng: infoWindow.longitude,\n    });\n  }\n\n  public setZIndex(infoWindow: NgMapsInfoWindowComponent): void {\n    if (!infoWindow.zIndex) {\n      return;\n    }\n    const i = this._infoWindows.get(infoWindow);\n    i?.setZIndex(infoWindow.zIndex);\n  }\n\n  public async open(infoWindow: NgMapsInfoWindowComponent): Promise {\n    const w = this._infoWindows.get(infoWindow);\n    const map = await this._mapsWrapper.getNativeMap();\n    if (infoWindow.hostMarker != null) {\n      const marker = await this._markerManager.getNativeMarker(\n        infoWindow.hostMarker,\n      );\n      w?.open(map, marker);\n    } else {\n      w?.open(map);\n    }\n  }\n\n  public close(infoWindow: NgMapsInfoWindowComponent): void {\n    const w = this._infoWindows.get(infoWindow);\n    w?.close();\n  }\n\n  public setOptions(\n    infoWindow: NgMapsInfoWindowComponent,\n    options: google.maps.InfoWindowOptions,\n  ) {\n    const i = this._infoWindows.get(infoWindow);\n    i?.setOptions(options);\n  }\n\n  public async addInfoWindow(infoWindow: NgMapsInfoWindowComponent) {\n    const options: google.maps.InfoWindowOptions = {\n      content: infoWindow.content?.nativeElement,\n      maxWidth: infoWindow.maxWidth,\n      zIndex: infoWindow.zIndex,\n      disableAutoPan: infoWindow.disableAutoPan,\n    };\n    const center: GeoPoint | null =\n      typeof infoWindow.latitude === 'number' &&\n      typeof infoWindow.longitude === 'number'\n        ? {\n            lat: infoWindow.latitude,\n            lng: infoWindow.longitude,\n          }\n        : null;\n    if (center) {\n      const instance = await this._mapsWrapper.createInfoWindow(\n        center,\n        options,\n      );\n      this._infoWindows.set(infoWindow, instance);\n    }\n  }\n\n  /**\n   * Creates a Google Maps event listener for the given InfoWindow as an Observable\n   */\n  public createEventObservable(\n    eventName: string,\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Observable {\n    const i = this._infoWindows.get(infoWindow);\n    return new Observable((observer: Observer) => {\n      i?.addListener(eventName, (e: T) =>\n        this._zone.run(() => observer.next(e)),\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleMapsFitBoundsService.html":{"url":"injectables/GoogleMapsFitBoundsService.html","title":"injectable - GoogleMapsFitBoundsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleMapsFitBoundsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/google-maps-fit-bounds.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The FitBoundsService is responsible for computing the bounds of the a single map.\n\n            \n\n            \n                Extends\n            \n            \n                    FitBoundsService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                generateBounds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_loader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/lib/google-maps-fit-bounds.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _loader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        generateBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateBounds(includeInBounds: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-fit-bounds.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    includeInBounds\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     BoundsLiteral\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport {\n  BoundsLiteral,\n  FitBoundsService,\n  GeoPoint,\n  MapsAPILoader,\n} from '@ng-maps/core';\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport class GoogleMapsFitBoundsService extends FitBoundsService {\n  constructor(_loader: MapsAPILoader) {\n    super(_loader);\n  }\n\n  protected generateBounds(\n    includeInBounds: Map,\n  ): BoundsLiteral {\n    if (includeInBounds.size === 0) {\n      return new google.maps.LatLngBounds().toJSON();\n    } else {\n      const bounds = new google.maps.LatLngBounds();\n      includeInBounds.forEach((b) => bounds.extend(b));\n      return bounds.toJSON();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleMapsMarkerManager.html":{"url":"injectables/GoogleMapsMarkerManager.html","title":"injectable - GoogleMapsMarkerManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleMapsMarkerManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/marker.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    MarkerManager\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    \n                                _markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                deleteMarker\n                            \n                            \n                                    Public\n                                updateAnimation\n                            \n                            \n                                    Public\n                                updateClickable\n                            \n                            \n                                    Public\n                                updateDraggable\n                            \n                            \n                                    Public\n                                updateIcon\n                            \n                            \n                                    Public\n                                updateIconLegacy\n                            \n                            \n                                    Public\n                                updateLabel\n                            \n                            \n                                    Public\n                                updateMarkerPosition\n                            \n                            \n                                    Public\n                                updateOpacity\n                            \n                            \n                                    Public\n                                updateTitle\n                            \n                            \n                                    Public\n                                updateVisible\n                            \n                            \n                                    Public\n                                updateZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/marker.manager.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string | Array, marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:89\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                            string | Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteMarker\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateAnimation\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAnimation(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateClickable\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateClickable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateDraggable\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDraggable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateIcon\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIcon(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateIconLegacy\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIconLegacy(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateLabel\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLabel(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateMarkerPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMarkerPosition(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateOpacity\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOpacity(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTitle(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateVisible\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateVisible(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateZIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateZIndex(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            \n                        _markers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/lib/managers/marker.manager.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsMarkerComponent,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GoogleMapsMarkerManager extends MarkerManager {\n  protected override _markers: Map =\n    new Map();\n\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  public deleteMarker(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    if (m == null) {\n      // marker already deleted\n      return;\n    } else {\n      return this._zone.run(() => {\n        m.setMap(null);\n        this._markers.delete(marker);\n      });\n    }\n  }\n\n  public updateMarkerPosition(marker: NgMapsMarkerComponent): void {\n    if (!marker.latitude || !marker.longitude) {\n      return;\n    }\n    const m = this._markers.get(marker);\n    m?.setPosition({ lat: marker.latitude, lng: marker.longitude });\n  }\n\n  public updateTitle(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m?.setTitle(marker.title);\n  }\n\n  public updateLabel(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m?.setLabel(marker.label);\n  }\n\n  public updateDraggable(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m?.setDraggable(marker.draggable);\n  }\n\n  public updateIconLegacy(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m?.setIcon(marker.iconUrl);\n  }\n\n  public updateOpacity(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m?.setOpacity(marker.opacity);\n  }\n\n  public updateVisible(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m?.setVisible(marker.visible);\n  }\n\n  public updateZIndex(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m?.setZIndex(marker.zIndex);\n  }\n\n  public updateClickable(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m?.setClickable(marker.clickable);\n  }\n\n  public updateAnimation(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    if (typeof marker.animation === 'string') {\n      m?.setAnimation(google.maps.Animation[marker.animation]);\n    } else {\n      m?.setAnimation(marker.animation);\n    }\n  }\n\n  public createEventObservable(\n    eventName: string | Array,\n    marker: NgMapsMarkerComponent,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      const m = this._markers.get(marker);\n      if (typeof eventName === 'string') {\n        eventName = [eventName];\n      }\n      eventName.forEach((event) => {\n        m?.addListener(event, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n\n  public updateIcon(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    if (m && marker.icon?.path) {\n      // TODO correct typings\n      // @ts-ignore\n      m.setIcon(marker.icon);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleMapsScriptLoader.html":{"url":"injectables/GoogleMapsScriptLoader.html","title":"injectable - GoogleMapsScriptLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleMapsScriptLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/google-maps-script-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    MapsAPILoader\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                    Protected\n                                    Readonly\n                                _SCRIPT_ID\n                            \n                            \n                                    Protected\n                                    Optional\n                                _scriptLoadingPromise\n                            \n                            \n                                    Protected\n                                    Readonly\n                                callbackName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                _getScriptSrc\n                            \n                            \n                                    Protected\n                                assignScriptLoadingPromise\n                            \n                            \n                                    Protected\n                                    Async\n                                checkScriptElement\n                            \n                            \n                                    Public\n                                configure\n                            \n                            \n                                    Protected\n                                    Async\n                                createScriptElement\n                            \n                            \n                                    Public\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: GoogleModuleOptions, document: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/google-maps-script-loader.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        GoogleModuleOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        _getScriptSrc\n                        \n                    \n                \n            \n            \n                \n                    \n                    _getScriptSrc(callbackName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    callbackName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        assignScriptLoadingPromise\n                        \n                    \n                \n            \n            \n                \n                    \n                    assignScriptLoadingPromise(scriptElement: HTMLScriptElement)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scriptElement\n                                    \n                                            HTMLScriptElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        checkScriptElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkScriptElement()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        configure\n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(config: GoogleModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:45\n                \n            \n\n\n            \n                \n                    If no configuration is provided at load time you can use this function to provide configuration at any time.\nLoading scripts will be postponed until a configuration is provided\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                GoogleModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nGoogleModuleOptions configuration needed for bootstrapping\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        createScriptElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    createScriptElement()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/lib/google-maps-script-loader.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        _SCRIPT_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'GoogleMapsApiScript'\n                    \n                \n                    \n                        \n                                Defined in src/lib/google-maps-script-loader.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        _scriptLoadingPromise\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/google-maps-script-loader.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        callbackName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `LazyMapsAPILoader`\n                    \n                \n                    \n                        \n                                Defined in src/lib/google-maps-script-loader.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { firstValueFrom, ReplaySubject } from 'rxjs';\n\nimport { MapsAPILoader } from '@ng-maps/core';\n\nimport {\n  GoogleMapsScriptProtocol,\n  GoogleModuleOptions,\n  GOOGLE_MAPS_API_CONFIG,\n} from './options';\n\n@Injectable()\nexport class GoogleMapsScriptLoader extends MapsAPILoader {\n  protected _scriptLoadingPromise?: Promise;\n  protected _config: ReplaySubject =\n    new ReplaySubject(1);\n  protected readonly _SCRIPT_ID: string = 'GoogleMapsApiScript';\n  protected readonly callbackName: string = `LazyMapsAPILoader`;\n\n  constructor(\n    @Optional()\n    @Inject(GOOGLE_MAPS_API_CONFIG)\n    config: GoogleModuleOptions,\n    @Inject(DOCUMENT) document: any,\n  ) {\n    super();\n    if (config instanceof Promise) {\n      config.then((c) => {\n        this.configure(c);\n      });\n    } else if (typeof config === 'object') {\n      this.configure(config);\n    }\n    this._document = document as Document;\n    this._window = this._document.defaultView;\n  }\n\n  /**\n   * If no configuration is provided at load time you can use this function to provide configuration at any time.\n   * Loading scripts will be postponed until a configuration is provided\n   *\n   * @param config - {@link GoogleModuleOptions} configuration needed for bootstrapping\n   */\n  public configure(config: GoogleModuleOptions) {\n    this._config.next(config);\n    this._config.complete();\n  }\n\n  public load(): Promise {\n    if ((this._window as any).google && (this._window as any).google.maps) {\n      // Google maps already loaded on the page\n      return Promise.resolve();\n    } else if (this._scriptLoadingPromise) {\n      return this._scriptLoadingPromise;\n    } else {\n      this._scriptLoadingPromise = this.checkScriptElement();\n      return this._scriptLoadingPromise;\n    }\n  }\n\n  protected async checkScriptElement(): Promise {\n    let scriptElement: HTMLScriptElement = this._document?.getElementById(\n      this._SCRIPT_ID,\n    ) as HTMLScriptElement;\n    if (scriptElement == null) {\n      scriptElement = await this.createScriptElement();\n    }\n    return this.assignScriptLoadingPromise(scriptElement);\n  }\n\n  protected assignScriptLoadingPromise(\n    scriptElement: HTMLScriptElement,\n  ): Promise {\n    this._document?.body.appendChild(scriptElement);\n    return new Promise((resolve, reject) => {\n      // FIXME\n      // @ts-ignore\n      this._window[this.callbackName] = () => resolve();\n\n      // FIXME\n      // @ts-ignore\n      scriptElement.onerror = (error: Event) => reject(error);\n    });\n  }\n\n  protected async createScriptElement() {\n    if (!this._document) {\n      throw new Error('Document is not defined');\n    }\n    const script = this._document.createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.id = this._SCRIPT_ID;\n    script.src = await this._getScriptSrc(this.callbackName);\n    return script;\n  }\n\n  protected async _getScriptSrc(callbackName: string): Promise {\n    const config = await firstValueFrom(this._config);\n    if (!config) {\n      throw new Error('No configuration provided');\n    }\n    const protocolType: GoogleMapsScriptProtocol =\n      (config && config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n    let protocol: string;\n\n    switch (protocolType) {\n      case GoogleMapsScriptProtocol.AUTO:\n        protocol = '';\n        break;\n      case GoogleMapsScriptProtocol.HTTP:\n        protocol = 'http:';\n        break;\n      case GoogleMapsScriptProtocol.HTTPS:\n        protocol = 'https:';\n        break;\n    }\n\n    const hostAndPath: string =\n      config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n    const queryParams: { [key: string]: string | Array } = {\n      v: config.apiVersion || 'quarterly',\n      callback: callbackName,\n      key: config.apiKey!,\n      client: config.clientId!,\n      channel: config.channel!,\n      libraries: config.libraries!,\n      region: config.region!,\n      language: config.language!,\n    };\n\n    const params: string = Object.keys(queryParams)\n      .filter((k: string) => queryParams[k] != null)\n      .filter(\n        (k: string) =>\n          // remove empty arrays\n          !Array.isArray(queryParams[k]) ||\n          (Array.isArray(queryParams[k]) && queryParams[k].length > 0),\n      )\n      .map((k: string) => {\n        // join arrays as comma seperated strings\n        const i = queryParams[k];\n        if (Array.isArray(i)) {\n          return { key: k, value: i.join(',') };\n        }\n        return { key: k, value: queryParams[k] };\n      })\n      .map(\n        // FIXME\n        // @ts-ignore\n        (entry: { key: string; value: string }) =>\n          `${entry.key}=${entry.value}`,\n      )\n      .join('&');\n    return `${protocol}//${hostAndPath}?${params}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleModuleOptions.html":{"url":"interfaces/GoogleModuleOptions.html","title":"interface - GoogleModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GoogleModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apiKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            apiVersion\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            channel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clientId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hostAndPath\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            language\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            libraries\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            protocol\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            region\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps API Key (see:\nhttps://developers.google.com/maps/documentation/javascript/get-api-key)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Google Maps API version.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps channel name (for premium plans).\nA channel parameter is an optional parameter that allows you to track usage under your client\nID by assigning a distinct channel to each of your applications.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps client ID (for premium plans).\nWhen you have a Google Maps APIs Premium Plan license, you must authenticate\nyour application with either an API key or a client ID.\nThe Google Maps API will fail to load if both a client ID and an API key are included.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hostAndPath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hostAndPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Host and Path used for the  tag.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps API uses the browser's preferred language when displaying\ntextual information. If you wish to overwrite this behavior and force the API\nto use a given language, you can use this setting.\nSee https://developers.google.com/maps/documentation/javascript/basics#Language\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        libraries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        libraries:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines which Google Maps libraries should get loaded.\nFor available libraries see: https://developers.google.com/maps/documentation/javascript/libraries\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        protocol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        protocol:         GoogleMapsScriptProtocol\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GoogleMapsScriptProtocol\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Protocol used for the  tag.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The default bias for the map behavior is US.\nIf you wish to alter your application to serve different map tiles or bias the\napplication, you can overwrite the default behavior (US) by defining a region.\nSee https://developers.google.com/maps/documentation/javascript/basics#Region\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum GoogleMapsScriptProtocol {\n  HTTP = 1,\n  HTTPS = 2,\n  AUTO = 3,\n}\n\n/**\n * Token for the config of google maps module\n * Please provide an object of type {@link GoogleModuleOptions}.\n */\nexport const GOOGLE_MAPS_API_CONFIG = new InjectionToken\n>('angular-google-maps GOOGLE_MAPS_API_CONFIG');\n\nexport interface GoogleModuleOptions {\n  /**\n   * The Google Maps API Key (see:\n   * https://developers.google.com/maps/documentation/javascript/get-api-key)\n   */\n  apiKey?: string;\n\n  /**\n   * The Google Maps client ID (for premium plans).\n   * When you have a Google Maps APIs Premium Plan license, you must authenticate\n   * your application with either an API key or a client ID.\n   * The Google Maps API will fail to load if both a client ID and an API key are included.\n   */\n  clientId?: string;\n\n  /**\n   * The Google Maps channel name (for premium plans).\n   * A channel parameter is an optional parameter that allows you to track usage under your client\n   * ID by assigning a distinct channel to each of your applications.\n   */\n  channel?: string;\n\n  /**\n   * Google Maps API version.\n   */\n  apiVersion?: string;\n\n  /**\n   * Host and Path used for the `` tag.\n   */\n  hostAndPath?: string;\n\n  /**\n   * Protocol used for the `` tag.\n   */\n  protocol?: GoogleMapsScriptProtocol;\n\n  /**\n   * Defines which Google Maps libraries should get loaded.\n   * For available libraries see: https://developers.google.com/maps/documentation/javascript/libraries\n   */\n  libraries?: Array;\n\n  /**\n   * The default bias for the map behavior is US.\n   * If you wish to alter your application to serve different map tiles or bias the\n   * application, you can overwrite the default behavior (US) by defining a `region`.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Region\n   */\n  region?: string;\n\n  /**\n   * The Google Maps API uses the browser's preferred language when displaying\n   * textual information. If you wish to overwrite this behavior and force the API\n   * to use a given language, you can use this setting.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Language\n   */\n  language?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GooglePolygonManager.html":{"url":"injectables/GooglePolygonManager.html","title":"injectable - GooglePolygonManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GooglePolygonManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/polygon.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PolygonManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPolygon\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                deletePolygon\n                            \n                            \n                                    Public\n                                    Async\n                                setPolygonOptions\n                            \n                            \n                                    Public\n                                    Async\n                                updatePolygon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/polygon.manager.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addPolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPolygon(path: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, path: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:64\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deletePolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolygon(paths: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setPolygonOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolygonOptions(path: NgMapsPolygonDirective, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updatePolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolygon(polygon: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    polygon\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  MapsApiWrapper,\n  NgMapsPolygonDirective,\n  PolygonManager,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GooglePolygonManager extends PolygonManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  public addPolygon(path: NgMapsPolygonDirective) {\n    const polygonPromise = this._mapsWrapper.createPolygon({\n      clickable: path.clickable,\n      draggable: path.draggable,\n      editable: path.editable,\n      fillColor: path.fillColor,\n      fillOpacity: path.fillOpacity,\n      geodesic: path.geodesic,\n      paths: path.paths,\n      strokeColor: path.strokeColor,\n      strokeOpacity: path.strokeOpacity,\n      strokeWeight: path.strokeWeight,\n      visible: path.visible,\n      zIndex: path.zIndex,\n    });\n    this._polygons.set(path, polygonPromise);\n  }\n\n  public async updatePolygon(polygon: NgMapsPolygonDirective): Promise {\n    const item = await this._polygons.get(polygon);\n    if (item != null) {\n      this._zone.run(() => {\n        item.setPaths(polygon.paths);\n      });\n    }\n  }\n\n  public async setPolygonOptions(\n    path: NgMapsPolygonDirective,\n    options: { [propName: string]: any },\n  ): Promise {\n    const l = await this._polygons.get(path);\n    l?.setOptions(options);\n  }\n\n  public deletePolygon(paths: NgMapsPolygonDirective): Promise {\n    const m = this._polygons.get(paths);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polygon) =>\n      this._zone.run(() => {\n        l.setMap(null);\n        this._polygons.delete(paths);\n      }),\n    );\n  }\n\n  public createEventObservable(\n    eventName: string,\n    path: NgMapsPolygonDirective,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      this._polygons.get(path)?.then((l: google.maps.Polygon) => {\n        l.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GooglePolylineManager.html":{"url":"injectables/GooglePolylineManager.html","title":"injectable - GooglePolylineManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GooglePolylineManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/polyline.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PolylineManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    \n                                _convertPoints\n                            \n                            \n                                    Public\n                                addPolyline\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                deletePolyline\n                            \n                            \n                                    Public\n                                    Async\n                                setPolylineOptions\n                            \n                            \n                                    Public\n                                updatePolylinePoints\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/polyline.manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        \n                        _convertPoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    _convertPoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addPolyline\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:81\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deletePolyline\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setPolylineOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolylineOptions(line: NgMapsPolyline, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updatePolylinePoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolylinePoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  MapsApiWrapper,\n  NgMapsPolyline,\n  NgMapsPolylinePoint,\n  PolylineManager,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GooglePolylineManager extends PolylineManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  protected override _convertPoints(\n    line: NgMapsPolyline,\n  ): Array {\n    return line._getPoints().map(\n      (point: NgMapsPolylinePoint) =>\n        ({\n          lat: point.latitude,\n          lng: point.longitude,\n        } as google.maps.LatLngLiteral),\n    );\n  }\n\n  public addPolyline(line: NgMapsPolyline) {\n    const path = this._convertPoints(line);\n    const polylinePromise = this._mapsWrapper.createPolyline({\n      clickable: line.clickable,\n      draggable: line.draggable,\n      editable: line.editable,\n      geodesic: line.geodesic,\n      strokeColor: line.strokeColor,\n      strokeOpacity: line.strokeOpacity,\n      strokeWeight: line.strokeWeight,\n      visible: line.visible,\n      zIndex: line.zIndex,\n      icons: line.icons,\n      path,\n    });\n    this._polylines.set(line, polylinePromise);\n  }\n\n  public updatePolylinePoints(line: NgMapsPolyline): Promise {\n    const path = this._convertPoints(line);\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polyline) =>\n      this._zone.run(() => {\n        l.setPath(path);\n      }),\n    );\n  }\n\n  public async setPolylineOptions(\n    line: NgMapsPolyline,\n    options: { [propName: string]: any },\n  ): Promise {\n    const l = await this._polylines.get(line);\n    l?.setOptions(options);\n  }\n\n  public deletePolyline(line: NgMapsPolyline): Promise {\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polyline) =>\n      this._zone.run(() => {\n        l.setMap(null);\n        this._polylines.delete(line);\n      }),\n    );\n  }\n\n  public createEventObservable(\n    eventName: string,\n    line: NgMapsPolyline,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      this._polylines.get(line)?.then((l: google.maps.Polyline) => {\n        l.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleRectangleManager.html":{"url":"injectables/GoogleRectangleManager.html","title":"injectable - GoogleRectangleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleRectangleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/rectangle.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    RectangleManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addRectangle\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Async\n                                getBounds\n                            \n                            \n                                    Public\n                                    Async\n                                removeRectangle\n                            \n                            \n                                    Public\n                                    Async\n                                setBounds\n                            \n                            \n                                    Public\n                                    Async\n                                setDraggable\n                            \n                            \n                                    Public\n                                    Async\n                                setEditable\n                            \n                            \n                                    Public\n                                    Async\n                                setOptions\n                            \n                            \n                                    Public\n                                    Async\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/rectangle.manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addRectangle\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:118\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        removeRectangle\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:56\n                \n            \n\n\n            \n                \n                    Removes the given rectangle from the map.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    setBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setDraggable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setEditable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(rectangle: NgMapsRectangleDirective, options: google.maps.RectangleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.RectangleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setVisible\n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  BoundsLiteral,\n  MapsApiWrapper,\n  NgMapsRectangleDirective,\n  RectangleManager,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GoogleRectangleManager extends RectangleManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  public addRectangle(rectangle: NgMapsRectangleDirective) {\n    if (\n      !rectangle.north ||\n      !rectangle.east ||\n      !rectangle.south ||\n      !rectangle.west\n    ) {\n      return;\n    }\n\n    this._rectangles.set(\n      rectangle,\n      this._apiWrapper.createRectangle(\n        {\n          north: rectangle.north,\n          east: rectangle.east,\n          south: rectangle.south,\n          west: rectangle.west,\n        },\n        {\n          // clickable: rectangle.clickable,\n          // draggable: rectangle.draggable,\n          // editable: rectangle.editable,\n          fillColor: rectangle.fillColor,\n          fillOpacity: rectangle.fillOpacity,\n          strokeColor: rectangle.strokeColor,\n          strokeOpacity: rectangle.strokeOpacity,\n          // strokePosition: rectangle.strokePosition,\n          strokeWeight: rectangle.strokeWeight,\n          visible: rectangle.visible,\n          zIndex: rectangle.zIndex,\n        },\n      ),\n    );\n  }\n\n  /**\n   * Removes the given rectangle from the map.\n   */\n  public async removeRectangle(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise {\n    return this._rectangles.get(rectangle)?.then((r) => {\n      r.setMap(null);\n      this._rectangles.delete(rectangle);\n    });\n  }\n\n  public async setOptions(\n    rectangle: NgMapsRectangleDirective,\n    options: google.maps.RectangleOptions,\n  ): Promise {\n    return this._rectangles.get(rectangle)?.then((r) => r.setOptions(options));\n  }\n\n  public async getBounds(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise {\n    const r = await this._rectangles.get(rectangle);\n    const bounds = r?.getBounds();\n    return bounds ? bounds.toJSON() : null;\n  }\n\n  public async setBounds(rectangle: NgMapsRectangleDirective): Promise {\n    if (\n      !rectangle.north ||\n      !rectangle.east ||\n      !rectangle.south ||\n      !rectangle.west\n    ) {\n      return;\n    }\n    const r = await this._rectangles.get(rectangle);\n    r?.setBounds({\n      north: rectangle.north,\n      east: rectangle.east,\n      south: rectangle.south,\n      west: rectangle.west,\n    });\n  }\n\n  public async setEditable(rectangle: NgMapsRectangleDirective): Promise {\n    return this._rectangles\n      .get(rectangle)\n      ?.then((r) => r.setEditable(rectangle.editable));\n  }\n\n  public async setDraggable(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise {\n    return this._rectangles\n      .get(rectangle)\n      ?.then((r) => r.setDraggable(rectangle.draggable));\n  }\n\n  public async setVisible(rectangle: NgMapsRectangleDirective): Promise {\n    return this._rectangles\n      .get(rectangle)\n      ?.then((r) => r.setVisible(rectangle.visible));\n  }\n\n  public createEventObservable(\n    eventName: string,\n    rectangle: NgMapsRectangleDirective,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      let listener: google.maps.MapsEventListener | null = null;\n      this._rectangles.get(rectangle)?.then((r) => {\n        listener = r.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgMapsGoogleModule.html":{"url":"modules/NgMapsGoogleModule.html","title":"module - NgMapsGoogleModule","body":"\n                   \n\n\n\n\n    Modules\n    NgMapsGoogleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgMapsGoogleModule\n\n\n\ncluster_NgMapsGoogleModule_exports\n\n\n\ncluster_NgMapsGoogleModule_declarations\n\n\n\n\nGoogleComponent\n\nGoogleComponent\n\n\n\nNgMapsGoogleModule\n\nNgMapsGoogleModule\n\nNgMapsGoogleModule -->\n\nGoogleComponent->NgMapsGoogleModule\n\n\n\n\n\nGoogleComponent \n\nGoogleComponent \n\nGoogleComponent  -->\n\nNgMapsGoogleModule->GoogleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/google.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GoogleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GoogleComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: GoogleModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.module.ts:25\n                \n            \n\n\n            \n                \n                    configure the NgMapsGoogleModule with a value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                GoogleModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRootFactory\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootFactory(factory: (args: Array) => void, deps?: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.module.ts:43\n                \n            \n\n\n            \n                \n                    configure the NgMapsGoogleModule with a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    factory\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    deps\n                                    \n                                            Array\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { MapsAPILoader, MAP_PROVIDER } from '@ng-maps/core';\n\nimport { GoogleMapsScriptLoader } from './google-maps-script-loader.service';\nimport { GoogleComponent } from './google.component';\nimport { GOOGLE_MAPS_API_CONFIG, GoogleModuleOptions } from './options';\n\n@NgModule({\n  declarations: [GoogleComponent],\n  exports: [GoogleComponent],\n  providers: [\n    { provide: MapsAPILoader, useClass: GoogleMapsScriptLoader },\n    {\n      provide: MAP_PROVIDER,\n      useValue: 'GoogleMaps',\n    },\n  ],\n})\nexport class NgMapsGoogleModule {\n  /**\n   * configure the NgMapsGoogleModule with a value\n   * @param config\n   */\n  public static forRoot(\n    config: GoogleModuleOptions,\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgMapsGoogleModule,\n      providers: [\n        {\n          provide: GOOGLE_MAPS_API_CONFIG,\n          useValue: config,\n        },\n      ],\n    };\n  }\n\n  /**\n   * configure the NgMapsGoogleModule with a factory\n   * @param factory\n   */\n  public static forRootFactory(\n    factory: (...args: Array) => GoogleModuleOptions,\n    deps?: Array,\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgMapsGoogleModule,\n      providers: [\n        {\n          provide: GOOGLE_MAPS_API_CONFIG,\n          useFactory: factory,\n          deps,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nThis file was generated using @jscutlery/semver.\n5.0.1 (2023-05-24)\nBug Fixes\n\ndeps: update peer deps to v5 (e52e6e2)\n\n5.0.0 (2023-05-22)\n⚠ BREAKING CHANGES\n\nupdate to strict typechecking\n\nCode Refactoring\n\nupdate to strict typechecking (69d7cbc)\n\n4.0.2 (2023-05-18)\n4.0.1 (2023-05-18)\nBug Fixes\n\nmarker icon implementation (14b3c93)\n\n4.0.0 (2022-12-30)\n⚠ BREAKING CHANGES\n\nUpdated google.maps types which might change API\n\nBug Fixes\n\ngoogle: remove console.log (a7fb44a)\n\nCode Refactoring\n\nupdate dependencies and adjust types usage (8d70d41)\n\n3.0.1 (2022-10-06)\nBug Fixes\n\nbuild issues (1d7c3d7)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/google-maps-api-wrapper.ts\n            \n            injectable\n            GoogleMapsAPIWrapper\n            \n                27 %\n                (8/29)\n            \n        \n        \n            \n                \n                src/lib/google-maps-fit-bounds.service.ts\n            \n            injectable\n            GoogleMapsFitBoundsService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/lib/google-maps-script-loader.service.ts\n            \n            injectable\n            GoogleMapsScriptLoader\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/lib/google.component.ts\n            \n            component\n            GoogleComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lib/managers/circle.manager.ts\n            \n            injectable\n            GoogleCircleManager\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/lib/managers/info-window.manager.ts\n            \n            injectable\n            GoogleInfoWindowManager\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/lib/managers/marker.manager.ts\n            \n            injectable\n            GoogleMapsMarkerManager\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/lib/managers/polygon.manager.ts\n            \n            injectable\n            GooglePolygonManager\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/managers/polyline.manager.ts\n            \n            injectable\n            GooglePolylineManager\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/managers/rectangle.manager.ts\n            \n            injectable\n            GoogleRectangleManager\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/lib/options.ts\n            \n            interface\n            GoogleModuleOptions\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/lib/options.ts\n            \n            variable\n            GOOGLE_MAPS_API_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.0.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^14.0.0  || ^15.0.0 || ^16.0.0\n        \n            @angular/core : ^14.0.0  || ^15.0.0 || ^16.0.0\n        \n            @types/google.maps : ~3.51.0 || ~3.52.0 || ~3.53.0\n        \n            @ng-maps/core : ^4.0.0 || ^5.0.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GoogleMapsScriptProtocol   (src/.../options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/options.ts\n    \n        \n            \n                \n                    \n                        \n                        GoogleMapsScriptProtocol\n                    \n                \n                        \n                            \n                                 HTTP\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 HTTPS\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 AUTO\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ng-maps/google\n@ng-maps/google is a simple, modular and tree-shakable library for displaying google-maps inside an angular application\nInstallation\n\nNpm: npm install @ng-maps/google\nYarn: yarn add @ng-maps/google\n\nThen you will need to install typings for google maps as a dev dependency\n\nNpm: npm install -D @types/googlemaps\nYarn: yarn add -D @types/googlemaps\n\nAdd NgMapsGoogleModule to your AppModule.\nProvide your API key with the token provider\n{\n  provide: GOOGLE_MAPS_API_CONFIG,\n  useValue: {\n    apiKey: 'YOUR_API_KEY'\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgMapsGoogleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgMapsGoogleModule\n\n\n\ncluster_NgMapsGoogleModule_declarations\n\n\n\ncluster_NgMapsGoogleModule_exports\n\n\n\n\nGoogleComponent\n\nGoogleComponent\n\n\n\nNgMapsGoogleModule\n\nNgMapsGoogleModule\n\nNgMapsGoogleModule -->\n\nGoogleComponent->NgMapsGoogleModule\n\n\n\n\n\nGoogleComponent \n\nGoogleComponent \n\nGoogleComponent  -->\n\nNgMapsGoogleModule->GoogleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 5.0.1\n        \n            Keywords : angular, ng, google maps, googlemaps, maps, map, google, ng2, angular2, agm\n        \n            Homepage : https://ng-maps.github.io/core\n        \n            Bugs : https://github.com/ng-maps/ng-maps/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/ng-maps/ng-maps.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GOOGLE_MAPS_API_CONFIG   (src/.../options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GOOGLE_MAPS_API_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken\n>('angular-google-maps GOOGLE_MAPS_API_CONFIG')\n                    \n                \n\n            \n                \n                    Token for the config of google maps module\nPlease provide an object of type GoogleModuleOptions.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
