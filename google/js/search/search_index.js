var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/GoogleCircleManager.html",[0,0.193,1,1.239]],["body/injectables/GoogleCircleManager.html",[0,0.189,1,1.219,2,0.54,3,0.41,4,0.41,5,0.301,6,1.448,7,0.824,8,1.943,9,0.301,10,0.72,11,1.874,12,2.743,13,1.479,14,2.175,15,2.684,16,2.743,17,2.743,18,2.743,19,2.743,20,2.212,21,2.212,22,2.26,23,2.743,24,2.212,25,0.54,26,1.07,27,1.12,28,1.454,29,1.454,30,1.301,31,1.796,32,1.315,33,0.052,34,1.131,35,0.846,36,1.131,37,0.701,38,2.743,39,5.491,40,1.796,41,5.271,42,1.286,43,0.54,44,0.798,45,1.12,46,1.796,47,1.219,48,1.219,49,1.479,50,1.796,51,1.796,52,2.321,53,2.743,54,1.796,55,2.743,56,1.796,57,2.743,58,1.796,59,2.212,60,1.601,61,0.824,62,2.743,63,1.796,64,2.743,65,1.796,66,2.743,67,1.796,68,1.796,69,1.651,70,3.328,71,1.796,72,1.219,73,2.212,74,2.743,75,1.796,76,2.743,77,1.796,78,0.759,79,0.353,80,1.219,81,0.701,82,1.219,83,1.048,84,0.301,85,0.41,86,0.41,87,0.472,88,0.701,89,1.796,90,1.796,91,1.796,92,0.798,93,1.796,94,1.796,95,1.393,96,2.743,97,1.393,98,2.743,99,1.048,100,1.796,101,1.048,102,1.796,103,1.048,104,1.796,105,1.219,106,1.796,107,1.219,108,1.796,109,1.796,110,1.796,111,1.048,112,1.796,113,1.048,114,1.796,115,1.448,116,1.796,117,1.048,118,1.796,119,1.048,120,1.796,121,0.912,122,1.796,123,0.979,124,3.726,125,1.891,126,3.726,127,1.796,128,1.796,129,1.796,130,1.796,131,1.796,132,1.796,133,1.862,134,1.219,135,1.048,136,3.328,137,2.743,138,1.451,139,1.796,140,1.796,141,1.796,142,3.726,143,1.796,144,3.328,145,3.328,146,3.328,147,1.796,148,1.796,149,1.796,150,1.796,151,1.796,152,0.41,153,0.798,154,2.26,155,1.448,156,0.94,157,1.796,158,0.798,159,0.798,160,0.798,161,1.448,162,0.025,163,0.025]],["title/components/GoogleComponent.html",[164,1.627,165,1.415]],["body/components/GoogleComponent.html",[1,1.478,3,0.409,4,0.409,5,0.3,7,0.824,8,1.941,9,0.3,10,0.72,14,1.478,25,0.824,26,0.7,27,1.271,28,1.453,29,1.453,30,1.192,32,0.471,33,0.052,34,1.004,35,0.3,36,0.409,37,1.069,42,1.156,43,1.323,45,0.539,61,1.398,78,1.083,79,0.353,83,1.6,84,0.3,85,0.409,86,0.409,87,0.471,88,0.7,95,1.391,97,1.391,123,1.221,162,0.025,163,0.025,164,1.941,165,1.89,166,2.741,167,3.326,168,1.794,169,1.447,170,1.447,171,3.326,172,1.794,173,2.21,174,1.987,175,3.458,176,2.174,177,2.469,178,1.478,179,1.689,180,1.478,181,1.941,182,1.478,183,1.941,184,1.478,185,1.941,186,1.478,187,1.941,188,1.478,189,3.326,190,3.326,191,3.326,192,3.326,193,3.326,194,4.229,195,3.326,196,2.682,197,3.326,198,3.326,199,2.741,200,2.664,201,3.724,202,3.724,203,3.724,204,3.724,205,3.724,206,3.724,207,3.724,208,3.724,209,1.794,210,1.794,211,1.794,212,1.794,213,1.794,214,1.794,215,1.794,216,1.794,217,0.824,218,0.72,219,0.911,220,1.794,221,1.218,222,1.794,223,1.794,224,1.794,225,1.794,226,1.794,227,1.794,228,1.794,229,1.794,230,4.4,231,4.4,232,1.794,233,4.011,234,1.794,235,2.741,236,1.794,237,2.741,238,1.794,239,1.794,240,1.447,241,4.4,242,1.794,243,1.794,244,1.794,245,1.794,246,1.794,247,1.794,248,1.794,249,1.794,250,1.794,251,1.794,252,1.447,253,1.794,254,1.794,255,1.794,256,1.794,257,1.794,258,1.6,259,1.794,260,1.794,261,1.391,262,4.229,263,1.794,264,1.861,265,1.794,266,0.797,267,1.794,268,1.794,269,1.794,270,1.794,271,1.794,272,1.794,273,1.794,274,1.794,275,1.794,276,0.797,277,1.794,278,1.794,279,1.794,280,1.794,281,1.794,282,2.741,283,2.741,284,1.794,285,3.724,286,1.794,287,1.794,288,1.794]],["title/injectables/GoogleInfoWindowManager.html",[0,0.193,188,1.239]],["body/injectables/GoogleInfoWindowManager.html",[0,0.21,2,0.617,3,0.692,4,0.468,5,0.344,7,0.912,9,0.344,10,0.797,11,1.849,13,1.603,14,2.144,22,2.449,25,0.912,26,0.801,27,1.198,28,1.555,29,1.555,30,1.267,32,1.289,33,0.052,34,1.101,35,0.822,36,1.101,37,1.183,42,1.241,43,1.384,44,0.912,45,1.084,47,1.348,48,1.348,49,1.889,52,1.771,60,1.771,61,0.617,69,1.659,73,2.446,78,0.823,79,0.404,80,1.348,81,0.801,83,1.771,84,0.344,85,0.468,86,0.468,87,0.539,88,0.801,95,1.54,97,1.54,121,1.042,123,1.323,125,2.023,135,1.771,138,1.084,152,0.468,153,0.912,154,2.059,156,1.236,158,0.912,159,1.348,160,0.912,162,0.028,163,0.028,179,2.023,187,2.106,188,1.348,196,1.655,217,0.912,218,0.797,252,2.446,264,2.059,289,3.958,290,1.655,291,3.033,292,3.033,293,3.607,294,3.033,295,3.033,296,3.033,297,3.985,298,2.053,299,3.033,300,5.41,301,2.053,302,5.135,303,3.033,304,2.053,305,2.053,306,3.033,307,2.053,308,2.053,309,3.033,310,2.053,311,2.053,312,3.985,313,2.053,314,3.033,315,2.053,316,3.033,317,2.053,318,3.033,319,4.604,320,1.655,321,1.394,322,1.655,323,2.053,324,2.053,325,2.053,326,3.607,327,3.607,328,2.053,329,3.033,330,2.053,331,3.033,332,2.446,333,2.053,334,3.033,335,2.053,336,2.053,337,2.053,338,2.053,339,2.053,340,2.053,341,2.053,342,2.053,343,2.053,344,2.053,345,2.053,346,2.053]],["title/injectables/GoogleMapsFitBoundsService.html",[0,0.193,178,1.239]],["body/injectables/GoogleMapsFitBoundsService.html",[0,0.295,2,1.018,3,0.772,4,0.772,5,0.567,7,1.286,9,0.567,10,1.123,25,1.018,30,1.123,32,1.123,33,0.052,34,0.976,35,0.716,36,0.976,42,0.889,61,1.527,72,2.298,78,0.976,79,0.666,82,3.183,83,1.976,84,0.567,85,0.772,86,0.772,87,0.889,123,0.889,138,1.286,152,0.772,156,1.16,162,0.039,163,0.039,177,2.965,178,1.901,200,2.38,218,1.231,221,3.183,258,1.976,347,3.183,348,2.73,349,4.277,350,4.277,351,4.688,352,4.277,353,4.688,354,4.277,355,3.344,356,3.385,357,3.385,358,3.385,359,3.385,360,4.277,361,3.385,362,3.385,363,3.385,364,3.385,365,3.385,366,3.385]],["title/injectables/GoogleMapsMarkerManager.html",[0,0.193,180,1.239]],["body/injectables/GoogleMapsMarkerManager.html",[0,0.196,2,0.565,3,0.429,4,0.429,5,0.315,7,0.854,9,0.315,10,0.746,11,1.889,13,1.521,25,0.565,26,1.108,27,1.146,28,1.488,29,1.488,30,1.339,32,1.339,33,0.052,34,1.153,35,0.86,36,1.153,37,0.733,42,1.314,43,1.605,44,0.835,45,1.231,47,1.262,48,1.82,49,1.521,61,1.146,78,0.781,79,0.37,80,1.262,81,0.733,84,0.315,85,0.429,86,0.429,87,0.494,88,0.733,92,1.262,95,0.954,97,0.954,123,1.299,135,1.658,138,1.029,152,0.87,153,0.835,156,0.644,158,0.835,159,1.262,160,0.835,162,0.026,163,0.026,179,1.738,180,1.262,200,1.738,266,1.521,276,0.835,321,1.276,322,1.516,332,4.142,367,1.516,368,3.423,369,2.84,370,2.84,371,2.84,372,2.84,373,2.84,374,2.84,375,2.84,376,2.84,377,2.84,378,2.84,379,2.84,380,2.84,381,1.88,382,5.518,383,1.88,384,2.84,385,1.88,386,2.84,387,1.88,388,2.84,389,1.88,390,2.84,391,1.88,392,2.84,393,1.88,394,2.84,395,1.88,396,2.84,397,1.88,398,2.84,399,1.88,400,2.84,401,1.88,402,2.84,403,1.88,404,2.84,405,1.88,406,2.84,407,1.88,408,1.097,409,1.88,410,3.396,411,4.945,412,1.88,413,1.88,414,1.88,415,1.88,416,1.88,417,1.88,418,1.88,419,1.88,420,1.88,421,1.88,422,1.88,423,1.88,424,1.88,425,1.88,426,1.88,427,1.88,428,1.88,429,1.88,430,1.88,431,1.88,432,1.88]],["title/injectables/GoogleMapsScriptLoader.html",[0,0.193,433,1.627]],["body/injectables/GoogleMapsScriptLoader.html",[0,0.18,2,0.505,3,0.383,4,0.383,5,0.281,7,0.783,9,0.281,10,0.684,11,1.412,14,2.027,25,0.783,30,1.282,32,0.945,33,0.052,34,0.821,35,0.78,36,0.94,42,1.082,43,0.505,45,1.525,52,2.109,61,0.505,69,0.655,72,1.14,78,0.888,79,0.33,81,0.655,84,0.281,85,0.383,86,0.383,87,0.441,92,1.158,123,1.129,125,1.62,133,1.14,134,1.14,135,0.98,138,1.371,152,0.728,156,0.893,162,0.024,163,0.024,174,1.016,200,2.724,217,0.505,218,1.31,258,0.98,264,1.14,266,0.746,276,1.83,320,2.101,321,1.14,347,3.353,355,2.167,408,1.863,433,1.521,434,3.417,435,1.354,436,3.192,437,3.192,438,4.119,439,3.192,440,3.192,441,3.192,442,3.893,443,2.605,444,3.192,445,3.596,446,2.101,447,3.596,448,3.322,449,1.679,450,2.027,451,4.442,452,2.605,453,2.593,454,2.605,455,1.679,456,1.679,457,3.893,458,1.679,459,3.893,460,1.679,461,2.605,462,1.679,463,4.442,464,3.596,465,3.596,466,2.101,467,2.101,468,2.605,469,2.605,470,2.605,471,2.605,472,2.605,473,2.605,474,1.679,475,1.679,476,1.679,477,3.192,478,2.605,479,1.679,480,1.679,481,2.605,482,1.679,483,1.679,484,1.679,485,2.605,486,1.354,487,1.679,488,1.769,489,0.746,490,1.679,491,1.679,492,1.679,493,1.679,494,1.679,495,1.679,496,1.14,497,1.679,498,1.679,499,3.192,500,1.679,501,1.679,502,1.679,503,1.679,504,1.679,505,1.354,506,1.679,507,1.14,508,3.596,509,1.679,510,1.679,511,2.605,512,1.679,513,1.679,514,1.679,515,1.679,516,1.679,517,1.679,518,1.679,519,1.679,520,1.679,521,1.679,522,1.679,523,1.679,524,1.679,525,1.679,526,2.605,527,1.679,528,1.679,529,1.679,530,1.679,531,1.679,532,2.605,533,1.679,534,2.605,535,2.9,536,1.679,537,3.192,538,1.679,539,3.192,540,1.679,541,1.14,542,1.14,543,1.354,544,1.679,545,1.679,546,1.679,547,2.643,548,1.679,549,1.679,550,1.679,551,1.679,552,1.679,553,1.354,554,1.679,555,1.354,556,1.679,557,1.354,558,1.679,559,1.354,560,1.679,561,1.354,562,1.679,563,1.679,564,1.679,565,1.679,566,3.192,567,1.679,568,3.192,569,1.354,570,1.679,571,2.605,572,2.605,573,1.679,574,1.679,575,2.605,576,1.679,577,1.679,578,1.679,579,1.679,580,1.679,581,1.679,582,1.679,583,1.679]],["title/interfaces/GoogleModuleOptions.html",[261,1.415,450,1.239]],["body/interfaces/GoogleModuleOptions.html",[3,0.479,4,0.479,5,0.351,9,0.351,33,0.052,34,0.704,35,0.826,36,1.217,45,1.61,60,1.8,61,1.211,78,0.479,79,0.413,86,0.834,92,1.37,123,0.551,134,1.425,152,0.479,162,0.028,163,0.028,174,0.819,217,1.589,218,1.389,219,2.655,261,1.066,266,1.624,408,2.351,448,2.487,450,1.624,453,1.225,466,3.248,488,2.735,489,1.37,496,1.425,505,2.487,535,3.618,541,1.425,542,1.425,543,3.248,547,3.229,553,3.836,555,3.979,557,3.836,559,3.618,561,3.836,584,2.099,585,1.225,586,3.248,587,4.028,588,4.028,589,4.756,590,3.084,591,2.487,592,4.486,593,4.028,594,4.028,595,3.084,596,3.084,597,2.487,598,3.084,599,4.756,600,3.084,601,3.084,602,3.084,603,3.084,604,3.084,605,3.084,606,2.487,607,3.084,608,3.618,609,3.084,610,3.084,611,3.084,612,3.084,613,2.094,614,4.028,615,4.028,616,3.084,617,3.084,618,3.084,619,2.487,620,3.084,621,3.084,622,4.028,623,4.028,624,4.486,625,3.084,626,3.084,627,3.084,628,3.084,629,3.084,630,3.084,631,4.028,632,3.084,633,3.084,634,3.084,635,3.084,636,3.084,637,3.084,638,2.487,639,2.099,640,1.425,641,1.693,642,1.693,643,1.693,644,1.425,645,1.225,646,1.693,647,1.225]],["title/injectables/GooglePolygonManager.html",[0,0.193,182,1.239]],["body/injectables/GooglePolygonManager.html",[0,0.241,2,0.751,3,0.57,4,0.57,5,0.418,7,1.05,9,0.418,10,0.917,11,1.828,13,1.79,14,1.79,25,0.751,26,1.363,27,1.311,28,1.702,29,1.702,30,1.249,32,1.282,33,0.052,34,1.085,35,0.847,36,1.085,37,0.975,42,1.206,43,0.751,44,1.11,45,1.311,47,1.552,48,1.552,49,1.79,52,2.113,69,1.571,78,0.919,79,0.491,80,1.552,81,0.975,84,0.418,85,0.57,86,0.57,87,0.656,88,0.975,99,1.458,101,1.458,103,1.458,105,1.696,107,1.696,111,1.458,113,1.458,117,1.458,119,1.458,121,1.268,123,1.058,125,1.268,138,1.311,152,0.57,153,1.11,156,1.197,158,1.11,159,1.79,160,1.11,162,0.032,163,0.032,181,2.351,182,1.552,410,2.372,507,1.696,613,3.229,648,2.014,649,3.493,650,3.493,651,4.028,652,3.493,653,2.498,654,3.493,655,5.362,656,2.498,657,2.498,658,3.493,659,2.498,660,3.493,661,2.498,662,2.817,663,2.498,664,3.493,665,2.498,666,2.498,667,3.493,668,2.498,669,2.498,670,2.498,671,2.498,672,2.498,673,2.498,674,2.014,675,2.498,676,2.498,677,2.498,678,2.498,679,2.498,680,2.498,681,2.498,682,2.498,683,3.493,684,2.498,685,2.498,686,2.014,687,3.493,688,4.028,689,2.014,690,2.498,691,2.014,692,2.014,693,2.498,694,2.014]],["title/injectables/GooglePolylineManager.html",[0,0.193,184,1.239]],["body/injectables/GooglePolylineManager.html",[0,0.23,2,0.703,3,0.534,4,0.534,5,0.392,7,1.002,9,0.392,10,0.876,11,1.811,13,1.727,25,0.703,26,1.301,27,1.273,28,1.653,29,1.653,30,1.258,32,1.287,33,0.052,34,1.093,35,0.847,36,1.093,37,0.912,42,1.223,43,0.703,44,1.039,45,1.273,47,1.482,48,1.482,49,1.727,52,2.069,69,1.516,78,0.887,79,0.46,80,1.482,81,0.912,84,0.392,85,0.534,86,0.534,87,0.614,88,0.912,95,1.187,97,1.187,99,1.365,101,1.365,103,1.365,111,1.365,113,1.365,117,1.365,119,1.365,121,1.187,123,1.176,138,1.44,152,0.534,153,1.039,156,1.143,158,1.039,159,1.727,160,1.039,162,0.03,163,0.03,183,2.268,184,1.482,200,1.973,240,1.886,266,1.482,410,2.876,507,2.264,613,2.638,662,2.689,674,1.886,686,1.886,689,1.886,691,2.689,692,1.886,694,1.886,695,1.886,696,3.886,697,3.334,698,3.334,699,3.886,700,3.334,701,2.339,702,2.339,703,5.386,704,2.339,705,5.056,706,3.334,707,2.339,708,2.339,709,3.334,710,2.339,711,2.339,712,2.339,713,3.334,714,2.339,715,3.334,716,2.339,717,2.339,718,2.339,719,2.339,720,3.334,721,3.334,722,2.339,723,2.339,724,2.339,725,2.339,726,2.339,727,2.339,728,2.339,729,2.339,730,2.339,731,2.339,732,2.339,733,2.339,734,2.339,735,3.334,736,4.236,737,2.339,738,3.334,739,2.339]],["title/injectables/GoogleRectangleManager.html",[0,0.193,186,1.239]],["body/injectables/GoogleRectangleManager.html",[0,0.212,2,0.627,3,0.476,4,0.476,5,0.349,7,0.923,9,0.349,10,0.806,11,1.867,13,1.619,14,1.619,15,2.937,20,2.476,21,2.476,22,2.473,24,2.476,25,0.627,26,1.198,27,1.207,28,1.567,29,1.567,30,1.294,32,1.312,33,0.052,34,1.124,35,0.837,36,1.124,37,0.814,42,1.273,43,0.627,44,0.927,45,1.095,47,1.364,48,1.364,49,1.619,52,2.289,59,2.476,60,1.792,61,0.923,69,1.421,78,0.831,79,0.41,80,1.364,81,0.814,82,1.417,84,0.349,85,0.476,86,0.476,87,0.548,88,0.814,99,1.218,101,1.218,103,1.218,105,1.417,107,1.417,111,1.218,113,1.218,115,1.683,117,1.218,119,1.218,121,1.059,123,0.548,125,1.059,138,1.457,152,0.476,153,0.927,154,2.473,155,1.683,156,1.052,158,0.927,159,0.927,160,0.927,161,1.683,162,0.028,163,0.028,185,2.126,186,1.364,740,1.683,741,3.07,742,3.07,743,3.07,744,2.087,745,3.07,746,5.459,747,2.087,748,5.224,749,2.087,750,2.087,751,2.087,752,3.07,753,2.087,754,3.07,755,2.087,756,3.07,757,2.087,758,3.07,759,2.087,760,2.087,761,3.642,762,2.087,763,3.07,764,2.087,765,2.087,766,2.087,767,3.07,768,3.07,769,3.07,770,3.07,771,3.07,772,3.07,773,3.07,774,3.07,775,2.087,776,2.087,777,2.087,778,2.087,779,2.087,780,2.087,781,2.087,782,2.087,783,2.087,784,2.087,785,2.087,786,4.016,787,2.087,788,2.087,789,2.087,790,2.087,791,2.087,792,2.087,793,2.087,794,3.642,795,3.642,796,3.642,797,2.087,798,2.087,799,2.087,800,2.087]],["title/modules/NgMapsGoogleModule.html",[645,1.627,801,1.415]],["body/modules/NgMapsGoogleModule.html",[1,1.697,3,0.517,4,0.517,5,0.379,8,2.229,10,0.595,11,1.117,27,1.148,30,0.856,32,0.856,33,0.052,34,0.744,35,0.546,36,0.744,42,0.856,43,0.681,69,0.884,78,1.01,79,0.446,84,0.379,85,0.517,86,0.517,87,0.595,133,2.214,138,0.98,162,0.03,163,0.03,165,2.792,173,3.079,174,2.146,175,3.71,176,2.229,177,2.229,178,1.697,179,1.939,180,1.697,181,2.229,182,1.697,183,2.229,184,1.697,185,2.229,186,1.697,187,2.229,188,1.697,217,0.681,218,0.595,266,1.966,276,1.449,355,2.214,433,1.903,434,1.539,446,3.368,450,1.966,453,2.437,467,1.828,489,1.697,801,2.631,802,1.539,803,1.655,804,1.828,805,1.828,806,1.828,807,1.828,808,2.629,809,1.828,810,1.828,811,2.267,812,3.26,813,3.26,814,4.176,815,3.26,816,2.267,817,2.267,818,4.424,819,3.26,820,2.267,821,3.26,822,4.176,823,2.267,824,4.607,825,2.267,826,4.176,827,3.26,828,2.267,829,2.267,830,2.629,831,1.828,832,2.267]],["title/changelog.html",[833,1.893,834,1.893,835,1.893]],["body/changelog.html",[5,0.67,33,0.046,162,0.043,163,0.043,217,1.202,219,2.031,569,3.226,597,3.226,803,2.031,835,3.226,836,4,837,4,838,4,839,2.716,840,4.737,841,4,842,4,843,4,844,4,845,4,846,4,847,4.737,848,4,849,4.737,850,4.737,851,4,852,4,853,4,854,4,855,4,856,4,857,4,858,4,859,3.226,860,4,861,4,862,4,863,4]],["title/coverage.html",[864,3.038]],["body/coverage.html",[0,0.375,1,1.593,5,0.6,6,2.891,33,0.051,35,0.6,152,0.818,162,0.04,163,0.04,164,2.093,165,1.82,170,2.891,176,2.093,178,1.593,180,1.593,182,1.593,184,1.593,186,1.593,188,1.593,218,1.264,219,1.82,221,2.434,258,2.935,261,1.82,289,2.891,290,2.891,347,3.267,348,2.891,367,2.891,433,2.093,434,2.434,435,2.891,450,1.593,489,1.593,585,2.588,648,2.891,695,2.891,740,2.891,859,2.891,864,2.891,865,3.585,866,3.585,867,3.585,868,3.585,869,3.585,870,3.585,871,3.585,872,3.585,873,4.433,874,4.433,875,3.585,876,3.585,877,3.585,878,3.585,879,3.585,880,2.891,881,3.585,882,3.585,883,3.585,884,3.585,885,3.585,886,3.585,887,3.585,888,3.585]],["title/dependencies.html",[803,1.697,889,1.893]],["body/dependencies.html",[33,0.051,79,0.818,84,0.697,85,0.949,162,0.044,163,0.044,486,3.355,803,2.461,839,2.825,890,4.16,891,4.16,892,4.16,893,4.847,894,4.847,895,4.16,896,4.16]],["title/miscellaneous/enumerations.html",[897,1.37,898,2.696]],["body/miscellaneous/enumerations.html",[9,0.703,33,0.049,162,0.045,163,0.045,276,2.288,488,3.309,541,2.852,542,2.852,585,2.452,640,2.852,641,3.387,642,3.387,643,3.387,897,2.452,898,3.387,899,3.387]],["title/index.html",[9,0.393,833,1.893,834,1.893]],["body/index.html",[33,0.049,84,0.861,162,0.042,163,0.042,169,3.086,174,1.8,217,1.386,218,1.212,219,1.942,489,1.7,547,2.598,586,3.086,608,3.086,619,3.086,644,2.598,647,2.233,801,1.942,830,3.086,900,5.141,901,3.826,902,3.826,903,3.826,904,3.826,905,3.826,906,3.826,907,5.141,908,4.952,909,5.141,910,4.952,911,3.826,912,3.826,913,3.826,914,3.826,915,4.613,916,4.613,917,3.826,918,3.826,919,3.826]],["title/modules.html",[802,2.557]],["body/modules.html",[33,0.045,162,0.045,163,0.045,801,2.2,802,2.943,920,4.334,921,4.334,922,4.334,923,4.334]],["title/overview.html",[924,3.038]],["body/overview.html",[1,1.944,2,0.881,8,2.553,27,1.315,33,0.052,162,0.036,163,0.036,164,1.71,165,2.827,174,2.176,175,3.787,176,2.553,177,2.553,178,1.944,179,2.221,180,1.944,181,2.553,182,1.944,183,2.553,184,1.944,185,2.553,186,1.944,187,2.553,188,1.944,261,1.487,640,2.97,645,1.71,801,2.464,803,1.977,804,2.363,805,2.363,806,2.363,807,2.363,808,3.14,809,2.363,810,2.363,880,2.363,924,2.363]],["title/properties.html",[92,1.485,889,1.893]],["body/properties.html",[33,0.05,61,1.219,84,0.679,92,1.802,162,0.044,163,0.044,217,1.435,218,1.254,591,3.27,606,3.27,647,2.367,831,3.27,839,2.753,925,4.055,926,4.055,927,4.055,928,4.055,929,4.055,930,4.055,931,4.055,932,4.055,933,4.775,934,4.775,935,4.055,936,4.055,937,4.055,938,4.055]],["title/miscellaneous/variables.html",[897,1.37,939,2.696]],["body/miscellaneous/variables.html",[9,0.692,33,0.047,35,0.692,152,0.943,162,0.044,163,0.044,174,1.612,217,1.451,218,1.268,276,1.836,408,2.411,450,1.836,453,2.411,489,2.273,496,2.805,585,2.411,638,3.332,644,2.805,645,2.411,646,3.332,647,2.411,897,2.411,899,3.332,939,3.332]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":258,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{},"coverage.html":{}}}],["0/16",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":640,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1/1",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":859,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["100",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["14.0.0",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["15.0.0",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["1d7c3d7",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":641,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.0",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["2022",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":643,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.1",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["3.51.0",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":839,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"properties.html":{}}}],["7",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["8/29",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["8d70d41",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":880,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["9/10",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["_config",{"_index":436,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_convertpoints",{"_index":696,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["_convertpoints(line",{"_index":702,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["_document",{"_index":437,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_fitboundsservice",{"_index":208,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_getscriptsrc",{"_index":443,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_getscriptsrc(callbackname",{"_index":454,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_handleboundschange",{"_index":201,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handleidleevent",{"_index":202,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handlemapcenterchange",{"_index":203,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handlemapmouseevents",{"_index":204,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handlemaptypeidchange",{"_index":205,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handlemapzoomchange",{"_index":206,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handletilesloadedevent",{"_index":207,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_loader",{"_index":357,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["_mapswrapper",{"_index":37,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["_markermanager",{"_index":297,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["_markers",{"_index":368,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["_script_id",{"_index":439,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_scriptloadingpromise",{"_index":440,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_window",{"_index":441,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_zone",{"_index":28,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["a7fb44a",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":288,"title":{},"body":{"components/GoogleComponent.html":{}}}],["add",{"_index":910,"title":{},"body":{"index.html":{}}}],["addcircle",{"_index":12,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["addcircle(circle",{"_index":38,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["addinfowindow",{"_index":291,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["addinfowindow(infowindow",{"_index":299,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["addpolygon",{"_index":649,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["addpolygon(path",{"_index":654,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["addpolyline",{"_index":697,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["addpolyline(line",{"_index":706,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["addrectangle",{"_index":741,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["addrectangle(rectangle",{"_index":745,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["adjust",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["agm",{"_index":928,"title":{},"body":{"properties.html":{}}}],["allows",{"_index":595,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["already",{"_index":321,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["alter",{"_index":632,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["angular",{"_index":647,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":486,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"dependencies.html":{}}}],["angular/core",{"_index":79,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":927,"title":{},"body":{"properties.html":{}}}],["any).google",{"_index":503,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["any).google.maps",{"_index":504,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["api",{"_index":219,"title":{},"body":{"components/GoogleComponent.html":{},"interfaces/GoogleModuleOptions.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["apikey",{"_index":586,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{}}}],["apis",{"_index":604,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["apiversion",{"_index":587,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["application",{"_index":608,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{}}}],["applications",{"_index":603,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["appmodule",{"_index":917,"title":{},"body":{"index.html":{}}}],["args",{"_index":821,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["array",{"_index":266,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolylineManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["array.isarray(i",{"_index":579,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["array.isarray(queryparams[k",{"_index":572,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["arrays",{"_index":571,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["assigning",{"_index":600,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["assignscriptloadingpromise",{"_index":444,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["assignscriptloadingpromise(scriptelement",{"_index":456,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["async",{"_index":14,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["authenticate",{"_index":607,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["auto",{"_index":642,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["available",{"_index":629,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["await",{"_index":125,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["behavior",{"_index":624,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["bias",{"_index":631,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["bootstrapping",{"_index":473,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["both",{"_index":610,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["bounds",{"_index":351,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["bounds.extend(b",{"_index":365,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["bounds.service",{"_index":222,"title":{},"body":{"components/GoogleComponent.html":{}}}],["bounds.service.ts",{"_index":348,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{},"coverage.html":{}}}],["bounds.service.ts:14",{"_index":356,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["bounds.service.ts:19",{"_index":359,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["bounds.tojson",{"_index":366,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["boundsliteral",{"_index":82,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleRectangleManager.html":{}}}],["break",{"_index":539,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["breaking",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":923,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":920,"title":{},"body":{"modules.html":{}}}],["browser's",{"_index":617,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["bug",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":932,"title":{},"body":{"properties.html":{}}}],["build",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":124,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.addlistener(eventname",{"_index":157,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.getbounds().tojson",{"_index":140,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.getcenter().tojson",{"_index":141,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.getradius",{"_index":143,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setcenter",{"_index":147,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setdraggable(circle.draggable",{"_index":149,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.seteditable(circle.editable",{"_index":148,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setmap(null",{"_index":127,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setoptions(options",{"_index":139,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setradius(circle.radius",{"_index":151,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setvisible(circle.visible",{"_index":150,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["callback",{"_index":551,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["callbackname",{"_index":442,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["case",{"_index":537,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["casting",{"_index":132,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["center",{"_index":343,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["center.lat",{"_index":236,"title":{},"body":{"components/GoogleComponent.html":{}}}],["center.lng",{"_index":238,"title":{},"body":{"components/GoogleComponent.html":{}}}],["change",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":835,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["channel",{"_index":555,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["check",{"_index":130,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["checkscriptelement",{"_index":445,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["circle",{"_index":41,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.clickable",{"_index":100,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.draggable",{"_index":102,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.editable",{"_index":104,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.fillcolor",{"_index":106,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.fillopacity",{"_index":108,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.latitude",{"_index":96,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.longitude",{"_index":98,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.radius",{"_index":110,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.strokecolor",{"_index":112,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.strokeopacity",{"_index":114,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.strokeposition",{"_index":116,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.strokeweight",{"_index":118,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.visible",{"_index":120,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.zindex",{"_index":122,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circlemanager",{"_index":8,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["class",{"_index":87,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["click",{"_index":267,"title":{},"body":{"components/GoogleComponent.html":{}}}],["clickable",{"_index":99,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["client",{"_index":553,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["clientid",{"_index":588,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["close",{"_index":292,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["close(infowindow",{"_index":303,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["cluster_ngmapsgooglemodule",{"_index":804,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["cluster_ngmapsgooglemodule_declarations",{"_index":806,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["cluster_ngmapsgooglemodule_exports",{"_index":805,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["cluster_ngmapsgooglemodule_googlecomponent_providers",{"_index":807,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["code",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["comma",{"_index":576,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["commented",{"_index":91,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["component",{"_index":164,"title":{"components/GoogleComponent.html":{}},"body":{"components/GoogleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_template",{"_index":286,"title":{},"body":{"components/GoogleComponent.html":{}}}],["components",{"_index":166,"title":{},"body":{"components/GoogleComponent.html":{}}}],["computing",{"_index":350,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["config",{"_index":453,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"miscellaneous/variables.html":{}}}],["config.apikey",{"_index":552,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.apiversion",{"_index":549,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.channel",{"_index":556,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.clientid",{"_index":554,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.hostandpath",{"_index":544,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.language",{"_index":562,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.libraries",{"_index":558,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.protocol",{"_index":533,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.region",{"_index":560,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.then((c",{"_index":494,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["configuration",{"_index":463,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["configure",{"_index":446,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{}}}],["configure(config",{"_index":461,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["console.log",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["const",{"_index":123,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["constructor(_loader",{"_index":354,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["constructor(_mapswrapper",{"_index":26,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["constructor(config",{"_index":449,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["container",{"_index":191,"title":{},"body":{"components/GoogleComponent.html":{}}}],["content",{"_index":196,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{}}}],["coords",{"_index":277,"title":{},"body":{"components/GoogleComponent.html":{}}}],["coverage",{"_index":864,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createeventobservable",{"_index":13,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["createeventobservable(eventname",{"_index":44,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["creates",{"_index":306,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["createscriptelement",{"_index":447,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["d",{"_index":915,"title":{},"body":{"index.html":{}}}],["dblclick",{"_index":271,"title":{},"body":{"components/GoogleComponent.html":{}}}],["declarations",{"_index":812,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["default",{"_index":408,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["defines",{"_index":628,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["defining",{"_index":636,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["deleted",{"_index":322,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{}}}],["deleteinfowindow",{"_index":293,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["deleteinfowindow(infowindow",{"_index":307,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["deletemarker",{"_index":369,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["deletemarker(marker",{"_index":384,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["deletepolygon",{"_index":650,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["deletepolygon(paths",{"_index":658,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["deletepolyline",{"_index":698,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["deletepolyline(line",{"_index":709,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["dependencies",{"_index":803,"title":{"dependencies.html":{}},"body":{"modules/NgMapsGoogleModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":914,"title":{},"body":{"index.html":{}}}],["deps",{"_index":822,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["description",{"_index":72,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["dev",{"_index":913,"title":{},"body":{"index.html":{}}}],["different",{"_index":634,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["directive",{"_index":284,"title":{},"body":{"components/GoogleComponent.html":{}}}],["directives",{"_index":287,"title":{},"body":{"components/GoogleComponent.html":{}}}],["disableautopan",{"_index":341,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["display",{"_index":197,"title":{},"body":{"components/GoogleComponent.html":{}}}],["displaying",{"_index":619,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{}}}],["distinct",{"_index":601,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["document",{"_index":451,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["documentation",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":168,"title":{},"body":{"components/GoogleComponent.html":{}}}],["draggable",{"_index":101,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["e",{"_index":158,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["e.emitter.emit(value",{"_index":280,"title":{},"body":{"components/GoogleComponent.html":{}}}],["each",{"_index":602,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["east",{"_index":769,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["editable",{"_index":103,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["element",{"_index":283,"title":{},"body":{"components/GoogleComponent.html":{}}}],["emit(value",{"_index":263,"title":{},"body":{"components/GoogleComponent.html":{}}}],["emitter",{"_index":262,"title":{},"body":{"components/GoogleComponent.html":{}}}],["empty",{"_index":570,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["entry",{"_index":581,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["entry.key}=${entry.value",{"_index":582,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["enum",{"_index":639,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["enumerations",{"_index":898,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":520,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["error('method",{"_index":431,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["event",{"_index":264,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["event[0].latlng.lat",{"_index":278,"title":{},"body":{"components/GoogleComponent.html":{}}}],["event[0].latlng.lng",{"_index":279,"title":{},"body":{"components/GoogleComponent.html":{}}}],["eventname",{"_index":48,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["eventname.foreach((event",{"_index":428,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["events",{"_index":265,"title":{},"body":{"components/GoogleComponent.html":{}}}],["events.foreach((e",{"_index":273,"title":{},"body":{"components/GoogleComponent.html":{}}}],["export",{"_index":86,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["exports",{"_index":813,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["extends",{"_index":7,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["factory",{"_index":824,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["fail",{"_index":609,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"changelog.html":{},"coverage.html":{}}}],["fillcolor",{"_index":105,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["fillopacity",{"_index":107,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["filter",{"_index":567,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["filter((k",{"_index":565,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["fit",{"_index":221,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"coverage.html":{}}}],["fitboundsservice",{"_index":177,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["fixes",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["fixme",{"_index":89,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["force",{"_index":625,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["forroot",{"_index":815,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["forroot(config",{"_index":816,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["forrootfactory",{"_index":819,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["forrootfactory(factory",{"_index":820,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["function",{"_index":467,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{}}}],["generatebounds",{"_index":353,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["generatebounds(includeinbounds",{"_index":358,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["generated",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["geodesic",{"_index":674,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["geopoint",{"_index":83,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{}}}],["get(circle",{"_index":145,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["get(rectangle",{"_index":795,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["getbounds",{"_index":15,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["getbounds(circle",{"_index":50,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getbounds(rectangle",{"_index":750,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["getcenter",{"_index":16,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getcenter(circle",{"_index":53,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getmaptypeid",{"_index":246,"title":{},"body":{"components/GoogleComponent.html":{}}}],["getradius",{"_index":17,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getradius(circle",{"_index":55,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getting",{"_index":833,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["given",{"_index":60,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GoogleRectangleManager.html":{}}}],["google",{"_index":217,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["google.component",{"_index":829,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["google.maps",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["google.maps.circleoptions",{"_index":70,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["google.maps.infowindowoptions",{"_index":312,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["google.maps.latlngbounds",{"_index":363,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["google.maps.latlngliteral",{"_index":240,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolylineManager.html":{}}}],["google.maps.mapseventlistener",{"_index":155,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["google.maps.maptypeid",{"_index":248,"title":{},"body":{"components/GoogleComponent.html":{}}}],["google.maps.polygon",{"_index":688,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["google.maps.polyline",{"_index":736,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["google.maps.rectangleoptions",{"_index":761,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["google.maps.strokeposition",{"_index":137,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["google_maps_api_config",{"_index":489,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["googlecirclemanager",{"_index":1,"title":{"injectables/GoogleCircleManager.html":{}},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlecomponent",{"_index":165,"title":{"components/GoogleComponent.html":{}},"body":{"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googleinfowindowmanager",{"_index":188,"title":{"injectables/GoogleInfoWindowManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlemaps",{"_index":831,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"properties.html":{}}}],["googlemapsapiscript",{"_index":481,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["googlemapsapiwrapper",{"_index":176,"title":{},"body":{"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlemapsfitboundsservice",{"_index":178,"title":{"injectables/GoogleMapsFitBoundsService.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlemapsmarkermanager",{"_index":180,"title":{"injectables/GoogleMapsMarkerManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsMarkerManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlemapsscriptloader",{"_index":433,"title":{"injectables/GoogleMapsScriptLoader.html":{}},"body":{"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{}}}],["googlemapsscriptprotocol",{"_index":488,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["googlemapsscriptprotocol.auto",{"_index":538,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["googlemapsscriptprotocol.http",{"_index":540,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["googlemapsscriptprotocol.https",{"_index":534,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["googlemoduleoptions",{"_index":450,"title":{"interfaces/GoogleModuleOptions.html":{}},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["googlepolygonmanager",{"_index":182,"title":{"injectables/GooglePolygonManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolygonManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlepolylinemanager",{"_index":184,"title":{"injectables/GooglePolylineManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolylineManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlerectanglemanager",{"_index":186,"title":{"injectables/GoogleRectangleManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":195,"title":{},"body":{"components/GoogleComponent.html":{}}}],["homepage",{"_index":929,"title":{},"body":{"properties.html":{}}}],["host",{"_index":612,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["hostandpath",{"_index":543,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["html",{"_index":282,"title":{},"body":{"components/GoogleComponent.html":{}}}],["htmlscriptelement",{"_index":457,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["http",{"_index":541,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["https",{"_index":542,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["https://developers.google.com/maps/documentation/javascript/basics#language",{"_index":627,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["https://developers.google.com/maps/documentation/javascript/basics#region",{"_index":637,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["https://developers.google.com/maps/documentation/javascript/get",{"_index":590,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["https://developers.google.com/maps/documentation/javascript/libraries",{"_index":630,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["https://github.com/ng",{"_index":933,"title":{},"body":{"properties.html":{}}}],["https://ng",{"_index":930,"title":{},"body":{"properties.html":{}}}],["i.addlistener(eventname",{"_index":346,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["i.join",{"_index":580,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["i.setoptions(options",{"_index":336,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["i.setposition",{"_index":325,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["i.setzindex(infowindow.zindex",{"_index":328,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["icons",{"_index":732,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["id",{"_index":599,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["identifier",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":90,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["implemented",{"_index":432,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["import",{"_index":78,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["improve",{"_index":131,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["included",{"_index":611,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["includeinbounds",{"_index":360,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["includeinbounds.foreach((b",{"_index":364,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["includeinbounds.size",{"_index":362,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["information",{"_index":621,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["infowindow",{"_index":302,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.content.nativeelement",{"_index":337,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.disableautopan",{"_index":342,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.hostmarker",{"_index":331,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.latitude",{"_index":326,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.longitude",{"_index":327,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.maxwidth",{"_index":339,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.zindex",{"_index":340,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindowmanager",{"_index":187,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["inherit",{"_index":194,"title":{},"body":{"components/GoogleComponent.html":{}}}],["inject",{"_index":487,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["inject(document",{"_index":491,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["inject(google_maps_api_config",{"_index":490,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["injectable",{"_index":0,"title":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"overview.html":{}}}],["injectiontoken",{"_index":638,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["inner",{"_index":192,"title":{},"body":{"components/GoogleComponent.html":{}}}],["inside",{"_index":905,"title":{},"body":{"index.html":{}}}],["install",{"_index":908,"title":{},"body":{"index.html":{}}}],["installation",{"_index":906,"title":{},"body":{"index.html":{}}}],["instance",{"_index":73,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{}}}],["instanceof",{"_index":493,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["interface",{"_index":261,"title":{"interfaces/GoogleModuleOptions.html":{}},"body":{"components/GoogleComponent.html":{},"interfaces/GoogleModuleOptions.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":584,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["issues",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":683,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["item.setpaths(polygon.paths",{"_index":685,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["iwindow",{"_index":318,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["iwindow.close",{"_index":323,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["join",{"_index":575,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["jscutlery/semver",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["k",{"_index":568,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["key",{"_index":547,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"index.html":{}}}],["keywords",{"_index":925,"title":{},"body":{"properties.html":{}}}],["l.addlistener(eventname",{"_index":694,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["l.setmap(null",{"_index":692,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["l.setoptions(options",{"_index":689,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["l.setpath(path",{"_index":737,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["language",{"_index":561,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["lat",{"_index":95,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["lazymapsapiloader",{"_index":485,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["legend",{"_index":281,"title":{},"body":{"components/GoogleComponent.html":{}}}],["libraries",{"_index":557,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["library",{"_index":904,"title":{},"body":{"index.html":{}}}],["license",{"_index":606,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"properties.html":{}}}],["line",{"_index":705,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line._getpoints().map",{"_index":716,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.clickable",{"_index":723,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.draggable",{"_index":724,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.editable",{"_index":725,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.geodesic",{"_index":726,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.icons",{"_index":733,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.strokecolor",{"_index":727,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.strokeopacity",{"_index":728,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.strokeweight",{"_index":729,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.visible",{"_index":730,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.zindex",{"_index":731,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["link",{"_index":134,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["listener",{"_index":154,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["listener.remove",{"_index":161,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["literal",{"_index":662,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["lng",{"_index":97,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["load",{"_index":448,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["loaded",{"_index":505,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["loader.service",{"_index":828,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["loader.service.ts",{"_index":435,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"coverage.html":{}}}],["loader.service.ts:15",{"_index":483,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:16",{"_index":479,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:18",{"_index":480,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:19",{"_index":484,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:20",{"_index":482,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:21",{"_index":452,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:47",{"_index":462,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:52",{"_index":476,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:64",{"_index":460,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:74",{"_index":458,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:85",{"_index":474,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:95",{"_index":455,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loading",{"_index":468,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["m",{"_index":410,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["m.addlistener(event",{"_index":429,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setanimation(google.maps.animation[marker.animation",{"_index":426,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setanimation(marker.animation",{"_index":427,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setclickable(marker.clickable",{"_index":424,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setdraggable(marker.draggable",{"_index":419,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.seticon(marker.iconurl",{"_index":420,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setlabel(marker.label",{"_index":418,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setmap(null",{"_index":412,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setopacity(marker.opacity",{"_index":421,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setposition",{"_index":414,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.settitle(marker.title",{"_index":417,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setvisible(marker.visible",{"_index":422,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setzindex(marker.zindex",{"_index":423,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.then((l",{"_index":691,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["managers/circle.manager",{"_index":223,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/info",{"_index":224,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/marker.manager",{"_index":226,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/polygon.manager",{"_index":227,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/polyline.manager",{"_index":228,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/rectangle.manager",{"_index":229,"title":{},"body":{"components/GoogleComponent.html":{}}}],["map",{"_index":61,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GoogleRectangleManager.html":{},"properties.html":{}}}],["map((k",{"_index":574,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["map_provider",{"_index":827,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["maps",{"_index":218,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maps.git",{"_index":938,"title":{},"body":{"properties.html":{}}}],["maps.github.io/core",{"_index":931,"title":{},"body":{"properties.html":{}}}],["maps.googleapis.com/maps/api/js",{"_index":545,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["maps/core",{"_index":85,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"dependencies.html":{}}}],["maps/google",{"_index":900,"title":{},"body":{"index.html":{}}}],["maps/issues",{"_index":935,"title":{},"body":{"properties.html":{}}}],["maps/ng",{"_index":934,"title":{},"body":{"properties.html":{}}}],["mapsapiloader",{"_index":355,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{}}}],["mapsapiwrapper",{"_index":27,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["marker",{"_index":332,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{}}}],["marker.animation",{"_index":425,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["marker.latitude",{"_index":415,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["marker.longitude",{"_index":416,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["markermanager",{"_index":179,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["matching",{"_index":163,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxwidth",{"_index":338,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["metadata",{"_index":172,"title":{},"body":{"components/GoogleComponent.html":{}}}],["methods",{"_index":10,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["miscellaneous",{"_index":897,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":936,"title":{},"body":{"properties.html":{}}}],["modular",{"_index":902,"title":{},"body":{"index.html":{}}}],["module",{"_index":645,"title":{"modules/NgMapsGoogleModule.html":{}},"body":{"interfaces/GoogleModuleOptions.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":802,"title":{"modules.html":{}},"body":{"modules/NgMapsGoogleModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":818,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["name",{"_index":34,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["need",{"_index":911,"title":{},"body":{"index.html":{}}}],["needed",{"_index":472,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["new",{"_index":152,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":84,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"dependencies.html":{},"index.html":{},"properties.html":{}}}],["ng2",{"_index":926,"title":{},"body":{"properties.html":{}}}],["ngmapscircledirective",{"_index":39,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["ngmapsgooglemodule",{"_index":801,"title":{"modules/NgMapsGoogleModule.html":{}},"body":{"modules/NgMapsGoogleModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ngmapsinfowindowcomponent",{"_index":300,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["ngmapsmarkercomponent",{"_index":382,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["ngmapspolygondirective",{"_index":655,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["ngmapspolyline",{"_index":703,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["ngmapspolylinepoint",{"_index":715,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["ngmapsrectangledirective",{"_index":746,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["ngmapsviewcomponent",{"_index":171,"title":{},"body":{"components/GoogleComponent.html":{}}}],["ngmodule",{"_index":826,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["ngzone",{"_index":29,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["none",{"_index":198,"title":{},"body":{"components/GoogleComponent.html":{}}}],["north",{"_index":767,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["npm",{"_index":907,"title":{},"body":{"index.html":{}}}],["null",{"_index":156,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["number",{"_index":252,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{}}}],["object",{"_index":496,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["object.keys(queryparams",{"_index":564,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["observable",{"_index":49,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["observable((observer",{"_index":153,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["observer",{"_index":80,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["observer.next(e",{"_index":160,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["open",{"_index":294,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["open(infowindow",{"_index":309,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["optional",{"_index":36,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["options",{"_index":69,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["options.strokeposition",{"_index":136,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["out",{"_index":810,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["overview",{"_index":924,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":623,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["package",{"_index":889,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":506,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["param",{"_index":133,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{}}}],["parameter",{"_index":594,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["params",{"_index":563,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["path",{"_index":613,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["path.clickable",{"_index":669,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.draggable",{"_index":670,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.editable",{"_index":671,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.fillcolor",{"_index":672,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.fillopacity",{"_index":673,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.geodesic",{"_index":675,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.paths",{"_index":676,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.strokecolor",{"_index":677,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.strokeopacity",{"_index":678,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.strokeweight",{"_index":679,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.visible",{"_index":680,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.zindex",{"_index":681,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["paths",{"_index":660,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["peer",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["plan",{"_index":605,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["plans",{"_index":593,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["please",{"_index":646,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["point",{"_index":717,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["point.latitude",{"_index":718,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["point.longitude",{"_index":719,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["polygon",{"_index":666,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["polygonmanager",{"_index":181,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolygonManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["polygonpromise",{"_index":667,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["polylinemanager",{"_index":183,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolylineManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["polylinepromise",{"_index":721,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["postponed",{"_index":470,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["preferred",{"_index":618,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["premium",{"_index":592,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["promise",{"_index":52,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["promise((resolve",{"_index":515,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["promise.resolve",{"_index":507,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["properties",{"_index":92,"title":{"properties.html":{}},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"properties.html":{}}}],["propname",{"_index":686,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["protected",{"_index":200,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolylineManager.html":{}}}],["protocol",{"_index":535,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["protocoltype",{"_index":532,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["protocol}//${hostandpath}?${params",{"_index":583,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["provide",{"_index":174,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":464,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["provider",{"_index":918,"title":{},"body":{"index.html":{}}}],["providers",{"_index":173,"title":{},"body":{"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{}}}],["public",{"_index":11,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["quarterly",{"_index":550,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["queryparams",{"_index":546,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["queryparams[k",{"_index":566,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["queryparams[k].length",{"_index":573,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["r",{"_index":790,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.addlistener(eventname",{"_index":800,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.getbounds().tojson",{"_index":792,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setbounds",{"_index":793,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setdraggable(rectangle.draggable",{"_index":798,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.seteditable(rectangle.editable",{"_index":797,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setmap(null",{"_index":787,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setoptions(options",{"_index":789,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setvisible(rectangle.visible",{"_index":799,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["radius",{"_index":109,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["readonly",{"_index":438,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["rectangle",{"_index":748,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.clickable",{"_index":775,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.draggable",{"_index":776,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.east",{"_index":770,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.editable",{"_index":777,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.fillcolor",{"_index":778,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.fillopacity",{"_index":779,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.north",{"_index":768,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.south",{"_index":772,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.strokecolor",{"_index":780,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.strokeopacity",{"_index":781,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.strokeposition",{"_index":782,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.strokeweight",{"_index":783,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.visible",{"_index":784,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.west",{"_index":774,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.zindex",{"_index":785,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectanglemanager",{"_index":185,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["refactoring",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["region",{"_index":559,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["reject",{"_index":516,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["reject(error",{"_index":521,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["remove",{"_index":569,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"changelog.html":{}}}],["removecircle",{"_index":18,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["removecircle(circle",{"_index":57,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["removerectangle",{"_index":742,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["removerectangle(rectangle",{"_index":752,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["removes",{"_index":59,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["replaysubject",{"_index":477,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["replaysubject(1",{"_index":478,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["repository",{"_index":937,"title":{},"body":{"properties.html":{}}}],["reset",{"_index":809,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["resolve",{"_index":518,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["responsible",{"_index":349,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["results",{"_index":162,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":138,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["returns",{"_index":42,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["rightclick",{"_index":269,"title":{},"body":{"components/GoogleComponent.html":{}}}],["rxjs",{"_index":81,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["s",{"_index":230,"title":{},"body":{"components/GoogleComponent.html":{}}}],["script",{"_index":434,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{}}}],["script.async",{"_index":525,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["script.defer",{"_index":527,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["script.id",{"_index":528,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["script.src",{"_index":529,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["script.type",{"_index":523,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["scriptelement",{"_index":459,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["scriptelement.onerror",{"_index":519,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["scripts",{"_index":469,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["see",{"_index":589,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["selector",{"_index":189,"title":{},"body":{"components/GoogleComponent.html":{}}}],["seperated",{"_index":577,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["serve",{"_index":633,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["setbounds",{"_index":743,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setbounds(rectangle",{"_index":754,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setcenter",{"_index":19,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setcenter(circle",{"_index":62,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setdraggable",{"_index":20,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["setdraggable(circle",{"_index":64,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setdraggable(rectangle",{"_index":756,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["seteditable",{"_index":21,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["seteditable(circle",{"_index":66,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["seteditable(rectangle",{"_index":758,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setoptions",{"_index":22,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["setoptions(circle",{"_index":68,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setoptions(infowindow",{"_index":311,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["setoptions(rectangle",{"_index":760,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setpolygonoptions",{"_index":651,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["setpolygonoptions(path",{"_index":661,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["setpolylineoptions",{"_index":699,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["setpolylineoptions(line",{"_index":711,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["setposition",{"_index":295,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["setposition(infowindow",{"_index":314,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["setradius",{"_index":23,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setradius(circle",{"_index":74,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setting",{"_index":626,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["setvisible",{"_index":24,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["setvisible(circle",{"_index":76,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setvisible(rectangle",{"_index":763,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setzindex",{"_index":296,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["setzindex(infowindow",{"_index":316,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["shakable",{"_index":903,"title":{},"body":{"index.html":{}}}],["simple",{"_index":901,"title":{},"body":{"index.html":{}}}],["single",{"_index":352,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["south",{"_index":771,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/.../options.ts",{"_index":899,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/lib/google",{"_index":347,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{},"coverage.html":{}}}],["src/lib/google.component.ts",{"_index":170,"title":{},"body":{"components/GoogleComponent.html":{},"coverage.html":{}}}],["src/lib/google.component.ts:105",{"_index":215,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:117",{"_index":211,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:124",{"_index":216,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:131",{"_index":213,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:56",{"_index":209,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:65",{"_index":212,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:81",{"_index":210,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:92",{"_index":214,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.module.ts",{"_index":811,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["src/lib/google.module.ts:25",{"_index":817,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["src/lib/google.module.ts:43",{"_index":823,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["src/lib/managers/circle.manager.ts",{"_index":6,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"coverage.html":{}}}],["src/lib/managers/circle.manager.ts:102",{"_index":65,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:108",{"_index":77,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:112",{"_index":75,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:116",{"_index":46,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:13",{"_index":31,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:21",{"_index":40,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:47",{"_index":58,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:58",{"_index":71,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:72",{"_index":51,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:79",{"_index":54,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:84",{"_index":56,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:88",{"_index":63,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:96",{"_index":67,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/info",{"_index":289,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"coverage.html":{}}}],["src/lib/managers/marker.manager.ts",{"_index":367,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{},"coverage.html":{}}}],["src/lib/managers/marker.manager.ts:103",{"_index":393,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:12",{"_index":409,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:15",{"_index":381,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:21",{"_index":385,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:34",{"_index":399,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:39",{"_index":403,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:44",{"_index":397,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:49",{"_index":391,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:54",{"_index":395,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:59",{"_index":401,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:64",{"_index":405,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:69",{"_index":407,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:74",{"_index":389,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:79",{"_index":387,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:88",{"_index":383,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/polygon.manager.ts",{"_index":648,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"coverage.html":{}}}],["src/lib/managers/polygon.manager.ts:11",{"_index":653,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:16",{"_index":656,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:34",{"_index":665,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:43",{"_index":663,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:52",{"_index":659,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:65",{"_index":657,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polyline.manager.ts",{"_index":695,"title":{},"body":{"injectables/GooglePolylineManager.html":{},"coverage.html":{}}}],["src/lib/managers/polyline.manager.ts:12",{"_index":701,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:17",{"_index":704,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:29",{"_index":707,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:47",{"_index":714,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:60",{"_index":712,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:69",{"_index":710,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:82",{"_index":708,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/rectangle.manager.ts",{"_index":740,"title":{},"body":{"injectables/GoogleRectangleManager.html":{},"coverage.html":{}}}],["src/lib/managers/rectangle.manager.ts:12",{"_index":744,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:17",{"_index":747,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:47",{"_index":753,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:54",{"_index":762,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:61",{"_index":751,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:68",{"_index":755,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:79",{"_index":759,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:85",{"_index":757,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:91",{"_index":764,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:97",{"_index":749,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/options.ts",{"_index":585,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":834,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["statements",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":814,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["string",{"_index":45,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["strings",{"_index":578,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["strokecolor",{"_index":111,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["strokeopacity",{"_index":113,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["strokeposition",{"_index":115,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["strokeweight",{"_index":117,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["styles",{"_index":167,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribe",{"_index":233,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribe((event",{"_index":275,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('bounds_changed",{"_index":242,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('center_changed",{"_index":232,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('maptypeid_changed",{"_index":245,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('tilesloaded",{"_index":259,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('zoom_changed",{"_index":250,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent(e.name",{"_index":274,"title":{},"body":{"components/GoogleComponent.html":{}}}],["super",{"_index":492,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["super(_loader",{"_index":361,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["super(_mapswrapper",{"_index":88,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["support",{"_index":921,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":922,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":536,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["t",{"_index":47,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["table",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":615,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["template",{"_index":199,"title":{},"body":{"components/GoogleComponent.html":{}}}],["text/javascript",{"_index":524,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["textual",{"_index":620,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["then((c",{"_index":146,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["then((maptypeid",{"_index":247,"title":{},"body":{"components/GoogleComponent.html":{}}}],["then((r",{"_index":796,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._apiwrapper.createcircle",{"_index":94,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._apiwrapper.createrectangle",{"_index":766,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._circles",{"_index":144,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._circles.delete(circle",{"_index":128,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._circles.get(circle",{"_index":126,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._circles.get(circle).then((c",{"_index":142,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._circles.set",{"_index":93,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._config.complete",{"_index":502,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._config.next(config",{"_index":501,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._config.topromise",{"_index":531,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._convertpoints(line",{"_index":720,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._document",{"_index":498,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._document.body.appendchild(scriptelement",{"_index":514,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._document.createelement('script",{"_index":522,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._document.defaultview",{"_index":500,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._document.getelementbyid",{"_index":510,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._getscriptsrc(this.callbackname",{"_index":530,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._infowindows.delete(infowindow",{"_index":324,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._infowindows.get(infowindow",{"_index":319,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._infowindows.set(infowindow",{"_index":345,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._mapswrapper",{"_index":231,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._mapswrapper.createinfowindow(center",{"_index":344,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._mapswrapper.createpolygon",{"_index":668,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._mapswrapper.createpolyline",{"_index":722,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._mapswrapper.getbounds().then((bounds",{"_index":243,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._mapswrapper.getcenter().then((center",{"_index":234,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._mapswrapper.getnativemap",{"_index":330,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._mapswrapper.getzoom().then((z",{"_index":251,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._mapswrapper.subscribetomapevent('idle').subscribe",{"_index":256,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._markermanager.getnativemarker",{"_index":333,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._markers.delete(marker",{"_index":413,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["this._markers.get(marker",{"_index":411,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["this._polygons.delete(paths",{"_index":693,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polygons.get(path).then((l",{"_index":687,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polygons.get(paths",{"_index":690,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polygons.get(polygon",{"_index":684,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polygons.set(path",{"_index":682,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polylines.delete(line",{"_index":739,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._polylines.get(line",{"_index":735,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._polylines.get(line).then((l",{"_index":738,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._polylines.set(line",{"_index":734,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._rectangles",{"_index":794,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._rectangles.delete(rectangle",{"_index":788,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._rectangles.get(rectangle",{"_index":791,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._rectangles.get(rectangle).then((r",{"_index":786,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._rectangles.set",{"_index":765,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._script_id",{"_index":511,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._scriptloadingpromise",{"_index":508,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._window",{"_index":499,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._window[this.callbackname",{"_index":517,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._zone.run",{"_index":159,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["this.assignscriptloadingpromise(scriptelement",{"_index":513,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.boundschange.emit(bounds",{"_index":244,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.centerchange.emit",{"_index":239,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.checkscriptelement",{"_index":509,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.configure(c",{"_index":495,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.configure(config",{"_index":497,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.createscriptelement",{"_index":512,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.idle.emit(void",{"_index":257,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.latitude",{"_index":235,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.longitude",{"_index":237,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.mapclick",{"_index":268,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.mapdblclick",{"_index":272,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.maprightclick",{"_index":270,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.maptypeidchange.emit(maptypeid",{"_index":249,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.subscription.add(s",{"_index":241,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.tilesloaded.emit(void",{"_index":260,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.zoom",{"_index":253,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.zoomchange.emit(z",{"_index":255,"title":{},"body":{"components/GoogleComponent.html":{}}}],["throw",{"_index":430,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["tiles",{"_index":635,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["time",{"_index":465,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["todo",{"_index":129,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["token",{"_index":644,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":596,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["tree",{"_index":169,"title":{},"body":{"components/GoogleComponent.html":{},"index.html":{}}}],["true",{"_index":526,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["tslib",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":35,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":135,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["types",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["types/google.maps",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["types/googlemaps",{"_index":916,"title":{},"body":{"index.html":{}}}],["typings",{"_index":912,"title":{},"body":{"index.html":{}}}],["under",{"_index":598,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["unknown",{"_index":475,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["until",{"_index":471,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["update",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["updateanimation",{"_index":370,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateanimation(marker",{"_index":386,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateclickable",{"_index":371,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateclickable(marker",{"_index":388,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updated",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["updatedraggable",{"_index":372,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatedraggable(marker",{"_index":390,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateicon",{"_index":373,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateicon(marker",{"_index":392,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateiconlegacy",{"_index":374,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateiconlegacy(marker",{"_index":394,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatelabel",{"_index":375,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatelabel(marker",{"_index":396,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatemarkerposition",{"_index":376,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatemarkerposition(marker",{"_index":398,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateopacity",{"_index":377,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateopacity(marker",{"_index":400,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatepolygon",{"_index":652,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["updatepolygon(polygon",{"_index":664,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["updatepolylinepoints",{"_index":700,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["updatepolylinepoints(line",{"_index":713,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["updatetitle",{"_index":378,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatetitle(marker",{"_index":402,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatevisible",{"_index":379,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatevisible(marker",{"_index":404,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatezindex",{"_index":380,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatezindex(marker",{"_index":406,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["usage",{"_index":597,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"changelog.html":{}}}],["use",{"_index":466,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["useclass",{"_index":175,"title":{},"body":{"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["used",{"_index":614,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["usefactory",{"_index":832,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["uses",{"_index":616,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["usevalue",{"_index":830,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"index.html":{}}}],["using",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["v",{"_index":548,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["value",{"_index":276,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":285,"title":{},"body":{"components/GoogleComponent.html":{}}}],["variable",{"_index":884,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":939,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":591,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"properties.html":{}}}],["view",{"_index":190,"title":{},"body":{"components/GoogleComponent.html":{}}}],["visible",{"_index":119,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["void",{"_index":43,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["w",{"_index":329,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["w.close",{"_index":335,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["w.open(map",{"_index":334,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["west",{"_index":773,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["width",{"_index":193,"title":{},"body":{"components/GoogleComponent.html":{}}}],["window",{"_index":320,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["window.manager",{"_index":225,"title":{},"body":{"components/GoogleComponent.html":{}}}],["window.manager.ts",{"_index":290,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"coverage.html":{}}}],["window.manager.ts:13",{"_index":298,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:22",{"_index":308,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:37",{"_index":315,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:45",{"_index":317,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:50",{"_index":310,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:63",{"_index":304,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:68",{"_index":313,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:76",{"_index":301,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:98",{"_index":305,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["wish",{"_index":622,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["wrapper",{"_index":220,"title":{},"body":{"components/GoogleComponent.html":{}}}],["wrapper.ts",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["yarn",{"_index":909,"title":{},"body":{"index.html":{}}}],["yes",{"_index":825,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["your_api_key",{"_index":919,"title":{},"body":{"index.html":{}}}],["z",{"_index":254,"title":{},"body":{"components/GoogleComponent.html":{}}}],["zindex",{"_index":121,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["zoom",{"_index":808,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/GoogleCircleManager.html":{"url":"injectables/GoogleCircleManager.html","title":"injectable - GoogleCircleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleCircleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/circle.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    CircleManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addCircle\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Async\n                                getBounds\n                            \n                            \n                                    Public\n                                    Async\n                                getCenter\n                            \n                            \n                                    Public\n                                getRadius\n                            \n                            \n                                    Public\n                                    Async\n                                removeCircle\n                            \n                            \n                                    Public\n                                setCenter\n                            \n                            \n                                    Public\n                                setDraggable\n                            \n                            \n                                    Public\n                                setEditable\n                            \n                            \n                                    Public\n                                    Async\n                                setOptions\n                            \n                            \n                                    Public\n                                setRadius\n                            \n                            \n                                    Public\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/circle.manager.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addCircle\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:116\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRadius\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        removeCircle\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:47\n                \n            \n\n\n            \n                \n                    Removes the given circle from the map.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setDraggable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setEditable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(circle: NgMapsCircleDirective, options: google.maps.CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of NgMapsCircleDirective\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                            google.maps.CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        options for the circle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setRadius\n                        \n                    \n                \n            \n            \n                \n                    \n                    setRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setVisible\n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  BoundsLiteral,\n  CircleManager,\n  GeoPoint,\n  MapsApiWrapper,\n  NgMapsCircleDirective,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GoogleCircleManager extends CircleManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  /**\n   * @fixme implement commented properties\n   */\n  public addCircle(circle: NgMapsCircleDirective) {\n    this._circles.set(\n      circle,\n      this._apiWrapper.createCircle(\n        { lat: circle.latitude, lng: circle.longitude },\n        {\n          // clickable: circle.clickable,\n          // draggable: circle.draggable,\n          // editable: circle.editable,\n          fillColor: circle.fillColor,\n          fillOpacity: circle.fillOpacity,\n          radius: circle.radius,\n          strokeColor: circle.strokeColor,\n          strokeOpacity: circle.strokeOpacity,\n          // strokePosition: circle.strokePosition,\n          strokeWeight: circle.strokeWeight,\n          visible: circle.visible,\n          zIndex: circle.zIndex,\n        },\n      ),\n    );\n  }\n\n  /**\n   * Removes the given circle from the map.\n   */\n  public async removeCircle(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    c.setMap(null);\n    this._circles.delete(circle);\n  }\n\n  /**\n   * @todo check how to improve type casting\n   * @param circle instance of {@link NgMapsCircleDirective}\n   * @param options options for the circle\n   */\n  public async setOptions(\n    circle: NgMapsCircleDirective,\n    options: google.maps.CircleOptions,\n  ): Promise {\n    const c = await this._circles.get(circle);\n\n    if (typeof options.strokePosition === 'string') {\n      options.strokePosition = google.maps.StrokePosition[\n        options.strokePosition\n      ] as any as google.maps.StrokePosition;\n    }\n    return c.setOptions(options);\n  }\n\n  public async getBounds(\n    circle: NgMapsCircleDirective,\n  ): Promise {\n    const c = await this._circles.get(circle);\n    return c.getBounds().toJSON();\n  }\n\n  public async getCenter(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    return c.getCenter().toJSON();\n  }\n\n  public getRadius(circle: NgMapsCircleDirective): Promise {\n    return this._circles.get(circle).then((c) => c.getRadius());\n  }\n\n  public setCenter(circle: NgMapsCircleDirective): Promise {\n    return this._circles\n      .get(circle)\n      .then((c) =>\n        c.setCenter({ lat: circle.latitude, lng: circle.longitude }),\n      );\n  }\n\n  public setEditable(circle: NgMapsCircleDirective): Promise {\n    return this._circles\n      .get(circle)\n      .then((c) => c.setEditable(circle.editable));\n  }\n\n  public setDraggable(circle: NgMapsCircleDirective): Promise {\n    return this._circles\n      .get(circle)\n      .then((c) => c.setDraggable(circle.draggable));\n  }\n\n  public setVisible(circle: NgMapsCircleDirective): Promise {\n    return this._circles.get(circle).then((c) => c.setVisible(circle.visible));\n  }\n\n  public setRadius(circle: NgMapsCircleDirective): Promise {\n    return this._circles.get(circle).then((c) => c.setRadius(circle.radius));\n  }\n\n  public createEventObservable(\n    eventName: string,\n    circle: NgMapsCircleDirective,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      let listener: google.maps.MapsEventListener = null;\n      this._circles.get(circle).then((c) => {\n        listener = c.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GoogleComponent.html":{"url":"components/GoogleComponent.html","title":"component - GoogleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GoogleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/google.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NgMapsViewComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }\n                                { provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }\n                                { provide: MarkerManager, useClass: GoogleMapsMarkerManager }\n                                { provide: CircleManager, useClass: GoogleCircleManager }\n                                { provide: PolygonManager, useClass: GooglePolygonManager }\n                                { provide: PolylineManager, useClass: GooglePolylineManager }\n                                { provide: RectangleManager, useClass: GoogleRectangleManager }\n                                { provide: InfoWindowManager, useClass: GoogleInfoWindowManager }\n                \n            \n\n\n            \n                selector\n                map-view\n            \n\n\n            \n                styles\n                \n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    \n            \n\n            \n                template\n                \n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _handleBoundsChange\n                            \n                            \n                                    Protected\n                                _handleIdleEvent\n                            \n                            \n                                    Protected\n                                    Async\n                                _handleMapCenterChange\n                            \n                            \n                                    Protected\n                                _handleMapMouseEvents\n                            \n                            \n                                    Protected\n                                _handleMapTypeIdChange\n                            \n                            \n                                    Protected\n                                _handleMapZoomChange\n                            \n                            \n                                    Protected\n                                _handleTilesLoadedEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _fitBoundsService: FitBoundsService, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/google.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fitBoundsService\n                                                  \n                                                        \n                                                                    FitBoundsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleBoundsChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleBoundsChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleIdleEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleIdleEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        _handleMapCenterChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapCenterChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleMapMouseEvents\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapMouseEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleMapTypeIdChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapTypeIdChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleMapZoomChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapZoomChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleTilesLoadedEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleTilesLoadedEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, NgZone } from '@angular/core';\n\nimport {\n  CircleManager,\n  FitBoundsService,\n  GeoPoint,\n  InfoWindowManager,\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsViewComponent,\n  PolygonManager,\n  PolylineManager,\n  RectangleManager,\n} from '@ng-maps/core';\n\nimport { GoogleMapsAPIWrapper } from './google-maps-api-wrapper';\nimport { GoogleMapsFitBoundsService } from './google-maps-fit-bounds.service';\nimport { GoogleCircleManager } from './managers/circle.manager';\nimport { GoogleInfoWindowManager } from './managers/info-window.manager';\nimport { GoogleMapsMarkerManager } from './managers/marker.manager';\nimport { GooglePolygonManager } from './managers/polygon.manager';\nimport { GooglePolylineManager } from './managers/polyline.manager';\nimport { GoogleRectangleManager } from './managers/rectangle.manager';\n\n@Component({\n  selector: 'map-view',\n  providers: [\n    { provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper },\n    { provide: FitBoundsService, useClass: GoogleMapsFitBoundsService },\n    { provide: MarkerManager, useClass: GoogleMapsMarkerManager },\n    { provide: CircleManager, useClass: GoogleCircleManager },\n    { provide: PolygonManager, useClass: GooglePolygonManager },\n    { provide: PolylineManager, useClass: GooglePolylineManager },\n    { provide: RectangleManager, useClass: GoogleRectangleManager },\n    { provide: InfoWindowManager, useClass: GoogleInfoWindowManager },\n  ],\n  styles: [\n    `\n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    `,\n  ],\n  template: `\n    \n    \n      \n    \n  `,\n})\nexport class GoogleComponent extends NgMapsViewComponent {\n  constructor(\n    _mapsWrapper: MapsApiWrapper,\n    _fitBoundsService: FitBoundsService,\n    _zone: NgZone,\n  ) {\n    super(_mapsWrapper, _fitBoundsService, _zone);\n  }\n\n  protected async _handleMapCenterChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('center_changed')\n      .subscribe(() => {\n        this._mapsWrapper.getCenter().then((center: GeoPoint) => {\n          this.latitude = center.lat;\n          this.longitude = center.lng;\n          this.centerChange.emit({\n            lat: this.latitude,\n            lng: this.longitude,\n          } as google.maps.LatLngLiteral);\n        });\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleBoundsChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('bounds_changed')\n      .subscribe(() => {\n        this._mapsWrapper.getBounds().then((bounds) => {\n          this.boundsChange.emit(bounds);\n        });\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleMapTypeIdChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('maptypeid_changed')\n      .subscribe(() => {\n        this._mapsWrapper\n          .getMapTypeId()\n          .then((mapTypeId: google.maps.MapTypeId) => {\n            this.mapTypeIdChange.emit(mapTypeId);\n          });\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleMapZoomChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('zoom_changed')\n      .subscribe(() => {\n        this._mapsWrapper.getZoom().then((z: number) => {\n          this.zoom = z;\n          this.zoomChange.emit(z);\n        });\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleIdleEvent() {\n    const s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(() => {\n      this.idle.emit(void 0);\n    });\n    this.subscription.add(s);\n  }\n\n  protected _handleTilesLoadedEvent() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('tilesloaded')\n      .subscribe(() => this.tilesLoaded.emit(void 0));\n    this.subscription.add(s);\n  }\n\n  protected _handleMapMouseEvents() {\n    interface Emitter {\n      emit(value: any): void;\n    }\n\n    interface Event {\n      name: string;\n      emitter: Emitter;\n    }\n\n    const events: Array = [\n      { name: 'click', emitter: this.mapClick },\n      { name: 'rightclick', emitter: this.mapRightClick },\n      { name: 'dblclick', emitter: this.mapDblClick },\n    ];\n\n    events.forEach((e: Event) => {\n      const s = (this._mapsWrapper as GoogleMapsAPIWrapper)\n        .subscribeToMapEvent(e.name)\n        .subscribe((event) => {\n          const value = {\n            coords: { lat: event[0].latLng.lat(), lng: event[0].latLng.lng() },\n          };\n          e.emitter.emit(value);\n        });\n      this.subscription.add(s);\n    });\n  }\n}\n\n    \n\n\n    \n            \n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'GoogleComponent', 'selector': 'map-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GoogleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleInfoWindowManager.html":{"url":"injectables/GoogleInfoWindowManager.html","title":"injectable - GoogleInfoWindowManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleInfoWindowManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/info-window.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    InfoWindowManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addInfoWindow\n                            \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Async\n                                deleteInfoWindow\n                            \n                            \n                                    Public\n                                    Async\n                                open\n                            \n                            \n                                    Public\n                                setOptions\n                            \n                            \n                                    Public\n                                setPosition\n                            \n                            \n                                    Public\n                                setZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone, _markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/info-window.manager.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _markerManager\n                                                  \n                                                        \n                                                                    MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        addInfoWindow\n                        \n                    \n                \n            \n            \n                \n                    \n                    addInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:98\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Creates a Google Maps event listener for the given InfoWindow as an Observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteInfoWindow\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(infoWindow: NgMapsInfoWindowComponent, options: google.maps.InfoWindowOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.InfoWindowOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPosition(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setZIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    setZIndex(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  GeoPoint,\n  InfoWindowManager,\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsInfoWindowComponent,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GoogleInfoWindowManager extends InfoWindowManager {\n  constructor(\n    _mapsWrapper: MapsApiWrapper,\n    _zone: NgZone,\n    _markerManager: MarkerManager,\n  ) {\n    super(_mapsWrapper, _zone, _markerManager);\n  }\n\n  public async deleteInfoWindow(\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Promise {\n    const iWindow = await this._infoWindows.get(infoWindow);\n    if (iWindow == null) {\n      // info window already deleted\n      return;\n    } else {\n      return this._zone.run(() => {\n        iWindow.close();\n        this._infoWindows.delete(infoWindow);\n      });\n    }\n  }\n\n  public setPosition(infoWindow: NgMapsInfoWindowComponent): void {\n    const i = this._infoWindows.get(infoWindow);\n    i.setPosition({\n      lat: infoWindow.latitude,\n      lng: infoWindow.longitude,\n    });\n  }\n\n  public setZIndex(infoWindow: NgMapsInfoWindowComponent): void {\n    const i = this._infoWindows.get(infoWindow);\n    i.setZIndex(infoWindow.zIndex);\n  }\n\n  public async open(infoWindow: NgMapsInfoWindowComponent): Promise {\n    const w = this._infoWindows.get(infoWindow);\n    const map = await this._mapsWrapper.getNativeMap();\n    if (infoWindow.hostMarker != null) {\n      const marker = await this._markerManager.getNativeMarker(\n        infoWindow.hostMarker,\n      );\n      w.open(map, marker);\n    } else {\n      w.open(map);\n    }\n  }\n\n  public close(infoWindow: NgMapsInfoWindowComponent): void {\n    const w = this._infoWindows.get(infoWindow);\n    w.close();\n  }\n\n  public setOptions(\n    infoWindow: NgMapsInfoWindowComponent,\n    options: google.maps.InfoWindowOptions,\n  ) {\n    const i = this._infoWindows.get(infoWindow);\n    i.setOptions(options);\n  }\n\n  public async addInfoWindow(infoWindow: NgMapsInfoWindowComponent) {\n    const options: google.maps.InfoWindowOptions = {\n      content: infoWindow.content.nativeElement,\n      maxWidth: infoWindow.maxWidth,\n      zIndex: infoWindow.zIndex,\n      disableAutoPan: infoWindow.disableAutoPan,\n    };\n    const center: GeoPoint =\n      typeof infoWindow.latitude === 'number' &&\n      typeof infoWindow.longitude === 'number'\n        ? {\n            lat: infoWindow.latitude,\n            lng: infoWindow.longitude,\n          }\n        : null;\n    const instance = await this._mapsWrapper.createInfoWindow(center, options);\n    this._infoWindows.set(infoWindow, instance);\n  }\n\n  /**\n   * Creates a Google Maps event listener for the given InfoWindow as an Observable\n   */\n  public createEventObservable(\n    eventName: string,\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Observable {\n    const i = this._infoWindows.get(infoWindow);\n    return new Observable((observer: Observer) => {\n      i.addListener(eventName, (e: T) =>\n        this._zone.run(() => observer.next(e)),\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleMapsFitBoundsService.html":{"url":"injectables/GoogleMapsFitBoundsService.html","title":"injectable - GoogleMapsFitBoundsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleMapsFitBoundsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/google-maps-fit-bounds.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The FitBoundsService is responsible for computing the bounds of the a single map.\n\n            \n\n            \n                Extends\n            \n            \n                    FitBoundsService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                generateBounds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_loader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/lib/google-maps-fit-bounds.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _loader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        generateBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateBounds(includeInBounds: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-fit-bounds.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    includeInBounds\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     BoundsLiteral\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport {\n  BoundsLiteral,\n  FitBoundsService,\n  GeoPoint,\n  MapsAPILoader,\n} from '@ng-maps/core';\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport class GoogleMapsFitBoundsService extends FitBoundsService {\n  constructor(_loader: MapsAPILoader) {\n    super(_loader);\n  }\n\n  protected generateBounds(\n    includeInBounds: Map,\n  ): BoundsLiteral {\n    if (includeInBounds.size === 0) {\n      return null;\n    } else {\n      const bounds = new google.maps.LatLngBounds();\n      includeInBounds.forEach((b) => bounds.extend(b));\n      return bounds.toJSON();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleMapsMarkerManager.html":{"url":"injectables/GoogleMapsMarkerManager.html","title":"injectable - GoogleMapsMarkerManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleMapsMarkerManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/marker.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    MarkerManager\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                deleteMarker\n                            \n                            \n                                    Public\n                                updateAnimation\n                            \n                            \n                                    Public\n                                updateClickable\n                            \n                            \n                                    Public\n                                updateDraggable\n                            \n                            \n                                    Public\n                                updateIcon\n                            \n                            \n                                    Public\n                                updateIconLegacy\n                            \n                            \n                                    Public\n                                updateLabel\n                            \n                            \n                                    Public\n                                updateMarkerPosition\n                            \n                            \n                                    Public\n                                updateOpacity\n                            \n                            \n                                    Public\n                                updateTitle\n                            \n                            \n                                    Public\n                                updateVisible\n                            \n                            \n                                    Public\n                                updateZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/marker.manager.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string | Array, marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:88\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                            string | Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteMarker\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateAnimation\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAnimation(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateClickable\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateClickable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateDraggable\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDraggable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateIcon\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIcon(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateIconLegacy\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIconLegacy(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateLabel\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLabel(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateMarkerPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMarkerPosition(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateOpacity\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOpacity(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTitle(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateVisible\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateVisible(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateZIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateZIndex(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _markers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/lib/managers/marker.manager.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsMarkerComponent,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GoogleMapsMarkerManager extends MarkerManager {\n  protected _markers: Map = new Map();\n\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  public deleteMarker(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    if (m == null) {\n      // marker already deleted\n      return;\n    } else {\n      return this._zone.run(() => {\n        m.setMap(null);\n        this._markers.delete(marker);\n      });\n    }\n  }\n\n  public updateMarkerPosition(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setPosition({ lat: marker.latitude, lng: marker.longitude });\n  }\n\n  public updateTitle(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setTitle(marker.title);\n  }\n\n  public updateLabel(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setLabel(marker.label);\n  }\n\n  public updateDraggable(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setDraggable(marker.draggable);\n  }\n\n  public updateIconLegacy(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setIcon(marker.iconUrl);\n  }\n\n  public updateOpacity(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setOpacity(marker.opacity);\n  }\n\n  public updateVisible(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setVisible(marker.visible);\n  }\n\n  public updateZIndex(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setZIndex(marker.zIndex);\n  }\n\n  public updateClickable(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setClickable(marker.clickable);\n  }\n\n  public updateAnimation(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    if (typeof marker.animation === 'string') {\n      m.setAnimation(google.maps.Animation[marker.animation]);\n    } else {\n      m.setAnimation(marker.animation);\n    }\n  }\n\n  public createEventObservable(\n    eventName: string | Array,\n    marker: NgMapsMarkerComponent,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      const m = this._markers.get(marker);\n      if (typeof eventName === 'string') {\n        eventName = [eventName];\n      }\n      eventName.forEach((event) => {\n        m.addListener(event, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n\n  public updateIcon(marker: NgMapsMarkerComponent): void {\n    throw new Error('Method not implemented.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleMapsScriptLoader.html":{"url":"injectables/GoogleMapsScriptLoader.html","title":"injectable - GoogleMapsScriptLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleMapsScriptLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/google-maps-script-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    MapsAPILoader\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                    Protected\n                                _document\n                            \n                            \n                                    Protected\n                                    Readonly\n                                _SCRIPT_ID\n                            \n                            \n                                    Protected\n                                _scriptLoadingPromise\n                            \n                            \n                                    Protected\n                                _window\n                            \n                            \n                                    Protected\n                                    Readonly\n                                callbackName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                _getScriptSrc\n                            \n                            \n                                    Protected\n                                assignScriptLoadingPromise\n                            \n                            \n                                    Protected\n                                    Async\n                                checkScriptElement\n                            \n                            \n                                    Public\n                                configure\n                            \n                            \n                                    Protected\n                                    Async\n                                createScriptElement\n                            \n                            \n                                    Public\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: GoogleModuleOptions, document: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/google-maps-script-loader.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        GoogleModuleOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        _getScriptSrc\n                        \n                    \n                \n            \n            \n                \n                    \n                    _getScriptSrc(callbackName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    callbackName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        assignScriptLoadingPromise\n                        \n                    \n                \n            \n            \n                \n                    \n                    assignScriptLoadingPromise(scriptElement: HTMLScriptElement)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scriptElement\n                                    \n                                            HTMLScriptElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        checkScriptElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkScriptElement()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        configure\n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(config: GoogleModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:47\n                \n            \n\n\n            \n                \n                    If no configuration is provided at load time you can use this function to provide configuration at any time.\nLoading scripts will be postponed until a configuration is provided\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                GoogleModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nGoogleModuleOptions configuration needed for bootstrapping\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        createScriptElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    createScriptElement()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/lib/google-maps-script-loader.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/google-maps-script-loader.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        _SCRIPT_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'GoogleMapsApiScript'\n                    \n                \n                    \n                        \n                                Defined in src/lib/google-maps-script-loader.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _scriptLoadingPromise\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/google-maps-script-loader.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _window\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Window\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/google-maps-script-loader.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        callbackName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `LazyMapsAPILoader`\n                    \n                \n                    \n                        \n                                Defined in src/lib/google-maps-script-loader.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\nimport { MapsAPILoader } from '@ng-maps/core';\n\nimport {\n  GoogleMapsScriptProtocol,\n  GoogleModuleOptions,\n  GOOGLE_MAPS_API_CONFIG,\n} from './options';\n\n@Injectable()\nexport class GoogleMapsScriptLoader extends MapsAPILoader {\n  protected _scriptLoadingPromise: Promise;\n  protected _config: ReplaySubject =\n    new ReplaySubject(1);\n  protected _document: Document;\n  protected _window: Window;\n  protected readonly _SCRIPT_ID: string = 'GoogleMapsApiScript';\n  protected readonly callbackName: string = `LazyMapsAPILoader`;\n\n  constructor(\n    @Optional()\n    @Inject(GOOGLE_MAPS_API_CONFIG)\n    config: GoogleModuleOptions,\n    @Inject(DOCUMENT) document: any,\n  ) {\n    super();\n    if (config instanceof Promise) {\n      config.then((c) => {\n        this.configure(c);\n      });\n    } else if (typeof config === 'object') {\n      this.configure(config);\n    }\n    this._document = document as Document;\n    this._window = this._document.defaultView;\n  }\n\n  /**\n   * If no configuration is provided at load time you can use this function to provide configuration at any time.\n   * Loading scripts will be postponed until a configuration is provided\n   *\n   * @param config - {@link GoogleModuleOptions} configuration needed for bootstrapping\n   */\n  public configure(config: GoogleModuleOptions) {\n    this._config.next(config);\n    this._config.complete();\n  }\n\n  public load(): Promise {\n    if ((this._window as any).google && (this._window as any).google.maps) {\n      // Google maps already loaded on the page\n      return Promise.resolve();\n    } else if (this._scriptLoadingPromise) {\n      return this._scriptLoadingPromise;\n    } else {\n      this._scriptLoadingPromise = this.checkScriptElement();\n      return this._scriptLoadingPromise;\n    }\n  }\n\n  protected async checkScriptElement(): Promise {\n    let scriptElement: HTMLScriptElement = this._document.getElementById(\n      this._SCRIPT_ID,\n    ) as HTMLScriptElement;\n    if (scriptElement == null) {\n      scriptElement = await this.createScriptElement();\n    }\n    return this.assignScriptLoadingPromise(scriptElement);\n  }\n\n  protected assignScriptLoadingPromise(\n    scriptElement: HTMLScriptElement,\n  ): Promise {\n    this._document.body.appendChild(scriptElement);\n    return new Promise((resolve, reject) => {\n      this._window[this.callbackName] = () => resolve();\n\n      scriptElement.onerror = (error: Event) => reject(error);\n    });\n  }\n\n  protected async createScriptElement() {\n    const script = this._document.createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.id = this._SCRIPT_ID;\n    script.src = await this._getScriptSrc(this.callbackName);\n    return script;\n  }\n\n  protected async _getScriptSrc(callbackName: string): Promise {\n    const config = await this._config.toPromise();\n    const protocolType: GoogleMapsScriptProtocol =\n      (config && config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n    let protocol: string;\n\n    switch (protocolType) {\n      case GoogleMapsScriptProtocol.AUTO:\n        protocol = '';\n        break;\n      case GoogleMapsScriptProtocol.HTTP:\n        protocol = 'http:';\n        break;\n      case GoogleMapsScriptProtocol.HTTPS:\n        protocol = 'https:';\n        break;\n    }\n\n    const hostAndPath: string =\n      config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n    const queryParams: { [key: string]: string | Array } = {\n      v: config.apiVersion || 'quarterly',\n      callback: callbackName,\n      key: config.apiKey,\n      client: config.clientId,\n      channel: config.channel,\n      libraries: config.libraries,\n      region: config.region,\n      language: config.language,\n    };\n    const params: string = Object.keys(queryParams)\n      .filter((k: string) => queryParams[k] != null)\n      .filter(\n        (k: string) =>\n          // remove empty arrays\n          !Array.isArray(queryParams[k]) ||\n          (Array.isArray(queryParams[k]) && queryParams[k].length > 0),\n      )\n      .map((k: string) => {\n        // join arrays as comma seperated strings\n        const i = queryParams[k];\n        if (Array.isArray(i)) {\n          return { key: k, value: i.join(',') };\n        }\n        return { key: k, value: queryParams[k] };\n      })\n      .map(\n        (entry: { key: string; value: string }) =>\n          `${entry.key}=${entry.value}`,\n      )\n      .join('&');\n    return `${protocol}//${hostAndPath}?${params}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleModuleOptions.html":{"url":"interfaces/GoogleModuleOptions.html","title":"interface - GoogleModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GoogleModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apiKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            apiVersion\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            channel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clientId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hostAndPath\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            language\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            libraries\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            protocol\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            region\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps API Key (see:\nhttps://developers.google.com/maps/documentation/javascript/get-api-key)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Google Maps API version.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps channel name (for premium plans).\nA channel parameter is an optional parameter that allows you to track usage under your client\nID by assigning a distinct channel to each of your applications.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps client ID (for premium plans).\nWhen you have a Google Maps APIs Premium Plan license, you must authenticate\nyour application with either an API key or a client ID.\nThe Google Maps API will fail to load if both a client ID and an API key are included.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hostAndPath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hostAndPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Host and Path used for the  tag.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps API uses the browser's preferred language when displaying\ntextual information. If you wish to overwrite this behavior and force the API\nto use a given language, you can use this setting.\nSee https://developers.google.com/maps/documentation/javascript/basics#Language\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        libraries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        libraries:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines which Google Maps libraries should get loaded.\nFor available libraries see: https://developers.google.com/maps/documentation/javascript/libraries\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        protocol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        protocol:         GoogleMapsScriptProtocol\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GoogleMapsScriptProtocol\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Protocol used for the  tag.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The default bias for the map behavior is US.\nIf you wish to alter your application to serve different map tiles or bias the\napplication, you can overwrite the default behavior (US) by defining a region.\nSee https://developers.google.com/maps/documentation/javascript/basics#Region\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum GoogleMapsScriptProtocol {\n  HTTP = 1,\n  HTTPS = 2,\n  AUTO = 3,\n}\n\n/**\n * Token for the config of google maps module\n * Please provide an object of type {@link GoogleModuleOptions}.\n */\nexport const GOOGLE_MAPS_API_CONFIG = new InjectionToken\n>('angular-google-maps GOOGLE_MAPS_API_CONFIG');\n\nexport interface GoogleModuleOptions {\n  /**\n   * The Google Maps API Key (see:\n   * https://developers.google.com/maps/documentation/javascript/get-api-key)\n   */\n  apiKey?: string;\n\n  /**\n   * The Google Maps client ID (for premium plans).\n   * When you have a Google Maps APIs Premium Plan license, you must authenticate\n   * your application with either an API key or a client ID.\n   * The Google Maps API will fail to load if both a client ID and an API key are included.\n   */\n  clientId?: string;\n\n  /**\n   * The Google Maps channel name (for premium plans).\n   * A channel parameter is an optional parameter that allows you to track usage under your client\n   * ID by assigning a distinct channel to each of your applications.\n   */\n  channel?: string;\n\n  /**\n   * Google Maps API version.\n   */\n  apiVersion?: string;\n\n  /**\n   * Host and Path used for the `` tag.\n   */\n  hostAndPath?: string;\n\n  /**\n   * Protocol used for the `` tag.\n   */\n  protocol?: GoogleMapsScriptProtocol;\n\n  /**\n   * Defines which Google Maps libraries should get loaded.\n   * For available libraries see: https://developers.google.com/maps/documentation/javascript/libraries\n   */\n  libraries?: Array;\n\n  /**\n   * The default bias for the map behavior is US.\n   * If you wish to alter your application to serve different map tiles or bias the\n   * application, you can overwrite the default behavior (US) by defining a `region`.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Region\n   */\n  region?: string;\n\n  /**\n   * The Google Maps API uses the browser's preferred language when displaying\n   * textual information. If you wish to overwrite this behavior and force the API\n   * to use a given language, you can use this setting.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Language\n   */\n  language?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GooglePolygonManager.html":{"url":"injectables/GooglePolygonManager.html","title":"injectable - GooglePolygonManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GooglePolygonManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/polygon.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PolygonManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPolygon\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                deletePolygon\n                            \n                            \n                                    Public\n                                setPolygonOptions\n                            \n                            \n                                    Public\n                                    Async\n                                updatePolygon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/polygon.manager.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addPolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPolygon(path: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, path: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:65\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deletePolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolygon(paths: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPolygonOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolygonOptions(path: NgMapsPolygonDirective, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updatePolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolygon(polygon: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    polygon\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  MapsApiWrapper,\n  NgMapsPolygonDirective,\n  PolygonManager,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GooglePolygonManager extends PolygonManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  public addPolygon(path: NgMapsPolygonDirective) {\n    const polygonPromise = this._mapsWrapper.createPolygon({\n      clickable: path.clickable,\n      draggable: path.draggable,\n      editable: path.editable,\n      fillColor: path.fillColor,\n      fillOpacity: path.fillOpacity,\n      geodesic: path.geodesic,\n      paths: path.paths,\n      strokeColor: path.strokeColor,\n      strokeOpacity: path.strokeOpacity,\n      strokeWeight: path.strokeWeight,\n      visible: path.visible,\n      zIndex: path.zIndex,\n    });\n    this._polygons.set(path, polygonPromise);\n  }\n\n  public async updatePolygon(polygon: NgMapsPolygonDirective): Promise {\n    const item = await this._polygons.get(polygon);\n    if (item != null) {\n      this._zone.run(() => {\n        item.setPaths(polygon.paths);\n      });\n    }\n  }\n\n  public setPolygonOptions(\n    path: NgMapsPolygonDirective,\n    options: { [propName: string]: any },\n  ): Promise {\n    return this._polygons.get(path).then((l: google.maps.Polygon) => {\n      l.setOptions(options);\n    });\n  }\n\n  public deletePolygon(paths: NgMapsPolygonDirective): Promise {\n    const m = this._polygons.get(paths);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polygon) =>\n      this._zone.run(() => {\n        l.setMap(null);\n        this._polygons.delete(paths);\n      }),\n    );\n  }\n\n  public createEventObservable(\n    eventName: string,\n    path: NgMapsPolygonDirective,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      this._polygons.get(path).then((l: google.maps.Polygon) => {\n        l.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GooglePolylineManager.html":{"url":"injectables/GooglePolylineManager.html","title":"injectable - GooglePolylineManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GooglePolylineManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/polyline.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PolylineManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _convertPoints\n                            \n                            \n                                    Public\n                                addPolyline\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                deletePolyline\n                            \n                            \n                                    Public\n                                setPolylineOptions\n                            \n                            \n                                    Public\n                                updatePolylinePoints\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/polyline.manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _convertPoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    _convertPoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addPolyline\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:82\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deletePolyline\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPolylineOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolylineOptions(line: NgMapsPolyline, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updatePolylinePoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolylinePoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  MapsApiWrapper,\n  NgMapsPolyline,\n  NgMapsPolylinePoint,\n  PolylineManager,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GooglePolylineManager extends PolylineManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  protected _convertPoints(\n    line: NgMapsPolyline,\n  ): Array {\n    return line._getPoints().map(\n      (point: NgMapsPolylinePoint) =>\n        ({\n          lat: point.latitude,\n          lng: point.longitude,\n        } as google.maps.LatLngLiteral),\n    );\n  }\n\n  public addPolyline(line: NgMapsPolyline) {\n    const path = this._convertPoints(line);\n    const polylinePromise = this._mapsWrapper.createPolyline({\n      clickable: line.clickable,\n      draggable: line.draggable,\n      editable: line.editable,\n      geodesic: line.geodesic,\n      strokeColor: line.strokeColor,\n      strokeOpacity: line.strokeOpacity,\n      strokeWeight: line.strokeWeight,\n      visible: line.visible,\n      zIndex: line.zIndex,\n      icons: line.icons,\n      path,\n    });\n    this._polylines.set(line, polylinePromise);\n  }\n\n  public updatePolylinePoints(line: NgMapsPolyline): Promise {\n    const path = this._convertPoints(line);\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polyline) =>\n      this._zone.run(() => {\n        l.setPath(path);\n      }),\n    );\n  }\n\n  public setPolylineOptions(\n    line: NgMapsPolyline,\n    options: { [propName: string]: any },\n  ): Promise {\n    return this._polylines.get(line).then((l: google.maps.Polyline) => {\n      l.setOptions(options);\n    });\n  }\n\n  public deletePolyline(line: NgMapsPolyline): Promise {\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polyline) =>\n      this._zone.run(() => {\n        l.setMap(null);\n        this._polylines.delete(line);\n      }),\n    );\n  }\n\n  public createEventObservable(\n    eventName: string,\n    line: NgMapsPolyline,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      this._polylines.get(line).then((l: google.maps.Polyline) => {\n        l.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleRectangleManager.html":{"url":"injectables/GoogleRectangleManager.html","title":"injectable - GoogleRectangleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleRectangleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/rectangle.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    RectangleManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addRectangle\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Async\n                                getBounds\n                            \n                            \n                                    Public\n                                removeRectangle\n                            \n                            \n                                    Public\n                                setBounds\n                            \n                            \n                                    Public\n                                setDraggable\n                            \n                            \n                                    Public\n                                setEditable\n                            \n                            \n                                    Public\n                                setOptions\n                            \n                            \n                                    Public\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/rectangle.manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addRectangle\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:97\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeRectangle\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:47\n                \n            \n\n\n            \n                \n                    Removes the given rectangle from the map.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    setBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setDraggable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setEditable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(rectangle: NgMapsRectangleDirective, options: google.maps.RectangleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.RectangleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setVisible\n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  BoundsLiteral,\n  MapsApiWrapper,\n  NgMapsRectangleDirective,\n  RectangleManager,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GoogleRectangleManager extends RectangleManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  public addRectangle(rectangle: NgMapsRectangleDirective) {\n    this._rectangles.set(\n      rectangle,\n      this._apiWrapper.createRectangle(\n        {\n          north: rectangle.north,\n          east: rectangle.east,\n          south: rectangle.south,\n          west: rectangle.west,\n        },\n        {\n          // clickable: rectangle.clickable,\n          // draggable: rectangle.draggable,\n          // editable: rectangle.editable,\n          fillColor: rectangle.fillColor,\n          fillOpacity: rectangle.fillOpacity,\n          strokeColor: rectangle.strokeColor,\n          strokeOpacity: rectangle.strokeOpacity,\n          // strokePosition: rectangle.strokePosition,\n          strokeWeight: rectangle.strokeWeight,\n          visible: rectangle.visible,\n          zIndex: rectangle.zIndex,\n        },\n      ),\n    );\n  }\n\n  /**\n   * Removes the given rectangle from the map.\n   */\n  public removeRectangle(rectangle: NgMapsRectangleDirective): Promise {\n    return this._rectangles.get(rectangle).then((r) => {\n      r.setMap(null);\n      this._rectangles.delete(rectangle);\n    });\n  }\n\n  public setOptions(\n    rectangle: NgMapsRectangleDirective,\n    options: google.maps.RectangleOptions,\n  ): Promise {\n    return this._rectangles.get(rectangle).then((r) => r.setOptions(options));\n  }\n\n  public async getBounds(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise {\n    const r = await this._rectangles.get(rectangle);\n    return r.getBounds().toJSON();\n  }\n\n  public setBounds(rectangle: NgMapsRectangleDirective): Promise {\n    return this._rectangles.get(rectangle).then((r) =>\n      r.setBounds({\n        north: rectangle.north,\n        east: rectangle.east,\n        south: rectangle.south,\n        west: rectangle.west,\n      }),\n    );\n  }\n\n  public setEditable(rectangle: NgMapsRectangleDirective): Promise {\n    return this._rectangles\n      .get(rectangle)\n      .then((r) => r.setEditable(rectangle.editable));\n  }\n\n  public setDraggable(rectangle: NgMapsRectangleDirective): Promise {\n    return this._rectangles\n      .get(rectangle)\n      .then((r) => r.setDraggable(rectangle.draggable));\n  }\n\n  public setVisible(rectangle: NgMapsRectangleDirective): Promise {\n    return this._rectangles\n      .get(rectangle)\n      .then((r) => r.setVisible(rectangle.visible));\n  }\n\n  public createEventObservable(\n    eventName: string,\n    rectangle: NgMapsRectangleDirective,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      let listener: google.maps.MapsEventListener = null;\n      this._rectangles.get(rectangle).then((r) => {\n        listener = r.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgMapsGoogleModule.html":{"url":"modules/NgMapsGoogleModule.html","title":"module - NgMapsGoogleModule","body":"\n                   \n\n\n\n\n    Modules\n    NgMapsGoogleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgMapsGoogleModule\n\n\n\ncluster_NgMapsGoogleModule_exports\n\n\n\ncluster_NgMapsGoogleModule_declarations\n\n\n\ncluster_NgMapsGoogleModule_GoogleComponent_providers\n\n\n\n\nGoogleComponent\n\nGoogleComponent\n\n\n\nNgMapsGoogleModule\n\nNgMapsGoogleModule\n\nNgMapsGoogleModule -->\n\nGoogleComponent->NgMapsGoogleModule\n\n\n\n\n\nGoogleComponent \n\nGoogleComponent \n\nGoogleComponent  -->\n\nNgMapsGoogleModule->GoogleComponent \n\n\n\n\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }\n\nGoogleComponent -->\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }->GoogleComponent\n\n\n\n\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }\n\nGoogleComponent -->\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }->GoogleComponent\n\n\n\n\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }\n\nGoogleComponent -->\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }->GoogleComponent\n\n\n\n\n\n{ provide: CircleManager, useClass: GoogleCircleManager }\n\n{ provide: CircleManager, useClass: GoogleCircleManager }\n\nGoogleComponent -->\n\n{ provide: CircleManager, useClass: GoogleCircleManager }->GoogleComponent\n\n\n\n\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }\n\nGoogleComponent -->\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }->GoogleComponent\n\n\n\n\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }\n\nGoogleComponent -->\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }->GoogleComponent\n\n\n\n\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }\n\nGoogleComponent -->\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }->GoogleComponent\n\n\n\n\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }\n\nGoogleComponent -->\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }->GoogleComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/google.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GoogleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GoogleComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: GoogleModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.module.ts:25\n                \n            \n\n\n            \n                \n                    configure the NgMapsGoogleModule with a value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                GoogleModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRootFactory\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootFactory(factory: (args: Array) => void, deps?: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.module.ts:43\n                \n            \n\n\n            \n                \n                    configure the NgMapsGoogleModule with a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    factory\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    deps\n                                    \n                                            Array\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { MapsAPILoader, MAP_PROVIDER } from '@ng-maps/core';\n\nimport { GoogleMapsScriptLoader } from './google-maps-script-loader.service';\nimport { GoogleComponent } from './google.component';\nimport { GOOGLE_MAPS_API_CONFIG, GoogleModuleOptions } from './options';\n\n@NgModule({\n  declarations: [GoogleComponent],\n  exports: [GoogleComponent],\n  providers: [\n    { provide: MapsAPILoader, useClass: GoogleMapsScriptLoader },\n    {\n      provide: MAP_PROVIDER,\n      useValue: 'GoogleMaps',\n    },\n  ],\n})\nexport class NgMapsGoogleModule {\n  /**\n   * configure the NgMapsGoogleModule with a value\n   * @param config\n   */\n  public static forRoot(\n    config: GoogleModuleOptions,\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgMapsGoogleModule,\n      providers: [\n        {\n          provide: GOOGLE_MAPS_API_CONFIG,\n          useValue: config,\n        },\n      ],\n    };\n  }\n\n  /**\n   * configure the NgMapsGoogleModule with a factory\n   * @param factory\n   */\n  public static forRootFactory(\n    factory: (...args: Array) => GoogleModuleOptions,\n    deps?: Array,\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgMapsGoogleModule,\n      providers: [\n        {\n          provide: GOOGLE_MAPS_API_CONFIG,\n          useFactory: factory,\n          deps,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nThis file was generated using @jscutlery/semver.\n4.0.0 (2022-12-30)\n⚠ BREAKING CHANGES\n\nUpdated google.maps types which might change API\n\nBug Fixes\n\ngoogle: remove console.log (a7fb44a)\n\nCode Refactoring\n\nupdate dependencies and adjust types usage (8d70d41)\n\n3.0.1 (2022-10-06)\nBug Fixes\n\nbuild issues (1d7c3d7)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/google-maps-api-wrapper.ts\n            \n            injectable\n            GoogleMapsAPIWrapper\n            \n                27 %\n                (8/29)\n            \n        \n        \n            \n                \n                src/lib/google-maps-fit-bounds.service.ts\n            \n            injectable\n            GoogleMapsFitBoundsService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/lib/google-maps-script-loader.service.ts\n            \n            injectable\n            GoogleMapsScriptLoader\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/lib/google.component.ts\n            \n            component\n            GoogleComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lib/managers/circle.manager.ts\n            \n            injectable\n            GoogleCircleManager\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/lib/managers/info-window.manager.ts\n            \n            injectable\n            GoogleInfoWindowManager\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/lib/managers/marker.manager.ts\n            \n            injectable\n            GoogleMapsMarkerManager\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/lib/managers/polygon.manager.ts\n            \n            injectable\n            GooglePolygonManager\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/managers/polyline.manager.ts\n            \n            injectable\n            GooglePolylineManager\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/managers/rectangle.manager.ts\n            \n            injectable\n            GoogleRectangleManager\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/lib/options.ts\n            \n            interface\n            GoogleModuleOptions\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/lib/options.ts\n            \n            variable\n            GOOGLE_MAPS_API_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.0.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^14.0.0  || ^15.0.0\n        \n            @angular/core : ^14.0.0  || ^15.0.0\n        \n            @types/google.maps : ~3.51.0\n        \n            @ng-maps/core : ^4.0.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GoogleMapsScriptProtocol   (src/.../options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/options.ts\n    \n        \n            \n                \n                    \n                        \n                        GoogleMapsScriptProtocol\n                    \n                \n                        \n                            \n                                 HTTP\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 HTTPS\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 AUTO\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ng-maps/google\n@ng-maps/google is a simple, modular and tree-shakable library for displaying google-maps inside an angular application\nInstallation\n\nNpm: npm install @ng-maps/google\nYarn: yarn add @ng-maps/google\n\nThen you will need to install typings for google maps as a dev dependency\n\nNpm: npm install -D @types/googlemaps\nYarn: yarn add -D @types/googlemaps\n\nAdd NgMapsGoogleModule to your AppModule.\nProvide your API key with the token provider\n{\n  provide: GOOGLE_MAPS_API_CONFIG,\n  useValue: {\n    apiKey: 'YOUR_API_KEY'\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgMapsGoogleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgMapsGoogleModule\n\n\n\ncluster_NgMapsGoogleModule_declarations\n\n\n\ncluster_NgMapsGoogleModule_GoogleComponent_providers\n\n\n\ncluster_NgMapsGoogleModule_exports\n\n\n\n\nGoogleComponent\n\nGoogleComponent\n\n\n\nNgMapsGoogleModule\n\nNgMapsGoogleModule\n\nNgMapsGoogleModule -->\n\nGoogleComponent->NgMapsGoogleModule\n\n\n\n\n\nGoogleComponent \n\nGoogleComponent \n\nGoogleComponent  -->\n\nNgMapsGoogleModule->GoogleComponent \n\n\n\n\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }\n\nGoogleComponent -->\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }->GoogleComponent\n\n\n\n\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }\n\nGoogleComponent -->\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }->GoogleComponent\n\n\n\n\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }\n\nGoogleComponent -->\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }->GoogleComponent\n\n\n\n\n\n{ provide: CircleManager, useClass: GoogleCircleManager }\n\n{ provide: CircleManager, useClass: GoogleCircleManager }\n\nGoogleComponent -->\n\n{ provide: CircleManager, useClass: GoogleCircleManager }->GoogleComponent\n\n\n\n\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }\n\nGoogleComponent -->\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }->GoogleComponent\n\n\n\n\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }\n\nGoogleComponent -->\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }->GoogleComponent\n\n\n\n\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }\n\nGoogleComponent -->\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }->GoogleComponent\n\n\n\n\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }\n\nGoogleComponent -->\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }->GoogleComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 4.0.0\n        \n            Keywords : angular, ng, google maps, googlemaps, maps, map, google, ng2, angular2, agm\n        \n            Homepage : https://ng-maps.github.io/core\n        \n            Bugs : https://github.com/ng-maps/ng-maps/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/ng-maps/ng-maps.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GOOGLE_MAPS_API_CONFIG   (src/.../options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GOOGLE_MAPS_API_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken\n>('angular-google-maps GOOGLE_MAPS_API_CONFIG')\n                    \n                \n\n            \n                \n                    Token for the config of google maps module\nPlease provide an object of type GoogleModuleOptions.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
