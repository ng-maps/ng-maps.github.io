var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/injectables/GoogleCircleManager.html",[0,0.086,1,1.118]],["body/injectables/GoogleCircleManager.html",[0,0.088,1,1.151,2,0.492,3,0.356,4,0.356,5,0.297,6,1.439,7,0.744,8,1.863,9,0.242,10,0.744,11,1.932,12,2.724,13,1.388,14,2.008,15,2.624,16,2.724,17,2.724,18,2.724,19,2.724,20,2.176,21,2.176,22,2.189,23,2.724,24,2.176,25,0.492,26,0.997,27,1,28,1.341,29,1.341,30,1.313,31,1.801,32,1.326,33,0.058,34,1.123,35,0.808,36,1.123,37,0.659,38,2.724,39,5.293,40,1.801,41,5.099,42,1.298,43,0.571,44,0.761,45,1.16,46,1.801,47,1.151,48,1.151,49,1.388,50,1.801,51,1.801,52,2.135,53,2.724,54,1.801,55,2.724,56,1.801,57,2.724,58,1.801,59,2.176,60,1.545,61,0.997,62,2.724,63,1.801,64,2.724,65,1.801,66,2.724,67,1.801,68,1.801,69,1.748,70,3.285,71,1.801,72,1.2,73,2.176,74,2.724,75,1.801,76,2.724,77,1.801,78,0.65,79,0.297,80,1.2,81,1.022,82,0.297,83,0.297,84,1.151,85,0.659,86,0.356,87,0.421,88,0.659,89,1.801,90,1.801,91,1.801,92,1.022,93,1.801,94,1.801,95,1.33,96,2.724,97,1.33,98,2.724,99,1.022,100,1.801,101,1.022,102,1.801,103,1.022,104,1.801,105,1.2,106,1.801,107,1.2,108,1.801,109,1.801,110,1.801,111,1.022,112,1.801,113,1.022,114,1.801,115,1.439,116,1.801,117,1.022,118,1.801,119,1.022,120,1.801,121,0.879,122,1.801,123,0.855,124,3.662,125,1.788,126,3.662,127,1.801,128,1.801,129,1.801,130,1.801,131,1.801,132,1.801,133,2.176,134,1.2,135,1.022,136,3.285,137,2.724,138,1.486,139,1.801,140,1.801,141,1.801,142,3.662,143,1.801,144,3.285,145,3.285,146,3.285,147,1.801,148,1.801,149,1.801,150,1.801,151,1.801,152,0.356,153,0.761,154,2.189,155,1.439,156,0.863,157,1.801,158,0.761,159,0.761,160,0.761,161,1.439,162,0.019,163,0.029,164,0.019]],["title/components/GoogleComponent.html",[165,1.502,166,1.293]],["body/components/GoogleComponent.html",[1,1.386,3,0.355,4,0.355,5,0.296,7,0.743,8,1.861,9,0.242,10,0.743,14,1.386,25,0.743,26,0.658,27,1.129,28,1.339,29,1.339,30,1.207,32,0.491,33,0.058,34,1.003,35,0.296,36,0.42,37,0.996,42,1.172,43,1.36,61,1.657,78,0.912,79,0.296,81,1.543,82,0.296,83,0.296,86,0.355,87,0.42,88,0.658,95,1.328,97,1.328,123,1.057,162,0.019,163,0.029,164,0.019,165,1.861,166,1.786,167,2.72,168,3.281,169,1.798,170,1.436,171,1.436,172,3.281,173,1.798,174,1.812,175,1.807,176,3.289,177,2.075,178,2.345,179,1.386,180,1.602,181,1.386,182,1.861,183,1.386,184,1.861,185,1.386,186,1.861,187,1.386,188,1.861,189,1.386,190,3.281,191,3.281,192,3.281,193,3.281,194,3.281,195,4.134,196,3.281,197,2.621,198,3.281,199,3.281,200,2.72,201,2.479,202,3.658,203,3.658,204,3.658,205,3.658,206,3.658,207,3.658,208,3.658,209,3.658,210,1.798,211,1.798,212,1.798,213,1.798,214,1.798,215,1.798,216,1.798,217,1.798,218,0.996,219,0.743,220,1.02,221,1.798,222,1.198,223,1.798,224,1.798,225,1.798,226,1.798,227,1.798,228,1.798,229,1.798,230,1.798,231,4.293,232,4.293,233,1.798,234,3.929,235,1.798,236,2.72,237,1.798,238,2.72,239,1.798,240,1.798,241,1.436,242,4.293,243,1.798,244,1.798,245,1.798,246,1.798,247,1.798,248,1.798,249,1.798,250,1.798,251,1.798,252,1.798,253,1.436,254,1.798,255,1.798,256,1.798,257,1.798,258,1.798,259,1.543,260,1.798,261,1.798,262,1.328,263,4.134,264,1.798,265,1.812,266,1.798,267,1.798,268,1.798,269,0.878,270,1.798,271,1.798,272,1.798,273,1.798,274,1.798,275,1.798,276,1.798,277,1.798,278,1.798,279,0.878,280,1.798,281,1.798,282,1.798,283,1.798,284,1.198,285,2.72,286,2.72,287,1.798,288,3.658,289,1.798,290,1.798,291,1.798]],["title/injectables/GoogleInfoWindowManager.html",[0,0.086,189,1.118]],["body/injectables/GoogleInfoWindowManager.html",[0,0.097,2,0.559,3,0.592,4,0.405,5,0.337,7,0.818,9,0.275,10,0.818,11,1.907,13,1.497,14,1.979,22,2.36,25,0.818,26,0.749,27,1.065,28,1.428,29,1.428,30,1.279,32,1.3,33,0.058,34,1.094,35,0.785,36,1.094,37,1.096,42,1.254,43,1.419,44,0.864,45,1.122,47,1.265,48,1.265,49,1.753,52,1.647,60,1.699,61,0.749,69,1.753,73,2.392,78,0.701,79,0.337,81,1.699,82,0.337,83,0.337,84,1.265,85,0.749,86,0.405,87,0.478,88,0.749,95,1.462,97,1.462,121,0.999,123,1.14,125,1.904,135,1.699,138,1.122,152,0.405,153,0.864,154,1.996,156,1.122,158,0.864,159,1.265,160,0.864,162,0.021,163,0.031,164,0.021,180,1.904,188,2.01,189,1.265,197,1.634,218,1.096,219,0.818,253,2.392,265,1.996,292,3.804,293,1.634,294,2.995,295,2.995,296,3.543,297,2.995,298,2.995,299,2.995,300,3.899,301,2.046,302,2.995,303,5.224,304,2.046,305,4.971,306,2.995,307,2.046,308,2.046,309,2.995,310,2.046,311,2.046,312,2.995,313,2.046,314,2.046,315,3.899,316,2.046,317,2.995,318,2.046,319,2.995,320,2.046,321,2.995,322,4.479,323,1.634,324,1.363,325,1.634,326,2.046,327,2.046,328,2.046,329,3.543,330,3.543,331,2.046,332,3.543,333,2.046,334,2.046,335,2.995,336,2.392,337,2.046,338,2.995,339,2.046,340,2.046,341,2.046,342,2.046,343,2.046,344,2.046,345,2.046,346,2.046,347,2.046,348,2.046,349,2.046,350,2.046]],["title/injectables/GoogleMapsFitBoundsService.html",[0,0.086,179,1.118]],["body/injectables/GoogleMapsFitBoundsService.html",[0,0.135,2,0.904,3,0.655,4,0.655,5,0.546,7,1.135,9,0.446,10,1.135,25,0.904,30,1.135,32,1.135,33,0.057,34,0.971,35,0.686,36,0.971,42,0.904,61,1.798,72,2.207,78,0.822,79,0.546,80,3.028,81,1.879,82,0.546,83,0.546,86,0.655,87,0.774,123,0.774,138,1.317,152,0.655,156,1.049,162,0.035,163,0.044,164,0.035,178,2.786,179,1.757,201,2.219,219,1.241,222,3.028,259,1.879,351,3.028,352,2.645,353,4.158,354,4.158,355,4.545,356,4.158,357,4.545,358,4.158,359,3.176,360,3.312,361,3.312,362,3.312,363,3.312,364,4.158,365,3.312,366,3.312,367,3.312,368,3.312,369,3.312,370,3.312]],["title/injectables/GoogleMapsMarkerManager.html",[0,0.086,181,1.118]],["body/injectables/GoogleMapsMarkerManager.html",[0,0.091,2,0.514,3,0.372,4,0.372,5,0.311,7,0.769,9,0.253,10,0.769,11,1.947,13,1.425,25,0.514,26,1.031,27,1.022,28,1.371,29,1.371,30,1.348,32,1.348,33,0.058,34,1.144,35,0.82,36,1.144,37,0.689,42,1.325,43,1.636,44,0.796,45,1.27,47,1.19,48,1.694,49,1.425,61,1.371,78,0.667,79,0.311,82,0.311,83,0.311,84,1.19,85,0.689,86,0.372,87,0.44,88,0.689,92,1.598,95,0.919,97,0.919,123,1.121,135,1.598,138,1.069,152,0.741,153,0.796,156,0.597,158,0.796,159,1.19,160,0.796,162,0.02,163,0.03,164,0.02,180,1.647,181,1.19,201,1.647,269,1.647,279,0.919,324,1.255,325,1.504,336,3.974,371,1.504,372,3.374,373,2.817,374,2.817,375,2.817,376,2.817,377,2.817,378,2.817,379,2.817,380,2.817,381,2.817,382,2.817,383,2.817,384,2.817,385,1.883,386,5.324,387,1.883,388,2.817,389,1.883,390,2.817,391,1.883,392,2.817,393,1.883,394,2.817,395,1.883,396,2.817,397,1.883,398,2.817,399,1.883,400,2.817,401,1.883,402,2.817,403,1.883,404,2.817,405,1.883,406,2.817,407,1.883,408,2.817,409,1.883,410,2.817,411,1.883,412,1.068,413,1.883,414,3.233,415,4.799,416,1.883,417,1.883,418,1.883,419,1.883,420,1.883,421,1.883,422,1.883,423,1.883,424,1.883,425,1.883,426,1.883,427,1.883,428,1.883,429,1.883,430,1.883,431,1.883,432,1.883,433,1.883,434,1.883,435,1.883,436,1.883]],["title/injectables/GoogleMapsScriptLoader.html",[0,0.086,437,1.502]],["body/injectables/GoogleMapsScriptLoader.html",[0,0.084,2,0.459,3,0.332,4,0.332,5,0.277,7,0.706,9,0.226,10,0.706,11,1.474,14,1.876,25,0.706,30,1.294,32,0.965,33,0.058,34,0.825,35,0.748,36,0.941,42,1.099,43,0.533,45,1.557,52,1.948,69,0.71,72,1.12,78,0.754,79,0.277,82,0.277,83,0.277,85,0.616,86,0.332,87,0.393,92,1.466,123,0.98,125,1.537,133,1.343,134,1.12,135,0.954,138,1.461,152,0.623,156,0.819,162,0.018,163,0.027,164,0.018,175,0.946,201,2.531,218,0.616,219,1.32,259,0.954,265,1.12,269,0.821,279,1.966,323,2.065,324,1.12,351,3.192,359,2.098,412,1.786,437,1.466,438,3.25,439,1.343,440,3.148,441,3.148,442,4.027,443,3.148,444,3.148,445,3.148,446,3.814,447,2.585,448,3.148,449,3.534,450,2.585,451,3.534,452,3.217,453,1.681,454,2.114,455,4.329,456,2.585,457,2.884,458,2.585,459,1.681,460,1.681,461,3.814,462,1.681,463,3.814,464,1.681,465,2.585,466,1.681,467,4.194,468,3.534,469,3.534,470,2.065,471,2.585,472,2.585,473,2.585,474,2.585,475,2.585,476,1.681,477,1.681,478,3.814,479,1.466,480,1.681,481,1.681,482,2.585,483,1.681,484,1.681,485,1.681,486,2.585,487,1.343,488,1.681,489,1.722,490,0.821,491,1.681,492,1.681,493,1.681,494,1.681,495,1.681,496,1.681,497,1.12,498,1.681,499,1.681,500,3.148,501,1.681,502,1.681,503,1.681,504,1.681,505,1.681,506,1.681,507,1.681,508,1.343,509,1.681,510,1.12,511,3.534,512,1.681,513,1.681,514,2.585,515,1.681,516,1.681,517,1.681,518,1.681,519,1.681,520,1.681,521,1.681,522,1.681,523,1.681,524,1.681,525,1.681,526,1.681,527,1.681,528,1.681,529,2.585,530,1.681,531,1.681,532,1.681,533,1.681,534,1.681,535,2.585,536,1.681,537,2.585,538,2.823,539,1.681,540,3.148,541,1.681,542,3.148,543,1.681,544,1.12,545,1.12,546,1.343,547,1.681,548,1.681,549,1.681,550,2.541,551,1.681,552,1.681,553,1.681,554,1.681,555,1.681,556,1.343,557,1.681,558,1.343,559,1.681,560,1.343,561,1.681,562,1.343,563,1.681,564,1.343,565,1.681,566,1.681,567,1.681,568,2.585,569,3.148,570,1.681,571,1.681,572,2.585,573,2.585,574,1.681,575,1.681,576,2.585,577,1.681,578,1.681,579,1.681,580,1.681,581,2.585,582,1.681,583,1.681,584,1.681,585,1.681]],["title/interfaces/GoogleModuleOptions.html",[262,1.293,454,1.293]],["body/interfaces/GoogleModuleOptions.html",[3,0.414,4,0.414,5,0.346,9,0.282,33,0.057,34,0.712,35,0.79,36,1.204,45,1.64,60,1.729,61,1.444,78,0.414,79,0.346,86,0.71,92,1.729,123,0.489,134,1.396,152,0.414,162,0.022,163,0.032,164,0.022,175,0.767,218,1.872,219,1.396,220,2.87,262,1.023,269,1.754,412,2.237,452,2.434,454,1.754,457,1.396,470,3.15,479,1.189,489,2.628,490,1.488,497,1.396,508,2.434,538,3.492,544,1.396,545,1.396,546,3.15,550,3.08,556,3.693,558,3.825,560,3.693,562,3.492,564,3.693,586,2.095,587,1.189,588,3.15,589,3.944,590,3.944,591,4.623,592,3.048,593,3.048,594,4.372,595,3.944,596,3.944,597,3.048,598,3.048,599,3.048,600,3.048,601,4.623,602,3.048,603,3.048,604,3.048,605,3.048,606,3.048,607,3.048,608,3.048,609,3.048,610,3.492,611,3.048,612,3.048,613,3.048,614,3.048,615,2.031,616,3.944,617,3.944,618,3.048,619,3.048,620,3.048,621,2.434,622,3.048,623,3.048,624,3.944,625,3.944,626,4.372,627,3.048,628,3.048,629,3.048,630,3.048,631,3.048,632,3.048,633,3.944,634,3.048,635,3.048,636,3.048,637,3.048,638,3.048,639,3.048,640,2.434,641,2.095,642,1.674,643,1.674,644,1.674,645,1.396,646,1.023,647,1.674,648,1.396]],["title/injectables/GooglePolygonManager.html",[0,0.086,183,1.118]],["body/injectables/GooglePolygonManager.html",[0,0.111,2,0.675,3,0.489,4,0.489,5,0.407,7,0.935,9,0.333,10,0.935,11,1.886,13,1.662,14,1.662,25,0.675,26,1.254,27,1.16,28,1.555,29,1.555,30,1.26,32,1.292,33,0.058,34,1.078,35,0.808,36,1.078,37,0.905,42,1.218,43,0.783,44,1.044,45,1.346,47,1.447,48,1.447,49,1.662,52,1.95,69,1.662,78,0.778,79,0.407,82,0.407,83,0.407,84,1.447,85,0.905,86,0.489,87,0.577,88,0.905,99,1.402,101,1.402,103,1.402,105,1.646,107,1.646,111,1.402,113,1.402,117,1.402,119,1.402,121,1.206,123,0.919,125,1.206,138,1.413,152,0.489,153,1.044,156,1.085,158,1.044,159,1.662,160,1.044,162,0.026,163,0.036,164,0.026,182,2.231,183,1.447,414,2.283,510,1.646,615,3.076,649,1.974,650,3.426,651,3.426,652,3.933,653,3.426,654,2.471,655,3.426,656,5.178,657,2.471,658,2.471,659,3.426,660,2.471,661,3.426,662,2.471,663,2.737,664,2.471,665,3.426,666,2.471,667,2.471,668,3.426,669,2.471,670,2.471,671,2.471,672,2.471,673,2.471,674,2.471,675,1.974,676,2.471,677,2.471,678,2.471,679,2.471,680,2.471,681,2.471,682,2.471,683,2.471,684,3.426,685,2.471,686,2.471,687,1.974,688,3.426,689,3.933,690,1.974,691,2.471,692,1.974,693,1.974,694,2.471,695,1.974]],["title/injectables/GooglePolylineManager.html",[0,0.086,185,1.118]],["body/injectables/GooglePolylineManager.html",[0,0.106,2,0.633,3,0.458,4,0.458,5,0.382,7,0.894,9,0.312,10,0.894,11,1.869,13,1.605,25,0.633,26,1.199,27,1.127,28,1.512,29,1.512,30,1.269,32,1.296,33,0.058,34,1.086,35,0.807,36,1.086,37,0.848,42,1.235,43,0.734,44,0.979,45,1.308,47,1.384,48,1.384,49,1.605,52,1.911,69,1.605,78,0.751,79,0.382,82,0.382,83,0.382,84,1.384,85,0.848,86,0.458,87,0.541,88,0.848,95,1.131,97,1.131,99,1.314,101,1.314,103,1.314,111,1.314,113,1.314,117,1.314,119,1.314,121,1.131,123,1.018,138,1.53,152,0.458,153,0.979,156,1.038,158,0.979,159,1.605,160,0.979,162,0.024,163,0.034,164,0.024,184,2.155,185,1.384,201,1.855,241,1.851,269,1.599,414,2.751,510,2.182,615,2.531,663,2.616,675,1.851,687,1.851,690,1.851,692,2.616,693,1.851,695,1.851,696,1.851,697,3.799,698,3.275,699,3.275,700,3.799,701,3.275,702,2.317,703,2.317,704,5.2,705,2.317,706,4.895,707,3.275,708,2.317,709,2.317,710,3.275,711,2.317,712,2.317,713,2.317,714,3.275,715,2.317,716,3.275,717,2.317,718,2.317,719,2.317,720,3.275,721,3.275,722,2.317,723,2.317,724,2.317,725,2.317,726,2.317,727,2.317,728,2.317,729,2.317,730,2.317,731,2.317,732,2.317,733,2.317,734,2.317,735,3.275,736,4.129,737,2.317,738,3.275,739,2.317]],["title/injectables/GoogleRectangleManager.html",[0,0.086,187,1.118]],["body/injectables/GoogleRectangleManager.html",[0,0.098,2,0.566,3,0.41,4,0.41,5,0.342,7,0.825,9,0.279,10,0.825,11,1.924,13,1.507,14,1.507,15,2.85,20,2.414,21,2.414,22,2.377,24,2.414,25,0.566,26,1.107,27,1.071,28,1.436,29,1.436,30,1.304,32,1.321,33,0.058,34,1.116,35,0.798,36,1.116,37,0.758,42,1.283,43,0.656,44,0.875,45,1.13,47,1.277,48,1.277,49,1.507,52,2.105,59,2.414,60,1.715,61,1.107,69,1.507,78,0.706,79,0.342,80,1.38,82,0.342,83,0.342,84,1.277,85,0.758,86,0.41,87,0.484,88,0.758,99,1.175,101,1.175,103,1.175,105,1.38,107,1.38,111,1.175,113,1.175,115,1.655,117,1.175,119,1.175,121,1.012,123,0.484,125,1.012,138,1.565,152,0.41,153,0.875,154,2.377,155,1.655,156,0.958,158,0.875,159,0.875,160,0.875,161,1.655,162,0.022,163,0.032,164,0.022,186,2.024,187,1.277,740,1.655,741,3.022,742,3.022,743,3.022,744,2.072,745,3.022,746,5.267,747,2.072,748,5.05,749,2.072,750,2.072,751,2.072,752,3.022,753,2.072,754,3.022,755,2.072,756,3.022,757,2.072,758,3.022,759,2.072,760,2.072,761,3.568,762,2.072,763,3.022,764,2.072,765,2.072,766,2.072,767,3.022,768,3.022,769,3.022,770,3.022,771,3.022,772,3.022,773,3.022,774,3.022,775,2.072,776,2.072,777,2.072,778,2.072,779,2.072,780,2.072,781,2.072,782,2.072,783,2.072,784,2.072,785,2.072,786,4.496,787,2.072,788,2.072,789,2.072,790,2.072,791,2.072,792,2.072,793,2.072,794,2.072,795,2.072,796,2.072,797,2.072]],["title/modules/NgMapsGoogleModule.html",[646,1.293,798,1.293]],["body/modules/NgMapsGoogleModule.html",[1,1.721,3,0.523,4,0.523,5,0.436,8,2.311,27,1.112,33,0.058,78,0.864,79,0.436,82,0.436,83,0.436,86,0.523,87,0.617,162,0.028,163,0.038,164,0.028,166,2.623,174,2.391,175,1.961,176,3.563,177,2.311,178,2.311,179,1.721,180,1.989,181,1.721,182,2.311,183,1.721,184,2.311,185,1.721,186,2.311,187,1.721,188,2.311,189,1.721,218,0.968,219,0.722,284,1.761,359,2.391,437,2.036,438,1.761,646,1.291,798,2.353,799,1.761,800,1.5,801,3.254,802,2.111,803,3.254,804,2.111,805,2.111,806,2.111,807,2.111,808,2.866,809,2.111,810,2.111,811,2.643,812,3.588,813,3.588,814,2.643,815,2.643,816,2.643,817,2.111,818,2.643]],["title/coverage.html",[819,2.869]],["body/coverage.html",[0,0.17,1,1.477,5,0.577,6,2.793,33,0.056,35,0.577,152,0.691,162,0.037,163,0.045,164,0.037,165,1.983,166,1.707,171,2.793,177,1.983,179,1.477,181,1.477,183,1.477,185,1.477,187,1.477,189,1.477,219,1.272,220,1.983,222,2.329,259,2.757,262,1.707,292,2.793,293,2.793,351,3.103,352,2.793,371,2.793,437,1.983,438,2.329,439,2.793,454,1.707,490,1.707,587,2.44,649,2.793,696,2.793,740,2.793,819,2.793,820,3.496,821,3.496,822,3.496,823,3.496,824,3.496,825,3.496,826,3.496,827,3.496,828,4.301,829,4.301,830,3.496,831,3.496,832,3.496,833,3.496,834,3.496,835,3.496,836,2.793,837,3.496,838,3.496,839,3.496,840,3.496,841,3.496,842,3.496,843,3.496,844,3.496]],["title/dependencies.html",[800,1.803,845,2.221]],["body/dependencies.html",[33,0.056,79,0.669,82,0.669,83,0.669,162,0.043,163,0.049,164,0.043,487,3.241,800,2.667,846,4.057,847,4.057,848,4.057,849,4.7,850,3.241,851,4.057,852,4.057]],["title/miscellaneous/enumerations.html",[853,1.26,854,2.539]],["body/miscellaneous/enumerations.html",[9,0.546,33,0.055,162,0.043,163,0.049,164,0.043,279,2.423,479,2.302,489,3.132,544,2.703,545,2.703,587,2.302,642,3.241,643,3.241,644,3.241,853,2.302,854,3.241,855,3.241]],["title/index.html",[9,0.299,856,2.221,857,2.221]],["body/index.html",[33,0.054,82,0.818,83,0.736,162,0.039,163,0.047,164,0.039,170,2.97,175,1.634,218,1.634,219,1.219,220,2.109,490,1.815,550,2.477,588,2.97,610,2.97,621,2.97,645,2.477,648,2.477,798,1.815,817,2.97,850,3.566,858,3.718,859,3.718,860,3.718,861,3.718,862,3.718,863,3.718,864,4.962,865,4.784,866,4.464,867,4.962,868,4.784,869,3.718,870,3.718,871,3.718,872,3.718,873,4.464,874,3.718,875,3.718,876,3.718]],["title/modules.html",[799,2.393]],["body/modules.html",[33,0.05,162,0.044,163,0.05,164,0.044,798,2.04,799,2.784,877,4.178,878,4.178,879,4.178,880,4.178]],["title/overview.html",[881,2.869]],["body/overview.html",[1,1.792,2,0.782,8,2.406,27,1.158,33,0.058,162,0.03,163,0.04,164,0.03,165,1.625,166,2.619,174,1.908,175,1.967,176,3.58,177,2.406,178,2.406,179,1.792,180,2.071,181,1.792,182,2.406,183,1.792,184,2.406,185,1.792,186,2.406,187,1.792,188,2.406,189,1.792,262,1.398,284,1.908,479,2.406,646,1.849,798,2.292,800,1.625,801,2.287,802,2.287,803,2.287,804,2.287,805,2.287,806,2.287,807,2.287,808,3.024,809,2.287,810,2.287,836,2.287,881,2.287]],["title/miscellaneous/variables.html",[853,1.26,882,2.539]],["body/miscellaneous/variables.html",[9,0.538,33,0.052,35,0.659,152,0.79,162,0.042,163,0.049,164,0.042,175,1.463,218,1.705,219,1.272,279,1.951,412,2.266,454,1.951,457,2.662,490,2.408,497,2.662,587,2.266,640,3.191,645,2.662,646,1.951,647,3.191,648,2.662,853,2.266,855,3.191,882,3.191]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":259,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{},"coverage.html":{}}}],["0/16",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":479,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1/1",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["13.0.0",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":642,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.0",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["27",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":644,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["3.43.0",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["8/29",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":836,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["9/10",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["_config",{"_index":440,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_convertpoints",{"_index":697,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["_convertpoints(line",{"_index":703,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["_document",{"_index":441,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_fitboundsservice",{"_index":209,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_getscriptsrc",{"_index":447,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_getscriptsrc(callbackname",{"_index":458,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_handleboundschange",{"_index":202,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handleidleevent",{"_index":203,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handlemapcenterchange",{"_index":204,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handlemapmouseevents",{"_index":205,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handlemaptypeidchange",{"_index":206,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handlemapzoomchange",{"_index":207,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handletilesloadedevent",{"_index":208,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_loader",{"_index":361,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["_mapswrapper",{"_index":37,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["_markermanager",{"_index":300,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["_markers",{"_index":372,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["_script_id",{"_index":443,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_scriptloadingpromise",{"_index":444,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_window",{"_index":445,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_zone",{"_index":28,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["actual_component",{"_index":291,"title":{},"body":{"components/GoogleComponent.html":{}}}],["add",{"_index":868,"title":{},"body":{"index.html":{}}}],["addcircle",{"_index":12,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["addcircle(circle",{"_index":38,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["addinfowindow",{"_index":294,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["addinfowindow(infowindow",{"_index":302,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["addpolygon",{"_index":650,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["addpolygon(path",{"_index":655,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["addpolyline",{"_index":698,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["addpolyline(line",{"_index":707,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["addrectangle",{"_index":741,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["addrectangle(rectangle",{"_index":745,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["allows",{"_index":597,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["already",{"_index":324,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["alter",{"_index":634,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["angular",{"_index":648,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":487,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"dependencies.html":{}}}],["angular/core",{"_index":79,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"dependencies.html":{}}}],["any).google",{"_index":506,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["any).google.maps",{"_index":507,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["api",{"_index":220,"title":{},"body":{"components/GoogleComponent.html":{},"interfaces/GoogleModuleOptions.html":{},"coverage.html":{},"index.html":{}}}],["apikey",{"_index":588,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{}}}],["apis",{"_index":606,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["apiversion",{"_index":589,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["application",{"_index":610,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{}}}],["applications",{"_index":605,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["appmodule",{"_index":874,"title":{},"body":{"index.html":{}}}],["array",{"_index":269,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolylineManager.html":{}}}],["array.isarray(i",{"_index":580,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["array.isarray(queryparams[k",{"_index":573,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["arrays",{"_index":572,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["assigning",{"_index":602,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["assignscriptloadingpromise",{"_index":448,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["assignscriptloadingpromise(scriptelement",{"_index":460,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["async",{"_index":14,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["authenticate",{"_index":609,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["auto",{"_index":643,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["available",{"_index":631,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["await",{"_index":125,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["behavior",{"_index":626,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["bias",{"_index":633,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["bootstrap",{"_index":802,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["bootstrapping",{"_index":503,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["both",{"_index":612,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["bounds",{"_index":355,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["bounds.extend(b",{"_index":369,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["bounds.service",{"_index":223,"title":{},"body":{"components/GoogleComponent.html":{}}}],["bounds.service.ts",{"_index":352,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{},"coverage.html":{}}}],["bounds.service.ts:13",{"_index":360,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["bounds.service.ts:18",{"_index":363,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["bounds.tojson",{"_index":370,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["boundsliteral",{"_index":80,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleRectangleManager.html":{}}}],["break",{"_index":542,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["browse",{"_index":880,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":877,"title":{},"body":{"modules.html":{}}}],["browser's",{"_index":619,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["c",{"_index":124,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.addlistener(eventname",{"_index":157,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.getbounds().tojson",{"_index":140,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.getcenter().tojson",{"_index":141,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.getradius",{"_index":143,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setcenter",{"_index":147,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setdraggable(circle.draggable",{"_index":149,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.seteditable(circle.editable",{"_index":148,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setmap(null",{"_index":127,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setoptions(options",{"_index":139,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setradius(circle.radius",{"_index":151,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setvisible(circle.visible",{"_index":150,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["callback",{"_index":554,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["callbackname",{"_index":446,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["case",{"_index":540,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["casting",{"_index":132,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["center",{"_index":347,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["center.lat",{"_index":237,"title":{},"body":{"components/GoogleComponent.html":{}}}],["center.lng",{"_index":239,"title":{},"body":{"components/GoogleComponent.html":{}}}],["channel",{"_index":558,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["check",{"_index":130,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["checkscriptelement",{"_index":449,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["circle",{"_index":41,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.clickable",{"_index":100,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.draggable",{"_index":102,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.editable",{"_index":104,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.fillcolor",{"_index":106,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.fillopacity",{"_index":108,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.latitude",{"_index":96,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.longitude",{"_index":98,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.radius",{"_index":110,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.strokecolor",{"_index":112,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.strokeopacity",{"_index":114,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.strokeposition",{"_index":116,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.strokeweight",{"_index":118,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.visible",{"_index":120,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.zindex",{"_index":122,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circlemanager",{"_index":8,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["class",{"_index":87,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["click",{"_index":270,"title":{},"body":{"components/GoogleComponent.html":{}}}],["clickable",{"_index":99,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["client",{"_index":556,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["clientid",{"_index":590,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["close",{"_index":295,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["close(infowindow",{"_index":306,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["cluster_ngmapsgooglemodule",{"_index":804,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["cluster_ngmapsgooglemodule_declarations",{"_index":805,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["cluster_ngmapsgooglemodule_exports",{"_index":807,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["cluster_ngmapsgooglemodule_googlecomponent_providers",{"_index":806,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["comma",{"_index":577,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["commented",{"_index":91,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["component",{"_index":165,"title":{"components/GoogleComponent.html":{}},"body":{"components/GoogleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_template",{"_index":289,"title":{},"body":{"components/GoogleComponent.html":{}}}],["components",{"_index":167,"title":{},"body":{"components/GoogleComponent.html":{}}}],["computing",{"_index":354,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["config",{"_index":457,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["config.apikey",{"_index":555,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.apiversion",{"_index":552,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.channel",{"_index":559,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.clientid",{"_index":557,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.hostandpath",{"_index":547,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.language",{"_index":565,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.libraries",{"_index":561,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.protocol",{"_index":536,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.region",{"_index":563,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.then((c",{"_index":495,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["configuration",{"_index":467,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["configure",{"_index":450,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["configure(config",{"_index":465,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["console.log('open",{"_index":334,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["const",{"_index":123,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["constructor(_loader",{"_index":358,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["constructor(_mapswrapper",{"_index":26,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["constructor(config",{"_index":453,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["container",{"_index":192,"title":{},"body":{"components/GoogleComponent.html":{}}}],["content",{"_index":197,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{}}}],["coords",{"_index":280,"title":{},"body":{"components/GoogleComponent.html":{}}}],["coverage",{"_index":819,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createeventobservable",{"_index":13,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["createeventobservable(eventname",{"_index":44,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["creates",{"_index":309,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["createscriptelement",{"_index":451,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["d",{"_index":873,"title":{},"body":{"index.html":{}}}],["dblclick",{"_index":274,"title":{},"body":{"components/GoogleComponent.html":{}}}],["declarations",{"_index":801,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["default",{"_index":412,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["defines",{"_index":630,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["defining",{"_index":638,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["deleted",{"_index":325,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{}}}],["deleteinfowindow",{"_index":296,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["deleteinfowindow(infowindow",{"_index":310,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["deletemarker",{"_index":373,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["deletemarker(marker",{"_index":388,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["deletepolygon",{"_index":651,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["deletepolygon(paths",{"_index":659,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["deletepolyline",{"_index":699,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["deletepolyline(line",{"_index":710,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["dependencies",{"_index":800,"title":{"dependencies.html":{}},"body":{"modules/NgMapsGoogleModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":872,"title":{},"body":{"index.html":{}}}],["description",{"_index":72,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["dev",{"_index":871,"title":{},"body":{"index.html":{}}}],["different",{"_index":636,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["directive",{"_index":287,"title":{},"body":{"components/GoogleComponent.html":{}}}],["directives",{"_index":290,"title":{},"body":{"components/GoogleComponent.html":{}}}],["disableautopan",{"_index":345,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["display",{"_index":198,"title":{},"body":{"components/GoogleComponent.html":{}}}],["displaying",{"_index":621,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{}}}],["distinct",{"_index":603,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["document",{"_index":455,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["documentation",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":169,"title":{},"body":{"components/GoogleComponent.html":{}}}],["draggable",{"_index":101,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["e",{"_index":158,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["e.emitter.emit(value",{"_index":283,"title":{},"body":{"components/GoogleComponent.html":{}}}],["each",{"_index":604,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["east",{"_index":769,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["editable",{"_index":103,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["element",{"_index":286,"title":{},"body":{"components/GoogleComponent.html":{}}}],["emit(value",{"_index":264,"title":{},"body":{"components/GoogleComponent.html":{}}}],["emitter",{"_index":263,"title":{},"body":{"components/GoogleComponent.html":{}}}],["empty",{"_index":571,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["entry.key}=${entry.value",{"_index":584,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["enum",{"_index":641,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["enumerations",{"_index":854,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":523,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["error('method",{"_index":435,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["event",{"_index":265,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["event[0].latlng.lat",{"_index":281,"title":{},"body":{"components/GoogleComponent.html":{}}}],["event[0].latlng.lng",{"_index":282,"title":{},"body":{"components/GoogleComponent.html":{}}}],["eventname",{"_index":48,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["eventname.foreach((event",{"_index":432,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["events",{"_index":268,"title":{},"body":{"components/GoogleComponent.html":{}}}],["events.foreach((e",{"_index":276,"title":{},"body":{"components/GoogleComponent.html":{}}}],["export",{"_index":86,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["exports",{"_index":803,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["extends",{"_index":7,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["fail",{"_index":611,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{}}}],["fillcolor",{"_index":105,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["fillopacity",{"_index":107,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["filter((k",{"_index":568,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["fit",{"_index":222,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"coverage.html":{}}}],["fitboundsservice",{"_index":178,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["fixme",{"_index":89,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["force",{"_index":627,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["function",{"_index":471,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["generatebounds",{"_index":357,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["generatebounds(includeinbounds",{"_index":362,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["geodesic",{"_index":675,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["geopoint",{"_index":81,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{}}}],["get(circle",{"_index":145,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getbounds",{"_index":15,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["getbounds(circle",{"_index":50,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getbounds(rectangle",{"_index":750,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["getcenter",{"_index":16,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getcenter(circle",{"_index":53,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getmaptypeid",{"_index":247,"title":{},"body":{"components/GoogleComponent.html":{}}}],["getradius",{"_index":17,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getradius(circle",{"_index":55,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getting",{"_index":856,"title":{"index.html":{}},"body":{}}],["given",{"_index":60,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GoogleRectangleManager.html":{}}}],["google",{"_index":218,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["google.component",{"_index":815,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["google.maps.circleoptions",{"_index":70,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["google.maps.infowindowoptions",{"_index":315,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["google.maps.latlngbounds",{"_index":367,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["google.maps.latlngliteral",{"_index":241,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolylineManager.html":{}}}],["google.maps.maphandlermap",{"_index":267,"title":{},"body":{"components/GoogleComponent.html":{}}}],["google.maps.mapseventlistener",{"_index":155,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["google.maps.maptypeid",{"_index":249,"title":{},"body":{"components/GoogleComponent.html":{}}}],["google.maps.polygon",{"_index":689,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["google.maps.polyline",{"_index":736,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["google.maps.rectangleoptions",{"_index":761,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["google.maps.strokeposition",{"_index":137,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["google_maps_api_config",{"_index":490,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["googlecirclemanager",{"_index":1,"title":{"injectables/GoogleCircleManager.html":{}},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlecomponent",{"_index":166,"title":{"components/GoogleComponent.html":{}},"body":{"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googleinfowindowmanager",{"_index":189,"title":{"injectables/GoogleInfoWindowManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlemaps",{"_index":818,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["googlemapsapiscript",{"_index":482,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["googlemapsapiwrapper",{"_index":177,"title":{},"body":{"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlemapsfitboundsservice",{"_index":179,"title":{"injectables/GoogleMapsFitBoundsService.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlemapsmarkermanager",{"_index":181,"title":{"injectables/GoogleMapsMarkerManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsMarkerManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlemapsscriptloader",{"_index":437,"title":{"injectables/GoogleMapsScriptLoader.html":{}},"body":{"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{}}}],["googlemapsscriptprotocol",{"_index":489,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["googlemapsscriptprotocol.auto",{"_index":541,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["googlemapsscriptprotocol.http",{"_index":543,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["googlemapsscriptprotocol.https",{"_index":537,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["googlemoduleoptions",{"_index":454,"title":{"interfaces/GoogleModuleOptions.html":{}},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["googlepolygonmanager",{"_index":183,"title":{"injectables/GooglePolygonManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolygonManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlepolylinemanager",{"_index":185,"title":{"injectables/GooglePolylineManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolylineManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlerectanglemanager",{"_index":187,"title":{"injectables/GoogleRectangleManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":196,"title":{},"body":{"components/GoogleComponent.html":{}}}],["host",{"_index":614,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["hostandpath",{"_index":546,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["html",{"_index":285,"title":{},"body":{"components/GoogleComponent.html":{}}}],["htmlscriptelement",{"_index":461,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["http",{"_index":544,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["https",{"_index":545,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["https://developers.google.com/maps/documentation/javascript/basics#language",{"_index":629,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["https://developers.google.com/maps/documentation/javascript/basics#region",{"_index":639,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["https://developers.google.com/maps/documentation/javascript/get",{"_index":592,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["https://developers.google.com/maps/documentation/javascript/libraries",{"_index":632,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["i.addlistener(eventname",{"_index":350,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["i.join",{"_index":582,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["i.setoptions(options",{"_index":340,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["i.setposition",{"_index":328,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["i.setzindex(infowindow.zindex",{"_index":331,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["icons",{"_index":732,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["id",{"_index":601,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["identifier",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":90,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["implemented",{"_index":436,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["import",{"_index":78,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["imports",{"_index":816,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["improve",{"_index":131,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["included",{"_index":613,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["includeinbounds",{"_index":364,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["includeinbounds.foreach((b",{"_index":368,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["includeinbounds.size",{"_index":366,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["information",{"_index":623,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["infowindow",{"_index":305,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.content.nativeelement",{"_index":341,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.disableautopan",{"_index":346,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.hostmarker",{"_index":335,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.latitude",{"_index":329,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.longitude",{"_index":330,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.maxwidth",{"_index":343,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.zindex",{"_index":344,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindowmanager",{"_index":188,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["inherit",{"_index":195,"title":{},"body":{"components/GoogleComponent.html":{}}}],["inject",{"_index":488,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["inject(document",{"_index":492,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["inject(google_maps_api_config",{"_index":491,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["injectable",{"_index":0,"title":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"overview.html":{}}}],["injectiontoken",{"_index":640,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["inner",{"_index":193,"title":{},"body":{"components/GoogleComponent.html":{}}}],["inside",{"_index":862,"title":{},"body":{"index.html":{}}}],["install",{"_index":865,"title":{},"body":{"index.html":{}}}],["installation",{"_index":863,"title":{},"body":{"index.html":{}}}],["instance",{"_index":73,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{}}}],["instanceof",{"_index":494,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["interface",{"_index":262,"title":{"interfaces/GoogleModuleOptions.html":{}},"body":{"components/GoogleComponent.html":{},"interfaces/GoogleModuleOptions.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":586,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["item",{"_index":684,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["item.setpaths(polygon.paths",{"_index":686,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["iwindow",{"_index":321,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["iwindow.close",{"_index":326,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["join",{"_index":576,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["k",{"_index":581,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["key",{"_index":550,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"index.html":{}}}],["keyof",{"_index":266,"title":{},"body":{"components/GoogleComponent.html":{}}}],["l.addlistener(eventname",{"_index":695,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["l.setmap(null",{"_index":693,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["l.setoptions(options",{"_index":690,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["l.setpath(path",{"_index":737,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["language",{"_index":564,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["lat",{"_index":95,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["lazymapsapiloader",{"_index":486,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["legend",{"_index":284,"title":{},"body":{"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["libraries",{"_index":560,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["library",{"_index":861,"title":{},"body":{"index.html":{}}}],["license",{"_index":608,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["line",{"_index":706,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line._getpoints().map((point",{"_index":717,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.clickable",{"_index":723,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.draggable",{"_index":724,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.editable",{"_index":725,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.geodesic",{"_index":726,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.icons",{"_index":733,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.strokecolor",{"_index":727,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.strokeopacity",{"_index":728,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.strokeweight",{"_index":729,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.visible",{"_index":730,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.zindex",{"_index":731,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["link",{"_index":134,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["listener",{"_index":154,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["listener.remove",{"_index":161,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["literal",{"_index":663,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["lng",{"_index":97,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["load",{"_index":452,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["loaded",{"_index":508,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["loader.service",{"_index":814,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["loader.service.ts",{"_index":439,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"coverage.html":{}}}],["loader.service.ts:13",{"_index":484,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:14",{"_index":480,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:17",{"_index":481,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:18",{"_index":485,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:19",{"_index":483,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:20",{"_index":456,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:45",{"_index":466,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:50",{"_index":477,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:62",{"_index":464,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:72",{"_index":462,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:83",{"_index":476,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:93",{"_index":459,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loading",{"_index":472,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["m",{"_index":414,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["m.addlistener(event",{"_index":433,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setanimation(google.maps.animation[marker.animation",{"_index":430,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setanimation(marker.animation",{"_index":431,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setclickable(marker.clickable",{"_index":428,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setdraggable(marker.draggable",{"_index":423,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.seticon(marker.iconurl",{"_index":424,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setlabel(marker.label",{"_index":422,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setmap(null",{"_index":416,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setopacity(marker.opacity",{"_index":425,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setposition",{"_index":418,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.settitle(marker.title",{"_index":421,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setvisible(marker.visible",{"_index":426,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setzindex(marker.zindex",{"_index":427,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.then((l",{"_index":692,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["managers/circle.manager",{"_index":224,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/info",{"_index":225,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/marker.manager",{"_index":227,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/polygon.manager",{"_index":228,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/polyline.manager",{"_index":229,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/rectangle.manager",{"_index":230,"title":{},"body":{"components/GoogleComponent.html":{}}}],["map",{"_index":61,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GoogleRectangleManager.html":{}}}],["map((entry",{"_index":583,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["map((k",{"_index":575,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["map_provider",{"_index":813,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["maps",{"_index":219,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["maps.googleapis.com/maps/api/js",{"_index":548,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["maps/core",{"_index":83,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"dependencies.html":{},"index.html":{}}}],["maps/google",{"_index":866,"title":{},"body":{"index.html":{}}}],["mapsapiloader",{"_index":359,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{}}}],["mapsapiwrapper",{"_index":27,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["marker",{"_index":336,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{}}}],["marker.animation",{"_index":429,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["marker.latitude",{"_index":419,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["marker.longitude",{"_index":420,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["markermanager",{"_index":180,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["matching",{"_index":163,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxwidth",{"_index":342,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["metadata",{"_index":173,"title":{},"body":{"components/GoogleComponent.html":{}}}],["methods",{"_index":10,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["miscellaneous",{"_index":853,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["modular",{"_index":859,"title":{},"body":{"index.html":{}}}],["module",{"_index":646,"title":{"modules/NgMapsGoogleModule.html":{}},"body":{"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":799,"title":{"modules.html":{}},"body":{"modules/NgMapsGoogleModule.html":{},"modules.html":{}}}],["name",{"_index":34,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["need",{"_index":869,"title":{},"body":{"index.html":{}}}],["needed",{"_index":502,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["new",{"_index":152,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":82,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngmapscircledirective",{"_index":39,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["ngmapsgooglemodule",{"_index":798,"title":{"modules/NgMapsGoogleModule.html":{}},"body":{"modules/NgMapsGoogleModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ngmapsinfowindowcomponent",{"_index":303,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["ngmapsmarkercomponent",{"_index":386,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["ngmapspolygondirective",{"_index":656,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["ngmapspolyline",{"_index":704,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["ngmapspolylinepoint",{"_index":716,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["ngmapsrectangledirective",{"_index":746,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["ngmapsviewcomponent",{"_index":172,"title":{},"body":{"components/GoogleComponent.html":{}}}],["ngmodule",{"_index":812,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["ngzone",{"_index":29,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["none",{"_index":199,"title":{},"body":{"components/GoogleComponent.html":{}}}],["north",{"_index":767,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["npm",{"_index":864,"title":{},"body":{"index.html":{}}}],["null",{"_index":156,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["number",{"_index":253,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{}}}],["object",{"_index":497,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["object.keys(queryparams",{"_index":567,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["observable",{"_index":49,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["observable((observer",{"_index":153,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["observer",{"_index":84,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["observer.next(e",{"_index":160,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["open",{"_index":297,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["open(infowindow",{"_index":312,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["optional",{"_index":36,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["options",{"_index":69,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["options.strokeposition",{"_index":136,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["out",{"_index":810,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["overview",{"_index":881,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":625,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["package",{"_index":845,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":509,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["param",{"_index":133,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["parameter",{"_index":596,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["params",{"_index":566,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["path",{"_index":615,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["path.clickable",{"_index":670,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.draggable",{"_index":671,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.editable",{"_index":672,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.fillcolor",{"_index":673,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.fillopacity",{"_index":674,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.geodesic",{"_index":676,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.paths",{"_index":677,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.strokecolor",{"_index":678,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.strokeopacity",{"_index":679,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.strokeweight",{"_index":680,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.visible",{"_index":681,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.zindex",{"_index":682,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["paths",{"_index":661,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["peer",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["plan",{"_index":607,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["plans",{"_index":595,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["please",{"_index":647,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["point.latitude",{"_index":718,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["point.longitude",{"_index":719,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["polygon",{"_index":667,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["polygonmanager",{"_index":182,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolygonManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["polygonpromise",{"_index":668,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["polylinemanager",{"_index":184,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolylineManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["polylinepromise",{"_index":721,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["postponed",{"_index":474,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["preferred",{"_index":620,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["premium",{"_index":594,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["promise",{"_index":52,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["promise((resolve",{"_index":518,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["promise.resolve",{"_index":510,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["properties",{"_index":92,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["propname",{"_index":687,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["protected",{"_index":201,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolylineManager.html":{}}}],["protocol",{"_index":538,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["protocoltype",{"_index":535,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["protocol}//${hostandpath}?${params",{"_index":585,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["provide",{"_index":175,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":468,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["provider",{"_index":875,"title":{},"body":{"index.html":{}}}],["providers",{"_index":174,"title":{},"body":{"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["public",{"_index":11,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["quarterly",{"_index":553,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["queryparams",{"_index":549,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["queryparams[k",{"_index":569,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["queryparams[k].length",{"_index":574,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["r",{"_index":790,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.addlistener(eventname",{"_index":797,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.getbounds().tojson",{"_index":792,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setbounds",{"_index":793,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setdraggable(rectangle.draggable",{"_index":795,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.seteditable(rectangle.editable",{"_index":794,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setmap(null",{"_index":787,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setoptions(options",{"_index":789,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setvisible(rectangle.visible",{"_index":796,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["radius",{"_index":109,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["readonly",{"_index":442,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["rectangle",{"_index":748,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.clickable",{"_index":775,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.draggable",{"_index":776,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.east",{"_index":770,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.editable",{"_index":777,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.fillcolor",{"_index":778,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.fillopacity",{"_index":779,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.north",{"_index":768,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.south",{"_index":772,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.strokecolor",{"_index":780,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.strokeopacity",{"_index":781,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.strokeposition",{"_index":782,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.strokeweight",{"_index":783,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.visible",{"_index":784,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.west",{"_index":774,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.zindex",{"_index":785,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectanglemanager",{"_index":186,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["region",{"_index":562,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["reject",{"_index":519,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["reject(error",{"_index":524,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["remove",{"_index":570,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["removecircle",{"_index":18,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["removecircle(circle",{"_index":57,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["removerectangle",{"_index":742,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["removerectangle(rectangle",{"_index":752,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["removes",{"_index":59,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["replaysubject",{"_index":478,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["reset",{"_index":809,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["resolve",{"_index":521,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["responsible",{"_index":353,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["result",{"_index":162,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":164,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":138,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["returns",{"_index":42,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["rightclick",{"_index":272,"title":{},"body":{"components/GoogleComponent.html":{}}}],["rxjs",{"_index":85,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["s",{"_index":231,"title":{},"body":{"components/GoogleComponent.html":{}}}],["script",{"_index":438,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{}}}],["script.async",{"_index":528,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["script.defer",{"_index":530,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["script.id",{"_index":531,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["script.src",{"_index":532,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["script.type",{"_index":526,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["scriptelement",{"_index":463,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["scriptelement.onerror",{"_index":522,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["scripts",{"_index":473,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["see",{"_index":591,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["selector",{"_index":190,"title":{},"body":{"components/GoogleComponent.html":{}}}],["seperated",{"_index":578,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["serve",{"_index":635,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["setbounds",{"_index":743,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setbounds(rectangle",{"_index":754,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setcenter",{"_index":19,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setcenter(circle",{"_index":62,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setdraggable",{"_index":20,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["setdraggable(circle",{"_index":64,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setdraggable(rectangle",{"_index":756,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["seteditable",{"_index":21,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["seteditable(circle",{"_index":66,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["seteditable(rectangle",{"_index":758,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setoptions",{"_index":22,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["setoptions(circle",{"_index":68,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setoptions(infowindow",{"_index":314,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["setoptions(rectangle",{"_index":760,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setpolygonoptions",{"_index":652,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["setpolygonoptions(path",{"_index":662,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["setpolylineoptions",{"_index":700,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["setpolylineoptions(line",{"_index":712,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["setposition",{"_index":298,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["setposition(infowindow",{"_index":317,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["setradius",{"_index":23,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setradius(circle",{"_index":74,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setting",{"_index":628,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["setvisible",{"_index":24,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["setvisible(circle",{"_index":76,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setvisible(rectangle",{"_index":763,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setzindex",{"_index":299,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["setzindex(infowindow",{"_index":319,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["shakable",{"_index":860,"title":{},"body":{"index.html":{}}}],["simple",{"_index":858,"title":{},"body":{"index.html":{}}}],["single",{"_index":356,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["south",{"_index":771,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/.../options.ts",{"_index":855,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/lib/google",{"_index":351,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{},"coverage.html":{}}}],["src/lib/google.component.ts",{"_index":171,"title":{},"body":{"components/GoogleComponent.html":{},"coverage.html":{}}}],["src/lib/google.component.ts:103",{"_index":216,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:115",{"_index":212,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:122",{"_index":217,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:129",{"_index":214,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:54",{"_index":210,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:63",{"_index":213,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:79",{"_index":211,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:90",{"_index":215,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.module.ts",{"_index":811,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["src/lib/managers/circle.manager.ts",{"_index":6,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"coverage.html":{}}}],["src/lib/managers/circle.manager.ts:101",{"_index":65,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:107",{"_index":77,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:111",{"_index":75,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:115",{"_index":46,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:12",{"_index":31,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:20",{"_index":40,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:46",{"_index":58,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:57",{"_index":71,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:71",{"_index":51,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:78",{"_index":54,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:83",{"_index":56,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:87",{"_index":63,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:95",{"_index":67,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/info",{"_index":292,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"coverage.html":{}}}],["src/lib/managers/marker.manager.ts",{"_index":371,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{},"coverage.html":{}}}],["src/lib/managers/marker.manager.ts:102",{"_index":397,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:11",{"_index":413,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:14",{"_index":385,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:20",{"_index":389,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:33",{"_index":403,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:38",{"_index":407,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:43",{"_index":401,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:48",{"_index":395,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:53",{"_index":399,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:58",{"_index":405,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:63",{"_index":409,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:68",{"_index":411,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:73",{"_index":393,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:78",{"_index":391,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:87",{"_index":387,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/polygon.manager.ts",{"_index":649,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"coverage.html":{}}}],["src/lib/managers/polygon.manager.ts:10",{"_index":654,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:15",{"_index":657,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:33",{"_index":666,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:42",{"_index":664,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:51",{"_index":660,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:64",{"_index":658,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polyline.manager.ts",{"_index":696,"title":{},"body":{"injectables/GooglePolylineManager.html":{},"coverage.html":{}}}],["src/lib/managers/polyline.manager.ts:11",{"_index":702,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:16",{"_index":705,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:27",{"_index":708,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:45",{"_index":715,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:58",{"_index":713,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:67",{"_index":711,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:80",{"_index":709,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/rectangle.manager.ts",{"_index":740,"title":{},"body":{"injectables/GoogleRectangleManager.html":{},"coverage.html":{}}}],["src/lib/managers/rectangle.manager.ts:12",{"_index":744,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:17",{"_index":747,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:47",{"_index":753,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:54",{"_index":762,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:61",{"_index":751,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:68",{"_index":755,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:79",{"_index":759,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:85",{"_index":757,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:91",{"_index":764,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:97",{"_index":749,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/options.ts",{"_index":587,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":857,"title":{"index.html":{}},"body":{}}],["statements",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":45,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["strings",{"_index":579,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["strokecolor",{"_index":111,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["strokeopacity",{"_index":113,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["strokeposition",{"_index":115,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["strokeweight",{"_index":117,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["styles",{"_index":168,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribe",{"_index":234,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribe((event",{"_index":278,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('bounds_changed",{"_index":243,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('center_changed",{"_index":233,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('maptypeid_changed",{"_index":246,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('tilesloaded",{"_index":260,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('zoom_changed",{"_index":251,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent(e.name",{"_index":277,"title":{},"body":{"components/GoogleComponent.html":{}}}],["super",{"_index":493,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["super(_loader",{"_index":365,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["super(_mapswrapper",{"_index":88,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["support",{"_index":878,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":879,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":539,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["t",{"_index":47,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["table",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":617,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["template",{"_index":200,"title":{},"body":{"components/GoogleComponent.html":{}}}],["text/javascript",{"_index":527,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["textual",{"_index":622,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["then((c",{"_index":146,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["then((maptypeid",{"_index":248,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._apiwrapper.createcircle",{"_index":94,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._apiwrapper.createrectangle",{"_index":766,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._circles",{"_index":144,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._circles.delete(circle",{"_index":128,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._circles.get(circle",{"_index":126,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._circles.get(circle).then((c",{"_index":142,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._circles.set",{"_index":93,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._config.complete",{"_index":505,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._config.next(config",{"_index":504,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._config.topromise",{"_index":534,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._convertpoints(line",{"_index":720,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._document",{"_index":499,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._document.body.appendchild(scriptelement",{"_index":517,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._document.createelement('script",{"_index":525,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._document.defaultview",{"_index":501,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._document.getelementbyid",{"_index":513,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._getscriptsrc(this.callbackname",{"_index":533,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._infowindows.delete(infowindow",{"_index":327,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._infowindows.get(infowindow",{"_index":322,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._infowindows.set(infowindow",{"_index":349,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._mapswrapper",{"_index":232,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._mapswrapper.createinfowindow(center",{"_index":348,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._mapswrapper.createpolygon",{"_index":669,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._mapswrapper.createpolyline",{"_index":722,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._mapswrapper.getbounds().then((bounds",{"_index":244,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._mapswrapper.getcenter().then((center",{"_index":235,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._mapswrapper.getnativemap",{"_index":333,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._mapswrapper.getzoom().then((z",{"_index":252,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._mapswrapper.subscribetomapevent('idle').subscribe",{"_index":257,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._markermanager.getnativemarker",{"_index":337,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._markers.delete(marker",{"_index":417,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["this._markers.get(marker",{"_index":415,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["this._polygons.delete(paths",{"_index":694,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polygons.get(path).then((l",{"_index":688,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polygons.get(paths",{"_index":691,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polygons.get(polygon",{"_index":685,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polygons.set(path",{"_index":683,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polylines.delete(line",{"_index":739,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._polylines.get(line",{"_index":735,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._polylines.get(line).then((l",{"_index":738,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._polylines.set(line",{"_index":734,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._rectangles.delete(rectangle",{"_index":788,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._rectangles.get(rectangle",{"_index":791,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._rectangles.get(rectangle).then((r",{"_index":786,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._rectangles.set",{"_index":765,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._script_id",{"_index":514,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._scriptloadingpromise",{"_index":511,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._window",{"_index":500,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._window[this.callbackname",{"_index":520,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._zone.run",{"_index":159,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["this.assignscriptloadingpromise(scriptelement",{"_index":516,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.boundschange.emit(bounds",{"_index":245,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.centerchange.emit",{"_index":240,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.checkscriptelement",{"_index":512,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.configure(c",{"_index":496,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.configure(config",{"_index":498,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.createscriptelement",{"_index":515,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.idle.emit(void",{"_index":258,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.latitude",{"_index":236,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.longitude",{"_index":238,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.mapclick",{"_index":271,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.mapdblclick",{"_index":275,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.maprightclick",{"_index":273,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.maptypeidchange.emit(maptypeid",{"_index":250,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.subscription.add(s",{"_index":242,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.tilesloaded.emit(void",{"_index":261,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.zoom",{"_index":254,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.zoomchange.emit(z",{"_index":256,"title":{},"body":{"components/GoogleComponent.html":{}}}],["throw",{"_index":434,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["tiles",{"_index":637,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["time",{"_index":469,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["todo",{"_index":129,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["token",{"_index":645,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":598,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["tree",{"_index":170,"title":{},"body":{"components/GoogleComponent.html":{},"index.html":{}}}],["true",{"_index":529,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["tslib",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":35,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":135,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["types/googlemaps",{"_index":850,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["typings",{"_index":870,"title":{},"body":{"index.html":{}}}],["under",{"_index":600,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["until",{"_index":475,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["updateanimation",{"_index":374,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateanimation(marker",{"_index":390,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateclickable",{"_index":375,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateclickable(marker",{"_index":392,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatedraggable",{"_index":376,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatedraggable(marker",{"_index":394,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateicon",{"_index":377,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateicon(marker",{"_index":396,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateiconlegacy",{"_index":378,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateiconlegacy(marker",{"_index":398,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatelabel",{"_index":379,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatelabel(marker",{"_index":400,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatemarkerposition",{"_index":380,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatemarkerposition(marker",{"_index":402,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateopacity",{"_index":381,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateopacity(marker",{"_index":404,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatepolygon",{"_index":653,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["updatepolygon(polygon",{"_index":665,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["updatepolylinepoints",{"_index":701,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["updatepolylinepoints(line",{"_index":714,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["updatetitle",{"_index":382,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatetitle(marker",{"_index":406,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatevisible",{"_index":383,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatevisible(marker",{"_index":408,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatezindex",{"_index":384,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatezindex(marker",{"_index":410,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["usage",{"_index":599,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["use",{"_index":470,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["useclass",{"_index":176,"title":{},"body":{"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["used",{"_index":616,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["uses",{"_index":618,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["usevalue",{"_index":817,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"index.html":{}}}],["v",{"_index":551,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["value",{"_index":279,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":288,"title":{},"body":{"components/GoogleComponent.html":{}}}],["variable",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":882,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":593,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["view",{"_index":191,"title":{},"body":{"components/GoogleComponent.html":{}}}],["visible",{"_index":119,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["void",{"_index":43,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["w",{"_index":332,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["w.close",{"_index":339,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["w.open(map",{"_index":338,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["west",{"_index":773,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["width",{"_index":194,"title":{},"body":{"components/GoogleComponent.html":{}}}],["window",{"_index":323,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["window.manager",{"_index":226,"title":{},"body":{"components/GoogleComponent.html":{}}}],["window.manager.ts",{"_index":293,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"coverage.html":{}}}],["window.manager.ts:12",{"_index":301,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:21",{"_index":311,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:36",{"_index":318,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:44",{"_index":320,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:49",{"_index":313,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:63",{"_index":307,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:68",{"_index":316,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:76",{"_index":304,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:98",{"_index":308,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["wish",{"_index":624,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["wrapper",{"_index":221,"title":{},"body":{"components/GoogleComponent.html":{}}}],["wrapper.ts",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["yarn",{"_index":867,"title":{},"body":{"index.html":{}}}],["your_api_key",{"_index":876,"title":{},"body":{"index.html":{}}}],["z",{"_index":255,"title":{},"body":{"components/GoogleComponent.html":{}}}],["zindex",{"_index":121,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["zoom",{"_index":808,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/GoogleCircleManager.html":{"url":"injectables/GoogleCircleManager.html","title":"injectable - GoogleCircleManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleCircleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/circle.manager.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CircleManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addCircle\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Async\n                                getBounds\n                            \n                            \n                                    Public\n                                    Async\n                                getCenter\n                            \n                            \n                                    Public\n                                getRadius\n                            \n                            \n                                    Public\n                                    Async\n                                removeCircle\n                            \n                            \n                                    Public\n                                setCenter\n                            \n                            \n                                    Public\n                                setDraggable\n                            \n                            \n                                    Public\n                                setEditable\n                            \n                            \n                                    Public\n                                    Async\n                                setOptions\n                            \n                            \n                                    Public\n                                setRadius\n                            \n                            \n                                    Public\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/circle.manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addCircle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:115\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRadius\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            removeCircle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:46\n                \n            \n\n\n            \n                \n                    Removes the given circle from the map.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDraggable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setEditable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(circle: NgMapsCircleDirective, options: google.maps.CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of {\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                            google.maps.CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        options for the circle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRadius\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setVisible\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport {\n  BoundsLiteral,\n  CircleManager,\n  GeoPoint,\n  MapsApiWrapper,\n  NgMapsCircleDirective,\n} from '@ng-maps/core';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable()\nexport class GoogleCircleManager extends CircleManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  /**\n   * @fixme implement commented properties\n   */\n  public addCircle(circle: NgMapsCircleDirective) {\n    this._circles.set(\n      circle,\n      this._apiWrapper.createCircle(\n        { lat: circle.latitude, lng: circle.longitude },\n        {\n          // clickable: circle.clickable,\n          // draggable: circle.draggable,\n          // editable: circle.editable,\n          fillColor: circle.fillColor,\n          fillOpacity: circle.fillOpacity,\n          radius: circle.radius,\n          strokeColor: circle.strokeColor,\n          strokeOpacity: circle.strokeOpacity,\n          // strokePosition: circle.strokePosition,\n          strokeWeight: circle.strokeWeight,\n          visible: circle.visible,\n          zIndex: circle.zIndex,\n        },\n      ),\n    );\n  }\n\n  /**\n   * Removes the given circle from the map.\n   */\n  public async removeCircle(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    c.setMap(null);\n    this._circles.delete(circle);\n  }\n\n  /**\n   * @todo check how to improve type casting\n   * @param circle instance of {@link NgMapsCircleDirective}\n   * @param options options for the circle\n   */\n  public async setOptions(\n    circle: NgMapsCircleDirective,\n    options: google.maps.CircleOptions,\n  ): Promise {\n    const c = await this._circles.get(circle);\n\n    if (typeof options.strokePosition === 'string') {\n      options.strokePosition = (google.maps.StrokePosition[\n        options.strokePosition\n      ] as any) as google.maps.StrokePosition;\n    }\n    return c.setOptions(options);\n  }\n\n  public async getBounds(\n    circle: NgMapsCircleDirective,\n  ): Promise {\n    const c = await this._circles.get(circle);\n    return c.getBounds().toJSON();\n  }\n\n  public async getCenter(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    return c.getCenter().toJSON();\n  }\n\n  public getRadius(circle: NgMapsCircleDirective): Promise {\n    return this._circles.get(circle).then((c) => c.getRadius());\n  }\n\n  public setCenter(circle: NgMapsCircleDirective): Promise {\n    return this._circles\n      .get(circle)\n      .then((c) =>\n        c.setCenter({ lat: circle.latitude, lng: circle.longitude }),\n      );\n  }\n\n  public setEditable(circle: NgMapsCircleDirective): Promise {\n    return this._circles\n      .get(circle)\n      .then((c) => c.setEditable(circle.editable));\n  }\n\n  public setDraggable(circle: NgMapsCircleDirective): Promise {\n    return this._circles\n      .get(circle)\n      .then((c) => c.setDraggable(circle.draggable));\n  }\n\n  public setVisible(circle: NgMapsCircleDirective): Promise {\n    return this._circles.get(circle).then((c) => c.setVisible(circle.visible));\n  }\n\n  public setRadius(circle: NgMapsCircleDirective): Promise {\n    return this._circles.get(circle).then((c) => c.setRadius(circle.radius));\n  }\n\n  public createEventObservable(\n    eventName: string,\n    circle: NgMapsCircleDirective,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      let listener: google.maps.MapsEventListener = null;\n      this._circles.get(circle).then((c) => {\n        listener = c.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GoogleComponent.html":{"url":"components/GoogleComponent.html","title":"component - GoogleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GoogleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/google.component.ts\n\n\n\n    \n        Extends\n    \n    \n            NgMapsViewComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }\n                                { provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }\n                                { provide: MarkerManager, useClass: GoogleMapsMarkerManager }\n                                { provide: CircleManager, useClass: GoogleCircleManager }\n                                { provide: PolygonManager, useClass: GooglePolygonManager }\n                                { provide: PolylineManager, useClass: GooglePolylineManager }\n                                { provide: RectangleManager, useClass: GoogleRectangleManager }\n                                { provide: InfoWindowManager, useClass: GoogleInfoWindowManager }\n                \n            \n\n\n            \n                selector\n                map-view\n            \n\n\n            \n                styles\n                \n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    \n            \n\n            \n                template\n                \n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _handleBoundsChange\n                            \n                            \n                                    Protected\n                                _handleIdleEvent\n                            \n                            \n                                    Protected\n                                    Async\n                                _handleMapCenterChange\n                            \n                            \n                                    Protected\n                                _handleMapMouseEvents\n                            \n                            \n                                    Protected\n                                _handleMapTypeIdChange\n                            \n                            \n                                    Protected\n                                _handleMapZoomChange\n                            \n                            \n                                    Protected\n                                _handleTilesLoadedEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _fitBoundsService: FitBoundsService, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/google.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fitBoundsService\n                                                  \n                                                        \n                                                                    FitBoundsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _handleBoundsChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleBoundsChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _handleIdleEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleIdleEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            _handleMapCenterChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapCenterChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _handleMapMouseEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapMouseEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _handleMapTypeIdChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapTypeIdChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _handleMapZoomChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapZoomChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _handleTilesLoadedEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleTilesLoadedEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, NgZone } from '@angular/core';\nimport {\n  CircleManager,\n  FitBoundsService,\n  GeoPoint,\n  InfoWindowManager,\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsViewComponent,\n  PolygonManager,\n  PolylineManager,\n  RectangleManager,\n} from '@ng-maps/core';\nimport { GoogleMapsAPIWrapper } from './google-maps-api-wrapper';\nimport { GoogleMapsFitBoundsService } from './google-maps-fit-bounds.service';\nimport { GoogleCircleManager } from './managers/circle.manager';\nimport { GoogleInfoWindowManager } from './managers/info-window.manager';\nimport { GoogleMapsMarkerManager } from './managers/marker.manager';\nimport { GooglePolygonManager } from './managers/polygon.manager';\nimport { GooglePolylineManager } from './managers/polyline.manager';\nimport { GoogleRectangleManager } from './managers/rectangle.manager';\n\n@Component({\n  selector: 'map-view',\n  providers: [\n    { provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper },\n    { provide: FitBoundsService, useClass: GoogleMapsFitBoundsService },\n    { provide: MarkerManager, useClass: GoogleMapsMarkerManager },\n    { provide: CircleManager, useClass: GoogleCircleManager },\n    { provide: PolygonManager, useClass: GooglePolygonManager },\n    { provide: PolylineManager, useClass: GooglePolylineManager },\n    { provide: RectangleManager, useClass: GoogleRectangleManager },\n    { provide: InfoWindowManager, useClass: GoogleInfoWindowManager },\n  ],\n  styles: [\n    `\n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    `,\n  ],\n  template: `\n    \n    \n      \n    \n  `,\n})\nexport class GoogleComponent extends NgMapsViewComponent {\n  constructor(\n    _mapsWrapper: MapsApiWrapper,\n    _fitBoundsService: FitBoundsService,\n    _zone: NgZone,\n  ) {\n    super(_mapsWrapper, _fitBoundsService, _zone);\n  }\n\n  protected async _handleMapCenterChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('center_changed')\n      .subscribe(() => {\n        this._mapsWrapper.getCenter().then((center: GeoPoint) => {\n          this.latitude = center.lat;\n          this.longitude = center.lng;\n          this.centerChange.emit({\n            lat: this.latitude,\n            lng: this.longitude,\n          } as google.maps.LatLngLiteral);\n        });\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleBoundsChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('bounds_changed')\n      .subscribe(() => {\n        this._mapsWrapper.getBounds().then((bounds) => {\n          this.boundsChange.emit(bounds);\n        });\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleMapTypeIdChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('maptypeid_changed')\n      .subscribe(() => {\n        this._mapsWrapper\n          .getMapTypeId()\n          .then((mapTypeId: google.maps.MapTypeId) => {\n            this.mapTypeIdChange.emit(mapTypeId);\n          });\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleMapZoomChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('zoom_changed')\n      .subscribe(() => {\n        this._mapsWrapper.getZoom().then((z: number) => {\n          this.zoom = z;\n          this.zoomChange.emit(z);\n        });\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleIdleEvent() {\n    const s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(() => {\n      this.idle.emit(void 0);\n    });\n    this.subscription.add(s);\n  }\n\n  protected _handleTilesLoadedEvent() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('tilesloaded')\n      .subscribe(() => this.tilesLoaded.emit(void 0));\n    this.subscription.add(s);\n  }\n\n  protected _handleMapMouseEvents() {\n    interface Emitter {\n      emit(value: any): void;\n    }\n\n    interface Event {\n      name: keyof google.maps.MapHandlerMap;\n      emitter: Emitter;\n    }\n\n    const events: Array = [\n      { name: 'click', emitter: this.mapClick },\n      { name: 'rightclick', emitter: this.mapRightClick },\n      { name: 'dblclick', emitter: this.mapDblClick },\n    ];\n\n    events.forEach((e: Event) => {\n      const s = (this._mapsWrapper as GoogleMapsAPIWrapper)\n        .subscribeToMapEvent(e.name)\n        .subscribe((event) => {\n          const value = {\n            coords: { lat: event[0].latLng.lat(), lng: event[0].latLng.lng() },\n          };\n          e.emitter.emit(value);\n        });\n      this.subscription.add(s);\n    });\n  }\n}\n\n    \n\n\n    \n            \n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'GoogleComponent', 'selector': 'map-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GoogleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleInfoWindowManager.html":{"url":"injectables/GoogleInfoWindowManager.html","title":"injectable - GoogleInfoWindowManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleInfoWindowManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/info-window.manager.ts\n        \n\n\n            \n                Extends\n            \n            \n                    InfoWindowManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addInfoWindow\n                            \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Async\n                                deleteInfoWindow\n                            \n                            \n                                    Public\n                                    Async\n                                open\n                            \n                            \n                                    Public\n                                setOptions\n                            \n                            \n                                    Public\n                                setPosition\n                            \n                            \n                                    Public\n                                setZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone, _markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/info-window.manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _markerManager\n                                                  \n                                                        \n                                                                    MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            addInfoWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:98\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Creates a Google Maps event listener for the given InfoWindow as an Observable\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            deleteInfoWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            open\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    open(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(infoWindow: NgMapsInfoWindowComponent, options: google.maps.InfoWindowOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.InfoWindowOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPosition(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setZIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setZIndex(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport {\n  GeoPoint,\n  InfoWindowManager,\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsInfoWindowComponent,\n} from '@ng-maps/core';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable()\nexport class GoogleInfoWindowManager extends InfoWindowManager {\n  constructor(\n    _mapsWrapper: MapsApiWrapper,\n    _zone: NgZone,\n    _markerManager: MarkerManager,\n  ) {\n    super(_mapsWrapper, _zone, _markerManager);\n  }\n\n  public async deleteInfoWindow(\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Promise {\n    const iWindow = await this._infoWindows.get(infoWindow);\n    if (iWindow == null) {\n      // info window already deleted\n      return;\n    } else {\n      return this._zone.run(() => {\n        iWindow.close();\n        this._infoWindows.delete(infoWindow);\n      });\n    }\n  }\n\n  public setPosition(infoWindow: NgMapsInfoWindowComponent): void {\n    const i = this._infoWindows.get(infoWindow);\n    i.setPosition({\n      lat: infoWindow.latitude,\n      lng: infoWindow.longitude,\n    });\n  }\n\n  public setZIndex(infoWindow: NgMapsInfoWindowComponent): void {\n    const i = this._infoWindows.get(infoWindow);\n    i.setZIndex(infoWindow.zIndex);\n  }\n\n  public async open(infoWindow: NgMapsInfoWindowComponent): Promise {\n    const w = this._infoWindows.get(infoWindow);\n    const map = await this._mapsWrapper.getNativeMap();\n    console.log('open', w);\n    if (infoWindow.hostMarker != null) {\n      const marker = await this._markerManager.getNativeMarker(\n        infoWindow.hostMarker,\n      );\n      w.open(map, marker);\n    } else {\n      w.open(map);\n    }\n  }\n\n  public close(infoWindow: NgMapsInfoWindowComponent): void {\n    const w = this._infoWindows.get(infoWindow);\n    w.close();\n  }\n\n  public setOptions(\n    infoWindow: NgMapsInfoWindowComponent,\n    options: google.maps.InfoWindowOptions,\n  ) {\n    const i = this._infoWindows.get(infoWindow);\n    i.setOptions(options);\n  }\n\n  public async addInfoWindow(infoWindow: NgMapsInfoWindowComponent) {\n    const options: google.maps.InfoWindowOptions = {\n      content: infoWindow.content.nativeElement,\n      maxWidth: infoWindow.maxWidth,\n      zIndex: infoWindow.zIndex,\n      disableAutoPan: infoWindow.disableAutoPan,\n    };\n    const center: GeoPoint =\n      typeof infoWindow.latitude === 'number' &&\n      typeof infoWindow.longitude === 'number'\n        ? {\n            lat: infoWindow.latitude,\n            lng: infoWindow.longitude,\n          }\n        : null;\n    const instance = await this._mapsWrapper.createInfoWindow(center, options);\n    this._infoWindows.set(infoWindow, instance);\n  }\n\n  /**\n   * Creates a Google Maps event listener for the given InfoWindow as an Observable\n   */\n  public createEventObservable(\n    eventName: string,\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Observable {\n    const i = this._infoWindows.get(infoWindow);\n    return new Observable((observer: Observer) => {\n      i.addListener(eventName, (e: T) =>\n        this._zone.run(() => observer.next(e)),\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleMapsFitBoundsService.html":{"url":"injectables/GoogleMapsFitBoundsService.html","title":"injectable - GoogleMapsFitBoundsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleMapsFitBoundsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/google-maps-fit-bounds.service.ts\n        \n\n            \n                Description\n            \n            \n                The FitBoundsService is responsible for computing the bounds of the a single map.\n\n            \n\n            \n                Extends\n            \n            \n                    FitBoundsService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                generateBounds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_loader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/lib/google-maps-fit-bounds.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _loader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            generateBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateBounds(includeInBounds: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-fit-bounds.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    includeInBounds\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     BoundsLiteral\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  BoundsLiteral,\n  FitBoundsService,\n  GeoPoint,\n  MapsAPILoader,\n} from '@ng-maps/core';\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport class GoogleMapsFitBoundsService extends FitBoundsService {\n  constructor(_loader: MapsAPILoader) {\n    super(_loader);\n  }\n\n  protected generateBounds(\n    includeInBounds: Map,\n  ): BoundsLiteral {\n    if (includeInBounds.size === 0) {\n      return null;\n    } else {\n      const bounds = new google.maps.LatLngBounds();\n      includeInBounds.forEach((b) => bounds.extend(b));\n      return bounds.toJSON();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleMapsMarkerManager.html":{"url":"injectables/GoogleMapsMarkerManager.html","title":"injectable - GoogleMapsMarkerManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleMapsMarkerManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/marker.manager.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MarkerManager\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                deleteMarker\n                            \n                            \n                                    Public\n                                updateAnimation\n                            \n                            \n                                    Public\n                                updateClickable\n                            \n                            \n                                    Public\n                                updateDraggable\n                            \n                            \n                                    Public\n                                updateIcon\n                            \n                            \n                                    Public\n                                updateIconLegacy\n                            \n                            \n                                    Public\n                                updateLabel\n                            \n                            \n                                    Public\n                                updateMarkerPosition\n                            \n                            \n                                    Public\n                                updateOpacity\n                            \n                            \n                                    Public\n                                updateTitle\n                            \n                            \n                                    Public\n                                updateVisible\n                            \n                            \n                                    Public\n                                updateZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/marker.manager.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string | Array, marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:87\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                            string | Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteMarker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAnimation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAnimation(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateClickable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateClickable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateDraggable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDraggable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateIcon\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIcon(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateIconLegacy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIconLegacy(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLabel(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateMarkerPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMarkerPosition(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateOpacity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOpacity(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateTitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTitle(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateVisible\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateVisible(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateZIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateZIndex(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _markers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/managers/marker.manager.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport {\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsMarkerComponent,\n} from '@ng-maps/core';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable()\nexport class GoogleMapsMarkerManager extends MarkerManager {\n  protected _markers: Map = new Map();\n\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  public deleteMarker(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    if (m == null) {\n      // marker already deleted\n      return;\n    } else {\n      return this._zone.run(() => {\n        m.setMap(null);\n        this._markers.delete(marker);\n      });\n    }\n  }\n\n  public updateMarkerPosition(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setPosition({ lat: marker.latitude, lng: marker.longitude });\n  }\n\n  public updateTitle(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setTitle(marker.title);\n  }\n\n  public updateLabel(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setLabel(marker.label);\n  }\n\n  public updateDraggable(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setDraggable(marker.draggable);\n  }\n\n  public updateIconLegacy(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setIcon(marker.iconUrl);\n  }\n\n  public updateOpacity(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setOpacity(marker.opacity);\n  }\n\n  public updateVisible(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setVisible(marker.visible);\n  }\n\n  public updateZIndex(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setZIndex(marker.zIndex);\n  }\n\n  public updateClickable(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setClickable(marker.clickable);\n  }\n\n  public updateAnimation(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    if (typeof marker.animation === 'string') {\n      m.setAnimation(google.maps.Animation[marker.animation]);\n    } else {\n      m.setAnimation(marker.animation);\n    }\n  }\n\n  public createEventObservable(\n    eventName: string | Array,\n    marker: NgMapsMarkerComponent,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      const m = this._markers.get(marker);\n      if (typeof eventName === 'string') {\n        eventName = [eventName];\n      }\n      eventName.forEach((event) => {\n        m.addListener(event, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n\n  public updateIcon(marker: NgMapsMarkerComponent): void {\n    throw new Error('Method not implemented.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleMapsScriptLoader.html":{"url":"injectables/GoogleMapsScriptLoader.html","title":"injectable - GoogleMapsScriptLoader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleMapsScriptLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/google-maps-script-loader.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MapsAPILoader\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                    Protected\n                                _document\n                            \n                            \n                                    Protected\n                                    Readonly\n                                _SCRIPT_ID\n                            \n                            \n                                    Protected\n                                _scriptLoadingPromise\n                            \n                            \n                                    Protected\n                                _window\n                            \n                            \n                                    Protected\n                                    Readonly\n                                callbackName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                _getScriptSrc\n                            \n                            \n                                    Protected\n                                assignScriptLoadingPromise\n                            \n                            \n                                    Protected\n                                    Async\n                                checkScriptElement\n                            \n                            \n                                    Public\n                                configure\n                            \n                            \n                                    Protected\n                                    Async\n                                createScriptElement\n                            \n                            \n                                    Public\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: GoogleModuleOptions, document: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/google-maps-script-loader.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        GoogleModuleOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            _getScriptSrc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getScriptSrc(callbackName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    callbackName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            assignScriptLoadingPromise\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignScriptLoadingPromise(scriptElement: HTMLScriptElement)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scriptElement\n                                    \n                                            HTMLScriptElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            checkScriptElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkScriptElement()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(config: GoogleModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:45\n                \n            \n\n\n            \n                \n                    If no configuration is provided at load time you can use this function to provide configuration at any time.\nLoading scripts will be postponed until a configuration is provided\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                GoogleModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \n{\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            createScriptElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createScriptElement()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject(\n    1,\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/google-maps-script-loader.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Document\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/google-maps-script-loader.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            _SCRIPT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'GoogleMapsApiScript'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/google-maps-script-loader.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _scriptLoadingPromise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/google-maps-script-loader.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _window\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Window\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/google-maps-script-loader.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            callbackName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : `LazyMapsAPILoader`\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/google-maps-script-loader.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { MapsAPILoader } from '@ng-maps/core';\nimport { ReplaySubject } from 'rxjs';\nimport {\n  GoogleMapsScriptProtocol,\n  GoogleModuleOptions,\n  GOOGLE_MAPS_API_CONFIG,\n} from './options';\n\n@Injectable()\nexport class GoogleMapsScriptLoader extends MapsAPILoader {\n  protected _scriptLoadingPromise: Promise;\n  protected _config: ReplaySubject = new ReplaySubject(\n    1,\n  );\n  protected _document: Document;\n  protected _window: Window;\n  protected readonly _SCRIPT_ID: string = 'GoogleMapsApiScript';\n  protected readonly callbackName: string = `LazyMapsAPILoader`;\n\n  constructor(\n    @Optional()\n    @Inject(GOOGLE_MAPS_API_CONFIG)\n    config: GoogleModuleOptions,\n    @Inject(DOCUMENT) document: any,\n  ) {\n    super();\n    if (config instanceof Promise) {\n      config.then((c) => {\n        this.configure(c);\n      });\n    } else if (typeof config === 'object') {\n      this.configure(config);\n    }\n    this._document = document as Document;\n    this._window = this._document.defaultView;\n  }\n\n  /**\n   * If no configuration is provided at load time you can use this function to provide configuration at any time.\n   * Loading scripts will be postponed until a configuration is provided\n   * @param config - {@link GoogleModuleOptions} configuration needed for bootstrapping\n   */\n  public configure(config: GoogleModuleOptions) {\n    this._config.next(config);\n    this._config.complete();\n  }\n\n  public load(): Promise {\n    if ((this._window as any).google && (this._window as any).google.maps) {\n      // Google maps already loaded on the page\n      return Promise.resolve();\n    } else if (this._scriptLoadingPromise) {\n      return this._scriptLoadingPromise;\n    } else {\n      this._scriptLoadingPromise = this.checkScriptElement();\n      return this._scriptLoadingPromise;\n    }\n  }\n\n  protected async checkScriptElement(): Promise {\n    let scriptElement: HTMLScriptElement = this._document.getElementById(\n      this._SCRIPT_ID,\n    ) as HTMLScriptElement;\n    if (scriptElement == null) {\n      scriptElement = await this.createScriptElement();\n    }\n    return this.assignScriptLoadingPromise(scriptElement);\n  }\n\n  protected assignScriptLoadingPromise(\n    scriptElement: HTMLScriptElement,\n  ): Promise {\n    this._document.body.appendChild(scriptElement);\n    return new Promise((resolve, reject) => {\n      this._window[this.callbackName] = () => resolve();\n\n      scriptElement.onerror = (error: Event) => reject(error);\n    });\n  }\n\n  protected async createScriptElement() {\n    const script = this._document.createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.id = this._SCRIPT_ID;\n    script.src = await this._getScriptSrc(this.callbackName);\n    return script;\n  }\n\n  protected async _getScriptSrc(callbackName: string): Promise {\n    const config = await this._config.toPromise();\n    const protocolType: GoogleMapsScriptProtocol =\n      (config && config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n    let protocol: string;\n\n    switch (protocolType) {\n      case GoogleMapsScriptProtocol.AUTO:\n        protocol = '';\n        break;\n      case GoogleMapsScriptProtocol.HTTP:\n        protocol = 'http:';\n        break;\n      case GoogleMapsScriptProtocol.HTTPS:\n        protocol = 'https:';\n        break;\n    }\n\n    const hostAndPath: string =\n      config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n    const queryParams: { [key: string]: string | Array } = {\n      v: config.apiVersion || 'quarterly',\n      callback: callbackName,\n      key: config.apiKey,\n      client: config.clientId,\n      channel: config.channel,\n      libraries: config.libraries,\n      region: config.region,\n      language: config.language,\n    };\n    const params: string = Object.keys(queryParams)\n      .filter((k: string) => queryParams[k] != null)\n      .filter((k: string) => {\n        // remove empty arrays\n        return (\n          !Array.isArray(queryParams[k]) ||\n          (Array.isArray(queryParams[k]) && queryParams[k].length > 0)\n        );\n      })\n      .map((k: string) => {\n        // join arrays as comma seperated strings\n        const i = queryParams[k];\n        if (Array.isArray(i)) {\n          return { key: k, value: i.join(',') };\n        }\n        return { key: k, value: queryParams[k] };\n      })\n      .map((entry: { key: string; value: string }) => {\n        return `${entry.key}=${entry.value}`;\n      })\n      .join('&');\n    return `${protocol}//${hostAndPath}?${params}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleModuleOptions.html":{"url":"interfaces/GoogleModuleOptions.html","title":"interface - GoogleModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GoogleModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        apiKey\n                                \n                                \n                                            Optional\n                                        apiVersion\n                                \n                                \n                                            Optional\n                                        channel\n                                \n                                \n                                            Optional\n                                        clientId\n                                \n                                \n                                            Optional\n                                        hostAndPath\n                                \n                                \n                                            Optional\n                                        language\n                                \n                                \n                                            Optional\n                                        libraries\n                                \n                                \n                                            Optional\n                                        protocol\n                                \n                                \n                                            Optional\n                                        region\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps API Key (see:\nhttps://developers.google.com/maps/documentation/javascript/get-api-key)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiVersion\n                                    \n                                \n                                \n                                    \n                                        apiVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Google Maps API version.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channel\n                                    \n                                \n                                \n                                    \n                                        channel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps channel name (for premium plans).\nA channel parameter is an optional parameter that allows you to track usage under your client\nID by assigning a distinct channel to each of your applications.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps client ID (for premium plans).\nWhen you have a Google Maps APIs Premium Plan license, you must authenticate\nyour application with either an API key or a client ID.\nThe Google Maps API will fail to load if both a client ID and an API key are included.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hostAndPath\n                                    \n                                \n                                \n                                    \n                                        hostAndPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Host and Path used for the  tag.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps API uses the browser's preferred language when displaying\ntextual information. If you wish to overwrite this behavior and force the API\nto use a given language, you can use this setting.\nSee https://developers.google.com/maps/documentation/javascript/basics#Language\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        libraries\n                                    \n                                \n                                \n                                    \n                                        libraries:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines which Google Maps libraries should get loaded.\nFor available libraries see: https://developers.google.com/maps/documentation/javascript/libraries\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        protocol\n                                    \n                                \n                                \n                                    \n                                        protocol:         GoogleMapsScriptProtocol\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GoogleMapsScriptProtocol\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Protocol used for the  tag.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                    \n                                \n                                \n                                    \n                                        region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The default bias for the map behavior is US.\nIf you wish to alter your application to serve different map tiles or bias the\napplication, you can overwrite the default behavior (US) by defining a region.\nSee https://developers.google.com/maps/documentation/javascript/basics#Region\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum GoogleMapsScriptProtocol {\n  HTTP = 1,\n  HTTPS = 2,\n  AUTO = 3,\n}\n\n/**\n * Token for the config of google maps module\n * Please provide an object of type {@link GoogleModuleOptions}.\n */\nexport const GOOGLE_MAPS_API_CONFIG = new InjectionToken\n>('angular-google-maps GOOGLE_MAPS_API_CONFIG');\n\nexport interface GoogleModuleOptions {\n  /**\n   * The Google Maps API Key (see:\n   * https://developers.google.com/maps/documentation/javascript/get-api-key)\n   */\n  apiKey?: string;\n\n  /**\n   * The Google Maps client ID (for premium plans).\n   * When you have a Google Maps APIs Premium Plan license, you must authenticate\n   * your application with either an API key or a client ID.\n   * The Google Maps API will fail to load if both a client ID and an API key are included.\n   */\n  clientId?: string;\n\n  /**\n   * The Google Maps channel name (for premium plans).\n   * A channel parameter is an optional parameter that allows you to track usage under your client\n   * ID by assigning a distinct channel to each of your applications.\n   */\n  channel?: string;\n\n  /**\n   * Google Maps API version.\n   */\n  apiVersion?: string;\n\n  /**\n   * Host and Path used for the `` tag.\n   */\n  hostAndPath?: string;\n\n  /**\n   * Protocol used for the `` tag.\n   */\n  protocol?: GoogleMapsScriptProtocol;\n\n  /**\n   * Defines which Google Maps libraries should get loaded.\n   * For available libraries see: https://developers.google.com/maps/documentation/javascript/libraries\n   */\n  libraries?: Array;\n\n  /**\n   * The default bias for the map behavior is US.\n   * If you wish to alter your application to serve different map tiles or bias the\n   * application, you can overwrite the default behavior (US) by defining a `region`.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Region\n   */\n  region?: string;\n\n  /**\n   * The Google Maps API uses the browser's preferred language when displaying\n   * textual information. If you wish to overwrite this behavior and force the API\n   * to use a given language, you can use this setting.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Language\n   */\n  language?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GooglePolygonManager.html":{"url":"injectables/GooglePolygonManager.html","title":"injectable - GooglePolygonManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GooglePolygonManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/polygon.manager.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PolygonManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPolygon\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                deletePolygon\n                            \n                            \n                                    Public\n                                setPolygonOptions\n                            \n                            \n                                    Public\n                                    Async\n                                updatePolygon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/polygon.manager.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addPolygon\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPolygon(path: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, path: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:64\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deletePolygon\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolygon(paths: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPolygonOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolygonOptions(path: NgMapsPolygonDirective, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updatePolygon\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolygon(polygon: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    polygon\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport {\n  MapsApiWrapper,\n  NgMapsPolygonDirective,\n  PolygonManager,\n} from '@ng-maps/core';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable()\nexport class GooglePolygonManager extends PolygonManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  public addPolygon(path: NgMapsPolygonDirective) {\n    const polygonPromise = this._mapsWrapper.createPolygon({\n      clickable: path.clickable,\n      draggable: path.draggable,\n      editable: path.editable,\n      fillColor: path.fillColor,\n      fillOpacity: path.fillOpacity,\n      geodesic: path.geodesic,\n      paths: path.paths,\n      strokeColor: path.strokeColor,\n      strokeOpacity: path.strokeOpacity,\n      strokeWeight: path.strokeWeight,\n      visible: path.visible,\n      zIndex: path.zIndex,\n    });\n    this._polygons.set(path, polygonPromise);\n  }\n\n  public async updatePolygon(polygon: NgMapsPolygonDirective): Promise {\n    const item = await this._polygons.get(polygon);\n    if (item != null) {\n      this._zone.run(() => {\n        item.setPaths(polygon.paths);\n      });\n    }\n  }\n\n  public setPolygonOptions(\n    path: NgMapsPolygonDirective,\n    options: { [propName: string]: any },\n  ): Promise {\n    return this._polygons.get(path).then((l: google.maps.Polygon) => {\n      l.setOptions(options);\n    });\n  }\n\n  public deletePolygon(paths: NgMapsPolygonDirective): Promise {\n    const m = this._polygons.get(paths);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polygon) => {\n      return this._zone.run(() => {\n        l.setMap(null);\n        this._polygons.delete(paths);\n      });\n    });\n  }\n\n  public createEventObservable(\n    eventName: string,\n    path: NgMapsPolygonDirective,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      this._polygons.get(path).then((l: google.maps.Polygon) => {\n        l.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GooglePolylineManager.html":{"url":"injectables/GooglePolylineManager.html","title":"injectable - GooglePolylineManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GooglePolylineManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/polyline.manager.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PolylineManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _convertPoints\n                            \n                            \n                                    Public\n                                addPolyline\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                deletePolyline\n                            \n                            \n                                    Public\n                                setPolylineOptions\n                            \n                            \n                                    Public\n                                updatePolylinePoints\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/polyline.manager.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _convertPoints\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _convertPoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addPolyline\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:80\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deletePolyline\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPolylineOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolylineOptions(line: NgMapsPolyline, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updatePolylinePoints\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolylinePoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport {\n  MapsApiWrapper,\n  NgMapsPolyline,\n  NgMapsPolylinePoint,\n  PolylineManager,\n} from '@ng-maps/core';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable()\nexport class GooglePolylineManager extends PolylineManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  protected _convertPoints(\n    line: NgMapsPolyline,\n  ): Array {\n    return line._getPoints().map((point: NgMapsPolylinePoint) => {\n      return {\n        lat: point.latitude,\n        lng: point.longitude,\n      } as google.maps.LatLngLiteral;\n    });\n  }\n\n  public addPolyline(line: NgMapsPolyline) {\n    const path = this._convertPoints(line);\n    const polylinePromise = this._mapsWrapper.createPolyline({\n      clickable: line.clickable,\n      draggable: line.draggable,\n      editable: line.editable,\n      geodesic: line.geodesic,\n      strokeColor: line.strokeColor,\n      strokeOpacity: line.strokeOpacity,\n      strokeWeight: line.strokeWeight,\n      visible: line.visible,\n      zIndex: line.zIndex,\n      icons: line.icons,\n      path,\n    });\n    this._polylines.set(line, polylinePromise);\n  }\n\n  public updatePolylinePoints(line: NgMapsPolyline): Promise {\n    const path = this._convertPoints(line);\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polyline) =>\n      this._zone.run(() => {\n        l.setPath(path);\n      }),\n    );\n  }\n\n  public setPolylineOptions(\n    line: NgMapsPolyline,\n    options: { [propName: string]: any },\n  ): Promise {\n    return this._polylines.get(line).then((l: google.maps.Polyline) => {\n      l.setOptions(options);\n    });\n  }\n\n  public deletePolyline(line: NgMapsPolyline): Promise {\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polyline) => {\n      return this._zone.run(() => {\n        l.setMap(null);\n        this._polylines.delete(line);\n      });\n    });\n  }\n\n  public createEventObservable(\n    eventName: string,\n    line: NgMapsPolyline,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      this._polylines.get(line).then((l: google.maps.Polyline) => {\n        l.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleRectangleManager.html":{"url":"injectables/GoogleRectangleManager.html","title":"injectable - GoogleRectangleManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleRectangleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/rectangle.manager.ts\n        \n\n\n            \n                Extends\n            \n            \n                    RectangleManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addRectangle\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Async\n                                getBounds\n                            \n                            \n                                    Public\n                                removeRectangle\n                            \n                            \n                                    Public\n                                setBounds\n                            \n                            \n                                    Public\n                                setDraggable\n                            \n                            \n                                    Public\n                                setEditable\n                            \n                            \n                                    Public\n                                setOptions\n                            \n                            \n                                    Public\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/rectangle.manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addRectangle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEventObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:97\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeRectangle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:47\n                \n            \n\n\n            \n                \n                    Removes the given rectangle from the map.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setBounds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDraggable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setEditable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(rectangle: NgMapsRectangleDirective, options: google.maps.RectangleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.RectangleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setVisible\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport {\n  BoundsLiteral,\n  MapsApiWrapper,\n  NgMapsRectangleDirective,\n  RectangleManager,\n} from '@ng-maps/core';\n\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable()\nexport class GoogleRectangleManager extends RectangleManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  public addRectangle(rectangle: NgMapsRectangleDirective) {\n    this._rectangles.set(\n      rectangle,\n      this._apiWrapper.createRectangle(\n        {\n          north: rectangle.north,\n          east: rectangle.east,\n          south: rectangle.south,\n          west: rectangle.west,\n        },\n        {\n          // clickable: rectangle.clickable,\n          // draggable: rectangle.draggable,\n          // editable: rectangle.editable,\n          fillColor: rectangle.fillColor,\n          fillOpacity: rectangle.fillOpacity,\n          strokeColor: rectangle.strokeColor,\n          strokeOpacity: rectangle.strokeOpacity,\n          // strokePosition: rectangle.strokePosition,\n          strokeWeight: rectangle.strokeWeight,\n          visible: rectangle.visible,\n          zIndex: rectangle.zIndex,\n        },\n      ),\n    );\n  }\n\n  /**\n   * Removes the given rectangle from the map.\n   */\n  public removeRectangle(rectangle: NgMapsRectangleDirective): Promise {\n    return this._rectangles.get(rectangle).then((r) => {\n      r.setMap(null);\n      this._rectangles.delete(rectangle);\n    });\n  }\n\n  public setOptions(\n    rectangle: NgMapsRectangleDirective,\n    options: google.maps.RectangleOptions,\n  ): Promise {\n    return this._rectangles.get(rectangle).then((r) => r.setOptions(options));\n  }\n\n  public async getBounds(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise {\n    const r = await this._rectangles.get(rectangle);\n    return r.getBounds().toJSON();\n  }\n\n  public setBounds(rectangle: NgMapsRectangleDirective): Promise {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setBounds({\n        north: rectangle.north,\n        east: rectangle.east,\n        south: rectangle.south,\n        west: rectangle.west,\n      });\n    });\n  }\n\n  public setEditable(rectangle: NgMapsRectangleDirective): Promise {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setEditable(rectangle.editable);\n    });\n  }\n\n  public setDraggable(rectangle: NgMapsRectangleDirective): Promise {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setDraggable(rectangle.draggable);\n    });\n  }\n\n  public setVisible(rectangle: NgMapsRectangleDirective): Promise {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setVisible(rectangle.visible);\n    });\n  }\n\n  public createEventObservable(\n    eventName: string,\n    rectangle: NgMapsRectangleDirective,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      let listener: google.maps.MapsEventListener = null;\n      this._rectangles.get(rectangle).then((r) => {\n        listener = r.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgMapsGoogleModule.html":{"url":"modules/NgMapsGoogleModule.html","title":"module - NgMapsGoogleModule","body":"\n                   \n\n\n\n\n    Modules\n    NgMapsGoogleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgMapsGoogleModule\n\n\n\ncluster_NgMapsGoogleModule_declarations\n\n\n\ncluster_NgMapsGoogleModule_GoogleComponent_providers\n\n\n\ncluster_NgMapsGoogleModule_exports\n\n\n\n\nGoogleComponent\n\nGoogleComponent\n\n\n\nNgMapsGoogleModule\n\nNgMapsGoogleModule\n\nNgMapsGoogleModule -->\n\nGoogleComponent->NgMapsGoogleModule\n\n\n\n\n\nGoogleComponent \n\nGoogleComponent \n\nGoogleComponent  -->\n\nNgMapsGoogleModule->GoogleComponent \n\n\n\n\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }\n\nGoogleComponent -->\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }->GoogleComponent\n\n\n\n\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }\n\nGoogleComponent -->\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }->GoogleComponent\n\n\n\n\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }\n\nGoogleComponent -->\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }->GoogleComponent\n\n\n\n\n\n{ provide: CircleManager, useClass: GoogleCircleManager }\n\n{ provide: CircleManager, useClass: GoogleCircleManager }\n\nGoogleComponent -->\n\n{ provide: CircleManager, useClass: GoogleCircleManager }->GoogleComponent\n\n\n\n\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }\n\nGoogleComponent -->\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }->GoogleComponent\n\n\n\n\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }\n\nGoogleComponent -->\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }->GoogleComponent\n\n\n\n\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }\n\nGoogleComponent -->\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }->GoogleComponent\n\n\n\n\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }\n\nGoogleComponent -->\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }->GoogleComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/google.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GoogleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GoogleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MapsAPILoader, MAP_PROVIDER } from '@ng-maps/core';\nimport { GoogleMapsScriptLoader } from './google-maps-script-loader.service';\nimport { GoogleComponent } from './google.component';\n\n@NgModule({\n  declarations: [GoogleComponent],\n  imports: [],\n  exports: [GoogleComponent],\n  providers: [\n    { provide: MapsAPILoader, useClass: GoogleMapsScriptLoader },\n    {\n      provide: MAP_PROVIDER,\n      useValue: 'GoogleMaps',\n    },\n  ],\n})\nexport class NgMapsGoogleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/google-maps-api-wrapper.ts\n            \n            injectable\n            GoogleMapsAPIWrapper\n            \n                27 %\n                (8/29)\n            \n        \n        \n            \n                \n                src/lib/google-maps-fit-bounds.service.ts\n            \n            injectable\n            GoogleMapsFitBoundsService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/lib/google-maps-script-loader.service.ts\n            \n            injectable\n            GoogleMapsScriptLoader\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/lib/google.component.ts\n            \n            component\n            GoogleComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lib/managers/circle.manager.ts\n            \n            injectable\n            GoogleCircleManager\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/lib/managers/info-window.manager.ts\n            \n            injectable\n            GoogleInfoWindowManager\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/lib/managers/marker.manager.ts\n            \n            injectable\n            GoogleMapsMarkerManager\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/lib/managers/polygon.manager.ts\n            \n            injectable\n            GooglePolygonManager\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/managers/polyline.manager.ts\n            \n            injectable\n            GooglePolylineManager\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/managers/rectangle.manager.ts\n            \n            injectable\n            GoogleRectangleManager\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/lib/options.ts\n            \n            interface\n            GoogleModuleOptions\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/lib/options.ts\n            \n            variable\n            GOOGLE_MAPS_API_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.0.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^13.0.0\n        \n            @angular/core : ^13.0.0\n        \n            @types/googlemaps : ~3.43.0\n        \n            @ng-maps/core : ^2.2.0\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GoogleMapsScriptProtocol   (src/.../options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/options.ts\n    \n        \n            \n                \n                    \n                        \n                        GoogleMapsScriptProtocol\n                    \n                \n                        \n                            \n                                 HTTP\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 HTTPS\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 AUTO\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ng-maps/core\n@ng-maps/core is a simple, modular and tree-shakable library for displaying google-maps inside an angular application\nInstallation\n\nNpm: npm install @ng-maps/google\nYarn: yarn add @ng-maps/google\n\nThen you will need to install typings for google maps as a dev dependency\n\nNpm: npm install -D @types/googlemaps\nYarn: yarn add -D @types/googlemaps\n\nAdd NgMapsGoogleModule to your AppModule.\nProvide your API key with the token provider\n{\n  provide: GOOGLE_MAPS_API_CONFIG,\n  useValue: {\n    apiKey: 'YOUR_API_KEY'\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgMapsGoogleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgMapsGoogleModule\n\n\n\ncluster_NgMapsGoogleModule_declarations\n\n\n\ncluster_NgMapsGoogleModule_GoogleComponent_providers\n\n\n\ncluster_NgMapsGoogleModule_exports\n\n\n\n\nGoogleComponent\n\nGoogleComponent\n\n\n\nNgMapsGoogleModule\n\nNgMapsGoogleModule\n\nNgMapsGoogleModule -->\n\nGoogleComponent->NgMapsGoogleModule\n\n\n\n\n\nGoogleComponent \n\nGoogleComponent \n\nGoogleComponent  -->\n\nNgMapsGoogleModule->GoogleComponent \n\n\n\n\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }\n\nGoogleComponent -->\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }->GoogleComponent\n\n\n\n\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }\n\nGoogleComponent -->\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }->GoogleComponent\n\n\n\n\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }\n\nGoogleComponent -->\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }->GoogleComponent\n\n\n\n\n\n{ provide: CircleManager, useClass: GoogleCircleManager }\n\n{ provide: CircleManager, useClass: GoogleCircleManager }\n\nGoogleComponent -->\n\n{ provide: CircleManager, useClass: GoogleCircleManager }->GoogleComponent\n\n\n\n\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }\n\nGoogleComponent -->\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }->GoogleComponent\n\n\n\n\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }\n\nGoogleComponent -->\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }->GoogleComponent\n\n\n\n\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }\n\nGoogleComponent -->\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }->GoogleComponent\n\n\n\n\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }\n\nGoogleComponent -->\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }->GoogleComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GOOGLE_MAPS_API_CONFIG   (src/.../options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GOOGLE_MAPS_API_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken\n>('angular-google-maps GOOGLE_MAPS_API_CONFIG')\n                        \n                    \n\n                \n                    \n                        Token for the config of google maps module\nPlease provide an object of type GoogleModuleOptions.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
