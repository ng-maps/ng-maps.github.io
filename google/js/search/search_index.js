var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/GoogleCircleManager.html",[0,0.14,1,1.18]],["body/injectables/GoogleCircleManager.html",[0,0.141,1,1.188,2,0.518,3,0.385,4,0.385,5,0.327,6,1.446,7,0.787,8,1.907,9,0.273,10,0.681,11,1.776,12,2.737,13,1.437,14,2.095,15,2.658,16,2.737,17,2.737,18,2.737,19,2.737,20,2.197,21,2.197,22,2.228,23,2.737,24,2.197,25,0.518,26,1.037,27,1.063,28,1.4,29,1.4,30,1.215,31,1.801,32,1.228,33,0.055,34,1.044,35,0.756,36,1.044,37,0.682,38,2.737,39,5.399,40,1.801,41,5.188,42,1.201,43,0.518,44,0.782,45,1.222,46,1.801,47,1.188,48,1.188,49,1.437,50,1.801,51,1.801,52,1.947,53,2.737,54,1.801,55,2.737,56,1.801,57,2.737,58,1.801,59,2.197,60,1.576,61,0.787,62,2.737,63,1.801,64,2.737,65,1.801,66,2.737,67,1.801,68,1.801,69,1.586,70,3.311,71,1.801,72,1.212,73,2.197,74,2.737,75,1.801,76,2.737,77,1.801,78,0.707,79,0.327,80,1.188,81,0.682,82,1.212,83,1.037,84,0.273,85,0.327,86,0.385,87,0.448,88,0.682,89,1.801,90,1.801,91,1.801,92,0.782,93,1.801,94,1.801,95,1.364,96,2.737,97,1.364,98,2.737,99,1.037,100,1.801,101,1.037,102,1.801,103,1.037,104,1.801,105,1.212,106,1.801,107,1.212,108,1.801,109,1.801,110,1.801,111,1.037,112,1.801,113,1.037,114,1.801,115,1.446,116,1.801,117,1.037,118,1.801,119,1.037,120,1.801,121,0.898,122,1.801,123,0.92,124,3.698,125,1.843,126,3.698,127,1.801,128,1.801,129,1.801,130,1.801,131,1.801,132,1.801,133,2.197,134,1.212,135,1.037,136,3.311,137,2.737,138,1.369,139,1.801,140,1.801,141,1.801,142,3.698,143,1.801,144,3.311,145,3.311,146,3.311,147,1.801,148,1.801,149,1.801,150,1.801,151,1.801,152,0.385,153,0.782,154,2.228,155,1.446,156,0.904,157,1.801,158,0.782,159,0.782,160,0.782,161,1.446,162,0.027,163,0.027]],["title/components/GoogleComponent.html",[164,1.566,165,1.355]],["body/components/GoogleComponent.html",[1,1.435,3,0.384,4,0.384,5,0.326,7,0.785,8,1.904,9,0.273,10,0.68,14,1.435,25,0.785,26,0.681,27,1.203,28,1.399,29,1.399,30,1.115,32,0.447,33,0.055,34,0.929,35,0.273,36,0.384,37,1.035,42,1.082,43,1.25,61,1.32,78,1,79,0.326,83,1.574,84,0.273,85,0.326,86,0.384,87,0.447,88,0.681,95,1.362,97,1.362,123,1.142,162,0.027,163,0.027,164,1.904,165,1.841,166,2.733,167,3.307,168,1.798,169,1.443,170,1.443,171,3.307,172,1.798,173,2.194,174,1.9,175,3.377,176,2.127,177,2.41,178,1.435,179,1.648,180,1.435,181,1.904,182,1.435,183,1.904,184,1.435,185,1.904,186,1.435,187,1.904,188,1.435,189,3.307,190,3.307,191,3.307,192,3.307,193,3.307,194,4.185,195,3.307,196,2.655,197,3.307,198,3.307,199,2.733,200,2.574,201,3.694,202,3.694,203,3.694,204,3.694,205,3.694,206,3.694,207,3.694,208,3.694,209,1.798,210,1.798,211,1.798,212,1.798,213,1.798,214,1.798,215,1.798,216,1.798,217,0.903,218,0.68,219,1.035,220,1.798,221,1.21,222,1.798,223,1.798,224,1.798,225,1.798,226,1.798,227,1.798,228,1.798,229,1.798,230,4.35,231,4.35,232,1.798,233,3.974,234,1.798,235,2.733,236,1.798,237,2.733,238,1.798,239,1.798,240,1.443,241,4.35,242,1.798,243,1.798,244,1.798,245,1.798,246,1.798,247,1.798,248,1.798,249,1.798,250,1.798,251,1.798,252,1.443,253,1.798,254,1.798,255,1.798,256,1.798,257,1.798,258,1.574,259,1.798,260,1.798,261,1.362,262,4.185,263,1.798,264,1.839,265,1.798,266,1.798,267,1.798,268,0.896,269,1.798,270,1.798,271,1.798,272,1.798,273,1.798,274,1.798,275,1.798,276,1.798,277,1.798,278,0.896,279,1.798,280,1.798,281,1.798,282,1.798,283,1.798,284,2.733,285,2.733,286,1.798,287,3.694,288,1.798,289,1.798,290,1.798]],["title/injectables/GoogleInfoWindowManager.html",[0,0.14,188,1.18]],["body/injectables/GoogleInfoWindowManager.html",[0,0.155,2,0.589,3,0.644,4,0.438,5,0.372,7,0.867,9,0.311,10,0.75,11,1.753,13,1.552,14,2.064,22,2.407,25,0.867,26,0.776,27,1.134,28,1.493,29,1.493,30,1.184,32,1.203,33,0.055,34,1.016,35,0.734,36,1.016,37,1.142,42,1.16,43,1.306,44,0.89,45,1.182,47,1.308,48,1.308,49,1.824,52,1.493,60,1.737,61,0.589,69,1.591,73,2.421,78,0.764,79,0.372,80,1.308,81,0.776,83,1.737,84,0.311,85,0.372,86,0.438,87,0.51,88,0.776,95,1.503,97,1.503,121,1.022,123,1.235,125,1.966,135,1.737,138,1.028,152,0.438,153,0.89,154,2.029,156,1.182,158,0.89,159,1.308,160,0.89,162,0.029,163,0.029,179,1.966,187,2.06,188,1.308,196,1.646,217,0.996,218,0.75,252,2.421,264,2.029,291,3.884,292,1.646,293,3.016,294,3.016,295,3.577,296,3.016,297,3.016,298,3.016,299,3.944,300,2.05,301,3.016,302,5.32,303,2.05,304,5.056,305,3.016,306,2.05,307,2.05,308,3.016,309,2.05,310,2.05,311,3.016,312,2.05,313,2.05,314,3.944,315,2.05,316,3.016,317,2.05,318,3.016,319,2.05,320,3.016,321,4.544,322,1.646,323,1.38,324,1.646,325,2.05,326,2.05,327,2.05,328,3.577,329,3.577,330,2.05,331,3.577,332,2.05,333,2.05,334,3.016,335,2.421,336,2.05,337,3.016,338,2.05,339,2.05,340,2.05,341,2.05,342,2.05,343,2.05,344,2.05,345,2.05,346,2.05,347,2.05,348,2.05,349,2.05]],["title/injectables/GoogleMapsFitBoundsService.html",[0,0.14,178,1.18]],["body/injectables/GoogleMapsFitBoundsService.html",[0,0.218,2,0.963,3,0.716,4,0.716,5,0.608,7,1.213,9,0.509,10,1.05,25,0.963,30,1.05,32,1.05,33,0.054,34,0.902,35,0.641,36,0.902,42,0.834,61,1.437,72,2.256,78,0.902,79,0.608,82,3.109,83,1.93,84,0.509,85,0.608,86,0.716,87,0.834,123,0.834,138,1.213,152,0.716,156,1.107,162,0.041,163,0.041,177,2.879,178,1.832,200,2.303,218,1.149,221,3.109,258,1.93,350,3.109,351,2.691,352,4.221,353,4.221,354,4.62,355,4.221,356,4.62,357,4.221,358,3.263,359,3.352,360,3.352,361,3.352,362,3.352,363,4.221,364,3.352,365,3.352,366,3.352,367,3.352,368,3.352,369,3.352]],["title/injectables/GoogleMapsMarkerManager.html",[0,0.14,180,1.18]],["body/injectables/GoogleMapsMarkerManager.html",[0,0.146,2,0.542,3,0.403,4,0.403,5,0.342,7,0.814,9,0.286,10,0.705,11,1.79,13,1.477,25,0.542,26,1.072,27,1.088,28,1.433,29,1.433,30,1.249,32,1.249,33,0.055,34,1.064,35,0.768,36,1.064,37,0.714,42,1.227,43,1.51,44,0.818,45,1.34,47,1.229,48,1.76,49,1.477,61,1.088,78,0.727,79,0.342,80,1.229,81,0.714,84,0.286,85,0.342,86,0.403,87,0.469,88,0.714,92,1.229,95,0.939,97,0.939,123,1.213,135,1.631,138,0.978,152,0.808,153,0.818,156,0.623,158,0.818,159,1.229,160,0.818,162,0.028,163,0.028,179,1.696,180,1.229,200,1.696,268,1.696,278,0.939,323,1.268,324,1.513,335,4.061,370,1.513,371,3.403,372,2.832,373,2.832,374,2.832,375,2.832,376,2.832,377,2.832,378,2.832,379,2.832,380,2.832,381,2.832,382,2.832,383,2.832,384,1.884,385,5.424,386,1.884,387,2.832,388,1.884,389,2.832,390,1.884,391,2.832,392,1.884,393,2.832,394,1.884,395,2.832,396,1.884,397,2.832,398,1.884,399,2.832,400,1.884,401,2.832,402,1.884,403,2.832,404,1.884,405,2.832,406,1.884,407,2.832,408,1.884,409,2.832,410,1.884,411,1.085,412,1.884,413,3.318,414,4.876,415,1.884,416,1.884,417,1.884,418,1.884,419,1.884,420,1.884,421,1.884,422,1.884,423,1.884,424,1.884,425,1.884,426,1.884,427,1.884,428,1.884,429,1.884,430,1.884,431,1.884,432,1.884,433,1.884,434,1.884,435,1.884]],["title/injectables/GoogleMapsScriptLoader.html",[0,0.14,436,1.566]],["body/injectables/GoogleMapsScriptLoader.html",[0,0.134,2,0.485,3,0.36,4,0.36,5,0.306,7,0.748,9,0.256,10,0.647,11,1.348,14,1.956,25,0.748,30,1.198,32,0.889,33,0.055,34,0.763,35,0.698,36,0.872,42,1.015,43,0.485,45,1.651,52,1.774,61,0.485,69,0.638,72,1.135,78,0.825,79,0.306,81,0.638,84,0.256,85,0.306,86,0.36,87,0.419,92,1.129,123,1.058,125,1.584,133,1.354,134,1.135,135,0.971,138,1.295,152,0.679,156,0.86,162,0.025,163,0.025,174,0.985,200,2.631,217,0.557,218,1.223,258,0.971,264,1.135,268,0.84,278,2.034,322,2.089,323,1.135,350,3.277,358,2.138,411,1.83,436,1.499,437,3.338,438,1.354,439,3.178,440,3.178,441,4.08,442,3.178,443,3.178,444,3.178,445,3.861,446,2.602,447,3.178,448,3.573,449,2.602,450,3.573,451,3.276,452,1.686,453,1.956,454,4.392,455,2.602,456,2.529,457,2.602,458,1.686,459,1.686,460,3.861,461,1.686,462,3.861,463,1.686,464,2.602,465,1.686,466,4.392,467,3.573,468,3.573,469,2.089,470,2.089,471,2.602,472,2.602,473,2.602,474,2.602,475,2.602,476,2.602,477,1.686,478,1.686,479,1.686,480,3.178,481,2.602,482,1.686,483,1.686,484,2.602,485,1.686,486,1.686,487,1.686,488,2.602,489,1.354,490,1.686,491,1.751,492,0.732,493,1.686,494,1.686,495,1.686,496,1.686,497,1.686,498,1.686,499,1.135,500,1.686,501,1.686,502,3.178,503,1.686,504,1.686,505,1.686,506,1.686,507,1.686,508,1.354,509,1.686,510,1.135,511,3.573,512,1.686,513,1.686,514,2.602,515,1.686,516,1.686,517,1.686,518,1.686,519,1.686,520,1.686,521,1.686,522,1.686,523,1.686,524,1.686,525,1.686,526,1.686,527,1.686,528,1.686,529,2.602,530,1.686,531,1.686,532,1.686,533,1.686,534,1.686,535,2.602,536,1.686,537,2.602,538,2.868,539,1.686,540,3.178,541,1.686,542,3.178,543,1.686,544,1.135,545,1.135,546,1.354,547,1.686,548,1.686,549,1.686,550,2.598,551,1.686,552,1.686,553,1.686,554,1.686,555,1.686,556,1.354,557,1.686,558,1.354,559,1.686,560,1.354,561,1.686,562,1.354,563,1.686,564,1.354,565,1.686,566,1.686,567,1.686,568,1.686,569,3.178,570,1.686,571,3.178,572,1.686,573,1.686,574,2.602,575,2.602,576,1.686,577,1.686,578,2.602,579,1.686,580,1.686,581,1.686,582,1.686,583,1.686,584,1.686,585,1.686,586,1.686]],["title/interfaces/GoogleModuleOptions.html",[261,1.355,453,1.18]],["body/interfaces/GoogleModuleOptions.html",[3,0.449,4,0.449,5,0.381,9,0.319,33,0.054,34,0.656,35,0.738,36,1.121,45,1.741,60,1.768,61,1.147,78,0.449,79,0.381,86,0.775,92,1.332,123,0.523,134,1.413,152,0.449,162,0.03,163,0.03,174,0.795,217,1.719,218,1.294,219,2.964,261,1.047,268,1.808,411,2.298,451,2.464,453,1.574,456,1.21,469,3.203,491,2.685,492,1.332,499,1.413,508,2.464,538,3.559,544,1.413,545,1.413,546,3.203,550,3.158,556,3.768,558,3.906,560,3.768,562,3.559,564,3.768,587,2.101,588,1.21,589,3.203,590,3.99,591,3.99,592,4.694,593,3.07,594,2.464,595,4.433,596,3.99,597,3.99,598,3.07,599,3.07,600,3.07,601,3.07,602,4.694,603,3.07,604,3.07,605,3.07,606,3.07,607,3.07,608,3.07,609,2.464,610,3.07,611,3.559,612,3.07,613,3.07,614,3.07,615,3.07,616,2.066,617,3.99,618,3.99,619,3.07,620,3.07,621,3.07,622,2.464,623,3.07,624,3.07,625,3.99,626,3.99,627,4.433,628,3.07,629,3.07,630,3.07,631,3.07,632,3.07,633,3.07,634,3.99,635,3.07,636,3.07,637,3.07,638,3.07,639,3.07,640,3.07,641,2.464,642,2.101,643,1.413,644,1.686,645,1.686,646,1.686,647,1.413,648,1.21,649,1.686,650,1.21]],["title/injectables/GooglePolygonManager.html",[0,0.14,182,1.18]],["body/injectables/GooglePolygonManager.html",[0,0.179,2,0.716,3,0.532,4,0.532,5,0.452,7,0.996,9,0.378,10,0.862,11,1.734,13,1.73,14,1.73,25,0.716,26,1.313,27,1.239,28,1.632,29,1.632,30,1.167,32,1.197,33,0.055,34,1.002,35,0.756,36,1.002,37,0.943,42,1.127,43,0.716,44,1.081,45,1.424,47,1.504,48,1.504,49,1.73,52,1.777,69,1.51,78,0.852,79,0.452,80,1.504,81,0.943,84,0.378,85,0.452,86,0.532,87,0.62,88,0.943,99,1.435,101,1.435,103,1.435,105,1.676,107,1.676,111,1.435,113,1.435,117,1.435,119,1.435,121,1.242,123,0.992,125,1.242,138,1.239,152,0.532,153,1.081,156,1.145,158,1.081,159,1.73,160,1.081,162,0.034,163,0.034,181,2.296,182,1.504,413,2.333,510,1.676,616,3.157,651,2,652,3.467,653,3.467,654,3.987,655,3.467,656,2.491,657,3.467,658,5.274,659,2.491,660,2.491,661,3.467,662,2.491,663,3.467,664,2.491,665,2.783,666,2.491,667,3.467,668,2.491,669,2.491,670,3.467,671,2.491,672,2.491,673,2.491,674,2.491,675,2.491,676,2.491,677,2,678,2.491,679,2.491,680,2.491,681,2.491,682,2.491,683,2.491,684,2.491,685,2.491,686,3.467,687,2.491,688,2.491,689,2,690,3.467,691,3.987,692,2,693,2.491,694,2,695,2,696,2.491,697,2]],["title/injectables/GooglePolylineManager.html",[0,0.14,184,1.18]],["body/injectables/GooglePolylineManager.html",[0,0.171,2,0.671,3,0.499,4,0.499,5,0.424,7,0.952,9,0.354,10,0.824,11,1.718,13,1.671,25,0.671,26,1.255,27,1.204,28,1.587,29,1.587,30,1.176,32,1.201,33,0.055,34,1.01,35,0.756,36,1.01,37,0.884,42,1.143,43,0.671,44,1.013,45,1.384,47,1.438,48,1.438,49,1.671,52,1.74,69,1.458,78,0.823,79,0.424,80,1.438,81,0.884,84,0.354,85,0.424,86,0.499,87,0.581,88,0.884,95,1.164,97,1.164,99,1.345,101,1.345,103,1.345,111,1.345,113,1.345,117,1.345,119,1.345,121,1.164,123,1.101,138,1.358,152,0.499,153,1.013,156,1.095,158,1.013,159,1.671,160,1.013,162,0.032,163,0.032,183,2.217,184,1.438,200,1.919,240,1.875,268,1.651,413,2.82,510,2.23,616,2.591,665,2.66,677,1.875,689,1.875,692,1.875,694,2.66,695,1.875,697,1.875,698,1.875,699,3.851,700,3.313,701,3.313,702,3.851,703,3.313,704,2.336,705,2.336,706,5.297,707,2.336,708,4.981,709,3.313,710,2.336,711,2.336,712,3.313,713,2.336,714,2.336,715,2.336,716,3.313,717,2.336,718,3.313,719,2.336,720,2.336,721,2.336,722,2.336,723,3.313,724,3.313,725,2.336,726,2.336,727,2.336,728,2.336,729,2.336,730,2.336,731,2.336,732,2.336,733,2.336,734,2.336,735,2.336,736,2.336,737,2.336,738,3.313,739,4.19,740,2.336,741,3.313,742,2.336]],["title/injectables/GoogleRectangleManager.html",[0,0.14,186,1.18]],["body/injectables/GoogleRectangleManager.html",[0,0.158,2,0.6,3,0.446,4,0.446,5,0.379,7,0.878,9,0.317,10,0.76,11,1.769,13,1.569,14,1.569,15,2.902,20,2.454,21,2.454,22,2.433,24,2.454,25,0.6,26,1.157,27,1.144,28,1.507,29,1.507,30,1.209,32,1.225,33,0.055,34,1.038,35,0.747,36,1.038,37,0.791,42,1.189,43,0.6,44,0.906,45,1.194,47,1.326,48,1.326,49,1.569,52,1.921,59,2.454,60,1.76,61,0.878,69,1.369,78,0.772,79,0.379,80,1.326,81,0.791,82,1.405,84,0.317,85,0.379,86,0.446,87,0.52,88,0.791,99,1.203,101,1.203,103,1.203,105,1.405,107,1.405,111,1.203,113,1.203,115,1.677,117,1.203,119,1.203,121,1.041,123,0.52,125,1.041,138,1.374,152,0.446,153,0.906,154,2.433,155,1.677,156,1.01,158,0.906,159,0.906,160,0.906,161,1.677,162,0.03,163,0.03,185,2.082,186,1.326,743,1.677,744,3.057,745,3.057,746,3.057,747,2.088,748,3.057,749,5.367,750,2.088,751,5.143,752,2.088,753,2.088,754,2.088,755,3.057,756,2.088,757,3.057,758,2.088,759,3.057,760,2.088,761,3.057,762,2.088,763,2.088,764,3.615,765,2.088,766,3.057,767,2.088,768,2.088,769,2.088,770,3.057,771,3.057,772,3.057,773,3.057,774,3.057,775,3.057,776,3.057,777,3.057,778,2.088,779,2.088,780,2.088,781,2.088,782,2.088,783,2.088,784,2.088,785,2.088,786,2.088,787,2.088,788,2.088,789,3.979,790,2.088,791,2.088,792,2.088,793,2.088,794,2.088,795,2.088,796,2.088,797,3.615,798,3.615,799,3.615,800,2.088,801,2.088,802,2.088,803,2.088]],["title/modules/NgMapsGoogleModule.html",[648,1.566,804,1.355]],["body/modules/NgMapsGoogleModule.html",[1,1.68,3,0.504,4,0.504,5,0.428,8,2.23,10,0.587,11,1.103,27,1.113,30,0.83,32,0.83,33,0.055,34,0.713,35,0.506,36,0.713,42,0.83,43,0.678,52,0.894,69,0.894,78,0.949,79,0.428,84,0.358,85,0.428,86,0.504,87,0.587,138,0.959,162,0.033,163,0.033,165,2.704,173,3.109,174,2.054,175,3.629,176,2.23,177,2.23,178,1.68,179,1.93,180,1.68,181,2.23,182,1.68,183,2.23,184,1.68,185,2.23,186,1.68,187,2.23,188,1.68,217,0.78,218,0.587,358,2.246,436,1.922,437,1.588,453,1.927,456,2.23,470,1.895,492,1.68,804,2.454,805,1.588,806,1.922,807,1.895,808,1.895,809,1.895,810,1.895,811,2.68,812,1.895,813,1.895,814,2.36,815,3.338,816,3.338,817,4.21,818,3.338,819,2.36,820,2.36,821,4.442,822,3.338,823,2.36,824,2.36,825,3.873,826,4.21,827,3.338,828,2.36,829,2.36,830,2.68,831,1.895,832,2.36]],["title/coverage.html",[833,2.956]],["body/coverage.html",[0,0.275,1,1.538,5,0.643,6,2.845,33,0.053,35,0.538,152,0.757,162,0.043,163,0.043,164,2.041,165,1.766,170,2.845,176,2.041,178,1.538,180,1.538,182,1.538,184,1.538,186,1.538,188,1.538,218,1.179,219,2.041,221,2.385,258,2.849,261,1.766,291,2.845,292,2.845,350,3.188,351,2.845,370,2.845,436,2.041,437,2.385,438,2.845,453,1.538,492,1.538,588,2.517,651,2.845,698,2.845,743,2.845,833,2.845,834,3.544,835,3.544,836,3.544,837,3.544,838,3.544,839,3.544,840,3.544,841,3.544,842,4.37,843,4.37,844,3.544,845,3.544,846,3.544,847,3.544,848,3.544,849,3.544,850,2.845,851,3.544,852,3.544,853,3.544,854,3.544,855,3.544,856,3.544,857,3.544,858,3.544]],["title/dependencies.html",[806,1.879,859,1.835]],["body/dependencies.html",[33,0.053,79,0.75,84,0.627,85,0.75,162,0.047,163,0.047,489,3.317,806,2.758,860,4.131,861,4.131,862,4.131,863,4.79,864,3.317,865,4.131,866,3.317]],["title/miscellaneous/enumerations.html",[867,1.316,868,2.619]],["body/miscellaneous/enumerations.html",[9,0.627,33,0.052,162,0.047,163,0.047,278,2.521,491,3.223,544,2.78,545,2.78,588,2.379,643,2.78,644,3.317,645,3.317,646,3.317,867,2.379,868,3.317,869,3.317]],["title/index.html",[9,0.347,870,2.286,871,2.286]],["body/index.html",[33,0.051,84,0.767,85,0.824,162,0.044,163,0.044,169,3.031,174,1.72,217,1.5,218,1.13,219,2.174,492,1.638,550,2.54,589,3.031,611,3.031,622,3.031,647,2.54,650,2.174,804,1.881,830,3.031,864,3.646,872,3.775,873,3.775,874,3.775,875,3.775,876,3.775,877,3.775,878,5.055,879,4.871,880,4.542,881,5.055,882,4.871,883,3.775,884,3.775,885,3.775,886,3.775,887,4.542,888,3.775,889,3.775,890,3.775]],["title/modules.html",[805,2.478]],["body/modules.html",[33,0.048,162,0.048,163,0.048,804,2.123,805,2.866,891,4.259,892,4.259,893,4.259,894,4.259]],["title/overview.html",[895,2.956]],["body/overview.html",[1,1.875,2,0.837,8,2.488,27,1.242,33,0.055,162,0.038,163,0.038,164,1.677,165,2.727,174,2.075,175,3.687,176,2.488,177,2.488,178,1.875,179,2.153,180,1.875,181,2.488,182,1.875,183,2.488,184,1.875,185,2.488,186,1.875,187,2.488,188,1.875,261,1.451,643,2.907,648,1.677,804,2.384,806,2.219,807,2.337,808,2.337,809,2.337,810,2.337,811,3.094,812,2.337,813,2.337,850,2.337,895,2.337]],["title/properties.html",[92,1.416,859,1.835]],["body/properties.html",[33,0.053,61,1.148,84,0.606,92,1.733,162,0.046,163,0.046,217,1.551,218,1.168,594,3.206,609,3.206,650,2.3,831,3.206,866,3.206,896,3.993,897,3.993,898,3.993,899,3.993,900,3.993,901,3.993,902,3.993,903,3.993,904,4.696,905,4.696,906,3.993,907,3.993,908,3.993,909,3.993]],["title/miscellaneous/variables.html",[867,1.316,910,2.619]],["body/miscellaneous/variables.html",[9,0.617,33,0.049,35,0.617,152,0.869,162,0.046,163,0.046,174,1.54,217,1.568,218,1.181,278,2.026,411,2.341,453,1.764,456,2.341,492,2.181,499,2.736,588,2.341,641,3.264,647,2.736,648,2.341,649,3.264,650,2.341,867,2.341,869,3.264,910,3.264]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":258,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{},"coverage.html":{}}}],["0/16",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":643,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1/1",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["14.0.0",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":644,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.0",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["27",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":646,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.0",{"_index":866,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["3.43.0",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["8/29",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":850,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["9/10",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["_config",{"_index":439,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_convertpoints",{"_index":699,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["_convertpoints(line",{"_index":705,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["_document",{"_index":440,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_fitboundsservice",{"_index":208,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_getscriptsrc",{"_index":446,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_getscriptsrc(callbackname",{"_index":457,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_handleboundschange",{"_index":201,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handleidleevent",{"_index":202,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handlemapcenterchange",{"_index":203,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handlemapmouseevents",{"_index":204,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handlemaptypeidchange",{"_index":205,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handlemapzoomchange",{"_index":206,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_handletilesloadedevent",{"_index":207,"title":{},"body":{"components/GoogleComponent.html":{}}}],["_loader",{"_index":360,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["_mapswrapper",{"_index":37,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["_markermanager",{"_index":299,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["_markers",{"_index":371,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["_script_id",{"_index":442,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_scriptloadingpromise",{"_index":443,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_window",{"_index":444,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["_zone",{"_index":28,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["actual_component",{"_index":290,"title":{},"body":{"components/GoogleComponent.html":{}}}],["add",{"_index":882,"title":{},"body":{"index.html":{}}}],["addcircle",{"_index":12,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["addcircle(circle",{"_index":38,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["addinfowindow",{"_index":293,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["addinfowindow(infowindow",{"_index":301,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["addpolygon",{"_index":652,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["addpolygon(path",{"_index":657,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["addpolyline",{"_index":700,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["addpolyline(line",{"_index":709,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["addrectangle",{"_index":744,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["addrectangle(rectangle",{"_index":748,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["agm",{"_index":899,"title":{},"body":{"properties.html":{}}}],["allows",{"_index":598,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["already",{"_index":323,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["alter",{"_index":635,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["angular",{"_index":650,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":489,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"dependencies.html":{}}}],["angular/core",{"_index":79,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":898,"title":{},"body":{"properties.html":{}}}],["any).google",{"_index":506,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["any).google.maps",{"_index":507,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["api",{"_index":219,"title":{},"body":{"components/GoogleComponent.html":{},"interfaces/GoogleModuleOptions.html":{},"coverage.html":{},"index.html":{}}}],["apikey",{"_index":589,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{}}}],["apis",{"_index":607,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["apiversion",{"_index":590,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["application",{"_index":611,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{}}}],["applications",{"_index":606,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["appmodule",{"_index":888,"title":{},"body":{"index.html":{}}}],["array",{"_index":268,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolylineManager.html":{}}}],["array.isarray(i",{"_index":582,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["array.isarray(queryparams[k",{"_index":575,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["arrays",{"_index":574,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["assigning",{"_index":603,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["assignscriptloadingpromise",{"_index":447,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["assignscriptloadingpromise(scriptelement",{"_index":459,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["async",{"_index":14,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["authenticate",{"_index":610,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["auto",{"_index":645,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["available",{"_index":632,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["await",{"_index":125,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["behavior",{"_index":627,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["bias",{"_index":634,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["bootstrapping",{"_index":476,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["both",{"_index":613,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["bounds",{"_index":354,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["bounds.extend(b",{"_index":368,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["bounds.service",{"_index":222,"title":{},"body":{"components/GoogleComponent.html":{}}}],["bounds.service.ts",{"_index":351,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{},"coverage.html":{}}}],["bounds.service.ts:14",{"_index":359,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["bounds.service.ts:19",{"_index":362,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["bounds.tojson",{"_index":369,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["boundsliteral",{"_index":82,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleRectangleManager.html":{}}}],["break",{"_index":542,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["browse",{"_index":894,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":891,"title":{},"body":{"modules.html":{}}}],["browser's",{"_index":620,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["bugs",{"_index":903,"title":{},"body":{"properties.html":{}}}],["c",{"_index":124,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.addlistener(eventname",{"_index":157,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.getbounds().tojson",{"_index":140,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.getcenter().tojson",{"_index":141,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.getradius",{"_index":143,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setcenter",{"_index":147,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setdraggable(circle.draggable",{"_index":149,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.seteditable(circle.editable",{"_index":148,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setmap(null",{"_index":127,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setoptions(options",{"_index":139,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setradius(circle.radius",{"_index":151,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["c.setvisible(circle.visible",{"_index":150,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["callback",{"_index":554,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["callbackname",{"_index":445,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["case",{"_index":540,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["casting",{"_index":132,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["center",{"_index":346,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["center.lat",{"_index":236,"title":{},"body":{"components/GoogleComponent.html":{}}}],["center.lng",{"_index":238,"title":{},"body":{"components/GoogleComponent.html":{}}}],["channel",{"_index":558,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["check",{"_index":130,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["checkscriptelement",{"_index":448,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["circle",{"_index":41,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.clickable",{"_index":100,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.draggable",{"_index":102,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.editable",{"_index":104,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.fillcolor",{"_index":106,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.fillopacity",{"_index":108,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.latitude",{"_index":96,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.longitude",{"_index":98,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.radius",{"_index":110,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.strokecolor",{"_index":112,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.strokeopacity",{"_index":114,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.strokeposition",{"_index":116,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.strokeweight",{"_index":118,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.visible",{"_index":120,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circle.zindex",{"_index":122,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["circlemanager",{"_index":8,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["class",{"_index":87,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["click",{"_index":269,"title":{},"body":{"components/GoogleComponent.html":{}}}],["clickable",{"_index":99,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["client",{"_index":556,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["clientid",{"_index":591,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["close",{"_index":294,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["close(infowindow",{"_index":305,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["cluster_ngmapsgooglemodule",{"_index":807,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["cluster_ngmapsgooglemodule_declarations",{"_index":809,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["cluster_ngmapsgooglemodule_exports",{"_index":808,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["cluster_ngmapsgooglemodule_googlecomponent_providers",{"_index":810,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["comma",{"_index":579,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["commented",{"_index":91,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["component",{"_index":164,"title":{"components/GoogleComponent.html":{}},"body":{"components/GoogleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_template",{"_index":288,"title":{},"body":{"components/GoogleComponent.html":{}}}],["components",{"_index":166,"title":{},"body":{"components/GoogleComponent.html":{}}}],["computing",{"_index":353,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["config",{"_index":456,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"miscellaneous/variables.html":{}}}],["config.apikey",{"_index":555,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.apiversion",{"_index":552,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.channel",{"_index":559,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.clientid",{"_index":557,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.hostandpath",{"_index":547,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.language",{"_index":565,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.libraries",{"_index":561,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.protocol",{"_index":536,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.region",{"_index":563,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["config.then((c",{"_index":497,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["configuration",{"_index":466,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["configure",{"_index":449,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["configure(config",{"_index":464,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["console.log('open",{"_index":333,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["const",{"_index":123,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["constructor(_loader",{"_index":357,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["constructor(_mapswrapper",{"_index":26,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["constructor(config",{"_index":452,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["container",{"_index":191,"title":{},"body":{"components/GoogleComponent.html":{}}}],["content",{"_index":196,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{}}}],["coords",{"_index":279,"title":{},"body":{"components/GoogleComponent.html":{}}}],["coverage",{"_index":833,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createeventobservable",{"_index":13,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["createeventobservable(eventname",{"_index":44,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["creates",{"_index":308,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["createscriptelement",{"_index":450,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["d",{"_index":887,"title":{},"body":{"index.html":{}}}],["dblclick",{"_index":273,"title":{},"body":{"components/GoogleComponent.html":{}}}],["declarations",{"_index":815,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["default",{"_index":411,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["defines",{"_index":631,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["defining",{"_index":639,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["deleted",{"_index":324,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{}}}],["deleteinfowindow",{"_index":295,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["deleteinfowindow(infowindow",{"_index":309,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["deletemarker",{"_index":372,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["deletemarker(marker",{"_index":387,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["deletepolygon",{"_index":653,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["deletepolygon(paths",{"_index":661,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["deletepolyline",{"_index":701,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["deletepolyline(line",{"_index":712,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["dependencies",{"_index":806,"title":{"dependencies.html":{}},"body":{"modules/NgMapsGoogleModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":886,"title":{},"body":{"index.html":{}}}],["description",{"_index":72,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["dev",{"_index":885,"title":{},"body":{"index.html":{}}}],["different",{"_index":637,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["directive",{"_index":286,"title":{},"body":{"components/GoogleComponent.html":{}}}],["directives",{"_index":289,"title":{},"body":{"components/GoogleComponent.html":{}}}],["disableautopan",{"_index":344,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["display",{"_index":197,"title":{},"body":{"components/GoogleComponent.html":{}}}],["displaying",{"_index":622,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{}}}],["distinct",{"_index":604,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["document",{"_index":454,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["documentation",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":168,"title":{},"body":{"components/GoogleComponent.html":{}}}],["draggable",{"_index":101,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["e",{"_index":158,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["e.emitter.emit(value",{"_index":282,"title":{},"body":{"components/GoogleComponent.html":{}}}],["each",{"_index":605,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["east",{"_index":772,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["editable",{"_index":103,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["element",{"_index":285,"title":{},"body":{"components/GoogleComponent.html":{}}}],["emit(value",{"_index":263,"title":{},"body":{"components/GoogleComponent.html":{}}}],["emitter",{"_index":262,"title":{},"body":{"components/GoogleComponent.html":{}}}],["empty",{"_index":573,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["entry",{"_index":584,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["entry.key}=${entry.value",{"_index":585,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["enum",{"_index":642,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["enumerations",{"_index":868,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":523,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["error('method",{"_index":434,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["event",{"_index":264,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["event[0].latlng.lat",{"_index":280,"title":{},"body":{"components/GoogleComponent.html":{}}}],["event[0].latlng.lng",{"_index":281,"title":{},"body":{"components/GoogleComponent.html":{}}}],["eventname",{"_index":48,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["eventname.foreach((event",{"_index":431,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["events",{"_index":267,"title":{},"body":{"components/GoogleComponent.html":{}}}],["events.foreach((e",{"_index":275,"title":{},"body":{"components/GoogleComponent.html":{}}}],["export",{"_index":86,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["exports",{"_index":816,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["extends",{"_index":7,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["factory",{"_index":825,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["fail",{"_index":612,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{}}}],["fillcolor",{"_index":105,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["fillopacity",{"_index":107,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["filter",{"_index":570,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["filter((k",{"_index":568,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["fit",{"_index":221,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"coverage.html":{}}}],["fitboundsservice",{"_index":177,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["fixme",{"_index":89,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["force",{"_index":628,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["forroot",{"_index":818,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["forroot(config",{"_index":819,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["forrootfactory",{"_index":822,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["forrootfactory(factory",{"_index":823,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["function",{"_index":470,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{}}}],["generatebounds",{"_index":356,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["generatebounds(includeinbounds",{"_index":361,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["geodesic",{"_index":677,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["geopoint",{"_index":83,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{}}}],["get(circle",{"_index":145,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["get(rectangle",{"_index":798,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["getbounds",{"_index":15,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["getbounds(circle",{"_index":50,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getbounds(rectangle",{"_index":753,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["getcenter",{"_index":16,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getcenter(circle",{"_index":53,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getmaptypeid",{"_index":246,"title":{},"body":{"components/GoogleComponent.html":{}}}],["getradius",{"_index":17,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getradius(circle",{"_index":55,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["getting",{"_index":870,"title":{"index.html":{}},"body":{}}],["given",{"_index":60,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GoogleRectangleManager.html":{}}}],["google",{"_index":217,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["google.component",{"_index":829,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["google.maps.circleoptions",{"_index":70,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["google.maps.infowindowoptions",{"_index":314,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["google.maps.latlngbounds",{"_index":366,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["google.maps.latlngliteral",{"_index":240,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolylineManager.html":{}}}],["google.maps.maphandlermap",{"_index":266,"title":{},"body":{"components/GoogleComponent.html":{}}}],["google.maps.mapseventlistener",{"_index":155,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["google.maps.maptypeid",{"_index":248,"title":{},"body":{"components/GoogleComponent.html":{}}}],["google.maps.polygon",{"_index":691,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["google.maps.polyline",{"_index":739,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["google.maps.rectangleoptions",{"_index":764,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["google.maps.strokeposition",{"_index":137,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["google_maps_api_config",{"_index":492,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["googlecirclemanager",{"_index":1,"title":{"injectables/GoogleCircleManager.html":{}},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlecomponent",{"_index":165,"title":{"components/GoogleComponent.html":{}},"body":{"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googleinfowindowmanager",{"_index":188,"title":{"injectables/GoogleInfoWindowManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlemaps",{"_index":831,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"properties.html":{}}}],["googlemapsapiscript",{"_index":484,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["googlemapsapiwrapper",{"_index":176,"title":{},"body":{"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlemapsfitboundsservice",{"_index":178,"title":{"injectables/GoogleMapsFitBoundsService.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlemapsmarkermanager",{"_index":180,"title":{"injectables/GoogleMapsMarkerManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsMarkerManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlemapsscriptloader",{"_index":436,"title":{"injectables/GoogleMapsScriptLoader.html":{}},"body":{"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{}}}],["googlemapsscriptprotocol",{"_index":491,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["googlemapsscriptprotocol.auto",{"_index":541,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["googlemapsscriptprotocol.http",{"_index":543,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["googlemapsscriptprotocol.https",{"_index":537,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["googlemoduleoptions",{"_index":453,"title":{"interfaces/GoogleModuleOptions.html":{}},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["googlepolygonmanager",{"_index":182,"title":{"injectables/GooglePolygonManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolygonManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlepolylinemanager",{"_index":184,"title":{"injectables/GooglePolylineManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolylineManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlerectanglemanager",{"_index":186,"title":{"injectables/GoogleRectangleManager.html":{}},"body":{"components/GoogleComponent.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":195,"title":{},"body":{"components/GoogleComponent.html":{}}}],["homepage",{"_index":900,"title":{},"body":{"properties.html":{}}}],["host",{"_index":615,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["hostandpath",{"_index":546,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["html",{"_index":284,"title":{},"body":{"components/GoogleComponent.html":{}}}],["htmlscriptelement",{"_index":460,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["http",{"_index":544,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["https",{"_index":545,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["https://developers.google.com/maps/documentation/javascript/basics#language",{"_index":630,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["https://developers.google.com/maps/documentation/javascript/basics#region",{"_index":640,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["https://developers.google.com/maps/documentation/javascript/get",{"_index":593,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["https://developers.google.com/maps/documentation/javascript/libraries",{"_index":633,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["https://github.com/ng",{"_index":904,"title":{},"body":{"properties.html":{}}}],["https://ng",{"_index":901,"title":{},"body":{"properties.html":{}}}],["i.addlistener(eventname",{"_index":349,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["i.join",{"_index":583,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["i.setoptions(options",{"_index":339,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["i.setposition",{"_index":327,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["i.setzindex(infowindow.zindex",{"_index":330,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["icons",{"_index":735,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["id",{"_index":602,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["identifier",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":90,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["implemented",{"_index":435,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["import",{"_index":78,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["improve",{"_index":131,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["included",{"_index":614,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["includeinbounds",{"_index":363,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["includeinbounds.foreach((b",{"_index":367,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["includeinbounds.size",{"_index":365,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["information",{"_index":624,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["infowindow",{"_index":304,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.content.nativeelement",{"_index":340,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.disableautopan",{"_index":345,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.hostmarker",{"_index":334,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.latitude",{"_index":328,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.longitude",{"_index":329,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.maxwidth",{"_index":342,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindow.zindex",{"_index":343,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["infowindowmanager",{"_index":187,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["inherit",{"_index":194,"title":{},"body":{"components/GoogleComponent.html":{}}}],["inject",{"_index":490,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["inject(document",{"_index":494,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["inject(google_maps_api_config",{"_index":493,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["injectable",{"_index":0,"title":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"overview.html":{}}}],["injectiontoken",{"_index":641,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["inner",{"_index":192,"title":{},"body":{"components/GoogleComponent.html":{}}}],["inside",{"_index":876,"title":{},"body":{"index.html":{}}}],["install",{"_index":879,"title":{},"body":{"index.html":{}}}],["installation",{"_index":877,"title":{},"body":{"index.html":{}}}],["instance",{"_index":73,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{}}}],["instanceof",{"_index":496,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["interface",{"_index":261,"title":{"interfaces/GoogleModuleOptions.html":{}},"body":{"components/GoogleComponent.html":{},"interfaces/GoogleModuleOptions.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":587,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["item",{"_index":686,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["item.setpaths(polygon.paths",{"_index":688,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["iwindow",{"_index":320,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["iwindow.close",{"_index":325,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["join",{"_index":578,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["k",{"_index":571,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["key",{"_index":550,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"index.html":{}}}],["keyof",{"_index":265,"title":{},"body":{"components/GoogleComponent.html":{}}}],["keywords",{"_index":896,"title":{},"body":{"properties.html":{}}}],["l.addlistener(eventname",{"_index":697,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["l.setmap(null",{"_index":695,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["l.setoptions(options",{"_index":692,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["l.setpath(path",{"_index":740,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["language",{"_index":564,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["lat",{"_index":95,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["lazymapsapiloader",{"_index":488,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["legend",{"_index":283,"title":{},"body":{"components/GoogleComponent.html":{}}}],["libraries",{"_index":560,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["library",{"_index":875,"title":{},"body":{"index.html":{}}}],["license",{"_index":609,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"properties.html":{}}}],["line",{"_index":708,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line._getpoints().map",{"_index":719,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.clickable",{"_index":726,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.draggable",{"_index":727,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.editable",{"_index":728,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.geodesic",{"_index":729,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.icons",{"_index":736,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.strokecolor",{"_index":730,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.strokeopacity",{"_index":731,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.strokeweight",{"_index":732,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.visible",{"_index":733,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["line.zindex",{"_index":734,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["link",{"_index":134,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["listener",{"_index":154,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["listener.remove",{"_index":161,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["literal",{"_index":665,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["lng",{"_index":97,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["load",{"_index":451,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["loaded",{"_index":508,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["loader.service",{"_index":828,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["loader.service.ts",{"_index":438,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"coverage.html":{}}}],["loader.service.ts:15",{"_index":486,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:16",{"_index":482,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:18",{"_index":483,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:19",{"_index":487,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:20",{"_index":485,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:21",{"_index":455,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:47",{"_index":465,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:52",{"_index":479,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:64",{"_index":463,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:74",{"_index":461,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:85",{"_index":477,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loader.service.ts:95",{"_index":458,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["loading",{"_index":471,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["m",{"_index":413,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["m.addlistener(event",{"_index":432,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setanimation(google.maps.animation[marker.animation",{"_index":429,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setanimation(marker.animation",{"_index":430,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setclickable(marker.clickable",{"_index":427,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setdraggable(marker.draggable",{"_index":422,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.seticon(marker.iconurl",{"_index":423,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setlabel(marker.label",{"_index":421,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setmap(null",{"_index":415,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setopacity(marker.opacity",{"_index":424,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setposition",{"_index":417,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.settitle(marker.title",{"_index":420,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setvisible(marker.visible",{"_index":425,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.setzindex(marker.zindex",{"_index":426,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["m.then((l",{"_index":694,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["managers/circle.manager",{"_index":223,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/info",{"_index":224,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/marker.manager",{"_index":226,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/polygon.manager",{"_index":227,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/polyline.manager",{"_index":228,"title":{},"body":{"components/GoogleComponent.html":{}}}],["managers/rectangle.manager",{"_index":229,"title":{},"body":{"components/GoogleComponent.html":{}}}],["map",{"_index":61,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GoogleRectangleManager.html":{},"properties.html":{}}}],["map((k",{"_index":577,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["map_provider",{"_index":827,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["maps",{"_index":218,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maps.git",{"_index":909,"title":{},"body":{"properties.html":{}}}],["maps.github.io/core",{"_index":902,"title":{},"body":{"properties.html":{}}}],["maps.googleapis.com/maps/api/js",{"_index":548,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["maps/core",{"_index":85,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"dependencies.html":{},"index.html":{}}}],["maps/google",{"_index":880,"title":{},"body":{"index.html":{}}}],["maps/issues",{"_index":906,"title":{},"body":{"properties.html":{}}}],["maps/ng",{"_index":905,"title":{},"body":{"properties.html":{}}}],["mapsapiloader",{"_index":358,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{}}}],["mapsapiwrapper",{"_index":27,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["marker",{"_index":335,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{}}}],["marker.animation",{"_index":428,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["marker.latitude",{"_index":418,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["marker.longitude",{"_index":419,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["markermanager",{"_index":179,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["matching",{"_index":163,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxwidth",{"_index":341,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["metadata",{"_index":172,"title":{},"body":{"components/GoogleComponent.html":{}}}],["methods",{"_index":10,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["miscellaneous",{"_index":867,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":907,"title":{},"body":{"properties.html":{}}}],["modular",{"_index":873,"title":{},"body":{"index.html":{}}}],["module",{"_index":648,"title":{"modules/NgMapsGoogleModule.html":{}},"body":{"interfaces/GoogleModuleOptions.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":805,"title":{"modules.html":{}},"body":{"modules/NgMapsGoogleModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":821,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["name",{"_index":34,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["need",{"_index":883,"title":{},"body":{"index.html":{}}}],["needed",{"_index":475,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["new",{"_index":152,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":84,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"dependencies.html":{},"index.html":{},"properties.html":{}}}],["ng2",{"_index":897,"title":{},"body":{"properties.html":{}}}],["ngmapscircledirective",{"_index":39,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["ngmapsgooglemodule",{"_index":804,"title":{"modules/NgMapsGoogleModule.html":{}},"body":{"modules/NgMapsGoogleModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ngmapsinfowindowcomponent",{"_index":302,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["ngmapsmarkercomponent",{"_index":385,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["ngmapspolygondirective",{"_index":658,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["ngmapspolyline",{"_index":706,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["ngmapspolylinepoint",{"_index":718,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["ngmapsrectangledirective",{"_index":749,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["ngmapsviewcomponent",{"_index":171,"title":{},"body":{"components/GoogleComponent.html":{}}}],["ngmodule",{"_index":826,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["ngzone",{"_index":29,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["none",{"_index":198,"title":{},"body":{"components/GoogleComponent.html":{}}}],["north",{"_index":770,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["npm",{"_index":878,"title":{},"body":{"index.html":{}}}],["null",{"_index":156,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["number",{"_index":252,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{}}}],["object",{"_index":499,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["object.keys(queryparams",{"_index":567,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["observable",{"_index":49,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["observable((observer",{"_index":153,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["observer",{"_index":80,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["observer.next(e",{"_index":160,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["open",{"_index":296,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["open(infowindow",{"_index":311,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["optional",{"_index":36,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["options",{"_index":69,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["options.strokeposition",{"_index":136,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["out",{"_index":813,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["overview",{"_index":895,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":626,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["package",{"_index":859,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":509,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["param",{"_index":133,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["parameter",{"_index":597,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["params",{"_index":566,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["path",{"_index":616,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["path.clickable",{"_index":672,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.draggable",{"_index":673,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.editable",{"_index":674,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.fillcolor",{"_index":675,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.fillopacity",{"_index":676,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.geodesic",{"_index":678,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.paths",{"_index":679,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.strokecolor",{"_index":680,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.strokeopacity",{"_index":681,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.strokeweight",{"_index":682,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.visible",{"_index":683,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["path.zindex",{"_index":684,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["paths",{"_index":663,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["peer",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["plan",{"_index":608,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["plans",{"_index":596,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["please",{"_index":649,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["point",{"_index":720,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["point.latitude",{"_index":721,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["point.longitude",{"_index":722,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["polygon",{"_index":669,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["polygonmanager",{"_index":181,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolygonManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["polygonpromise",{"_index":670,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["polylinemanager",{"_index":183,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GooglePolylineManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["polylinepromise",{"_index":724,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["postponed",{"_index":473,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["preferred",{"_index":621,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["premium",{"_index":595,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["promise",{"_index":52,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["promise((resolve",{"_index":518,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["promise.resolve",{"_index":510,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["properties",{"_index":92,"title":{"properties.html":{}},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"properties.html":{}}}],["propname",{"_index":689,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{}}}],["protected",{"_index":200,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolylineManager.html":{}}}],["protocol",{"_index":538,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["protocoltype",{"_index":535,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["protocol}//${hostandpath}?${params",{"_index":586,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["provide",{"_index":174,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"modules/NgMapsGoogleModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":467,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["provider",{"_index":889,"title":{},"body":{"index.html":{}}}],["providers",{"_index":173,"title":{},"body":{"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{}}}],["public",{"_index":11,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["quarterly",{"_index":553,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["queryparams",{"_index":549,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["queryparams[k",{"_index":569,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["queryparams[k].length",{"_index":576,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["r",{"_index":793,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.addlistener(eventname",{"_index":803,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.getbounds().tojson",{"_index":795,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setbounds",{"_index":796,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setdraggable(rectangle.draggable",{"_index":801,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.seteditable(rectangle.editable",{"_index":800,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setmap(null",{"_index":790,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setoptions(options",{"_index":792,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["r.setvisible(rectangle.visible",{"_index":802,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["radius",{"_index":109,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["readonly",{"_index":441,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["rectangle",{"_index":751,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.clickable",{"_index":778,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.draggable",{"_index":779,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.east",{"_index":773,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.editable",{"_index":780,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.fillcolor",{"_index":781,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.fillopacity",{"_index":782,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.north",{"_index":771,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.south",{"_index":775,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.strokecolor",{"_index":783,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.strokeopacity",{"_index":784,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.strokeposition",{"_index":785,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.strokeweight",{"_index":786,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.visible",{"_index":787,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.west",{"_index":777,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectangle.zindex",{"_index":788,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["rectanglemanager",{"_index":185,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["region",{"_index":562,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["reject",{"_index":519,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["reject(error",{"_index":524,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["remove",{"_index":572,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["removecircle",{"_index":18,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["removecircle(circle",{"_index":57,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["removerectangle",{"_index":745,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["removerectangle(rectangle",{"_index":755,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["removes",{"_index":59,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["replaysubject",{"_index":480,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["replaysubject(1",{"_index":481,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["repository",{"_index":908,"title":{},"body":{"properties.html":{}}}],["reset",{"_index":812,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["resolve",{"_index":521,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["responsible",{"_index":352,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["results",{"_index":162,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":138,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["returns",{"_index":42,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["rightclick",{"_index":271,"title":{},"body":{"components/GoogleComponent.html":{}}}],["rxjs",{"_index":81,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["s",{"_index":230,"title":{},"body":{"components/GoogleComponent.html":{}}}],["script",{"_index":437,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{}}}],["script.async",{"_index":528,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["script.defer",{"_index":530,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["script.id",{"_index":531,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["script.src",{"_index":532,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["script.type",{"_index":526,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["scriptelement",{"_index":462,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["scriptelement.onerror",{"_index":522,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["scripts",{"_index":472,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["see",{"_index":592,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["selector",{"_index":189,"title":{},"body":{"components/GoogleComponent.html":{}}}],["seperated",{"_index":580,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["serve",{"_index":636,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["setbounds",{"_index":746,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setbounds(rectangle",{"_index":757,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setcenter",{"_index":19,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setcenter(circle",{"_index":62,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setdraggable",{"_index":20,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["setdraggable(circle",{"_index":64,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setdraggable(rectangle",{"_index":759,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["seteditable",{"_index":21,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["seteditable(circle",{"_index":66,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["seteditable(rectangle",{"_index":761,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setoptions",{"_index":22,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["setoptions(circle",{"_index":68,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setoptions(infowindow",{"_index":313,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["setoptions(rectangle",{"_index":763,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setpolygonoptions",{"_index":654,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["setpolygonoptions(path",{"_index":664,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["setpolylineoptions",{"_index":702,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["setpolylineoptions(line",{"_index":714,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["setposition",{"_index":297,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["setposition(infowindow",{"_index":316,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["setradius",{"_index":23,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setradius(circle",{"_index":74,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setting",{"_index":629,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["setvisible",{"_index":24,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["setvisible(circle",{"_index":76,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["setvisible(rectangle",{"_index":766,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["setzindex",{"_index":298,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["setzindex(infowindow",{"_index":318,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["shakable",{"_index":874,"title":{},"body":{"index.html":{}}}],["simple",{"_index":872,"title":{},"body":{"index.html":{}}}],["single",{"_index":355,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["south",{"_index":774,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/.../options.ts",{"_index":869,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/lib/google",{"_index":350,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsScriptLoader.html":{},"coverage.html":{}}}],["src/lib/google.component.ts",{"_index":170,"title":{},"body":{"components/GoogleComponent.html":{},"coverage.html":{}}}],["src/lib/google.component.ts:105",{"_index":215,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:117",{"_index":211,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:124",{"_index":216,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:131",{"_index":213,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:56",{"_index":209,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:65",{"_index":212,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:81",{"_index":210,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.component.ts:92",{"_index":214,"title":{},"body":{"components/GoogleComponent.html":{}}}],["src/lib/google.module.ts",{"_index":814,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["src/lib/google.module.ts:21",{"_index":820,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["src/lib/google.module.ts:35",{"_index":824,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["src/lib/managers/circle.manager.ts",{"_index":6,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"coverage.html":{}}}],["src/lib/managers/circle.manager.ts:102",{"_index":65,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:108",{"_index":77,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:112",{"_index":75,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:116",{"_index":46,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:13",{"_index":31,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:21",{"_index":40,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:47",{"_index":58,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:58",{"_index":71,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:72",{"_index":51,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:79",{"_index":54,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:84",{"_index":56,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:88",{"_index":63,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/circle.manager.ts:96",{"_index":67,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["src/lib/managers/info",{"_index":291,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"coverage.html":{}}}],["src/lib/managers/marker.manager.ts",{"_index":370,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{},"coverage.html":{}}}],["src/lib/managers/marker.manager.ts:103",{"_index":396,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:12",{"_index":412,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:15",{"_index":384,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:21",{"_index":388,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:34",{"_index":402,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:39",{"_index":406,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:44",{"_index":400,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:49",{"_index":394,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:54",{"_index":398,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:59",{"_index":404,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:64",{"_index":408,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:69",{"_index":410,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:74",{"_index":392,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:79",{"_index":390,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/marker.manager.ts:88",{"_index":386,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["src/lib/managers/polygon.manager.ts",{"_index":651,"title":{},"body":{"injectables/GooglePolygonManager.html":{},"coverage.html":{}}}],["src/lib/managers/polygon.manager.ts:11",{"_index":656,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:16",{"_index":659,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:34",{"_index":668,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:43",{"_index":666,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:52",{"_index":662,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polygon.manager.ts:65",{"_index":660,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["src/lib/managers/polyline.manager.ts",{"_index":698,"title":{},"body":{"injectables/GooglePolylineManager.html":{},"coverage.html":{}}}],["src/lib/managers/polyline.manager.ts:12",{"_index":704,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:17",{"_index":707,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:29",{"_index":710,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:47",{"_index":717,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:60",{"_index":715,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:69",{"_index":713,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/polyline.manager.ts:82",{"_index":711,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["src/lib/managers/rectangle.manager.ts",{"_index":743,"title":{},"body":{"injectables/GoogleRectangleManager.html":{},"coverage.html":{}}}],["src/lib/managers/rectangle.manager.ts:12",{"_index":747,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:17",{"_index":750,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:47",{"_index":756,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:54",{"_index":765,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:61",{"_index":754,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:68",{"_index":758,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:79",{"_index":762,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:85",{"_index":760,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:91",{"_index":767,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/managers/rectangle.manager.ts:97",{"_index":752,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["src/lib/options.ts",{"_index":588,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":871,"title":{"index.html":{}},"body":{}}],["statements",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":817,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["string",{"_index":45,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["strings",{"_index":581,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["strokecolor",{"_index":111,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["strokeopacity",{"_index":113,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["strokeposition",{"_index":115,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["strokeweight",{"_index":117,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["styles",{"_index":167,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribe",{"_index":233,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribe((event",{"_index":277,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('bounds_changed",{"_index":242,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('center_changed",{"_index":232,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('maptypeid_changed",{"_index":245,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('tilesloaded",{"_index":259,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent('zoom_changed",{"_index":250,"title":{},"body":{"components/GoogleComponent.html":{}}}],["subscribetomapevent(e.name",{"_index":276,"title":{},"body":{"components/GoogleComponent.html":{}}}],["super",{"_index":495,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["super(_loader",{"_index":364,"title":{},"body":{"injectables/GoogleMapsFitBoundsService.html":{}}}],["super(_mapswrapper",{"_index":88,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["support",{"_index":892,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":893,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":539,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["t",{"_index":47,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["table",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":618,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["template",{"_index":199,"title":{},"body":{"components/GoogleComponent.html":{}}}],["text/javascript",{"_index":527,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["textual",{"_index":623,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["then((c",{"_index":146,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["then((maptypeid",{"_index":247,"title":{},"body":{"components/GoogleComponent.html":{}}}],["then((r",{"_index":799,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._apiwrapper.createcircle",{"_index":94,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._apiwrapper.createrectangle",{"_index":769,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._circles",{"_index":144,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._circles.delete(circle",{"_index":128,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._circles.get(circle",{"_index":126,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._circles.get(circle).then((c",{"_index":142,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._circles.set",{"_index":93,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["this._config.complete",{"_index":505,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._config.next(config",{"_index":504,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._config.topromise",{"_index":534,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._convertpoints(line",{"_index":723,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._document",{"_index":501,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._document.body.appendchild(scriptelement",{"_index":517,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._document.createelement('script",{"_index":525,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._document.defaultview",{"_index":503,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._document.getelementbyid",{"_index":513,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._getscriptsrc(this.callbackname",{"_index":533,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._infowindows.delete(infowindow",{"_index":326,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._infowindows.get(infowindow",{"_index":321,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._infowindows.set(infowindow",{"_index":348,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._mapswrapper",{"_index":231,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._mapswrapper.createinfowindow(center",{"_index":347,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._mapswrapper.createpolygon",{"_index":671,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._mapswrapper.createpolyline",{"_index":725,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._mapswrapper.getbounds().then((bounds",{"_index":243,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._mapswrapper.getcenter().then((center",{"_index":234,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._mapswrapper.getnativemap",{"_index":332,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._mapswrapper.getzoom().then((z",{"_index":251,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._mapswrapper.subscribetomapevent('idle').subscribe",{"_index":256,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this._markermanager.getnativemarker",{"_index":336,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["this._markers.delete(marker",{"_index":416,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["this._markers.get(marker",{"_index":414,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["this._polygons.delete(paths",{"_index":696,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polygons.get(path).then((l",{"_index":690,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polygons.get(paths",{"_index":693,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polygons.get(polygon",{"_index":687,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polygons.set(path",{"_index":685,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["this._polylines.delete(line",{"_index":742,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._polylines.get(line",{"_index":738,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._polylines.get(line).then((l",{"_index":741,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._polylines.set(line",{"_index":737,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["this._rectangles",{"_index":797,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._rectangles.delete(rectangle",{"_index":791,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._rectangles.get(rectangle",{"_index":794,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._rectangles.get(rectangle).then((r",{"_index":789,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._rectangles.set",{"_index":768,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["this._script_id",{"_index":514,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._scriptloadingpromise",{"_index":511,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._window",{"_index":502,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._window[this.callbackname",{"_index":520,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this._zone.run",{"_index":159,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["this.assignscriptloadingpromise(scriptelement",{"_index":516,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.boundschange.emit(bounds",{"_index":244,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.centerchange.emit",{"_index":239,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.checkscriptelement",{"_index":512,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.configure(c",{"_index":498,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.configure(config",{"_index":500,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.createscriptelement",{"_index":515,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["this.idle.emit(void",{"_index":257,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.latitude",{"_index":235,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.longitude",{"_index":237,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.mapclick",{"_index":270,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.mapdblclick",{"_index":274,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.maprightclick",{"_index":272,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.maptypeidchange.emit(maptypeid",{"_index":249,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.subscription.add(s",{"_index":241,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.tilesloaded.emit(void",{"_index":260,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.zoom",{"_index":253,"title":{},"body":{"components/GoogleComponent.html":{}}}],["this.zoomchange.emit(z",{"_index":255,"title":{},"body":{"components/GoogleComponent.html":{}}}],["throw",{"_index":433,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["tiles",{"_index":638,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["time",{"_index":468,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["todo",{"_index":129,"title":{},"body":{"injectables/GoogleCircleManager.html":{}}}],["token",{"_index":647,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":599,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["tree",{"_index":169,"title":{},"body":{"components/GoogleComponent.html":{},"index.html":{}}}],["true",{"_index":529,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["tslib",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":35,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsFitBoundsService.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":135,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["types/googlemaps",{"_index":864,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["typings",{"_index":884,"title":{},"body":{"index.html":{}}}],["under",{"_index":601,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["unknown",{"_index":478,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["until",{"_index":474,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["updateanimation",{"_index":373,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateanimation(marker",{"_index":389,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateclickable",{"_index":374,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateclickable(marker",{"_index":391,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatedraggable",{"_index":375,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatedraggable(marker",{"_index":393,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateicon",{"_index":376,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateicon(marker",{"_index":395,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateiconlegacy",{"_index":377,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateiconlegacy(marker",{"_index":397,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatelabel",{"_index":378,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatelabel(marker",{"_index":399,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatemarkerposition",{"_index":379,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatemarkerposition(marker",{"_index":401,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateopacity",{"_index":380,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updateopacity(marker",{"_index":403,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatepolygon",{"_index":655,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["updatepolygon(polygon",{"_index":667,"title":{},"body":{"injectables/GooglePolygonManager.html":{}}}],["updatepolylinepoints",{"_index":703,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["updatepolylinepoints(line",{"_index":716,"title":{},"body":{"injectables/GooglePolylineManager.html":{}}}],["updatetitle",{"_index":381,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatetitle(marker",{"_index":405,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatevisible",{"_index":382,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatevisible(marker",{"_index":407,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatezindex",{"_index":383,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["updatezindex(marker",{"_index":409,"title":{},"body":{"injectables/GoogleMapsMarkerManager.html":{}}}],["usage",{"_index":600,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["use",{"_index":469,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{},"interfaces/GoogleModuleOptions.html":{}}}],["useclass",{"_index":175,"title":{},"body":{"components/GoogleComponent.html":{},"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}],["used",{"_index":617,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["usefactory",{"_index":832,"title":{},"body":{"modules/NgMapsGoogleModule.html":{}}}],["uses",{"_index":619,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["usevalue",{"_index":830,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"index.html":{}}}],["v",{"_index":551,"title":{},"body":{"injectables/GoogleMapsScriptLoader.html":{}}}],["value",{"_index":278,"title":{},"body":{"components/GoogleComponent.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":287,"title":{},"body":{"components/GoogleComponent.html":{}}}],["variable",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":910,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":594,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{},"properties.html":{}}}],["view",{"_index":190,"title":{},"body":{"components/GoogleComponent.html":{}}}],["visible",{"_index":119,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["void",{"_index":43,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"components/GoogleComponent.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsMarkerManager.html":{},"injectables/GoogleMapsScriptLoader.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{},"modules/NgMapsGoogleModule.html":{}}}],["w",{"_index":331,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["w.close",{"_index":338,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["w.open(map",{"_index":337,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["west",{"_index":776,"title":{},"body":{"injectables/GoogleRectangleManager.html":{}}}],["width",{"_index":193,"title":{},"body":{"components/GoogleComponent.html":{}}}],["window",{"_index":322,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"injectables/GoogleMapsScriptLoader.html":{}}}],["window.manager",{"_index":225,"title":{},"body":{"components/GoogleComponent.html":{}}}],["window.manager.ts",{"_index":292,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{},"coverage.html":{}}}],["window.manager.ts:13",{"_index":300,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:22",{"_index":310,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:37",{"_index":317,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:45",{"_index":319,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:50",{"_index":312,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:64",{"_index":306,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:69",{"_index":315,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:77",{"_index":303,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["window.manager.ts:99",{"_index":307,"title":{},"body":{"injectables/GoogleInfoWindowManager.html":{}}}],["wish",{"_index":625,"title":{},"body":{"interfaces/GoogleModuleOptions.html":{}}}],["wrapper",{"_index":220,"title":{},"body":{"components/GoogleComponent.html":{}}}],["wrapper.ts",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["yarn",{"_index":881,"title":{},"body":{"index.html":{}}}],["your_api_key",{"_index":890,"title":{},"body":{"index.html":{}}}],["z",{"_index":254,"title":{},"body":{"components/GoogleComponent.html":{}}}],["zindex",{"_index":121,"title":{},"body":{"injectables/GoogleCircleManager.html":{},"injectables/GoogleInfoWindowManager.html":{},"injectables/GooglePolygonManager.html":{},"injectables/GooglePolylineManager.html":{},"injectables/GoogleRectangleManager.html":{}}}],["zoom",{"_index":811,"title":{},"body":{"modules/NgMapsGoogleModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/GoogleCircleManager.html":{"url":"injectables/GoogleCircleManager.html","title":"injectable - GoogleCircleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleCircleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/circle.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    CircleManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addCircle\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Async\n                                getBounds\n                            \n                            \n                                    Public\n                                    Async\n                                getCenter\n                            \n                            \n                                    Public\n                                getRadius\n                            \n                            \n                                    Public\n                                    Async\n                                removeCircle\n                            \n                            \n                                    Public\n                                setCenter\n                            \n                            \n                                    Public\n                                setDraggable\n                            \n                            \n                                    Public\n                                setEditable\n                            \n                            \n                                    Public\n                                    Async\n                                setOptions\n                            \n                            \n                                    Public\n                                setRadius\n                            \n                            \n                                    Public\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/circle.manager.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addCircle\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:116\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRadius\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        removeCircle\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCircle(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:47\n                \n            \n\n\n            \n                \n                    Removes the given circle from the map.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCenter\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCenter(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setDraggable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setEditable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(circle: NgMapsCircleDirective, options: google.maps.CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of NgMapsCircleDirective\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                            google.maps.CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        options for the circle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setRadius\n                        \n                    \n                \n            \n            \n                \n                    \n                    setRadius(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setVisible\n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(circle: NgMapsCircleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/circle.manager.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            NgMapsCircleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  BoundsLiteral,\n  CircleManager,\n  GeoPoint,\n  MapsApiWrapper,\n  NgMapsCircleDirective,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GoogleCircleManager extends CircleManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  /**\n   * @fixme implement commented properties\n   */\n  public addCircle(circle: NgMapsCircleDirective) {\n    this._circles.set(\n      circle,\n      this._apiWrapper.createCircle(\n        { lat: circle.latitude, lng: circle.longitude },\n        {\n          // clickable: circle.clickable,\n          // draggable: circle.draggable,\n          // editable: circle.editable,\n          fillColor: circle.fillColor,\n          fillOpacity: circle.fillOpacity,\n          radius: circle.radius,\n          strokeColor: circle.strokeColor,\n          strokeOpacity: circle.strokeOpacity,\n          // strokePosition: circle.strokePosition,\n          strokeWeight: circle.strokeWeight,\n          visible: circle.visible,\n          zIndex: circle.zIndex,\n        },\n      ),\n    );\n  }\n\n  /**\n   * Removes the given circle from the map.\n   */\n  public async removeCircle(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    c.setMap(null);\n    this._circles.delete(circle);\n  }\n\n  /**\n   * @todo check how to improve type casting\n   * @param circle instance of {@link NgMapsCircleDirective}\n   * @param options options for the circle\n   */\n  public async setOptions(\n    circle: NgMapsCircleDirective,\n    options: google.maps.CircleOptions,\n  ): Promise {\n    const c = await this._circles.get(circle);\n\n    if (typeof options.strokePosition === 'string') {\n      options.strokePosition = google.maps.StrokePosition[\n        options.strokePosition\n      ] as any as google.maps.StrokePosition;\n    }\n    return c.setOptions(options);\n  }\n\n  public async getBounds(\n    circle: NgMapsCircleDirective,\n  ): Promise {\n    const c = await this._circles.get(circle);\n    return c.getBounds().toJSON();\n  }\n\n  public async getCenter(circle: NgMapsCircleDirective): Promise {\n    const c = await this._circles.get(circle);\n    return c.getCenter().toJSON();\n  }\n\n  public getRadius(circle: NgMapsCircleDirective): Promise {\n    return this._circles.get(circle).then((c) => c.getRadius());\n  }\n\n  public setCenter(circle: NgMapsCircleDirective): Promise {\n    return this._circles\n      .get(circle)\n      .then((c) =>\n        c.setCenter({ lat: circle.latitude, lng: circle.longitude }),\n      );\n  }\n\n  public setEditable(circle: NgMapsCircleDirective): Promise {\n    return this._circles\n      .get(circle)\n      .then((c) => c.setEditable(circle.editable));\n  }\n\n  public setDraggable(circle: NgMapsCircleDirective): Promise {\n    return this._circles\n      .get(circle)\n      .then((c) => c.setDraggable(circle.draggable));\n  }\n\n  public setVisible(circle: NgMapsCircleDirective): Promise {\n    return this._circles.get(circle).then((c) => c.setVisible(circle.visible));\n  }\n\n  public setRadius(circle: NgMapsCircleDirective): Promise {\n    return this._circles.get(circle).then((c) => c.setRadius(circle.radius));\n  }\n\n  public createEventObservable(\n    eventName: string,\n    circle: NgMapsCircleDirective,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      let listener: google.maps.MapsEventListener = null;\n      this._circles.get(circle).then((c) => {\n        listener = c.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GoogleComponent.html":{"url":"components/GoogleComponent.html","title":"component - GoogleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GoogleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/google.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            NgMapsViewComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }\n                                { provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }\n                                { provide: MarkerManager, useClass: GoogleMapsMarkerManager }\n                                { provide: CircleManager, useClass: GoogleCircleManager }\n                                { provide: PolygonManager, useClass: GooglePolygonManager }\n                                { provide: PolylineManager, useClass: GooglePolylineManager }\n                                { provide: RectangleManager, useClass: GoogleRectangleManager }\n                                { provide: InfoWindowManager, useClass: GoogleInfoWindowManager }\n                \n            \n\n\n            \n                selector\n                map-view\n            \n\n\n            \n                styles\n                \n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    \n            \n\n            \n                template\n                \n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _handleBoundsChange\n                            \n                            \n                                    Protected\n                                _handleIdleEvent\n                            \n                            \n                                    Protected\n                                    Async\n                                _handleMapCenterChange\n                            \n                            \n                                    Protected\n                                _handleMapMouseEvents\n                            \n                            \n                                    Protected\n                                _handleMapTypeIdChange\n                            \n                            \n                                    Protected\n                                _handleMapZoomChange\n                            \n                            \n                                    Protected\n                                _handleTilesLoadedEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _fitBoundsService: FitBoundsService, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/google.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fitBoundsService\n                                                  \n                                                        \n                                                                    FitBoundsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleBoundsChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleBoundsChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleIdleEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleIdleEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        _handleMapCenterChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapCenterChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleMapMouseEvents\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapMouseEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleMapTypeIdChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapTypeIdChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleMapZoomChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleMapZoomChange()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _handleTilesLoadedEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleTilesLoadedEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, NgZone } from '@angular/core';\n\nimport {\n  CircleManager,\n  FitBoundsService,\n  GeoPoint,\n  InfoWindowManager,\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsViewComponent,\n  PolygonManager,\n  PolylineManager,\n  RectangleManager,\n} from '@ng-maps/core';\n\nimport { GoogleMapsAPIWrapper } from './google-maps-api-wrapper';\nimport { GoogleMapsFitBoundsService } from './google-maps-fit-bounds.service';\nimport { GoogleCircleManager } from './managers/circle.manager';\nimport { GoogleInfoWindowManager } from './managers/info-window.manager';\nimport { GoogleMapsMarkerManager } from './managers/marker.manager';\nimport { GooglePolygonManager } from './managers/polygon.manager';\nimport { GooglePolylineManager } from './managers/polyline.manager';\nimport { GoogleRectangleManager } from './managers/rectangle.manager';\n\n@Component({\n  selector: 'map-view',\n  providers: [\n    { provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper },\n    { provide: FitBoundsService, useClass: GoogleMapsFitBoundsService },\n    { provide: MarkerManager, useClass: GoogleMapsMarkerManager },\n    { provide: CircleManager, useClass: GoogleCircleManager },\n    { provide: PolygonManager, useClass: GooglePolygonManager },\n    { provide: PolylineManager, useClass: GooglePolylineManager },\n    { provide: RectangleManager, useClass: GoogleRectangleManager },\n    { provide: InfoWindowManager, useClass: GoogleInfoWindowManager },\n  ],\n  styles: [\n    `\n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    `,\n  ],\n  template: `\n    \n    \n      \n    \n  `,\n})\nexport class GoogleComponent extends NgMapsViewComponent {\n  constructor(\n    _mapsWrapper: MapsApiWrapper,\n    _fitBoundsService: FitBoundsService,\n    _zone: NgZone,\n  ) {\n    super(_mapsWrapper, _fitBoundsService, _zone);\n  }\n\n  protected async _handleMapCenterChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('center_changed')\n      .subscribe(() => {\n        this._mapsWrapper.getCenter().then((center: GeoPoint) => {\n          this.latitude = center.lat;\n          this.longitude = center.lng;\n          this.centerChange.emit({\n            lat: this.latitude,\n            lng: this.longitude,\n          } as google.maps.LatLngLiteral);\n        });\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleBoundsChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('bounds_changed')\n      .subscribe(() => {\n        this._mapsWrapper.getBounds().then((bounds) => {\n          this.boundsChange.emit(bounds);\n        });\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleMapTypeIdChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('maptypeid_changed')\n      .subscribe(() => {\n        this._mapsWrapper\n          .getMapTypeId()\n          .then((mapTypeId: google.maps.MapTypeId) => {\n            this.mapTypeIdChange.emit(mapTypeId);\n          });\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleMapZoomChange() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('zoom_changed')\n      .subscribe(() => {\n        this._mapsWrapper.getZoom().then((z: number) => {\n          this.zoom = z;\n          this.zoomChange.emit(z);\n        });\n      });\n    this.subscription.add(s);\n  }\n\n  protected _handleIdleEvent() {\n    const s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(() => {\n      this.idle.emit(void 0);\n    });\n    this.subscription.add(s);\n  }\n\n  protected _handleTilesLoadedEvent() {\n    const s = this._mapsWrapper\n      .subscribeToMapEvent('tilesloaded')\n      .subscribe(() => this.tilesLoaded.emit(void 0));\n    this.subscription.add(s);\n  }\n\n  protected _handleMapMouseEvents() {\n    interface Emitter {\n      emit(value: any): void;\n    }\n\n    interface Event {\n      name: keyof google.maps.MapHandlerMap;\n      emitter: Emitter;\n    }\n\n    const events: Array = [\n      { name: 'click', emitter: this.mapClick },\n      { name: 'rightclick', emitter: this.mapRightClick },\n      { name: 'dblclick', emitter: this.mapDblClick },\n    ];\n\n    events.forEach((e: Event) => {\n      const s = (this._mapsWrapper as GoogleMapsAPIWrapper)\n        .subscribeToMapEvent(e.name)\n        .subscribe((event) => {\n          const value = {\n            coords: { lat: event[0].latLng.lat(), lng: event[0].latLng.lng() },\n          };\n          e.emitter.emit(value);\n        });\n      this.subscription.add(s);\n    });\n  }\n}\n\n    \n\n\n    \n            \n      .map-container-inner {\n        width: inherit;\n        height: inherit;\n      }\n\n      .map-content {\n        display: none;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'GoogleComponent', 'selector': 'map-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GoogleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleInfoWindowManager.html":{"url":"injectables/GoogleInfoWindowManager.html","title":"injectable - GoogleInfoWindowManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleInfoWindowManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/info-window.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    InfoWindowManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addInfoWindow\n                            \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Async\n                                deleteInfoWindow\n                            \n                            \n                                    Public\n                                    Async\n                                open\n                            \n                            \n                                    Public\n                                setOptions\n                            \n                            \n                                    Public\n                                setPosition\n                            \n                            \n                                    Public\n                                setZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone, _markerManager: MarkerManager)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/info-window.manager.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _markerManager\n                                                  \n                                                        \n                                                                    MarkerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        addInfoWindow\n                        \n                    \n                \n            \n            \n                \n                    \n                    addInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:99\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Creates a Google Maps event listener for the given InfoWindow as an Observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteInfoWindow\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteInfoWindow(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(infoWindow: NgMapsInfoWindowComponent, options: google.maps.InfoWindowOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.InfoWindowOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPosition(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setZIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    setZIndex(infoWindow: NgMapsInfoWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/info-window.manager.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                            NgMapsInfoWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  GeoPoint,\n  InfoWindowManager,\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsInfoWindowComponent,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GoogleInfoWindowManager extends InfoWindowManager {\n  constructor(\n    _mapsWrapper: MapsApiWrapper,\n    _zone: NgZone,\n    _markerManager: MarkerManager,\n  ) {\n    super(_mapsWrapper, _zone, _markerManager);\n  }\n\n  public async deleteInfoWindow(\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Promise {\n    const iWindow = await this._infoWindows.get(infoWindow);\n    if (iWindow == null) {\n      // info window already deleted\n      return;\n    } else {\n      return this._zone.run(() => {\n        iWindow.close();\n        this._infoWindows.delete(infoWindow);\n      });\n    }\n  }\n\n  public setPosition(infoWindow: NgMapsInfoWindowComponent): void {\n    const i = this._infoWindows.get(infoWindow);\n    i.setPosition({\n      lat: infoWindow.latitude,\n      lng: infoWindow.longitude,\n    });\n  }\n\n  public setZIndex(infoWindow: NgMapsInfoWindowComponent): void {\n    const i = this._infoWindows.get(infoWindow);\n    i.setZIndex(infoWindow.zIndex);\n  }\n\n  public async open(infoWindow: NgMapsInfoWindowComponent): Promise {\n    const w = this._infoWindows.get(infoWindow);\n    const map = await this._mapsWrapper.getNativeMap();\n    console.log('open', w);\n    if (infoWindow.hostMarker != null) {\n      const marker = await this._markerManager.getNativeMarker(\n        infoWindow.hostMarker,\n      );\n      w.open(map, marker);\n    } else {\n      w.open(map);\n    }\n  }\n\n  public close(infoWindow: NgMapsInfoWindowComponent): void {\n    const w = this._infoWindows.get(infoWindow);\n    w.close();\n  }\n\n  public setOptions(\n    infoWindow: NgMapsInfoWindowComponent,\n    options: google.maps.InfoWindowOptions,\n  ) {\n    const i = this._infoWindows.get(infoWindow);\n    i.setOptions(options);\n  }\n\n  public async addInfoWindow(infoWindow: NgMapsInfoWindowComponent) {\n    const options: google.maps.InfoWindowOptions = {\n      content: infoWindow.content.nativeElement,\n      maxWidth: infoWindow.maxWidth,\n      zIndex: infoWindow.zIndex,\n      disableAutoPan: infoWindow.disableAutoPan,\n    };\n    const center: GeoPoint =\n      typeof infoWindow.latitude === 'number' &&\n      typeof infoWindow.longitude === 'number'\n        ? {\n            lat: infoWindow.latitude,\n            lng: infoWindow.longitude,\n          }\n        : null;\n    const instance = await this._mapsWrapper.createInfoWindow(center, options);\n    this._infoWindows.set(infoWindow, instance);\n  }\n\n  /**\n   * Creates a Google Maps event listener for the given InfoWindow as an Observable\n   */\n  public createEventObservable(\n    eventName: string,\n    infoWindow: NgMapsInfoWindowComponent,\n  ): Observable {\n    const i = this._infoWindows.get(infoWindow);\n    return new Observable((observer: Observer) => {\n      i.addListener(eventName, (e: T) =>\n        this._zone.run(() => observer.next(e)),\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleMapsFitBoundsService.html":{"url":"injectables/GoogleMapsFitBoundsService.html","title":"injectable - GoogleMapsFitBoundsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleMapsFitBoundsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/google-maps-fit-bounds.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The FitBoundsService is responsible for computing the bounds of the a single map.\n\n            \n\n            \n                Extends\n            \n            \n                    FitBoundsService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                generateBounds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_loader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/lib/google-maps-fit-bounds.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _loader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        generateBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateBounds(includeInBounds: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-fit-bounds.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    includeInBounds\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     BoundsLiteral\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport {\n  BoundsLiteral,\n  FitBoundsService,\n  GeoPoint,\n  MapsAPILoader,\n} from '@ng-maps/core';\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport class GoogleMapsFitBoundsService extends FitBoundsService {\n  constructor(_loader: MapsAPILoader) {\n    super(_loader);\n  }\n\n  protected generateBounds(\n    includeInBounds: Map,\n  ): BoundsLiteral {\n    if (includeInBounds.size === 0) {\n      return null;\n    } else {\n      const bounds = new google.maps.LatLngBounds();\n      includeInBounds.forEach((b) => bounds.extend(b));\n      return bounds.toJSON();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleMapsMarkerManager.html":{"url":"injectables/GoogleMapsMarkerManager.html","title":"injectable - GoogleMapsMarkerManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleMapsMarkerManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/marker.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    MarkerManager\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                deleteMarker\n                            \n                            \n                                    Public\n                                updateAnimation\n                            \n                            \n                                    Public\n                                updateClickable\n                            \n                            \n                                    Public\n                                updateDraggable\n                            \n                            \n                                    Public\n                                updateIcon\n                            \n                            \n                                    Public\n                                updateIconLegacy\n                            \n                            \n                                    Public\n                                updateLabel\n                            \n                            \n                                    Public\n                                updateMarkerPosition\n                            \n                            \n                                    Public\n                                updateOpacity\n                            \n                            \n                                    Public\n                                updateTitle\n                            \n                            \n                                    Public\n                                updateVisible\n                            \n                            \n                                    Public\n                                updateZIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/marker.manager.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string | Array, marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:88\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                            string | Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteMarker\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMarker(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateAnimation\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAnimation(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateClickable\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateClickable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateDraggable\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDraggable(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateIcon\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIcon(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateIconLegacy\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIconLegacy(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateLabel\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLabel(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateMarkerPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMarkerPosition(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateOpacity\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOpacity(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTitle(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateVisible\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateVisible(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateZIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateZIndex(marker: NgMapsMarkerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/marker.manager.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                            NgMapsMarkerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _markers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/lib/managers/marker.manager.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  MapsApiWrapper,\n  MarkerManager,\n  NgMapsMarkerComponent,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GoogleMapsMarkerManager extends MarkerManager {\n  protected _markers: Map = new Map();\n\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  public deleteMarker(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    if (m == null) {\n      // marker already deleted\n      return;\n    } else {\n      return this._zone.run(() => {\n        m.setMap(null);\n        this._markers.delete(marker);\n      });\n    }\n  }\n\n  public updateMarkerPosition(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setPosition({ lat: marker.latitude, lng: marker.longitude });\n  }\n\n  public updateTitle(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setTitle(marker.title);\n  }\n\n  public updateLabel(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setLabel(marker.label);\n  }\n\n  public updateDraggable(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setDraggable(marker.draggable);\n  }\n\n  public updateIconLegacy(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setIcon(marker.iconUrl);\n  }\n\n  public updateOpacity(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setOpacity(marker.opacity);\n  }\n\n  public updateVisible(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setVisible(marker.visible);\n  }\n\n  public updateZIndex(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setZIndex(marker.zIndex);\n  }\n\n  public updateClickable(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    m.setClickable(marker.clickable);\n  }\n\n  public updateAnimation(marker: NgMapsMarkerComponent): void {\n    const m = this._markers.get(marker);\n    if (typeof marker.animation === 'string') {\n      m.setAnimation(google.maps.Animation[marker.animation]);\n    } else {\n      m.setAnimation(marker.animation);\n    }\n  }\n\n  public createEventObservable(\n    eventName: string | Array,\n    marker: NgMapsMarkerComponent,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      const m = this._markers.get(marker);\n      if (typeof eventName === 'string') {\n        eventName = [eventName];\n      }\n      eventName.forEach((event) => {\n        m.addListener(event, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n\n  public updateIcon(marker: NgMapsMarkerComponent): void {\n    throw new Error('Method not implemented.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleMapsScriptLoader.html":{"url":"injectables/GoogleMapsScriptLoader.html","title":"injectable - GoogleMapsScriptLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleMapsScriptLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/google-maps-script-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    MapsAPILoader\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                    Protected\n                                _document\n                            \n                            \n                                    Protected\n                                    Readonly\n                                _SCRIPT_ID\n                            \n                            \n                                    Protected\n                                _scriptLoadingPromise\n                            \n                            \n                                    Protected\n                                _window\n                            \n                            \n                                    Protected\n                                    Readonly\n                                callbackName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                _getScriptSrc\n                            \n                            \n                                    Protected\n                                assignScriptLoadingPromise\n                            \n                            \n                                    Protected\n                                    Async\n                                checkScriptElement\n                            \n                            \n                                    Public\n                                configure\n                            \n                            \n                                    Protected\n                                    Async\n                                createScriptElement\n                            \n                            \n                                    Public\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: GoogleModuleOptions, document: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/google-maps-script-loader.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        GoogleModuleOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        _getScriptSrc\n                        \n                    \n                \n            \n            \n                \n                    \n                    _getScriptSrc(callbackName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    callbackName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        assignScriptLoadingPromise\n                        \n                    \n                \n            \n            \n                \n                    \n                    assignScriptLoadingPromise(scriptElement: HTMLScriptElement)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scriptElement\n                                    \n                                            HTMLScriptElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        checkScriptElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkScriptElement()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        configure\n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(config: GoogleModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:47\n                \n            \n\n\n            \n                \n                    If no configuration is provided at load time you can use this function to provide configuration at any time.\nLoading scripts will be postponed until a configuration is provided\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                GoogleModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nGoogleModuleOptions configuration needed for bootstrapping\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        createScriptElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    createScriptElement()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google-maps-script-loader.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/lib/google-maps-script-loader.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/google-maps-script-loader.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        _SCRIPT_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'GoogleMapsApiScript'\n                    \n                \n                    \n                        \n                                Defined in src/lib/google-maps-script-loader.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _scriptLoadingPromise\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/google-maps-script-loader.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _window\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Window\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/google-maps-script-loader.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        callbackName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `LazyMapsAPILoader`\n                    \n                \n                    \n                        \n                                Defined in src/lib/google-maps-script-loader.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\nimport { MapsAPILoader } from '@ng-maps/core';\n\nimport {\n  GoogleMapsScriptProtocol,\n  GoogleModuleOptions,\n  GOOGLE_MAPS_API_CONFIG,\n} from './options';\n\n@Injectable()\nexport class GoogleMapsScriptLoader extends MapsAPILoader {\n  protected _scriptLoadingPromise: Promise;\n  protected _config: ReplaySubject =\n    new ReplaySubject(1);\n  protected _document: Document;\n  protected _window: Window;\n  protected readonly _SCRIPT_ID: string = 'GoogleMapsApiScript';\n  protected readonly callbackName: string = `LazyMapsAPILoader`;\n\n  constructor(\n    @Optional()\n    @Inject(GOOGLE_MAPS_API_CONFIG)\n    config: GoogleModuleOptions,\n    @Inject(DOCUMENT) document: any,\n  ) {\n    super();\n    if (config instanceof Promise) {\n      config.then((c) => {\n        this.configure(c);\n      });\n    } else if (typeof config === 'object') {\n      this.configure(config);\n    }\n    this._document = document as Document;\n    this._window = this._document.defaultView;\n  }\n\n  /**\n   * If no configuration is provided at load time you can use this function to provide configuration at any time.\n   * Loading scripts will be postponed until a configuration is provided\n   *\n   * @param config - {@link GoogleModuleOptions} configuration needed for bootstrapping\n   */\n  public configure(config: GoogleModuleOptions) {\n    this._config.next(config);\n    this._config.complete();\n  }\n\n  public load(): Promise {\n    if ((this._window as any).google && (this._window as any).google.maps) {\n      // Google maps already loaded on the page\n      return Promise.resolve();\n    } else if (this._scriptLoadingPromise) {\n      return this._scriptLoadingPromise;\n    } else {\n      this._scriptLoadingPromise = this.checkScriptElement();\n      return this._scriptLoadingPromise;\n    }\n  }\n\n  protected async checkScriptElement(): Promise {\n    let scriptElement: HTMLScriptElement = this._document.getElementById(\n      this._SCRIPT_ID,\n    ) as HTMLScriptElement;\n    if (scriptElement == null) {\n      scriptElement = await this.createScriptElement();\n    }\n    return this.assignScriptLoadingPromise(scriptElement);\n  }\n\n  protected assignScriptLoadingPromise(\n    scriptElement: HTMLScriptElement,\n  ): Promise {\n    this._document.body.appendChild(scriptElement);\n    return new Promise((resolve, reject) => {\n      this._window[this.callbackName] = () => resolve();\n\n      scriptElement.onerror = (error: Event) => reject(error);\n    });\n  }\n\n  protected async createScriptElement() {\n    const script = this._document.createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.id = this._SCRIPT_ID;\n    script.src = await this._getScriptSrc(this.callbackName);\n    return script;\n  }\n\n  protected async _getScriptSrc(callbackName: string): Promise {\n    const config = await this._config.toPromise();\n    const protocolType: GoogleMapsScriptProtocol =\n      (config && config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n    let protocol: string;\n\n    switch (protocolType) {\n      case GoogleMapsScriptProtocol.AUTO:\n        protocol = '';\n        break;\n      case GoogleMapsScriptProtocol.HTTP:\n        protocol = 'http:';\n        break;\n      case GoogleMapsScriptProtocol.HTTPS:\n        protocol = 'https:';\n        break;\n    }\n\n    const hostAndPath: string =\n      config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n    const queryParams: { [key: string]: string | Array } = {\n      v: config.apiVersion || 'quarterly',\n      callback: callbackName,\n      key: config.apiKey,\n      client: config.clientId,\n      channel: config.channel,\n      libraries: config.libraries,\n      region: config.region,\n      language: config.language,\n    };\n    const params: string = Object.keys(queryParams)\n      .filter((k: string) => queryParams[k] != null)\n      .filter(\n        (k: string) =>\n          // remove empty arrays\n          !Array.isArray(queryParams[k]) ||\n          (Array.isArray(queryParams[k]) && queryParams[k].length > 0),\n      )\n      .map((k: string) => {\n        // join arrays as comma seperated strings\n        const i = queryParams[k];\n        if (Array.isArray(i)) {\n          return { key: k, value: i.join(',') };\n        }\n        return { key: k, value: queryParams[k] };\n      })\n      .map(\n        (entry: { key: string; value: string }) =>\n          `${entry.key}=${entry.value}`,\n      )\n      .join('&');\n    return `${protocol}//${hostAndPath}?${params}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleModuleOptions.html":{"url":"interfaces/GoogleModuleOptions.html","title":"interface - GoogleModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GoogleModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apiKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            apiVersion\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            channel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clientId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hostAndPath\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            language\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            libraries\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            protocol\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            region\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps API Key (see:\nhttps://developers.google.com/maps/documentation/javascript/get-api-key)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Google Maps API version.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps channel name (for premium plans).\nA channel parameter is an optional parameter that allows you to track usage under your client\nID by assigning a distinct channel to each of your applications.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps client ID (for premium plans).\nWhen you have a Google Maps APIs Premium Plan license, you must authenticate\nyour application with either an API key or a client ID.\nThe Google Maps API will fail to load if both a client ID and an API key are included.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hostAndPath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hostAndPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Host and Path used for the  tag.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Google Maps API uses the browser's preferred language when displaying\ntextual information. If you wish to overwrite this behavior and force the API\nto use a given language, you can use this setting.\nSee https://developers.google.com/maps/documentation/javascript/basics#Language\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        libraries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        libraries:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines which Google Maps libraries should get loaded.\nFor available libraries see: https://developers.google.com/maps/documentation/javascript/libraries\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        protocol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        protocol:         GoogleMapsScriptProtocol\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GoogleMapsScriptProtocol\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Protocol used for the  tag.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The default bias for the map behavior is US.\nIf you wish to alter your application to serve different map tiles or bias the\napplication, you can overwrite the default behavior (US) by defining a region.\nSee https://developers.google.com/maps/documentation/javascript/basics#Region\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum GoogleMapsScriptProtocol {\n  HTTP = 1,\n  HTTPS = 2,\n  AUTO = 3,\n}\n\n/**\n * Token for the config of google maps module\n * Please provide an object of type {@link GoogleModuleOptions}.\n */\nexport const GOOGLE_MAPS_API_CONFIG = new InjectionToken\n>('angular-google-maps GOOGLE_MAPS_API_CONFIG');\n\nexport interface GoogleModuleOptions {\n  /**\n   * The Google Maps API Key (see:\n   * https://developers.google.com/maps/documentation/javascript/get-api-key)\n   */\n  apiKey?: string;\n\n  /**\n   * The Google Maps client ID (for premium plans).\n   * When you have a Google Maps APIs Premium Plan license, you must authenticate\n   * your application with either an API key or a client ID.\n   * The Google Maps API will fail to load if both a client ID and an API key are included.\n   */\n  clientId?: string;\n\n  /**\n   * The Google Maps channel name (for premium plans).\n   * A channel parameter is an optional parameter that allows you to track usage under your client\n   * ID by assigning a distinct channel to each of your applications.\n   */\n  channel?: string;\n\n  /**\n   * Google Maps API version.\n   */\n  apiVersion?: string;\n\n  /**\n   * Host and Path used for the `` tag.\n   */\n  hostAndPath?: string;\n\n  /**\n   * Protocol used for the `` tag.\n   */\n  protocol?: GoogleMapsScriptProtocol;\n\n  /**\n   * Defines which Google Maps libraries should get loaded.\n   * For available libraries see: https://developers.google.com/maps/documentation/javascript/libraries\n   */\n  libraries?: Array;\n\n  /**\n   * The default bias for the map behavior is US.\n   * If you wish to alter your application to serve different map tiles or bias the\n   * application, you can overwrite the default behavior (US) by defining a `region`.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Region\n   */\n  region?: string;\n\n  /**\n   * The Google Maps API uses the browser's preferred language when displaying\n   * textual information. If you wish to overwrite this behavior and force the API\n   * to use a given language, you can use this setting.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Language\n   */\n  language?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GooglePolygonManager.html":{"url":"injectables/GooglePolygonManager.html","title":"injectable - GooglePolygonManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GooglePolygonManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/polygon.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PolygonManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPolygon\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                deletePolygon\n                            \n                            \n                                    Public\n                                setPolygonOptions\n                            \n                            \n                                    Public\n                                    Async\n                                updatePolygon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/polygon.manager.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addPolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPolygon(path: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, path: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:65\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deletePolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolygon(paths: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPolygonOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolygonOptions(path: NgMapsPolygonDirective, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updatePolygon\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolygon(polygon: NgMapsPolygonDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polygon.manager.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    polygon\n                                    \n                                            NgMapsPolygonDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  MapsApiWrapper,\n  NgMapsPolygonDirective,\n  PolygonManager,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GooglePolygonManager extends PolygonManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  public addPolygon(path: NgMapsPolygonDirective) {\n    const polygonPromise = this._mapsWrapper.createPolygon({\n      clickable: path.clickable,\n      draggable: path.draggable,\n      editable: path.editable,\n      fillColor: path.fillColor,\n      fillOpacity: path.fillOpacity,\n      geodesic: path.geodesic,\n      paths: path.paths,\n      strokeColor: path.strokeColor,\n      strokeOpacity: path.strokeOpacity,\n      strokeWeight: path.strokeWeight,\n      visible: path.visible,\n      zIndex: path.zIndex,\n    });\n    this._polygons.set(path, polygonPromise);\n  }\n\n  public async updatePolygon(polygon: NgMapsPolygonDirective): Promise {\n    const item = await this._polygons.get(polygon);\n    if (item != null) {\n      this._zone.run(() => {\n        item.setPaths(polygon.paths);\n      });\n    }\n  }\n\n  public setPolygonOptions(\n    path: NgMapsPolygonDirective,\n    options: { [propName: string]: any },\n  ): Promise {\n    return this._polygons.get(path).then((l: google.maps.Polygon) => {\n      l.setOptions(options);\n    });\n  }\n\n  public deletePolygon(paths: NgMapsPolygonDirective): Promise {\n    const m = this._polygons.get(paths);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polygon) =>\n      this._zone.run(() => {\n        l.setMap(null);\n        this._polygons.delete(paths);\n      }),\n    );\n  }\n\n  public createEventObservable(\n    eventName: string,\n    path: NgMapsPolygonDirective,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      this._polygons.get(path).then((l: google.maps.Polygon) => {\n        l.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GooglePolylineManager.html":{"url":"injectables/GooglePolylineManager.html","title":"injectable - GooglePolylineManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GooglePolylineManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/polyline.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PolylineManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _convertPoints\n                            \n                            \n                                    Public\n                                addPolyline\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                deletePolyline\n                            \n                            \n                                    Public\n                                setPolylineOptions\n                            \n                            \n                                    Public\n                                updatePolylinePoints\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/polyline.manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _convertPoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    _convertPoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addPolyline\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:82\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deletePolyline\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolyline(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPolylineOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPolylineOptions(line: NgMapsPolyline, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updatePolylinePoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePolylinePoints(line: NgMapsPolyline)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/polyline.manager.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            NgMapsPolyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  MapsApiWrapper,\n  NgMapsPolyline,\n  NgMapsPolylinePoint,\n  PolylineManager,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GooglePolylineManager extends PolylineManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  protected _convertPoints(\n    line: NgMapsPolyline,\n  ): Array {\n    return line._getPoints().map(\n      (point: NgMapsPolylinePoint) =>\n        ({\n          lat: point.latitude,\n          lng: point.longitude,\n        } as google.maps.LatLngLiteral),\n    );\n  }\n\n  public addPolyline(line: NgMapsPolyline) {\n    const path = this._convertPoints(line);\n    const polylinePromise = this._mapsWrapper.createPolyline({\n      clickable: line.clickable,\n      draggable: line.draggable,\n      editable: line.editable,\n      geodesic: line.geodesic,\n      strokeColor: line.strokeColor,\n      strokeOpacity: line.strokeOpacity,\n      strokeWeight: line.strokeWeight,\n      visible: line.visible,\n      zIndex: line.zIndex,\n      icons: line.icons,\n      path,\n    });\n    this._polylines.set(line, polylinePromise);\n  }\n\n  public updatePolylinePoints(line: NgMapsPolyline): Promise {\n    const path = this._convertPoints(line);\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polyline) =>\n      this._zone.run(() => {\n        l.setPath(path);\n      }),\n    );\n  }\n\n  public setPolylineOptions(\n    line: NgMapsPolyline,\n    options: { [propName: string]: any },\n  ): Promise {\n    return this._polylines.get(line).then((l: google.maps.Polyline) => {\n      l.setOptions(options);\n    });\n  }\n\n  public deletePolyline(line: NgMapsPolyline): Promise {\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: google.maps.Polyline) =>\n      this._zone.run(() => {\n        l.setMap(null);\n        this._polylines.delete(line);\n      }),\n    );\n  }\n\n  public createEventObservable(\n    eventName: string,\n    line: NgMapsPolyline,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      this._polylines.get(line).then((l: google.maps.Polyline) => {\n        l.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleRectangleManager.html":{"url":"injectables/GoogleRectangleManager.html","title":"injectable - GoogleRectangleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleRectangleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/managers/rectangle.manager.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    RectangleManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addRectangle\n                            \n                            \n                                    Public\n                                createEventObservable\n                            \n                            \n                                    Public\n                                    Async\n                                getBounds\n                            \n                            \n                                    Public\n                                removeRectangle\n                            \n                            \n                                    Public\n                                setBounds\n                            \n                            \n                                    Public\n                                setDraggable\n                            \n                            \n                                    Public\n                                setEditable\n                            \n                            \n                                    Public\n                                setOptions\n                            \n                            \n                                    Public\n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/managers/rectangle.manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsWrapper\n                                                  \n                                                        \n                                                                    MapsApiWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addRectangle\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createEventObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEventObservable(eventName: string, rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:97\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeRectangle\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRectangle(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:47\n                \n            \n\n\n            \n                \n                    Removes the given rectangle from the map.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setBounds\n                        \n                    \n                \n            \n            \n                \n                    \n                    setBounds(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setDraggable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDraggable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setEditable\n                        \n                    \n                \n            \n            \n                \n                    \n                    setEditable(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setOptions(rectangle: NgMapsRectangleDirective, options: google.maps.RectangleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            google.maps.RectangleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setVisible\n                        \n                    \n                \n            \n            \n                \n                    \n                    setVisible(rectangle: NgMapsRectangleDirective)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/managers/rectangle.manager.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                            NgMapsRectangleDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport {\n  BoundsLiteral,\n  MapsApiWrapper,\n  NgMapsRectangleDirective,\n  RectangleManager,\n} from '@ng-maps/core';\n\n@Injectable()\nexport class GoogleRectangleManager extends RectangleManager {\n  constructor(_mapsWrapper: MapsApiWrapper, _zone: NgZone) {\n    super(_mapsWrapper, _zone);\n  }\n\n  public addRectangle(rectangle: NgMapsRectangleDirective) {\n    this._rectangles.set(\n      rectangle,\n      this._apiWrapper.createRectangle(\n        {\n          north: rectangle.north,\n          east: rectangle.east,\n          south: rectangle.south,\n          west: rectangle.west,\n        },\n        {\n          // clickable: rectangle.clickable,\n          // draggable: rectangle.draggable,\n          // editable: rectangle.editable,\n          fillColor: rectangle.fillColor,\n          fillOpacity: rectangle.fillOpacity,\n          strokeColor: rectangle.strokeColor,\n          strokeOpacity: rectangle.strokeOpacity,\n          // strokePosition: rectangle.strokePosition,\n          strokeWeight: rectangle.strokeWeight,\n          visible: rectangle.visible,\n          zIndex: rectangle.zIndex,\n        },\n      ),\n    );\n  }\n\n  /**\n   * Removes the given rectangle from the map.\n   */\n  public removeRectangle(rectangle: NgMapsRectangleDirective): Promise {\n    return this._rectangles.get(rectangle).then((r) => {\n      r.setMap(null);\n      this._rectangles.delete(rectangle);\n    });\n  }\n\n  public setOptions(\n    rectangle: NgMapsRectangleDirective,\n    options: google.maps.RectangleOptions,\n  ): Promise {\n    return this._rectangles.get(rectangle).then((r) => r.setOptions(options));\n  }\n\n  public async getBounds(\n    rectangle: NgMapsRectangleDirective,\n  ): Promise {\n    const r = await this._rectangles.get(rectangle);\n    return r.getBounds().toJSON();\n  }\n\n  public setBounds(rectangle: NgMapsRectangleDirective): Promise {\n    return this._rectangles.get(rectangle).then((r) =>\n      r.setBounds({\n        north: rectangle.north,\n        east: rectangle.east,\n        south: rectangle.south,\n        west: rectangle.west,\n      }),\n    );\n  }\n\n  public setEditable(rectangle: NgMapsRectangleDirective): Promise {\n    return this._rectangles\n      .get(rectangle)\n      .then((r) => r.setEditable(rectangle.editable));\n  }\n\n  public setDraggable(rectangle: NgMapsRectangleDirective): Promise {\n    return this._rectangles\n      .get(rectangle)\n      .then((r) => r.setDraggable(rectangle.draggable));\n  }\n\n  public setVisible(rectangle: NgMapsRectangleDirective): Promise {\n    return this._rectangles\n      .get(rectangle)\n      .then((r) => r.setVisible(rectangle.visible));\n  }\n\n  public createEventObservable(\n    eventName: string,\n    rectangle: NgMapsRectangleDirective,\n  ): Observable {\n    return new Observable((observer: Observer) => {\n      let listener: google.maps.MapsEventListener = null;\n      this._rectangles.get(rectangle).then((r) => {\n        listener = r.addListener(eventName, (e: T) =>\n          this._zone.run(() => observer.next(e)),\n        );\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgMapsGoogleModule.html":{"url":"modules/NgMapsGoogleModule.html","title":"module - NgMapsGoogleModule","body":"\n                   \n\n\n\n\n    Modules\n    NgMapsGoogleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgMapsGoogleModule\n\n\n\ncluster_NgMapsGoogleModule_exports\n\n\n\ncluster_NgMapsGoogleModule_declarations\n\n\n\ncluster_NgMapsGoogleModule_GoogleComponent_providers\n\n\n\n\nGoogleComponent\n\nGoogleComponent\n\n\n\nNgMapsGoogleModule\n\nNgMapsGoogleModule\n\nNgMapsGoogleModule -->\n\nGoogleComponent->NgMapsGoogleModule\n\n\n\n\n\nGoogleComponent \n\nGoogleComponent \n\nGoogleComponent  -->\n\nNgMapsGoogleModule->GoogleComponent \n\n\n\n\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }\n\nGoogleComponent -->\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }->GoogleComponent\n\n\n\n\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }\n\nGoogleComponent -->\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }->GoogleComponent\n\n\n\n\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }\n\nGoogleComponent -->\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }->GoogleComponent\n\n\n\n\n\n{ provide: CircleManager, useClass: GoogleCircleManager }\n\n{ provide: CircleManager, useClass: GoogleCircleManager }\n\nGoogleComponent -->\n\n{ provide: CircleManager, useClass: GoogleCircleManager }->GoogleComponent\n\n\n\n\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }\n\nGoogleComponent -->\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }->GoogleComponent\n\n\n\n\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }\n\nGoogleComponent -->\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }->GoogleComponent\n\n\n\n\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }\n\nGoogleComponent -->\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }->GoogleComponent\n\n\n\n\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }\n\nGoogleComponent -->\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }->GoogleComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/google.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GoogleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GoogleComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: GoogleModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.module.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                GoogleModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRootFactory\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootFactory(factory: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/google.module.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    factory\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { MapsAPILoader, MAP_PROVIDER } from '@ng-maps/core';\n\nimport { GoogleMapsScriptLoader } from './google-maps-script-loader.service';\nimport { GoogleComponent } from './google.component';\nimport { GOOGLE_MAPS_API_CONFIG, GoogleModuleOptions } from './options';\n\n@NgModule({\n  declarations: [GoogleComponent],\n  exports: [GoogleComponent],\n  providers: [\n    { provide: MapsAPILoader, useClass: GoogleMapsScriptLoader },\n    {\n      provide: MAP_PROVIDER,\n      useValue: 'GoogleMaps',\n    },\n  ],\n})\nexport class NgMapsGoogleModule {\n  public static forRoot(\n    config: GoogleModuleOptions,\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgMapsGoogleModule,\n      providers: [\n        {\n          provide: GOOGLE_MAPS_API_CONFIG,\n          useValue: config,\n        },\n      ],\n    };\n  }\n\n  public static forRootFactory(\n    factory: () => GoogleModuleOptions | Promise,\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgMapsGoogleModule,\n      providers: [\n        {\n          provide: GOOGLE_MAPS_API_CONFIG,\n          useFactory: factory,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/google-maps-api-wrapper.ts\n            \n            injectable\n            GoogleMapsAPIWrapper\n            \n                27 %\n                (8/29)\n            \n        \n        \n            \n                \n                src/lib/google-maps-fit-bounds.service.ts\n            \n            injectable\n            GoogleMapsFitBoundsService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/lib/google-maps-script-loader.service.ts\n            \n            injectable\n            GoogleMapsScriptLoader\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/lib/google.component.ts\n            \n            component\n            GoogleComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lib/managers/circle.manager.ts\n            \n            injectable\n            GoogleCircleManager\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/lib/managers/info-window.manager.ts\n            \n            injectable\n            GoogleInfoWindowManager\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/lib/managers/marker.manager.ts\n            \n            injectable\n            GoogleMapsMarkerManager\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/lib/managers/polygon.manager.ts\n            \n            injectable\n            GooglePolygonManager\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/managers/polyline.manager.ts\n            \n            injectable\n            GooglePolylineManager\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/managers/rectangle.manager.ts\n            \n            injectable\n            GoogleRectangleManager\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/lib/options.ts\n            \n            interface\n            GoogleModuleOptions\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/lib/options.ts\n            \n            variable\n            GOOGLE_MAPS_API_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.0.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^14.0.0\n        \n            @angular/core : ^14.0.0\n        \n            @types/googlemaps : ~3.43.0\n        \n            @ng-maps/core : ^3.0.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GoogleMapsScriptProtocol   (src/.../options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/options.ts\n    \n        \n            \n                \n                    \n                        \n                        GoogleMapsScriptProtocol\n                    \n                \n                        \n                            \n                                 HTTP\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 HTTPS\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 AUTO\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ng-maps/core\n@ng-maps/core is a simple, modular and tree-shakable library for displaying google-maps inside an angular application\nInstallation\n\nNpm: npm install @ng-maps/google\nYarn: yarn add @ng-maps/google\n\nThen you will need to install typings for google maps as a dev dependency\n\nNpm: npm install -D @types/googlemaps\nYarn: yarn add -D @types/googlemaps\n\nAdd NgMapsGoogleModule to your AppModule.\nProvide your API key with the token provider\n{\n  provide: GOOGLE_MAPS_API_CONFIG,\n  useValue: {\n    apiKey: 'YOUR_API_KEY'\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgMapsGoogleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgMapsGoogleModule\n\n\n\ncluster_NgMapsGoogleModule_declarations\n\n\n\ncluster_NgMapsGoogleModule_GoogleComponent_providers\n\n\n\ncluster_NgMapsGoogleModule_exports\n\n\n\n\nGoogleComponent\n\nGoogleComponent\n\n\n\nNgMapsGoogleModule\n\nNgMapsGoogleModule\n\nNgMapsGoogleModule -->\n\nGoogleComponent->NgMapsGoogleModule\n\n\n\n\n\nGoogleComponent \n\nGoogleComponent \n\nGoogleComponent  -->\n\nNgMapsGoogleModule->GoogleComponent \n\n\n\n\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }\n\nGoogleComponent -->\n\n{ provide: MapsApiWrapper, useClass: GoogleMapsAPIWrapper }->GoogleComponent\n\n\n\n\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }\n\nGoogleComponent -->\n\n{ provide: FitBoundsService, useClass: GoogleMapsFitBoundsService }->GoogleComponent\n\n\n\n\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }\n\nGoogleComponent -->\n\n{ provide: MarkerManager, useClass: GoogleMapsMarkerManager }->GoogleComponent\n\n\n\n\n\n{ provide: CircleManager, useClass: GoogleCircleManager }\n\n{ provide: CircleManager, useClass: GoogleCircleManager }\n\nGoogleComponent -->\n\n{ provide: CircleManager, useClass: GoogleCircleManager }->GoogleComponent\n\n\n\n\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }\n\nGoogleComponent -->\n\n{ provide: PolygonManager, useClass: GooglePolygonManager }->GoogleComponent\n\n\n\n\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }\n\nGoogleComponent -->\n\n{ provide: PolylineManager, useClass: GooglePolylineManager }->GoogleComponent\n\n\n\n\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }\n\nGoogleComponent -->\n\n{ provide: RectangleManager, useClass: GoogleRectangleManager }->GoogleComponent\n\n\n\n\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }\n\nGoogleComponent -->\n\n{ provide: InfoWindowManager, useClass: GoogleInfoWindowManager }->GoogleComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.0.0\n        \n            Keywords : angular, ng, google maps, googlemaps, maps, map, google, ng2, angular2, agm\n        \n            Homepage : https://ng-maps.github.io/core\n        \n            Bugs : https://github.com/ng-maps/ng-maps/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/ng-maps/ng-maps.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GOOGLE_MAPS_API_CONFIG   (src/.../options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GOOGLE_MAPS_API_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken\n>('angular-google-maps GOOGLE_MAPS_API_CONFIG')\n                    \n                \n\n            \n                \n                    Token for the config of google maps module\nPlease provide an object of type GoogleModuleOptions.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
